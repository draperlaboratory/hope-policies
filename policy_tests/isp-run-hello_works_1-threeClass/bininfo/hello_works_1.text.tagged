
/home/jmerrill/policies/policy_tests/build/hifive/hello_works_1:     file format elf32-littleriscv


Disassembly of section .init:

20400000 <_start>:
	.cfi_startproc
	.cfi_undefined ra
.option push
.option norelax
	//la gp, __global_pointer$
	lui gp, %hi(__global_pointer$)
20400000:    800011b7              lui    gp,0x80001                            allGrp
	addi gp, gp, %lo(__global_pointer$)
20400004:    1b818193              addi    gp,gp,440 # 800011b8 <_sp+0xffffd1b8>allGrp
.option pop
	//la sp, _sp
	lui sp, %hi(_sp)
20400008:    80004137              lui    sp,0x80004                            allGrp
	addi sp, sp, %lo(_sp)
2040000c:    00010113              mv    sp,sp                                  allGrp
	smp_pause(t0, t1)
#endif

	/* Load data section */
	//la a0, _data_lma
	lui a0, %hi(_data_lma)
20400010:    20413537              lui    a0,0x20413                            allGrp
	addi a0, a0, %lo(_data_lma)
20400014:    9c050513              addi    a0,a0,-1600 # 204129c0 <__fini_array_end>allGrp
	//la a1, _data
	lui a1, %hi(_data)
20400018:    800005b7              lui    a1,0x80000                            allGrp
	addi a1, a1, %lo(_data)
2040001c:    00058593              mv    a1,a1                                  allGrp
	//la a2, _edata
	lui a2, %hi(_edata)
20400020:    80001637              lui    a2,0x80001                            allGrp
	addi a2, a2, %lo(_edata)
20400024:    9b860613              addi    a2,a2,-1608 # 800009b8 <_sp+0xffffc9b8>allGrp
	bgeu a1, a2, 2f
20400028:    00c5fc63              bleu    a2,a1,20400040 <_start+0x40>         allGrp, controlFlowGrp
1:
	lw t0, 0(a0)
2040002c:    00052283              lw    t0,0(a0)                               allGrp
	sw t0, 0(a1)
20400030:    0055a023              sw    t0,0(a1) # 80000000 <_sp+0xffffc000>   allGrp
	addi a0, a0, 4
20400034:    00450513              addi    a0,a0,4                              allGrp
	addi a1, a1, 4
20400038:    00458593              addi    a1,a1,4                              allGrp
	bltu a1, a2, 1b
2040003c:    fec5e8e3              bltu    a1,a2,2040002c <_start+0x2c>         allGrp, controlFlowGrp
2:

	/* Clear bss section */
	//la a0, __bss_start
	lui a0, %hi(__bss_start)
20400040:    80001537              lui    a0,0x80001                            allGrp
	addi a0, a0, %lo(__bss_start)
20400044:    9b850513              addi    a0,a0,-1608 # 800009b8 <_sp+0xffffc9b8>allGrp
	//la a1, _end
	lui a1, %hi(_end)
20400048:    800025b7              lui    a1,0x80002                            allGrp
	addi a1, a1, %lo(_end)
2040004c:    a5858593              addi    a1,a1,-1448 # 80001a58 <_sp+0xffffda58>allGrp
	bgeu a0, a1, 2f
20400050:    00b57863              bleu    a1,a0,20400060 <_start+0x60>         allGrp, controlFlowGrp
1:
	sw zero, 0(a0)
20400054:    00052023              sw    zero,0(a0)                             allGrp
	addi a0, a0, 4
20400058:    00450513              addi    a0,a0,4                              allGrp
	bltu a0, a1, 1b
2040005c:    feb56ce3              bltu    a0,a1,20400054 <_start+0x54>         allGrp, controlFlowGrp
2:

	/* Call global constructors */
	//la a0, __libc_fini_array
	lui a0, %hi(__libc_fini_array)
20400060:    20401537              lui    a0,0x20401                            allGrp
	addi a0, a0, %lo(__libc_fini_array)
20400064:    fd450513              addi    a0,a0,-44 # 20400fd4 <__libc_fini_array>allGrp
	call atexit
20400068:    00001097              auipc    ra,0x1                              allGrp
2040006c:    ea0080e7              jalr    -352(ra) # 20400f08 <atexit>         allGrp, controlFlowGrp
	call __libc_init_array
20400070:    00001097              auipc    ra,0x1                              allGrp
20400074:    ffc080e7              jalr    -4(ra) # 2040106c <__libc_init_array>allGrp, controlFlowGrp

	csrr a0, mhartid
	bnez a0, 2f
#endif

	auipc ra, 0
20400078:    00000097              auipc    ra,0x0                              allGrp
	addi sp, sp, -16
2040007c:    ff010113              addi    sp,sp,-16 # 80003ff0 <_sp+0xfffffff0>allGrp
#if __riscv_xlen == 32
	sw ra, 8(sp)
20400080:    00112423              sw    ra,8(sp)                               allGrp
#else
	sd ra, 8(sp)
#endif

	/* argc = argv = 0 */
	li a0, 0
20400084:    00000513              li    a0,0                                   allGrp
	li a1, 0
20400088:    00000593              li    a1,0                                   allGrp
	call main
2040008c:    00000097              auipc    ra,0x0                              allGrp
20400090:    1fc080e7              jalr    508(ra) # 20400288 <main>            allGrp, controlFlowGrp
	tail exit
20400094:    00001317              auipc    t1,0x1                              allGrp
20400098:    ed030067              jr    -304(t1) # 20400f64 <exit>             allGrp, controlFlowGrp
1:
	j 1b
2040009c:    0000006f              j    2040009c <_start+0x9c>                  allGrp, controlFlowGrp

Disassembly of section .text:

204000a0 <trap_entry>:

  .section      .text.entry	
  .align 2
  .global trap_entry
trap_entry:
  addi sp, sp, -32*REGBYTES
204000a0:    f8010113              addi    sp,sp,-128                           allGrp

  STORE x1, 1*REGBYTES(sp)
204000a4:    00112223              sw    ra,4(sp)                               allGrp
  STORE x2, 2*REGBYTES(sp)
204000a8:    00212423              sw    sp,8(sp)                               allGrp
  STORE x3, 3*REGBYTES(sp)
204000ac:    00312623              sw    gp,12(sp)                              allGrp
  STORE x4, 4*REGBYTES(sp)
204000b0:    00412823              sw    tp,16(sp)                              allGrp
  STORE x5, 5*REGBYTES(sp)
204000b4:    00512a23              sw    t0,20(sp)                              allGrp
  STORE x6, 6*REGBYTES(sp)
204000b8:    00612c23              sw    t1,24(sp)                              allGrp
  STORE x7, 7*REGBYTES(sp)
204000bc:    00712e23              sw    t2,28(sp)                              allGrp
  STORE x8, 8*REGBYTES(sp)
204000c0:    02812023              sw    s0,32(sp)                              allGrp
  STORE x9, 9*REGBYTES(sp)
204000c4:    02912223              sw    s1,36(sp)                              allGrp
  STORE x10, 10*REGBYTES(sp)
204000c8:    02a12423              sw    a0,40(sp)                              allGrp
  STORE x11, 11*REGBYTES(sp)
204000cc:    02b12623              sw    a1,44(sp)                              allGrp
  STORE x12, 12*REGBYTES(sp)
204000d0:    02c12823              sw    a2,48(sp)                              allGrp
  STORE x13, 13*REGBYTES(sp)
204000d4:    02d12a23              sw    a3,52(sp)                              allGrp
  STORE x14, 14*REGBYTES(sp)
204000d8:    02e12c23              sw    a4,56(sp)                              allGrp
  STORE x15, 15*REGBYTES(sp)
204000dc:    02f12e23              sw    a5,60(sp)                              allGrp
  STORE x16, 16*REGBYTES(sp)
204000e0:    05012023              sw    a6,64(sp)                              allGrp
  STORE x17, 17*REGBYTES(sp)
204000e4:    05112223              sw    a7,68(sp)                              allGrp
  STORE x18, 18*REGBYTES(sp)
204000e8:    05212423              sw    s2,72(sp)                              allGrp
  STORE x19, 19*REGBYTES(sp)
204000ec:    05312623              sw    s3,76(sp)                              allGrp
  STORE x20, 20*REGBYTES(sp)
204000f0:    05412823              sw    s4,80(sp)                              allGrp
  STORE x21, 21*REGBYTES(sp)
204000f4:    05512a23              sw    s5,84(sp)                              allGrp
  STORE x22, 22*REGBYTES(sp)
204000f8:    05612c23              sw    s6,88(sp)                              allGrp
  STORE x23, 23*REGBYTES(sp)
204000fc:    05712e23              sw    s7,92(sp)                              allGrp
  STORE x24, 24*REGBYTES(sp)
20400100:    07812023              sw    s8,96(sp)                              allGrp
  STORE x25, 25*REGBYTES(sp)
20400104:    07912223              sw    s9,100(sp)                             allGrp
  STORE x26, 26*REGBYTES(sp)
20400108:    07a12423              sw    s10,104(sp)                            allGrp
  STORE x27, 27*REGBYTES(sp)
2040010c:    07b12623              sw    s11,108(sp)                            allGrp
  STORE x28, 28*REGBYTES(sp)
20400110:    07c12823              sw    t3,112(sp)                             allGrp
  STORE x29, 29*REGBYTES(sp)
20400114:    07d12a23              sw    t4,116(sp)                             allGrp
  STORE x30, 30*REGBYTES(sp)
20400118:    07e12c23              sw    t5,120(sp)                             allGrp
  STORE x31, 31*REGBYTES(sp)
2040011c:    07f12e23              sw    t6,124(sp)                             allGrp

  csrr a0, 0x342 //mcause
20400120:    34202573              csrr    a0,mcause                            allGrp
  csrr a1, 0x341 //mepc
20400124:    341025f3              csrr    a1,mepc                              allGrp
  mv a2, sp
20400128:    00010613              mv    a2,sp                                  allGrp
  call handle_trap
2040012c:    00000097              auipc    ra,0x0                              allGrp
20400130:    22c080e7              jalr    556(ra) # 20400358 <handle_trap>     allGrp, controlFlowGrp
  csrw 0x341, a0 //mepc
20400134:    34151073              csrw    mepc,a0                              allGrp

  # Remain in M-mode after mret
  li t0, MSTATUS_MPP
20400138:    000022b7              lui    t0,0x2                                allGrp
2040013c:    80028293              addi    t0,t0,-2048 # 1800 <__stack_size+0x1000>allGrp
  csrs 0x300, t0 //mstatus
20400140:    3002a073              csrs    mstatus,t0                           allGrp

  LOAD x1, 1*REGBYTES(sp)
20400144:    00412083              lw    ra,4(sp)                               allGrp
  LOAD x2, 2*REGBYTES(sp)
20400148:    00812103              lw    sp,8(sp)                               allGrp
  LOAD x3, 3*REGBYTES(sp)
2040014c:    00c12183              lw    gp,12(sp)                              allGrp
  LOAD x4, 4*REGBYTES(sp)
20400150:    01012203              lw    tp,16(sp)                              allGrp
  LOAD x5, 5*REGBYTES(sp)
20400154:    01412283              lw    t0,20(sp)                              allGrp
  LOAD x6, 6*REGBYTES(sp)
20400158:    01812303              lw    t1,24(sp)                              allGrp
  LOAD x7, 7*REGBYTES(sp)
2040015c:    01c12383              lw    t2,28(sp)                              allGrp
  LOAD x8, 8*REGBYTES(sp)
20400160:    02012403              lw    s0,32(sp)                              allGrp
  LOAD x9, 9*REGBYTES(sp)
20400164:    02412483              lw    s1,36(sp)                              allGrp
  LOAD x10, 10*REGBYTES(sp)
20400168:    02812503              lw    a0,40(sp)                              allGrp
  LOAD x11, 11*REGBYTES(sp)
2040016c:    02c12583              lw    a1,44(sp)                              allGrp
  LOAD x12, 12*REGBYTES(sp)
20400170:    03012603              lw    a2,48(sp)                              allGrp
  LOAD x13, 13*REGBYTES(sp)
20400174:    03412683              lw    a3,52(sp)                              allGrp
  LOAD x14, 14*REGBYTES(sp)
20400178:    03812703              lw    a4,56(sp)                              allGrp
  LOAD x15, 15*REGBYTES(sp)
2040017c:    03c12783              lw    a5,60(sp)                              allGrp
  LOAD x16, 16*REGBYTES(sp)
20400180:    04012803              lw    a6,64(sp)                              allGrp
  LOAD x17, 17*REGBYTES(sp)
20400184:    04412883              lw    a7,68(sp)                              allGrp
  LOAD x18, 18*REGBYTES(sp)
20400188:    04812903              lw    s2,72(sp)                              allGrp
  LOAD x19, 19*REGBYTES(sp)
2040018c:    04c12983              lw    s3,76(sp)                              allGrp
  LOAD x20, 20*REGBYTES(sp)
20400190:    05012a03              lw    s4,80(sp)                              allGrp
  LOAD x21, 21*REGBYTES(sp)
20400194:    05412a83              lw    s5,84(sp)                              allGrp
  LOAD x22, 22*REGBYTES(sp)
20400198:    05812b03              lw    s6,88(sp)                              allGrp
  LOAD x23, 23*REGBYTES(sp)
2040019c:    05c12b83              lw    s7,92(sp)                              allGrp
  LOAD x24, 24*REGBYTES(sp)
204001a0:    06012c03              lw    s8,96(sp)                              allGrp
  LOAD x25, 25*REGBYTES(sp)
204001a4:    06412c83              lw    s9,100(sp)                             allGrp
  LOAD x26, 26*REGBYTES(sp)
204001a8:    06812d03              lw    s10,104(sp)                            allGrp
  LOAD x27, 27*REGBYTES(sp)
204001ac:    06c12d83              lw    s11,108(sp)                            allGrp
  LOAD x28, 28*REGBYTES(sp)
204001b0:    07012e03              lw    t3,112(sp)                             allGrp
  LOAD x29, 29*REGBYTES(sp)
204001b4:    07412e83              lw    t4,116(sp)                             allGrp
  LOAD x30, 30*REGBYTES(sp)
204001b8:    07812f03              lw    t5,120(sp)                             allGrp
  LOAD x31, 31*REGBYTES(sp)
204001bc:    07c12f83              lw    t6,124(sp)                             allGrp

  addi sp, sp, 32*REGBYTES
204001c0:    08010113              addi    sp,sp,128                            allGrp
  mret
204001c4:    30200073              mret                                         allGrp

.weak handle_trap
handle_trap:
1:
  j 1b
204001c8:    0000006f              j    204001c8 <trap_entry+0x128>             allGrp, controlFlowGrp

204001cc <get_usec_time>:
204001cc:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
#include "platform.h"
#include "isp_utils.h"

uint32_t get_usec_time()
{
  return (uint32_t)get_timer_value();
204001d0:    00112623              sw    ra,12(sp)                              allGrp
204001d4:    00000097              auipc    ra,0x0                              allGrp
204001d8:    0d8080e7              jalr    216(ra) # 204002ac <get_timer_value> Call-Instr, allGrp, controlFlowGrp
204001dc:    00c12083              lw    ra,12(sp)                              Return-Tgt, allGrp
204001e0:    00012623              sw    zero,12(sp)                            allGrp
204001e4:    01010113              addi    sp,sp,16                             allGrp
204001e8:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204001ec <get_inst_ret>:
}

uint32_t get_inst_ret()
{
  uint64_t instret;
  asm volatile ("csrr %0, 0xc02 " : "=r"(instret));
204001ec:    c0202573              rdinstret    a0                              Call-Tgt, allGrp, Branch-Tgt
  return instret;
204001f0:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204001f4 <uiPortGetWallTimestampUs>:
204001f4:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
}

uint32_t uiPortGetWallTimestampUs()
{
  return (uint32_t)get_timer_value();
204001f8:    00112623              sw    ra,12(sp)                              allGrp
204001fc:    00000097              auipc    ra,0x0                              allGrp
20400200:    0b0080e7              jalr    176(ra) # 204002ac <get_timer_value> Call-Instr, allGrp, controlFlowGrp
20400204:    00c12083              lw    ra,12(sp)                              Return-Tgt, allGrp
20400208:    00012623              sw    zero,12(sp)                            allGrp
2040020c:    01010113              addi    sp,sp,16                             allGrp
20400210:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400214 <t_printf>:
20400214:    f5010113              addi    sp,sp,-176                           Call-Tgt, allGrp, Branch-Tgt
}

int t_printf(const char *s, ...)
20400218:    08112623              sw    ra,140(sp)                             allGrp
2040021c:    08912423              sw    s1,136(sp)                             allGrp
20400220:    00050293              mv    t0,a0                                  allGrp
20400224:    0b112623              sw    a7,172(sp)                             allGrp
20400228:    0b012423              sw    a6,168(sp)                             allGrp
2040022c:    0af12223              sw    a5,164(sp)                             allGrp
20400230:    0ae12023              sw    a4,160(sp)                             allGrp
20400234:    08d12e23              sw    a3,156(sp)                             allGrp
20400238:    08c12c23              sw    a2,152(sp)                             allGrp
2040023c:    08b12a23              sw    a1,148(sp)                             allGrp
20400240:    09410693              addi    a3,sp,148                            allGrp
  char buf[128];
  va_list vl;

  const char *p = &buf[0];

  va_start(vl, s);
20400244:    00d12223              sw    a3,4(sp)                               allGrp
20400248:    00810493              addi    s1,sp,8                              allGrp
2040024c:    08000593              li    a1,128                                 allGrp
  vsnprintf(buf, sizeof buf, s, vl);
20400250:    00048513              mv    a0,s1                                  allGrp
20400254:    00028613              mv    a2,t0                                  allGrp
20400258:    00001097              auipc    ra,0x1                              allGrp
2040025c:    2e8080e7              jalr    744(ra) # 20401540 <vsnprintf>       Call-Instr, allGrp, controlFlowGrp
  va_end(vl);

  puts(p);
20400260:    00048513              mv    a0,s1                                  Return-Tgt, allGrp
20400264:    00001097              auipc    ra,0x1                              allGrp
20400268:    9ec080e7              jalr    -1556(ra) # 20400c50 <__wrap_puts>   Call-Instr, allGrp, controlFlowGrp

  return 0;
2040026c:    00000513              li    a0,0                                   Return-Tgt, allGrp
20400270:    08812483              lw    s1,136(sp)                             allGrp
20400274:    08012423              sw    zero,136(sp)                           allGrp
20400278:    08c12083              lw    ra,140(sp)                             allGrp
2040027c:    08012623              sw    zero,140(sp)                           allGrp
20400280:    0b010113              addi    sp,sp,176                            allGrp
20400284:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400288 <main>:
20400288:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
}

int main(void)
{
  isp_main();
2040028c:    00112623              sw    ra,12(sp)                              allGrp
20400290:    00000097              auipc    ra,0x0                              allGrp
20400294:    294080e7              jalr    660(ra) # 20400524 <isp_main>        Call-Instr, allGrp, controlFlowGrp

  return 0;
20400298:    00000513              li    a0,0                                   Return-Tgt, allGrp
2040029c:    00c12083              lw    ra,12(sp)                              allGrp
204002a0:    00012623              sw    zero,12(sp)                            allGrp
204002a4:    01010113              addi    sp,sp,16                             allGrp
204002a8:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204002ac <get_timer_value>:
204002ac:    0200c537              lui    a0,0x200c                             Call-Tgt, allGrp, Branch-Tgt
extern int main(int argc, char** argv);
extern void trap_entry();

static unsigned long mtime_lo(void)
{
  return *(volatile unsigned long *)(CLINT_CTRL_ADDR + CLINT_MTIME);
204002b0:    ff852503              lw    a0,-8(a0) # 200bff8 <__stack_size+0x200b7f8>allGrp

#else /* __riscv32 */

uint64_t get_timer_value()
{
  return mtime_lo();
204002b4:    00000593              li    a1,0                                   allGrp
204002b8:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204002bc <get_timer_freq>:
204002bc:    00008537              lui    a0,0x8                                Call-Tgt, allGrp, Branch-Tgt

#endif

unsigned long get_timer_freq()
{
  return 32768;
204002c0:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204002c4 <get_cpu_freq>:
204002c4:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt

unsigned long get_cpu_freq()
{
  static uint32_t cpu_freq;

  if (!cpu_freq) {
204002c8:    00112623              sw    ra,12(sp)                              allGrp
204002cc:    00912423              sw    s1,8(sp)                               allGrp
204002d0:    800014b7              lui    s1,0x80001                            allGrp
204002d4:    9b84a503              lw    a0,-1608(s1) # 800009b8 <_sp+0xffffc9b8>allGrp
204002d8:    02051063              bnez    a0,204002f8 <get_cpu_freq+0x34>      allGrp, Branch-Instr, controlFlowGrp
204002dc:    00100513              li    a0,1                                   Branch-Tgt, allGrp
    // warm up I$
    measure_cpu_freq(1);
204002e0:    00000097              auipc    ra,0x0                              allGrp
204002e4:    030080e7              jalr    48(ra) # 20400310 <measure_cpu_freq> Call-Instr, allGrp, controlFlowGrp
204002e8:    00a00513              li    a0,10                                  Return-Tgt, allGrp
    // measure for real
    cpu_freq = measure_cpu_freq(10);
204002ec:    00000097              auipc    ra,0x0                              allGrp
204002f0:    024080e7              jalr    36(ra) # 20400310 <measure_cpu_freq> Call-Instr, allGrp, controlFlowGrp
204002f4:    9aa4ac23              sw    a0,-1608(s1)                           Return-Tgt, allGrp
  }

  return cpu_freq;
204002f8:    00812483              lw    s1,8(sp)                               Branch-Tgt, allGrp
204002fc:    00012423              sw    zero,8(sp)                             allGrp
20400300:    00c12083              lw    ra,12(sp)                              allGrp
20400304:    00012623              sw    zero,12(sp)                            allGrp
20400308:    01010113              addi    sp,sp,16                             allGrp
2040030c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400310 <measure_cpu_freq>:
20400310:    0200c5b7              lui    a1,0x200c                             Call-Tgt, allGrp, Branch-Tgt
  return *(volatile unsigned long *)(CLINT_CTRL_ADDR + CLINT_MTIME);
20400314:    ff85a603              lw    a2,-8(a1) # 200bff8 <__stack_size+0x200b7f8>allGrp
20400318:    ff85a683              lw    a3,-8(a1)                              Branch-Tgt, allGrp
  } while (start_mtime == tmp);
2040031c:    fec68ee3              beq    a3,a2,20400318 <measure_cpu_freq+0x8> allGrp, Branch-Instr, controlFlowGrp
  unsigned long start_mcycle = read_csr(0xb00); //mcycle
20400320:    b0002773              csrr    a4,mcycle                            Branch-Tgt, allGrp
  return *(volatile unsigned long *)(CLINT_CTRL_ADDR + CLINT_MTIME);
20400324:    ff85a603              lw    a2,-8(a1)                              Branch-Tgt, allGrp
    delta_mtime = mtime_lo() - start_mtime;
20400328:    40d60633              sub    a2,a2,a3                              allGrp
  } while (delta_mtime < n);
2040032c:    fea66ce3              bltu    a2,a0,20400324 <measure_cpu_freq+0x14>allGrp, Branch-Instr, controlFlowGrp
  unsigned long delta_mcycle = read_csr(0xb00) - start_mcycle; //mcycle
20400330:    b0002573              csrr    a0,mcycle                            Branch-Tgt, allGrp
20400334:    40e50533              sub    a0,a0,a4                              allGrp
  return (delta_mcycle / delta_mtime) * mtime_freq
20400338:    02c555b3              divu    a1,a0,a2                             allGrp
2040033c:    02c586b3              mul    a3,a1,a2                              allGrp
20400340:    40d50533              sub    a0,a0,a3                              allGrp
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
20400344:    00f51513              slli    a0,a0,0xf                            allGrp
20400348:    02c55533              divu    a0,a0,a2                             allGrp
  return (delta_mcycle / delta_mtime) * mtime_freq
2040034c:    00f59593              slli    a1,a1,0xf                            allGrp
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
20400350:    00b50533              add    a0,a0,a1                              allGrp
  return (delta_mcycle / delta_mtime) * mtime_freq
20400354:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400358 <handle_trap>:
20400358:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt

#ifdef USE_M_TIME
extern void handle_m_time_interrupt();
#endif

uintptr_t handle_trap(uintptr_t mcause, uintptr_t epc)
2040035c:    00112623              sw    ra,12(sp)                              allGrp
20400360:    00912423              sw    s1,8(sp)                               allGrp
20400364:    00050493              mv    s1,a0                                  allGrp
  } else if ((mcause & MCAUSE_INT) && ((mcause & MCAUSE_CAUSE) == IRQ_M_TIMER)){
    handle_m_time_interrupt();
#endif
  }
  else {
    write(1, "trap\n", 5);
20400368:    20412537              lui    a0,0x20412                            allGrp
2040036c:    42850593              addi    a1,a0,1064 # 20412428 <_free_r+0x54> allGrp
20400370:    00100513              li    a0,1                                   allGrp
20400374:    00500613              li    a2,5                                   allGrp
20400378:    00000097              auipc    ra,0x0                              allGrp
2040037c:    7b8080e7              jalr    1976(ra) # 20400b30 <__wrap_write>   Call-Instr, allGrp, controlFlowGrp
    _exit(1 + mcause);
20400380:    00148513              addi    a0,s1,1                              Return-Tgt, allGrp
20400384:    00001097              auipc    ra,0x1                              allGrp
20400388:    854080e7              jalr    -1964(ra) # 20400bd8 <__wrap_exit>   Call-Instr, allGrp, controlFlowGrp

2040038c <_init>:
2040038c:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
20400390:    00112623              sw    ra,12(sp)                              allGrp
20400394:    00912423              sw    s1,8(sp)                               allGrp
20400398:    c0000537              lui    a0,0xc0000                            allGrp
2040039c:    fff50513              addi    a0,a0,-1 # bfffffff <_sp+0x3fffbfff> allGrp
204003a0:    100005b7              lui    a1,0x10000                            allGrp
  AON_REG(AON_LFROSC) &= ~ROSC_EN(1);
204003a4:    0705a603              lw    a2,112(a1) # 10000070 <__stack_size+0xffff870>allGrp
204003a8:    00a67533              and    a0,a2,a0                              allGrp
204003ac:    06a5a823              sw    a0,112(a1)                             allGrp
204003b0:    40100537              lui    a0,0x40100                            allGrp
204003b4:    00450693              addi    a3,a0,4 # 40100004 <__fini_array_end+0x1fced644>allGrp
204003b8:    10008537              lui    a0,0x10008                            allGrp
  PRCI_REG(PRCI_HFROSCCFG) = (ROSC_DIV(div) | ROSC_TRIM(trim) | ROSC_EN(1));
204003bc:    00d52023              sw    a3,0(a0) # 10008000 <__stack_size+0x10007800>allGrp
204003c0:    fff00593              li    a1,-1                                  allGrp
  while ((PRCI_REG(PRCI_HFROSCCFG) & ROSC_RDY(1)) == 0) ;
204003c4:    00052603              lw    a2,0(a0)                               Branch-Tgt, allGrp
204003c8:    fec5cee3              blt    a1,a2,204003c4 <_init+0x38>           allGrp, Branch-Instr, controlFlowGrp
204003cc:    ffff0637              lui    a2,0xffff0                            Branch-Tgt, allGrp
204003d0:    fff60713              addi    a4,a2,-1 # fffeffff <_sp+0x7ffebfff> allGrp
  PRCI_REG(PRCI_PLLCFG) &= ~PLL_SEL(1);
204003d4:    00852603              lw    a2,8(a0)                               allGrp
204003d8:    00e67633              and    a2,a2,a4                              allGrp
204003dc:    00c52423              sw    a2,8(a0)                               allGrp
  if (PRCI_REG(PRCI_PLLCFG) & PLL_SEL(1)) {
204003e0:    00852783              lw    a5,8(a0)                               allGrp
204003e4:    00010637              lui    a2,0x10                               allGrp
204003e8:    00c7f7b3              and    a5,a5,a2                              allGrp
204003ec:    02078063              beqz    a5,2040040c <_init+0x80>             allGrp, Branch-Instr, controlFlowGrp
  PRCI_REG(PRCI_HFROSCCFG) = (ROSC_DIV(div) | ROSC_TRIM(trim) | ROSC_EN(1));
204003f0:    00d52023              sw    a3,0(a0)                               Branch-Tgt, allGrp
  while ((PRCI_REG(PRCI_HFROSCCFG) & ROSC_RDY(1)) == 0) ;
204003f4:    00052683              lw    a3,0(a0)                               Branch-Tgt, allGrp
204003f8:    fed5cee3              blt    a1,a3,204003f4 <_init+0x68>           allGrp, Branch-Instr, controlFlowGrp
  PRCI_REG(PRCI_PLLCFG) &= ~PLL_SEL(1);
204003fc:    00852683              lw    a3,8(a0)                               Branch-Tgt, allGrp
20400400:    00e6f6b3              and    a3,a3,a4                              allGrp
20400404:    00850713              addi    a4,a0,8                              allGrp
20400408:    00d72023              sw    a3,0(a4)                               allGrp
2040040c:    100146b7              lui    a3,0x10014                            Branch-Tgt, allGrp
20400410:    00800713              li    a4,8                                   allGrp
    SPI0_REG(SPI_REG_SCKDIV) = 8;
20400414:    00e6a023              sw    a4,0(a3) # 10014000 <__stack_size+0x10013800>allGrp
20400418:    10000693              li    a3,256                                 allGrp
    PRCI_REG(PRCI_PLLDIV) = (PLL_FINAL_DIV_BY_1(1) | PLL_FINAL_DIV(0));
2040041c:    00d52623              sw    a3,12(a0)                              allGrp
20400420:    000406b7              lui    a3,0x40                               allGrp
20400424:    5f168693              addi    a3,a3,1521 # 405f1 <__stack_size+0x3fdf1>allGrp
    PRCI_REG(PRCI_PLLCFG) = config_value;
20400428:    00d52423              sw    a3,8(a0)                               allGrp
2040042c:    fffc06b7              lui    a3,0xfffc0                            allGrp
20400430:    fff68693              addi    a3,a3,-1 # fffbffff <_sp+0x7ffbbfff> allGrp
    PRCI_REG(PRCI_PLLCFG) &= ~PLL_BYPASS(1);
20400434:    00852703              lw    a4,8(a0)                               allGrp
20400438:    00d776b3              and    a3,a4,a3                              allGrp
2040043c:    00d52423              sw    a3,8(a0)                               allGrp
20400440:    0200c6b7              lui    a3,0x200c                             allGrp
  return *(volatile unsigned long *)(CLINT_CTRL_ADDR + CLINT_MTIME);
20400444:    ff86a703              lw    a4,-8(a3) # 200bff8 <__stack_size+0x200b7f8>allGrp
20400448:    00400793              li    a5,4                                   allGrp
2040044c:    ff86a483              lw    s1,-8(a3)                              Branch-Tgt, allGrp
    while (mtime_lo() - now < 4) ;
20400450:    40e484b3              sub    s1,s1,a4                              allGrp
20400454:    fef4ece3              bltu    s1,a5,2040044c <_init+0xc0>          allGrp, Branch-Instr, controlFlowGrp
    while ((PRCI_REG(PRCI_PLLCFG) & PLL_LOCK(1)) == 0) ;
20400458:    00852683              lw    a3,8(a0)                               Branch-Tgt, allGrp
2040045c:    fed5cee3              blt    a1,a3,20400458 <_init+0xcc>           allGrp, Branch-Instr, controlFlowGrp
  PRCI_REG(PRCI_PLLCFG) |= PLL_SEL(1);
20400460:    00852583              lw    a1,8(a0)                               Branch-Tgt, allGrp
20400464:    00c5e5b3              or    a1,a1,a2                               allGrp
20400468:    00b52423              sw    a1,8(a0)                               allGrp
2040046c:    fffd0537              lui    a0,0xfffd0                            allGrp
20400470:    fff50513              addi    a0,a0,-1 # fffcffff <_sp+0x7ffcbfff> allGrp
20400474:    100125b7              lui    a1,0x10012                            allGrp
  GPIO_REG(GPIO_IOF_SEL) &= ~IOF0_UART0_MASK;
20400478:    03c5a603              lw    a2,60(a1) # 1001203c <__stack_size+0x1001183c>allGrp
2040047c:    00a67533              and    a0,a2,a0                              allGrp
20400480:    02a5ae23              sw    a0,60(a1)                              allGrp
20400484:    00030537              lui    a0,0x30                               allGrp
  GPIO_REG(GPIO_IOF_EN) |= IOF0_UART0_MASK;
20400488:    0385a603              lw    a2,56(a1)                              allGrp
2040048c:    00a66533              or    a0,a2,a0                               allGrp
20400490:    02a5ac23              sw    a0,56(a1)                              allGrp
  if (!cpu_freq) {
20400494:    800014b7              lui    s1,0x80001                            allGrp
20400498:    9b84a503              lw    a0,-1608(s1) # 800009b8 <_sp+0xffffc9b8>allGrp
2040049c:    02051063              bnez    a0,204004bc <_init+0x130>            allGrp, Branch-Instr, controlFlowGrp
204004a0:    00100513              li    a0,1                                   Branch-Tgt, allGrp
    measure_cpu_freq(1);
204004a4:    00000097              auipc    ra,0x0                              allGrp
204004a8:    e6c080e7              jalr    -404(ra) # 20400310 <measure_cpu_freq>Call-Instr, allGrp, controlFlowGrp
204004ac:    00a00513              li    a0,10                                  Return-Tgt, allGrp
    cpu_freq = measure_cpu_freq(10);
204004b0:    00000097              auipc    ra,0x0                              allGrp
204004b4:    e60080e7              jalr    -416(ra) # 20400310 <measure_cpu_freq>Call-Instr, allGrp, controlFlowGrp
204004b8:    9aa4ac23              sw    a0,-1608(s1)                           Return-Tgt, allGrp
204004bc:    91a2b5b7              lui    a1,0x91a2b                            Branch-Tgt, allGrp
204004c0:    3c558593              addi    a1,a1,965 # 91a2b3c5 <_sp+0x11a273c5>allGrp
  UART0_REG(UART_REG_DIV) = get_cpu_freq() / baud_rate - 1;
204004c4:    02b53533              mulhu    a0,a0,a1                            allGrp
204004c8:    01055513              srli    a0,a0,0x10                           allGrp
204004cc:    fff50513              addi    a0,a0,-1 # 2ffff <__stack_size+0x2f7ff>allGrp
204004d0:    100135b7              lui    a1,0x10013                            allGrp
204004d4:    00a5ac23              sw    a0,24(a1) # 10013018 <__stack_size+0x10012818>allGrp
  UART0_REG(UART_REG_TXCTRL) |= UART_TXEN;
204004d8:    0085a503              lw    a0,8(a1)                               allGrp
204004dc:    00156513              ori    a0,a0,1                               allGrp
204004e0:    00a5a423              sw    a0,8(a1)                               allGrp
  use_pll(0, 0, 1, 31, 1);
  uart_init(115200);

  //printf("core freq at %d Hz\n", get_cpu_freq());

  write_csr(0x305, &trap_entry); //mtvect
204004e4:    20400537              lui    a0,0x20400                            allGrp
204004e8:    0a050513              addi    a0,a0,160 # 204000a0 <trap_entry>    allGrp
204004ec:    30551073              csrw    mtvec,a0                             allGrp
  if (read_csr(0x301) & (1 << ('F' - 'A'))) { // if F extension is present //misa
204004f0:    30102573              csrr    a0,misa                              allGrp
204004f4:    02057513              andi    a0,a0,32                             allGrp
204004f8:    00050863              beqz    a0,20400508 <_init+0x17c>            allGrp, Branch-Instr, controlFlowGrp
204004fc:    00006537              lui    a0,0x6                                Branch-Tgt, allGrp
    uint32_t tmp = 0;
    write_csr(0x300, MSTATUS_FS); // allow FPU instructions without trapping //mstatus
20400500:    30051073              csrw    mstatus,a0                           allGrp
    write_csr(0x3, tmp); // initialize rounding mode, undefined at reset fcsr
20400504:    00305073              csrwi    fcsr,0                              allGrp
  }
  #endif
  
}
20400508:    00812483              lw    s1,8(sp)                               Branch-Tgt, allGrp
2040050c:    00012423              sw    zero,8(sp)                             allGrp
20400510:    00c12083              lw    ra,12(sp)                              allGrp
20400514:    00012623              sw    zero,12(sp)                            allGrp
20400518:    01010113              addi    sp,sp,16                             allGrp
2040051c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400520 <_fini>:

void _fini()
{
}
20400520:    00008067              ret                                          Return-Instr, Branch-Tgt, Call-Tgt, allGrp, controlFlowGrp

20400524 <isp_main>:
20400524:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
static bool test_status_positive = false;
static bool test_status_negative = false;

extern uint32_t uiPortGetWallTimestampUs(void);

int isp_main(int argc, char *argv[])
20400528:    00112623              sw    ra,12(sp)                              allGrp
{
  test_main();
2040052c:    00000097              auipc    ra,0x0                              allGrp
20400530:    234080e7              jalr    564(ra) # 20400760 <test_main>       Call-Instr, allGrp, controlFlowGrp
  return 0;
20400534:    00000513              li    a0,0                                   Return-Tgt, allGrp
20400538:    00c12083              lw    ra,12(sp)                              allGrp
2040053c:    00012623              sw    zero,12(sp)                            allGrp
20400540:    01010113              addi    sp,sp,16                             allGrp
20400544:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400548 <test_positive>:
20400548:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
}

// Identify positive case (test will end)
void test_positive(){
  test_status_positive = true;
2040054c:    00112623              sw    ra,12(sp)                              allGrp
20400550:    80001537              lui    a0,0x80001                            allGrp
20400554:    00100593              li    a1,1                                   allGrp
20400558:    9ab50e23              sb    a1,-1604(a0) # 800009bc <_sp+0xffffc9bc>allGrp
  //  struct timeval tv;
  //  gettimeofday(&tv,NULL);
  //  uint32_t sec = tv.tv_sec;
  //  uint32_t usec = tv.tv_usec;
  t_printf("MSG: Positive test.\n");
2040055c:    20412537              lui    a0,0x20412                            allGrp
20400560:    42e50513              addi    a0,a0,1070 # 2041242e <_free_r+0x5a> allGrp
20400564:    00000097              auipc    ra,0x0                              allGrp
20400568:    cb0080e7              jalr    -848(ra) # 20400214 <t_printf>       Call-Instr, allGrp, controlFlowGrp
  t_printf("Start time: %u\n", uiPortGetWallTimestampUs());
2040056c:    00000097              auipc    ra,0x0                              Return-Tgt, allGrp
20400570:    c88080e7              jalr    -888(ra) # 204001f4 <uiPortGetWallTimestampUs>Call-Instr, allGrp, controlFlowGrp
20400574:    00050593              mv    a1,a0                                  Return-Tgt, allGrp
20400578:    20412537              lui    a0,0x20412                            allGrp
2040057c:    44350513              addi    a0,a0,1091 # 20412443 <_free_r+0x6f> allGrp
20400580:    00000097              auipc    ra,0x0                              allGrp
20400584:    c94080e7              jalr    -876(ra) # 20400214 <t_printf>       Call-Instr, allGrp, controlFlowGrp
  // t_printf("Clock time: %d.%06d\n", sec, usec);
}
20400588:    00c12083              lw    ra,12(sp)                              Return-Tgt, allGrp
2040058c:    00012623              sw    zero,12(sp)                            allGrp
20400590:    01010113              addi    sp,sp,16                             allGrp
20400594:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400598 <test_negative>:
20400598:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt

// Identify negative case (test will never end)
void test_negative(){
  test_status_negative = true;
2040059c:    00112623              sw    ra,12(sp)                              allGrp
204005a0:    80001537              lui    a0,0x80001                            allGrp
204005a4:    00100593              li    a1,1                                   allGrp
204005a8:    9ab50ea3              sb    a1,-1603(a0) # 800009bd <_sp+0xffffc9bd>allGrp
  t_printf("MSG: Negative test.\n");
204005ac:    20412537              lui    a0,0x20412                            allGrp
204005b0:    45350513              addi    a0,a0,1107 # 20412453 <_free_r+0x7f> allGrp
204005b4:    00000097              auipc    ra,0x0                              allGrp
204005b8:    c60080e7              jalr    -928(ra) # 20400214 <t_printf>       Call-Instr, allGrp, controlFlowGrp
}
204005bc:    00c12083              lw    ra,12(sp)                              Return-Tgt, allGrp
204005c0:    00012623              sw    zero,12(sp)                            allGrp
204005c4:    01010113              addi    sp,sp,16                             allGrp
204005c8:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204005cc <test_begin>:
204005cc:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt

// Set passing status at start of test
void test_begin(){
  t_printf("MSG: Begin test.\n");
204005d0:    00112623              sw    ra,12(sp)                              allGrp
204005d4:    20412537              lui    a0,0x20412                            allGrp
204005d8:    46850513              addi    a0,a0,1128 # 20412468 <_free_r+0x94> allGrp
204005dc:    00000097              auipc    ra,0x0                              allGrp
204005e0:    c38080e7              jalr    -968(ra) # 20400214 <t_printf>       Call-Instr, allGrp, controlFlowGrp
  test_status_passing = true;
204005e4:    80001537              lui    a0,0x80001                            Return-Tgt, allGrp
204005e8:    00100593              li    a1,1                                   allGrp
204005ec:    9ab50f23              sb    a1,-1602(a0) # 800009be <_sp+0xffffc9be>allGrp
}
204005f0:    00c12083              lw    ra,12(sp)                              allGrp
204005f4:    00012623              sw    zero,12(sp)                            allGrp
204005f8:    01010113              addi    sp,sp,16                             allGrp
204005fc:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400600 <test_pass>:

// Set passing status
void test_pass(){
  test_status_passing = true;
20400600:    80001537              lui    a0,0x80001                            Call-Tgt, allGrp, Branch-Tgt
20400604:    00100593              li    a1,1                                   allGrp
20400608:    9ab50f23              sb    a1,-1602(a0) # 800009be <_sp+0xffffc9be>allGrp
}
2040060c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400610 <test_fail>:

// Set failing status
void test_fail(){
  test_status_passing = false;
20400610:    80001537              lui    a0,0x80001                            Call-Tgt, allGrp, Branch-Tgt
20400614:    9a050f23              sb    zero,-1602(a0) # 800009be <_sp+0xffffc9be>allGrp
}
20400618:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040061c <test_done>:
2040061c:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt

// print the test status for a positive test case
int test_done(){
  test_device = (uint32_t *)SIFIVE_TEST_ADDR;
20400620:    00112623              sw    ra,12(sp)                              allGrp
20400624:    00912423              sw    s1,8(sp)                               allGrp
20400628:    800024b7              lui    s1,0x80002                            allGrp
2040062c:    00100537              lui    a0,0x100                              allGrp
20400630:    a4a4a623              sw    a0,-1460(s1) # 80001a4c <_sp+0xffffda4c>allGrp
20400634:    80001537              lui    a0,0x80001                            allGrp
20400638:    9bc50503              lb    a0,-1604(a0) # 800009bc <_sp+0xffffc9bc>allGrp
  if(test_status_passing && test_status_positive && !test_status_negative){
2040063c:    800015b7              lui    a1,0x80001                            allGrp
20400640:    9be5c583              lbu    a1,-1602(a1) # 800009be <_sp+0xffffc9be>allGrp
20400644:    06058263              beqz    a1,204006a8 <test_done+0x8c>         allGrp, Branch-Instr, controlFlowGrp
20400648:    00157513              andi    a0,a0,1                              Branch-Tgt, allGrp
2040064c:    06050e63              beqz    a0,204006c8 <test_done+0xac>         allGrp, Branch-Instr, controlFlowGrp
20400650:    80001537              lui    a0,0x80001                            Branch-Tgt, allGrp
20400654:    9bd54503              lbu    a0,-1603(a0) # 800009bd <_sp+0xffffc9bd>allGrp
20400658:    06051263              bnez    a0,204006bc <test_done+0xa0>         allGrp, Branch-Instr, controlFlowGrp
    //  struct timeval tv;
    //  gettimeofday(&tv,NULL);
    //  uint32_t sec = tv.tv_sec;
    //  uint32_t usec = tv.tv_usec;
  t_printf("PASS: test passed.\n");
2040065c:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
20400660:    47a50513              addi    a0,a0,1146 # 2041247a <_free_r+0xa6> allGrp
20400664:    00000097              auipc    ra,0x0                              allGrp
20400668:    bb0080e7              jalr    -1104(ra) # 20400214 <t_printf>      Call-Instr, allGrp, controlFlowGrp
  t_printf("End time: %u\n", uiPortGetWallTimestampUs());
2040066c:    00000097              auipc    ra,0x0                              Return-Tgt, allGrp
20400670:    b88080e7              jalr    -1144(ra) # 204001f4 <uiPortGetWallTimestampUs>Call-Instr, allGrp, controlFlowGrp
20400674:    00050593              mv    a1,a0                                  Return-Tgt, allGrp
20400678:    20412537              lui    a0,0x20412                            allGrp
2040067c:    48e50513              addi    a0,a0,1166 # 2041248e <_free_r+0xba> allGrp
20400680:    00000097              auipc    ra,0x0                              allGrp
20400684:    b94080e7              jalr    -1132(ra) # 20400214 <t_printf>      Call-Instr, allGrp, controlFlowGrp
  //  t_printf("Clock time: %d.%06d\n", sec, usec);
  t_printf("MSG: End test.\n");
20400688:    20412537              lui    a0,0x20412                            Return-Tgt, allGrp
2040068c:    49c50513              addi    a0,a0,1180 # 2041249c <_free_r+0xc8> allGrp
20400690:    00000097              auipc    ra,0x0                              allGrp
20400694:    b84080e7              jalr    -1148(ra) # 20400214 <t_printf>      Call-Instr, allGrp, controlFlowGrp
20400698:    00005537              lui    a0,0x5                                Return-Tgt, allGrp
2040069c:    55550593              addi    a1,a0,1365 # 5555 <__stack_size+0x4d55>allGrp
204006a0:    00000513              li    a0,0                                   allGrp
204006a4:    0500006f              j    204006f4 <test_done+0xd8>               allGrp, Branch-Instr, controlFlowGrp
  *test_device = SIFIVE_TEST_PASS;
  return 0;
  }
  else if(test_status_positive && test_status_negative) {
204006a8:    00157513              andi    a0,a0,1                              Branch-Tgt, allGrp
204006ac:    00050e63              beqz    a0,204006c8 <test_done+0xac>         allGrp, Branch-Instr, controlFlowGrp
204006b0:    80001537              lui    a0,0x80001                            Branch-Tgt, allGrp
204006b4:    9bd54503              lbu    a0,-1603(a0) # 800009bd <_sp+0xffffc9bd>allGrp
204006b8:    00050863              beqz    a0,204006c8 <test_done+0xac>         allGrp, Branch-Instr, controlFlowGrp
    t_printf("FAIL: error in test, can't be both positive and negative test.\n");
204006bc:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
204006c0:    4ac50513              addi    a0,a0,1196 # 204124ac <_free_r+0xd8> allGrp
204006c4:    00c0006f              j    204006d0 <test_done+0xb4>               allGrp, Branch-Instr, controlFlowGrp
    t_printf("MSG: End test.\n");
    *test_device = SIFIVE_TEST_FAIL;
    return 1;
  }
  else {
    t_printf("FAIL: test failed.\n");
204006c8:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
204006cc:    4ec50513              addi    a0,a0,1260 # 204124ec <_free_r+0x118>allGrp
204006d0:    00000097              auipc    ra,0x0                              Branch-Tgt, allGrp
204006d4:    b44080e7              jalr    -1212(ra) # 20400214 <t_printf>      Call-Instr, allGrp, controlFlowGrp
204006d8:    20412537              lui    a0,0x20412                            Return-Tgt, allGrp
204006dc:    49c50513              addi    a0,a0,1180 # 2041249c <_free_r+0xc8> allGrp
204006e0:    00000097              auipc    ra,0x0                              allGrp
204006e4:    b34080e7              jalr    -1228(ra) # 20400214 <t_printf>      Call-Instr, allGrp, controlFlowGrp
204006e8:    00100513              li    a0,1                                   Return-Tgt, allGrp
204006ec:    000035b7              lui    a1,0x3                                allGrp
204006f0:    33358593              addi    a1,a1,819 # 3333 <__stack_size+0x2b33>allGrp
204006f4:    a4c4a603              lw    a2,-1460(s1)                           Branch-Tgt, allGrp
204006f8:    00b62023              sw    a1,0(a2) # 10000 <__stack_size+0xf800> allGrp
    t_printf("MSG: End test.\n");
    *test_device = SIFIVE_TEST_FAIL;
    return 1;
  }
}
204006fc:    00812483              lw    s1,8(sp)                               allGrp
20400700:    00012423              sw    zero,8(sp)                             allGrp
20400704:    00c12083              lw    ra,12(sp)                              allGrp
20400708:    00012623              sw    zero,12(sp)                            allGrp
2040070c:    01010113              addi    sp,sp,16                             allGrp
20400710:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400714 <test_error>:
20400714:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt


// print the test status
void test_error(const char *fmt, ...){
20400718:    00112623              sw    ra,12(sp)                              allGrp
2040071c:    03112623              sw    a7,44(sp)                              allGrp
20400720:    03012423              sw    a6,40(sp)                              allGrp
20400724:    02f12223              sw    a5,36(sp)                              allGrp
20400728:    02e12023              sw    a4,32(sp)                              allGrp
2040072c:    00d12e23              sw    a3,28(sp)                              allGrp
20400730:    00c12c23              sw    a2,24(sp)                              allGrp
20400734:    00b12a23              sw    a1,20(sp)                              allGrp
20400738:    01410593              addi    a1,sp,20                             allGrp
  va_list args;

  va_start(args, fmt);
2040073c:    00b12423              sw    a1,8(sp)                               allGrp
  t_printf(fmt, args);
20400740:    00000097              auipc    ra,0x0                              allGrp
20400744:    ad4080e7              jalr    -1324(ra) # 20400214 <t_printf>      Call-Instr, allGrp, controlFlowGrp
  test_status_passing = false;
20400748:    80001537              lui    a0,0x80001                            Return-Tgt, allGrp
2040074c:    9a050f23              sb    zero,-1602(a0) # 800009be <_sp+0xffffc9be>allGrp
  va_end(args);

  test_fail();
}
20400750:    00c12083              lw    ra,12(sp)                              allGrp
20400754:    00012623              sw    zero,12(sp)                            allGrp
20400758:    03010113              addi    sp,sp,48                             allGrp
2040075c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400760 <test_main>:
20400760:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
 * Hello world sanity test to check we can execute code i.e. main and 
 *     call printf
 */
int test_main(void)
  {
    test_positive(); // identify test as positive (will complete)
20400764:    00112623              sw    ra,12(sp)                              allGrp
20400768:    00000097              auipc    ra,0x0                              allGrp
2040076c:    de0080e7              jalr    -544(ra) # 20400548 <test_positive>  Call-Instr, allGrp, controlFlowGrp

    t_printf("Hello Test\n");
20400770:    20412537              lui    a0,0x20412                            Return-Tgt, allGrp
20400774:    50050513              addi    a0,a0,1280 # 20412500 <_free_r+0x12c>allGrp
20400778:    00000097              auipc    ra,0x0                              allGrp
2040077c:    a9c080e7              jalr    -1380(ra) # 20400214 <t_printf>      Call-Instr, allGrp, controlFlowGrp
    
    test_pass();
20400780:    00000097              auipc    ra,0x0                              Return-Tgt, allGrp
20400784:    e80080e7              jalr    -384(ra) # 20400600 <test_pass>      Call-Instr, allGrp, controlFlowGrp
    return test_done();
20400788:    00c12083              lw    ra,12(sp)                              Return-Tgt, allGrp
2040078c:    00012623              sw    zero,12(sp)                            allGrp
20400790:    01010113              addi    sp,sp,16                             allGrp
20400794:    00000317              auipc    t1,0x0                              allGrp
20400798:    e8830067              jr    -376(t1) # 2040061c <test_done>        Call-Instr, allGrp, controlFlowGrp

2040079c <btow>:
static void *volatile dover_ptr_untag;
static void *volatile dover_ptr_zero = 0;

// Convert bytes to words, rounding up
size_t btow(size_t bytes){
  uintptr_t words = bytes / sizeof(uintptr_t);
2040079c:    00255593              srli    a1,a0,0x2                            Call-Tgt, allGrp, Branch-Tgt
  // Handle fractional word
  if(bytes & (sizeof(uintptr_t) - 1))
204007a0:    00357513              andi    a0,a0,3                              allGrp
204007a4:    00a03533              snez    a0,a0                                allGrp
204007a8:    00a58533              add    a0,a1,a0                              allGrp
    words++;
  return words;
204007ac:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204007b0 <dover_remove_tag>:
204007b0:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
204007b4:    00a12623              sw    a0,12(sp)                              allGrp
// Strip tag from a pointer
void* __attribute__ ((noinline)) dover_remove_tag(void *volatile ptr) {
  void *volatile res;
  
  // remove tag from ptr
  dover_ptr_untag = ptr;
204007b8:    80001537              lui    a0,0x80001                            allGrp
204007bc:    00c12583              lw    a1,12(sp)                              allGrp
204007c0:    9cb52023              sw    a1,-1600(a0) # 800009c0 <_sp+0xffffc9c0>allGrp
  res = dover_ptr_untag;
204007c4:    9c052503              lw    a0,-1600(a0)                           allGrp
204007c8:    00a12423              sw    a0,8(sp)                               allGrp

  return res;
204007cc:    00812503              lw    a0,8(sp)                               allGrp
204007d0:    01010113              addi    sp,sp,16                             allGrp
204007d4:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204007d8 <dover_tag>:
204007d8:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
204007dc:    4ec4f637              lui    a2,0x4ec4f                            allGrp
204007e0:    c4f60613              addi    a2,a2,-945 # 4ec4ec4f <__fini_array_end+0x2e83c28f>allGrp
  volatile uintptr_t *p;
  void *volatile res;

#if MAX_COLORS
  // constrain index to bounds
  dover_ptr_tag_index++;
204007e4:    800016b7              lui    a3,0x80001                            allGrp
204007e8:    9c46a703              lw    a4,-1596(a3) # 800009c4 <_sp+0xffffc9c4>allGrp
204007ec:    00170713              addi    a4,a4,1                              allGrp
  dover_ptr_tag_index = dover_ptr_tag_index % MAX_COLORS;
204007f0:    02c73633              mulhu    a2,a4,a2                            allGrp
204007f4:    00265613              srli    a2,a2,0x2                            allGrp
204007f8:    00d00793              li    a5,13                                  allGrp
204007fc:    02f60633              mul    a2,a2,a5                              allGrp
20400800:    40c70633              sub    a2,a4,a2                              allGrp
20400804:    9cc6a223              sw    a2,-1596(a3)                           allGrp
  dover_ptr_tag[dover_ptr_tag_index] = ptr;
20400808:    00261613              slli    a2,a2,0x2                            allGrp
2040080c:    800016b7              lui    a3,0x80001                            allGrp
20400810:    9c868693              addi    a3,a3,-1592 # 800009c8 <_sp+0xffffc9c8>allGrp
20400814:    00d60633              add    a2,a2,a3                              allGrp
20400818:    00a62023              sw    a0,0(a2)                               allGrp
  uintptr_t words = bytes / sizeof(uintptr_t);
2040081c:    0025d513              srli    a0,a1,0x2                            allGrp
  if(bytes & (sizeof(uintptr_t) - 1))
20400820:    0035f593              andi    a1,a1,3                              allGrp
20400824:    00b035b3              snez    a1,a1                                allGrp
20400828:    00b50533              add    a0,a0,a1                              allGrp
  p = dover_ptr_tag[dover_ptr_tag_index];
2040082c:    00062583              lw    a1,0(a2)                               allGrp
  res = p;
20400830:    00b12623              sw    a1,12(sp)                              allGrp
  res = p;
#endif

  uintptr_t zero;

  zero = dover_ptr_zero;
20400834:    80001637              lui    a2,0x80001                            allGrp
20400838:    9fc62603              lw    a2,-1540(a2) # 800009fc <_sp+0xffffc9fc>allGrp
  count = 0;
  //printk("do_tag %x\n", dover_remove_tag(p));
  while(count < words) {
2040083c:    00050a63              beqz    a0,20400850 <dover_tag+0x78>         allGrp, Branch-Instr, controlFlowGrp
    //printk("do_tag(%d) %d\n", count, p);
    *p = zero; // Tag the word
20400840:    00c5a023              sw    a2,0(a1)                               Branch-Tgt, allGrp
    p++;
20400844:    00458593              addi    a1,a1,4                              allGrp
  while(count < words) {
20400848:    fff50513              addi    a0,a0,-1                             allGrp
2040084c:    fe051ae3              bnez    a0,20400840 <dover_tag+0x68>         allGrp, Branch-Instr, controlFlowGrp
    count++;
  }
  //printk("do_tag %x\n", dover_remove_tag(p));

  return res;
20400850:    00c12503              lw    a0,12(sp)                              Branch-Tgt, allGrp
20400854:    01010113              addi    sp,sp,16                             allGrp
20400858:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040085c <dover_untag>:
  volatile uintptr_t *p;
  uintptr_t zero;

  p = ptr;
  // grab a specially tagged zero
  zero = dover_ptr_zero;
2040085c:    80001637              lui    a2,0x80001                            Call-Tgt, allGrp, Branch-Tgt
20400860:    9fc62603              lw    a2,-1540(a2) # 800009fc <_sp+0xffffc9fc>allGrp
  uintptr_t words = bytes / sizeof(uintptr_t);
20400864:    0025d693              srli    a3,a1,0x2                            allGrp
  if(bytes & (sizeof(uintptr_t) - 1))
20400868:    0035f593              andi    a1,a1,3                              allGrp
2040086c:    00b035b3              snez    a1,a1                                allGrp
20400870:    00b685b3              add    a1,a3,a1                              allGrp
  count = 0;
  while(count < words) {
20400874:    00058a63              beqz    a1,20400888 <dover_untag+0x2c>       allGrp, Branch-Instr, controlFlowGrp
    //printk("do_untag(%d) %d\n", count, p);
    *p = zero; // Tag the word
20400878:    00c52023              sw    a2,0(a0)                               Branch-Tgt, allGrp
    p++;
2040087c:    00450513              addi    a0,a0,4                              allGrp
  while(count < words) {
20400880:    fff58593              addi    a1,a1,-1                             allGrp
20400884:    fe059ae3              bnez    a1,20400878 <dover_untag+0x1c>       allGrp, Branch-Instr, controlFlowGrp
    count++;
  }
}
20400888:    00008067              ret                                          Branch-Tgt, Return-Instr, allGrp, controlFlowGrp

2040088c <pvPortMalloc>:
2040088c:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt

/*-----------------------------------------------------------*/

void * pvPortMalloc( size_t xWantedSize )
20400890:    00112623              sw    ra,12(sp)                              allGrp
  void *pvReturn = NULL;

  {
    /* If this is the first call to malloc then the heap will require
       initialisation to setup the list of free blocks. */
    if( xHeapHasBeenInitialised == 0 )
20400894:    800015b7              lui    a1,0x80001                            allGrp
20400898:    a005c603              lbu    a2,-1536(a1) # 80000a00 <_sp+0xffffca00>allGrp
2040089c:    04061663              bnez    a2,204008e8 <pvPortMalloc+0x5c>      allGrp, Branch-Instr, controlFlowGrp
204008a0:    80001637              lui    a2,0x80001                            Branch-Tgt, allGrp
204008a4:    a0460693              addi    a3,a2,-1532 # 80000a04 <_sp+0xffffca04>allGrp
  pucAlignedHeap = ( uint8_t * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );

  /* xStart is used to hold a pointer to the first item in the list of free
     blocks.  The void cast is used to prevent compiler warnings. */
  xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
  xStart.xBlockSize = ( size_t ) 0;
204008a8:    0006a223              sw    zero,4(a3)                             allGrp
204008ac:    800016b7              lui    a3,0x80001                            allGrp

  /* xEnd is used to mark the end of the list of free blocks. */
  xEnd.xBlockSize = configADJUSTED_HEAP_SIZE;
  xEnd.pxNextFreeBlock = NULL;
204008b0:    a006a623              sw    zero,-1524(a3) # 80000a0c <_sp+0xffffca0c>allGrp
204008b4:    80001737              lui    a4,0x80001                            allGrp
204008b8:    a1870713              addi    a4,a4,-1512 # 80000a18 <_sp+0xffffca18>allGrp
  xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
204008bc:    ffc77713              andi    a4,a4,-4                             allGrp
204008c0:    a0e62223              sw    a4,-1532(a2)                           allGrp
204008c4:    a0c68613              addi    a2,a3,-1524                          allGrp
204008c8:    000016b7              lui    a3,0x1                                allGrp
204008cc:    ffc68693              addi    a3,a3,-4 # ffc <__stack_size+0x7fc>  allGrp
  xEnd.xBlockSize = configADJUSTED_HEAP_SIZE;
204008d0:    00d62223              sw    a3,4(a2)                               allGrp

  /* To start with there is a single free block that is sized to take up the
     entire heap space. */
  pxFirstFreeBlock = ( void * ) pucAlignedHeap;
  pxFirstFreeBlock->xBlockSize = configADJUSTED_HEAP_SIZE;
  pxFirstFreeBlock->pxNextFreeBlock = &xEnd;
204008d4:    00c72023              sw    a2,0(a4)                               allGrp
  pxFirstFreeBlock->xBlockSize = configADJUSTED_HEAP_SIZE;
204008d8:    00d72223              sw    a3,4(a4)                               allGrp
	xHeapHasBeenInitialised = 1;
204008dc:    a0058593              addi    a1,a1,-1536                          allGrp
204008e0:    00100613              li    a2,1                                   allGrp
204008e4:    00c58023              sb    a2,0(a1)                               allGrp
    if( xWantedSize > 0 )
204008e8:    0e050863              beqz    a0,204009d8 <pvPortMalloc+0x14c>     Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	xWantedSize += heapSTRUCT_SIZE;
204008ec:    00850613              addi    a2,a0,8                              Branch-Tgt, allGrp
	if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0 )
204008f0:    00367693              andi    a3,a2,3                              allGrp
204008f4:    00000593              li    a1,0                                   allGrp
204008f8:    00000313              li    t1,0                                   allGrp
204008fc:    00068663              beqz    a3,20400908 <pvPortMalloc+0x7c>      allGrp, Branch-Instr, controlFlowGrp
20400900:    00400713              li    a4,4                                   Branch-Tgt, allGrp
20400904:    40d70333              sub    t1,a4,a3                              allGrp
20400908:    00c30633              add    a2,t1,a2                              Branch-Tgt, allGrp
    if( ( xWantedSize > 0 ) && ( xWantedSize < configADJUSTED_HEAP_SIZE ) )
2040090c:    fff60693              addi    a3,a2,-1                             allGrp
20400910:    00001737              lui    a4,0x1                                allGrp
20400914:    ffa70713              addi    a4,a4,-6 # ffa <__stack_size+0x7fa>  allGrp
20400918:    0cd76263              bltu    a4,a3,204009dc <pvPortMalloc+0x150>  allGrp, Branch-Instr, controlFlowGrp
2040091c:    800018b7              lui    a7,0x80001                            Branch-Tgt, allGrp
20400920:    a0488693              addi    a3,a7,-1532 # 80000a04 <_sp+0xffffca04>allGrp
20400924:    a048a583              lw    a1,-1532(a7)                           allGrp
	while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
20400928:    00458293              addi    t0,a1,4                              allGrp
2040092c:    0045a703              lw    a4,4(a1)                               allGrp
20400930:    02c77463              bleu    a2,a4,20400958 <pvPortMalloc+0xcc>   allGrp, Branch-Instr, controlFlowGrp
20400934:    0005a783              lw    a5,0(a1)                               Branch-Tgt, allGrp
20400938:    02078063              beqz    a5,20400958 <pvPortMalloc+0xcc>      allGrp, Branch-Instr, controlFlowGrp
2040093c:    00058693              mv    a3,a1                                  Branch-Tgt, allGrp
20400940:    00078593              mv    a1,a5                                  allGrp
20400944:    0047a703              lw    a4,4(a5)                               allGrp
20400948:    00c77663              bleu    a2,a4,20400954 <pvPortMalloc+0xc8>   allGrp, Branch-Instr, controlFlowGrp
2040094c:    0005a783              lw    a5,0(a1)                               Branch-Tgt, allGrp
20400950:    fe0796e3              bnez    a5,2040093c <pvPortMalloc+0xb0>      allGrp, Branch-Instr, controlFlowGrp
20400954:    00458293              addi    t0,a1,4                              Branch-Tgt, allGrp
	if( pxBlock != &xEnd )
20400958:    800017b7              lui    a5,0x80001                            Branch-Tgt, allGrp
2040095c:    a0c78793              addi    a5,a5,-1524 # 80000a0c <_sp+0xffffca0c>allGrp
20400960:    06f58c63              beq    a1,a5,204009d8 <pvPortMalloc+0x14c>   allGrp, Branch-Instr, controlFlowGrp
	    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
20400964:    0005a783              lw    a5,0(a1)                               Branch-Tgt, allGrp
	    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + heapSTRUCT_SIZE );
20400968:    0006a803              lw    a6,0(a3)                               allGrp
	    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
2040096c:    00f6a023              sw    a5,0(a3)                               allGrp
	    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
20400970:    40c706b3              sub    a3,a4,a2                              allGrp
	    pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + heapSTRUCT_SIZE );
20400974:    00880813              addi    a6,a6,8                              allGrp
20400978:    01100793              li    a5,17                                  allGrp
	    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
2040097c:    02f6ea63              bltu    a3,a5,204009b0 <pvPortMalloc+0x124>  allGrp, Branch-Instr, controlFlowGrp
		pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
20400980:    00c583b3              add    t2,a1,a2                              Branch-Tgt, allGrp
		pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
20400984:    00d3a223              sw    a3,4(t2)                               allGrp
		pxBlock->xBlockSize = xWantedSize;
20400988:    00c2a023              sw    a2,0(t0)                               allGrp
2040098c:    a0488693              addi    a3,a7,-1532                          allGrp
		prvInsertBlockIntoFreeList( ( pxNewBlockLink ) );
20400990:    0043a703              lw    a4,4(t2)                               allGrp
20400994:    00068793              mv    a5,a3                                  Branch-Tgt, allGrp
20400998:    0006a683              lw    a3,0(a3)                               allGrp
2040099c:    0046a583              lw    a1,4(a3)                               allGrp
204009a0:    fee5eae3              bltu    a1,a4,20400994 <pvPortMalloc+0x108>  allGrp, Branch-Instr, controlFlowGrp
204009a4:    00d3a023              sw    a3,0(t2)                               Branch-Tgt, allGrp
204009a8:    0077a023              sw    t2,0(a5)                               allGrp
	    xFreeBytesRemaining -= pxBlock->xBlockSize;
204009ac:    00060713              mv    a4,a2                                  allGrp
204009b0:    800005b7              lui    a1,0x80000                            Branch-Tgt, allGrp
204009b4:    0005a603              lw    a2,0(a1) # 80000000 <_sp+0xffffc000>   allGrp
204009b8:    40e60633              sub    a2,a2,a4                              allGrp
204009bc:    00c5a023              sw    a2,0(a1)                               allGrp
    pvReturn = dover_tag(pvReturn, xWantedSize - heapSTRUCT_SIZE);
204009c0:    00a305b3              add    a1,t1,a0                              allGrp
204009c4:    00080513              mv    a0,a6                                  allGrp
204009c8:    00000097              auipc    ra,0x0                              allGrp
204009cc:    e10080e7              jalr    -496(ra) # 204007d8 <dover_tag>      Call-Instr, allGrp, controlFlowGrp
204009d0:    00050593              mv    a1,a0                                  Return-Tgt, allGrp
204009d4:    0080006f              j    204009dc <pvPortMalloc+0x150>           allGrp, Branch-Instr, controlFlowGrp
204009d8:    00000593              li    a1,0                                   Branch-Tgt, allGrp
  return pvReturn;
204009dc:    00058513              mv    a0,a1                                  Branch-Tgt, allGrp
204009e0:    00c12083              lw    ra,12(sp)                              allGrp
204009e4:    00012623              sw    zero,12(sp)                            allGrp
204009e8:    01010113              addi    sp,sp,16                             allGrp
204009ec:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204009f0 <__wrap_malloc>:
  return pvPortMalloc(xWantedSize); 
204009f0:    00000317              auipc    t1,0x0                              Call-Tgt, allGrp, Branch-Tgt
204009f4:    e9c30067              jr    -356(t1) # 2040088c <pvPortMalloc>     Call-Instr, allGrp, controlFlowGrp

204009f8 <pvPortFree>:
204009f8:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
void pvPortFree(void *pv) 
204009fc:    00112623              sw    ra,12(sp)                              allGrp
20400a00:    00912423              sw    s1,8(sp)                               allGrp
20400a04:    01212223              sw    s2,4(sp)                               allGrp
  if( pv != NULL )
20400a08:    06050263              beqz    a0,20400a6c <pvPortFree+0x74>        allGrp, Branch-Instr, controlFlowGrp
20400a0c:    00050493              mv    s1,a0                                  Branch-Tgt, allGrp
      puc = ( uint8_t * ) dover_remove_tag(pv);
20400a10:    00000097              auipc    ra,0x0                              allGrp
20400a14:    da0080e7              jalr    -608(ra) # 204007b0 <dover_remove_tag>Call-Instr, allGrp, controlFlowGrp
20400a18:    00050913              mv    s2,a0                                  Return-Tgt, allGrp
      dover_untag(pv, pxLink->xBlockSize - heapSTRUCT_SIZE);
20400a1c:    ffc52503              lw    a0,-4(a0)                              allGrp
20400a20:    ff850593              addi    a1,a0,-8                             allGrp
20400a24:    00048513              mv    a0,s1                                  allGrp
20400a28:    00000097              auipc    ra,0x0                              allGrp
20400a2c:    e34080e7              jalr    -460(ra) # 2040085c <dover_untag>    Call-Instr, allGrp, controlFlowGrp
20400a30:    80001537              lui    a0,0x80001                            Return-Tgt, allGrp
20400a34:    a0450593              addi    a1,a0,-1532 # 80000a04 <_sp+0xffffca04>allGrp
	prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
20400a38:    ffc92503              lw    a0,-4(s2)                              allGrp
20400a3c:    00058613              mv    a2,a1                                  Branch-Tgt, allGrp
20400a40:    0005a583              lw    a1,0(a1)                               allGrp
20400a44:    0045a683              lw    a3,4(a1)                               allGrp
20400a48:    fea6eae3              bltu    a3,a0,20400a3c <pvPortFree+0x44>     allGrp, Branch-Instr, controlFlowGrp
20400a4c:    feb92c23              sw    a1,-8(s2)                              Branch-Tgt, allGrp
      puc -= heapSTRUCT_SIZE;
20400a50:    ff890593              addi    a1,s2,-8                             allGrp
	prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
20400a54:    00b62023              sw    a1,0(a2)                               allGrp
	xFreeBytesRemaining += pxLink->xBlockSize;
20400a58:    800005b7              lui    a1,0x80000                            allGrp
20400a5c:    0005a603              lw    a2,0(a1) # 80000000 <_sp+0xffffc000>   allGrp
20400a60:    00a60533              add    a0,a2,a0                              allGrp
20400a64:    00058593              mv    a1,a1                                  allGrp
20400a68:    00a5a023              sw    a0,0(a1)                               allGrp
}
20400a6c:    00412903              lw    s2,4(sp)                               Branch-Tgt, allGrp
20400a70:    00012223              sw    zero,4(sp)                             allGrp
20400a74:    00812483              lw    s1,8(sp)                               allGrp
20400a78:    00012423              sw    zero,8(sp)                             allGrp
20400a7c:    00c12083              lw    ra,12(sp)                              allGrp
20400a80:    00012623              sw    zero,12(sp)                            allGrp
20400a84:    01010113              addi    sp,sp,16                             allGrp
20400a88:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400a8c <__wrap_free>:
20400a8c:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
void __wrap_free( void *pv ) {
20400a90:    00112623              sw    ra,12(sp)                              allGrp
20400a94:    00912423              sw    s1,8(sp)                               allGrp
20400a98:    01212223              sw    s2,4(sp)                               allGrp
  if( pv != NULL )
20400a9c:    06050263              beqz    a0,20400b00 <__wrap_free+0x74>       allGrp, Branch-Instr, controlFlowGrp
20400aa0:    00050493              mv    s1,a0                                  Branch-Tgt, allGrp
      puc = ( uint8_t * ) dover_remove_tag(pv);
20400aa4:    00000097              auipc    ra,0x0                              allGrp
20400aa8:    d0c080e7              jalr    -756(ra) # 204007b0 <dover_remove_tag>Call-Instr, allGrp, controlFlowGrp
20400aac:    00050913              mv    s2,a0                                  Return-Tgt, allGrp
      dover_untag(pv, pxLink->xBlockSize - heapSTRUCT_SIZE);
20400ab0:    ffc52503              lw    a0,-4(a0)                              allGrp
20400ab4:    ff850593              addi    a1,a0,-8                             allGrp
20400ab8:    00048513              mv    a0,s1                                  allGrp
20400abc:    00000097              auipc    ra,0x0                              allGrp
20400ac0:    da0080e7              jalr    -608(ra) # 2040085c <dover_untag>    Call-Instr, allGrp, controlFlowGrp
20400ac4:    80001537              lui    a0,0x80001                            Return-Tgt, allGrp
20400ac8:    a0450593              addi    a1,a0,-1532 # 80000a04 <_sp+0xffffca04>allGrp
	prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
20400acc:    ffc92503              lw    a0,-4(s2)                              allGrp
20400ad0:    00058613              mv    a2,a1                                  Branch-Tgt, allGrp
20400ad4:    0005a583              lw    a1,0(a1)                               allGrp
20400ad8:    0045a683              lw    a3,4(a1)                               allGrp
20400adc:    fea6eae3              bltu    a3,a0,20400ad0 <__wrap_free+0x44>    allGrp, Branch-Instr, controlFlowGrp
20400ae0:    feb92c23              sw    a1,-8(s2)                              Branch-Tgt, allGrp
      puc -= heapSTRUCT_SIZE;
20400ae4:    ff890593              addi    a1,s2,-8                             allGrp
	prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
20400ae8:    00b62023              sw    a1,0(a2)                               allGrp
	xFreeBytesRemaining += pxLink->xBlockSize;
20400aec:    800005b7              lui    a1,0x80000                            allGrp
20400af0:    0005a603              lw    a2,0(a1) # 80000000 <_sp+0xffffc000>   allGrp
20400af4:    00a60533              add    a0,a2,a0                              allGrp
20400af8:    00058593              mv    a1,a1                                  allGrp
20400afc:    00a5a023              sw    a0,0(a1)                               allGrp
}
20400b00:    00412903              lw    s2,4(sp)                               Branch-Tgt, allGrp
20400b04:    00012223              sw    zero,4(sp)                             allGrp
20400b08:    00812483              lw    s1,8(sp)                               allGrp
20400b0c:    00012423              sw    zero,8(sp)                             allGrp
20400b10:    00c12083              lw    ra,12(sp)                              allGrp
20400b14:    00012623              sw    zero,12(sp)                            allGrp
20400b18:    01010113              addi    sp,sp,16                             allGrp
20400b1c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400b20 <xPortGetFreeHeapSize>:
  return xFreeBytesRemaining;
20400b20:    80000537              lui    a0,0x80000                            Call-Tgt, allGrp, Branch-Tgt
20400b24:    00052503              lw    a0,0(a0) # 80000000 <_sp+0xffffc000>   allGrp
20400b28:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400b2c <vPortInitialiseBlocks>:
}
20400b2c:    00008067              ret                                          Return-Instr, Branch-Tgt, Call-Tgt, allGrp, controlFlowGrp

20400b30 <__wrap_write>:
20400b30:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt

#include "platform.h"
#include "stub.h"
#include "weak_under_alias.h"

ssize_t __wrap_write(int fd, const void* ptr, size_t len)
20400b34:    00112623              sw    ra,12(sp)                              allGrp
20400b38:    00912423              sw    s1,8(sp)                               allGrp
20400b3c:    01212223              sw    s2,4(sp)                               allGrp
20400b40:    00060493              mv    s1,a2                                  allGrp
20400b44:    00058913              mv    s2,a1                                  allGrp
{
  const uint8_t * current = (const char *)ptr;

  if (isatty(fd)) {
20400b48:    00000097              auipc    ra,0x0                              allGrp
20400b4c:    084080e7              jalr    132(ra) # 20400bcc <__wrap_isatty>   Call-Instr, allGrp, controlFlowGrp
20400b50:    04050663              beqz    a0,20400b9c <__wrap_write+0x6c>      Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
    for (size_t jj = 0; jj < len; jj++) {
20400b54:    04048863              beqz    s1,20400ba4 <__wrap_write+0x74>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20400b58:    10013537              lui    a0,0x10013                            Branch-Tgt, allGrp
20400b5c:    00a00593              li    a1,10                                  allGrp
20400b60:    00d00613              li    a2,13                                  allGrp
20400b64:    00000693              li    a3,0                                   allGrp
      while (UART0_REG(UART_REG_TXFIFO) & 0x80000000) ;
20400b68:    00052703              lw    a4,0(a0) # 10013000 <__stack_size+0x10012800>Branch-Tgt, allGrp
20400b6c:    fe074ee3              bltz    a4,20400b68 <__wrap_write+0x38>      allGrp, Branch-Instr, controlFlowGrp
      UART0_REG(UART_REG_TXFIFO) = current[jj];
20400b70:    00d90733              add    a4,s2,a3                              Branch-Tgt, allGrp
20400b74:    00074783              lbu    a5,0(a4)                              allGrp
20400b78:    00f52023              sw    a5,0(a0)                               allGrp

      if (current[jj] == '\n') {
20400b7c:    00074703              lbu    a4,0(a4)                              allGrp
20400b80:    00b71863              bne    a4,a1,20400b90 <__wrap_write+0x60>    allGrp, Branch-Instr, controlFlowGrp
        while (UART0_REG(UART_REG_TXFIFO) & 0x80000000) ;
20400b84:    00052703              lw    a4,0(a0)                               Branch-Tgt, allGrp
20400b88:    fe074ee3              bltz    a4,20400b84 <__wrap_write+0x54>      allGrp, Branch-Instr, controlFlowGrp
        UART0_REG(UART_REG_TXFIFO) = '\r';
20400b8c:    00c52023              sw    a2,0(a0)                               Branch-Tgt, allGrp
    for (size_t jj = 0; jj < len; jj++) {
20400b90:    00168693              addi    a3,a3,1                              Branch-Tgt, allGrp
20400b94:    fc969ae3              bne    a3,s1,20400b68 <__wrap_write+0x38>    allGrp, Branch-Instr, controlFlowGrp
20400b98:    0100006f              j    20400ba8 <__wrap_write+0x78>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20400b9c:    fff00493              li    s1,-1                                  Branch-Tgt, allGrp
20400ba0:    0080006f              j    20400ba8 <__wrap_write+0x78>            allGrp, Branch-Instr, controlFlowGrp
20400ba4:    00000493              li    s1,0                                   Branch-Tgt, allGrp
    }
    return len;
  }

  return _stub(EBADF);
}
20400ba8:    00048513              mv    a0,s1                                  Branch-Tgt, allGrp
20400bac:    00412903              lw    s2,4(sp)                               allGrp
20400bb0:    00012223              sw    zero,4(sp)                             allGrp
20400bb4:    00812483              lw    s1,8(sp)                               allGrp
20400bb8:    00012423              sw    zero,8(sp)                             allGrp
20400bbc:    00c12083              lw    ra,12(sp)                              allGrp
20400bc0:    00012623              sw    zero,12(sp)                            allGrp
20400bc4:    01010113              addi    sp,sp,16                             allGrp
20400bc8:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400bcc <__wrap_isatty>:
#include <unistd.h>
#include "weak_under_alias.h"

int __wrap_isatty(int fd)
{
  if (fd == STDOUT_FILENO || fd == STDERR_FILENO)
20400bcc:    fff50513              addi    a0,a0,-1                             Call-Tgt, allGrp, Branch-Tgt
20400bd0:    00253513              sltiu    a0,a0,2                             allGrp
    return 1;

  return 0;
}
20400bd4:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400bd8 <__wrap_exit>:
20400bd8:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt

#include <unistd.h>
#include "platform.h"
#include "weak_under_alias.h"

void __wrap_exit(int code)
20400bdc:    02112623              sw    ra,44(sp)                              allGrp
20400be0:    02912423              sw    s1,40(sp)                              allGrp
20400be4:    03212223              sw    s2,36(sp)                              allGrp
20400be8:    03312023              sw    s3,32(sp)                              allGrp
20400bec:    00050993              mv    s3,a0                                  allGrp
{
  const char message[] = "\nProgram has exited with code:";
20400bf0:    20412537              lui    a0,0x20412                            allGrp
20400bf4:    50c50593              addi    a1,a0,1292 # 2041250c <_free_r+0x138>allGrp
20400bf8:    00110913              addi    s2,sp,1                              allGrp
20400bfc:    01f00613              li    a2,31                                  allGrp
20400c00:    00090513              mv    a0,s2                                  allGrp
20400c04:    00000097              auipc    ra,0x0                              allGrp
20400c08:    568080e7              jalr    1384(ra) # 2040116c <memcpy>         Call-Instr, allGrp, controlFlowGrp
20400c0c:    00200493              li    s1,2                                   Return-Tgt, allGrp
20400c10:    01e00613              li    a2,30                                  allGrp

  write(STDERR_FILENO, message, sizeof(message) - 1);
20400c14:    00048513              mv    a0,s1                                  allGrp
20400c18:    00090593              mv    a1,s2                                  allGrp
20400c1c:    00000097              auipc    ra,0x0                              allGrp
20400c20:    f14080e7              jalr    -236(ra) # 20400b30 <__wrap_write>   Call-Instr, allGrp, controlFlowGrp
  write_hex(STDERR_FILENO, code);
20400c24:    00048513              mv    a0,s1                                  Return-Tgt, allGrp
20400c28:    00098593              mv    a1,s3                                  allGrp
20400c2c:    00000097              auipc    ra,0x0                              allGrp
20400c30:    074080e7              jalr    116(ra) # 20400ca0 <write_hex>       Call-Instr, allGrp, controlFlowGrp
  write(STDERR_FILENO, "\n", 1);
20400c34:    20412537              lui    a0,0x20412                            Return-Tgt, allGrp
20400c38:    4fe50593              addi    a1,a0,1278 # 204124fe <_free_r+0x12a>allGrp
20400c3c:    00100613              li    a2,1                                   allGrp
20400c40:    00048513              mv    a0,s1                                  allGrp
20400c44:    00000097              auipc    ra,0x0                              allGrp
20400c48:    eec080e7              jalr    -276(ra) # 20400b30 <__wrap_write>   Call-Instr, allGrp, controlFlowGrp

  for (;;);
20400c4c:    0000006f              j    20400c4c <__wrap_exit+0x74>             Return-Tgt, Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

20400c50 <__wrap_puts>:
#include "stub.h"
#include "weak_under_alias.h"

int __wrap_puts(const char *s)
{
  while (*s != '\0') {
20400c50:    00054703              lbu    a4,0(a0)                              Call-Tgt, allGrp, Branch-Tgt
20400c54:    04070263              beqz    a4,20400c98 <__wrap_puts+0x48>       allGrp, Branch-Instr, controlFlowGrp
20400c58:    100135b7              lui    a1,0x10013                            Branch-Tgt, allGrp
20400c5c:    00a00613              li    a2,10                                  allGrp
20400c60:    00d00693              li    a3,13                                  allGrp
20400c64:    00050793              mv    a5,a0                                  Branch-Tgt, allGrp
    while (UART0_REG(UART_REG_TXFIFO) & 0x80000000) ;
20400c68:    0005a503              lw    a0,0(a1) # 10013000 <__stack_size+0x10012800>Branch-Tgt, allGrp
20400c6c:    fe054ee3              bltz    a0,20400c68 <__wrap_puts+0x18>       allGrp, Branch-Instr, controlFlowGrp
    UART0_REG(UART_REG_TXFIFO) = *s;
20400c70:    0ff77513              andi    a0,a4,255                            Branch-Tgt, allGrp
20400c74:    00a5a023              sw    a0,0(a1)                               allGrp

    if (*s == '\n') {
20400c78:    0007c503              lbu    a0,0(a5)                              allGrp
20400c7c:    00c51863              bne    a0,a2,20400c8c <__wrap_puts+0x3c>     allGrp, Branch-Instr, controlFlowGrp
      while (UART0_REG(UART_REG_TXFIFO) & 0x80000000) ;
20400c80:    0005a503              lw    a0,0(a1)                               Branch-Tgt, allGrp
20400c84:    fe054ee3              bltz    a0,20400c80 <__wrap_puts+0x30>       allGrp, Branch-Instr, controlFlowGrp
      UART0_REG(UART_REG_TXFIFO) = '\r';
20400c88:    00d5a023              sw    a3,0(a1)                               Branch-Tgt, allGrp
    }

    ++s;
20400c8c:    00178513              addi    a0,a5,1                              Branch-Tgt, allGrp
  while (*s != '\0') {
20400c90:    0017c703              lbu    a4,1(a5)                              allGrp
20400c94:    fc0718e3              bnez    a4,20400c64 <__wrap_puts+0x14>       allGrp, Branch-Instr, controlFlowGrp
  }

  return 0;
20400c98:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20400c9c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400ca0 <write_hex>:
20400ca0:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt

#include <stdint.h>
#include <unistd.h>
#include "platform.h"

void write_hex(int fd, unsigned long int hex)
20400ca4:    02112623              sw    ra,44(sp)                              allGrp
20400ca8:    02912423              sw    s1,40(sp)                              allGrp
20400cac:    03212223              sw    s2,36(sp)                              allGrp
20400cb0:    03312023              sw    s3,32(sp)                              allGrp
20400cb4:    01412e23              sw    s4,28(sp)                              allGrp
20400cb8:    01512c23              sw    s5,24(sp)                              allGrp
20400cbc:    01612a23              sw    s6,20(sp)                              allGrp
20400cc0:    01712823              sw    s7,16(sp)                              allGrp
20400cc4:    00058493              mv    s1,a1                                  allGrp
20400cc8:    00050913              mv    s2,a0                                  allGrp
{
  uint8_t ii;
  uint8_t jj;
  char towrite;
  write(fd , "0x", 2);
20400ccc:    20412537              lui    a0,0x20412                            allGrp
20400cd0:    52b50593              addi    a1,a0,1323 # 2041252b <_free_r+0x157>allGrp
20400cd4:    00200613              li    a2,2                                   allGrp
20400cd8:    00090513              mv    a0,s2                                  allGrp
20400cdc:    00000097              auipc    ra,0x0                              allGrp
20400ce0:    e54080e7              jalr    -428(ra) # 20400b30 <__wrap_write>   Call-Instr, allGrp, controlFlowGrp
  for (ii = sizeof(unsigned long int) * 2 ; ii > 0; ii--) {
    jj = ii - 1;
    uint8_t digit = ((hex & (0xF << (jj*4))) >> (jj*4));
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400ce4:    01d4d593              srli    a1,s1,0x1d                           Return-Tgt, allGrp
20400ce8:    03700b13              li    s6,55                                  allGrp
20400cec:    03000a93              li    s5,48                                  allGrp
20400cf0:    00500b93              li    s7,5                                   allGrp
20400cf4:    000a8513              mv    a0,s5                                  allGrp
20400cf8:    0175e463              bltu    a1,s7,20400d00 <write_hex+0x60>      allGrp, Branch-Instr, controlFlowGrp
20400cfc:    000b0513              mv    a0,s6                                  Branch-Tgt, allGrp
    uint8_t digit = ((hex & (0xF << (jj*4))) >> (jj*4));
20400d00:    01c4d593              srli    a1,s1,0x1c                           Branch-Tgt, allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400d04:    00b50533              add    a0,a0,a1                              allGrp
20400d08:    00a107a3              sb    a0,15(sp)                              allGrp
20400d0c:    00f10993              addi    s3,sp,15                             allGrp
20400d10:    00100a13              li    s4,1                                   allGrp
    write(fd, &towrite, 1);
20400d14:    00090513              mv    a0,s2                                  allGrp
20400d18:    00098593              mv    a1,s3                                  allGrp
20400d1c:    000a0613              mv    a2,s4                                  allGrp
20400d20:    00000097              auipc    ra,0x0                              allGrp
20400d24:    e10080e7              jalr    -496(ra) # 20400b30 <__wrap_write>   Call-Instr, allGrp, controlFlowGrp
20400d28:    0e000537              lui    a0,0xe000                             Return-Tgt, allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400d2c:    00a4f533              and    a0,s1,a0                              allGrp
20400d30:    01955593              srli    a1,a0,0x19                           allGrp
20400d34:    000a8513              mv    a0,s5                                  allGrp
20400d38:    0175e463              bltu    a1,s7,20400d40 <write_hex+0xa0>      allGrp, Branch-Instr, controlFlowGrp
20400d3c:    000b0513              mv    a0,s6                                  Branch-Tgt, allGrp
    uint8_t digit = ((hex & (0xF << (jj*4))) >> (jj*4));
20400d40:    0184d593              srli    a1,s1,0x18                           Branch-Tgt, allGrp
20400d44:    00f5f593              andi    a1,a1,15                             allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400d48:    00b50533              add    a0,a0,a1                              allGrp
20400d4c:    00a107a3              sb    a0,15(sp)                              allGrp
    write(fd, &towrite, 1);
20400d50:    00090513              mv    a0,s2                                  allGrp
20400d54:    00098593              mv    a1,s3                                  allGrp
20400d58:    000a0613              mv    a2,s4                                  allGrp
20400d5c:    00000097              auipc    ra,0x0                              allGrp
20400d60:    dd4080e7              jalr    -556(ra) # 20400b30 <__wrap_write>   Call-Instr, allGrp, controlFlowGrp
20400d64:    00e00537              lui    a0,0xe00                              Return-Tgt, allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400d68:    00a4f533              and    a0,s1,a0                              allGrp
20400d6c:    01555593              srli    a1,a0,0x15                           allGrp
20400d70:    000a8513              mv    a0,s5                                  allGrp
20400d74:    0175e463              bltu    a1,s7,20400d7c <write_hex+0xdc>      allGrp, Branch-Instr, controlFlowGrp
20400d78:    000b0513              mv    a0,s6                                  Branch-Tgt, allGrp
    uint8_t digit = ((hex & (0xF << (jj*4))) >> (jj*4));
20400d7c:    0144d593              srli    a1,s1,0x14                           Branch-Tgt, allGrp
20400d80:    00f5f593              andi    a1,a1,15                             allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400d84:    00b50533              add    a0,a0,a1                              allGrp
20400d88:    00a107a3              sb    a0,15(sp)                              allGrp
    write(fd, &towrite, 1);
20400d8c:    00090513              mv    a0,s2                                  allGrp
20400d90:    00098593              mv    a1,s3                                  allGrp
20400d94:    000a0613              mv    a2,s4                                  allGrp
20400d98:    00000097              auipc    ra,0x0                              allGrp
20400d9c:    d98080e7              jalr    -616(ra) # 20400b30 <__wrap_write>   Call-Instr, allGrp, controlFlowGrp
20400da0:    000e0537              lui    a0,0xe0                               Return-Tgt, allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400da4:    00a4f533              and    a0,s1,a0                              allGrp
20400da8:    01155593              srli    a1,a0,0x11                           allGrp
20400dac:    000a8513              mv    a0,s5                                  allGrp
20400db0:    0175e463              bltu    a1,s7,20400db8 <write_hex+0x118>     allGrp, Branch-Instr, controlFlowGrp
20400db4:    000b0513              mv    a0,s6                                  Branch-Tgt, allGrp
    uint8_t digit = ((hex & (0xF << (jj*4))) >> (jj*4));
20400db8:    0104d593              srli    a1,s1,0x10                           Branch-Tgt, allGrp
20400dbc:    00f5f593              andi    a1,a1,15                             allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400dc0:    00b50533              add    a0,a0,a1                              allGrp
20400dc4:    00a107a3              sb    a0,15(sp)                              allGrp
    write(fd, &towrite, 1);
20400dc8:    00090513              mv    a0,s2                                  allGrp
20400dcc:    00098593              mv    a1,s3                                  allGrp
20400dd0:    000a0613              mv    a2,s4                                  allGrp
20400dd4:    00000097              auipc    ra,0x0                              allGrp
20400dd8:    d5c080e7              jalr    -676(ra) # 20400b30 <__wrap_write>   Call-Instr, allGrp, controlFlowGrp
20400ddc:    0000e537              lui    a0,0xe                                Return-Tgt, allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400de0:    00a4f533              and    a0,s1,a0                              allGrp
20400de4:    00d55593              srli    a1,a0,0xd                            allGrp
20400de8:    000a8513              mv    a0,s5                                  allGrp
20400dec:    0175e463              bltu    a1,s7,20400df4 <write_hex+0x154>     allGrp, Branch-Instr, controlFlowGrp
20400df0:    000b0513              mv    a0,s6                                  Branch-Tgt, allGrp
    uint8_t digit = ((hex & (0xF << (jj*4))) >> (jj*4));
20400df4:    00c4d593              srli    a1,s1,0xc                            Branch-Tgt, allGrp
20400df8:    00f5f593              andi    a1,a1,15                             allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400dfc:    00b50533              add    a0,a0,a1                              allGrp
20400e00:    00a107a3              sb    a0,15(sp)                              allGrp
    write(fd, &towrite, 1);
20400e04:    00090513              mv    a0,s2                                  allGrp
20400e08:    00098593              mv    a1,s3                                  allGrp
20400e0c:    000a0613              mv    a2,s4                                  allGrp
20400e10:    00000097              auipc    ra,0x0                              allGrp
20400e14:    d20080e7              jalr    -736(ra) # 20400b30 <__wrap_write>   Call-Instr, allGrp, controlFlowGrp
20400e18:    00001537              lui    a0,0x1                                Return-Tgt, allGrp
20400e1c:    e0050513              addi    a0,a0,-512 # e00 <__stack_size+0x600>allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400e20:    00a4f533              and    a0,s1,a0                              allGrp
20400e24:    00955593              srli    a1,a0,0x9                            allGrp
20400e28:    000a8513              mv    a0,s5                                  allGrp
20400e2c:    0175e463              bltu    a1,s7,20400e34 <write_hex+0x194>     allGrp, Branch-Instr, controlFlowGrp
20400e30:    000b0513              mv    a0,s6                                  Branch-Tgt, allGrp
    uint8_t digit = ((hex & (0xF << (jj*4))) >> (jj*4));
20400e34:    0084d593              srli    a1,s1,0x8                            Branch-Tgt, allGrp
20400e38:    00f5f593              andi    a1,a1,15                             allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400e3c:    00b50533              add    a0,a0,a1                              allGrp
20400e40:    00a107a3              sb    a0,15(sp)                              allGrp
    write(fd, &towrite, 1);
20400e44:    00090513              mv    a0,s2                                  allGrp
20400e48:    00098593              mv    a1,s3                                  allGrp
20400e4c:    000a0613              mv    a2,s4                                  allGrp
20400e50:    00000097              auipc    ra,0x0                              allGrp
20400e54:    ce0080e7              jalr    -800(ra) # 20400b30 <__wrap_write>   Call-Instr, allGrp, controlFlowGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400e58:    0e04f593              andi    a1,s1,224                            Return-Tgt, allGrp
20400e5c:    0a000613              li    a2,160                                 allGrp
20400e60:    000a8513              mv    a0,s5                                  allGrp
20400e64:    00c5e463              bltu    a1,a2,20400e6c <write_hex+0x1cc>     allGrp, Branch-Instr, controlFlowGrp
20400e68:    000b0513              mv    a0,s6                                  Branch-Tgt, allGrp
    uint8_t digit = ((hex & (0xF << (jj*4))) >> (jj*4));
20400e6c:    0044d593              srli    a1,s1,0x4                            Branch-Tgt, allGrp
20400e70:    00f5f593              andi    a1,a1,15                             allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400e74:    00b50533              add    a0,a0,a1                              allGrp
20400e78:    00a107a3              sb    a0,15(sp)                              allGrp
    write(fd, &towrite, 1);
20400e7c:    00090513              mv    a0,s2                                  allGrp
20400e80:    00098593              mv    a1,s3                                  allGrp
20400e84:    000a0613              mv    a2,s4                                  allGrp
20400e88:    00000097              auipc    ra,0x0                              allGrp
20400e8c:    ca8080e7              jalr    -856(ra) # 20400b30 <__wrap_write>   Call-Instr, allGrp, controlFlowGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400e90:    00e4f513              andi    a0,s1,14                             Return-Tgt, allGrp
20400e94:    00a00593              li    a1,10                                  allGrp
20400e98:    00b56463              bltu    a0,a1,20400ea0 <write_hex+0x200>     allGrp, Branch-Instr, controlFlowGrp
20400e9c:    000b0a93              mv    s5,s6                                  Branch-Tgt, allGrp
    uint8_t digit = ((hex & (0xF << (jj*4))) >> (jj*4));
20400ea0:    00f4f513              andi    a0,s1,15                             Branch-Tgt, allGrp
    towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
20400ea4:    00aa8533              add    a0,s5,a0                              allGrp
20400ea8:    00a107a3              sb    a0,15(sp)                              allGrp
    write(fd, &towrite, 1);
20400eac:    00090513              mv    a0,s2                                  allGrp
20400eb0:    00098593              mv    a1,s3                                  allGrp
20400eb4:    000a0613              mv    a2,s4                                  allGrp
20400eb8:    00000097              auipc    ra,0x0                              allGrp
20400ebc:    c78080e7              jalr    -904(ra) # 20400b30 <__wrap_write>   Call-Instr, allGrp, controlFlowGrp
  }
}
20400ec0:    01012b83              lw    s7,16(sp)                              Return-Tgt, allGrp
20400ec4:    00012823              sw    zero,16(sp)                            allGrp
20400ec8:    01412b03              lw    s6,20(sp)                              allGrp
20400ecc:    00012a23              sw    zero,20(sp)                            allGrp
20400ed0:    01812a83              lw    s5,24(sp)                              allGrp
20400ed4:    00012c23              sw    zero,24(sp)                            allGrp
20400ed8:    01c12a03              lw    s4,28(sp)                              allGrp
20400edc:    00012e23              sw    zero,28(sp)                            allGrp
20400ee0:    02012983              lw    s3,32(sp)                              allGrp
20400ee4:    02012023              sw    zero,32(sp)                            allGrp
20400ee8:    02412903              lw    s2,36(sp)                              allGrp
20400eec:    02012223              sw    zero,36(sp)                            allGrp
20400ef0:    02812483              lw    s1,40(sp)                              allGrp
20400ef4:    02012423              sw    zero,40(sp)                            allGrp
20400ef8:    02c12083              lw    ra,44(sp)                              allGrp
20400efc:    02012623              sw    zero,44(sp)                            allGrp
20400f00:    03010113              addi    sp,sp,48                             allGrp
20400f04:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400f08 <atexit>:
20400f08:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
20400f0c:    00112e23              sw    ra,28(sp)                              allGrp
20400f10:    00812c23              sw    s0,24(sp)                              allGrp
20400f14:    02010413              addi    s0,sp,32                             allGrp
20400f18:    00050593              mv    a1,a0                                  allGrp
20400f1c:    fea42a23              sw    a0,-12(s0)                             allGrp
int
_DEFUN (atexit,
	(fn),
	_VOID _EXFNPTR(fn, (_VOID)))
{
  return __register_exitproc (__et_atexit, fn, NULL, NULL);
20400f20:    ff442503              lw    a0,-12(s0)                             allGrp
20400f24:    00000613              li    a2,0                                   allGrp
20400f28:    fea42823              sw    a0,-16(s0)                             allGrp
20400f2c:    00060513              mv    a0,a2                                  allGrp
20400f30:    ff042683              lw    a3,-16(s0)                             allGrp
20400f34:    feb42623              sw    a1,-20(s0)                             allGrp
20400f38:    00068593              mv    a1,a3                                  allGrp
20400f3c:    fec42423              sw    a2,-24(s0)                             allGrp
20400f40:    fe842683              lw    a3,-24(s0)                             allGrp
20400f44:    00000097              auipc    ra,0x0                              allGrp
20400f48:    7c8080e7              jalr    1992(ra) # 2040170c <__register_exitproc>Call-Instr, allGrp, controlFlowGrp
20400f4c:    01812403              lw    s0,24(sp)                              Return-Tgt, allGrp
20400f50:    00012c23              sw    zero,24(sp)                            allGrp
20400f54:    01c12083              lw    ra,28(sp)                              allGrp
20400f58:    00012e23              sw    zero,28(sp)                            allGrp
20400f5c:    02010113              addi    sp,sp,32                             allGrp
20400f60:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20400f64 <exit>:
20400f64:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
20400f68:    00112e23              sw    ra,28(sp)                              allGrp
20400f6c:    00812c23              sw    s0,24(sp)                              allGrp
20400f70:    02010413              addi    s0,sp,32                             allGrp
20400f74:    00050593              mv    a1,a0                                  allGrp
20400f78:    fea42a23              sw    a0,-12(s0)                             allGrp
#ifdef _LITE_EXIT
  /* Refer to comments in __atexit.c for more details of lite exit.  */
  void __call_exitprocs _PARAMS ((int, _PTR)) __attribute__((weak));
  if (__call_exitprocs)
#endif
    __call_exitprocs (code, NULL);
20400f7c:    ff442503              lw    a0,-12(s0)                             allGrp
20400f80:    00000613              li    a2,0                                   allGrp
20400f84:    feb42823              sw    a1,-16(s0)                             allGrp
20400f88:    00060593              mv    a1,a2                                  allGrp
20400f8c:    fec42623              sw    a2,-20(s0)                             allGrp
20400f90:    00001097              auipc    ra,0x1                              allGrp
20400f94:    910080e7              jalr    -1776(ra) # 204018a0 <__call_exitprocs>Call-Instr, allGrp, controlFlowGrp

  if (_GLOBAL_REENT->__cleanup)
20400f98:    20412537              lui    a0,0x20412                            Return-Tgt, allGrp
20400f9c:    53052503              lw    a0,1328(a0) # 20412530 <_global_impure_ptr>allGrp
20400fa0:    03c52503              lw    a0,60(a0)                              allGrp
20400fa4:    fec42583              lw    a1,-20(s0)                             allGrp
20400fa8:    02b50063              beq    a0,a1,20400fc8 <exit+0x64>            allGrp, Branch-Instr, controlFlowGrp
20400fac:    0040006f              j    20400fb0 <exit+0x4c>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    (*_GLOBAL_REENT->__cleanup) (_GLOBAL_REENT);
20400fb0:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
20400fb4:    53052583              lw    a1,1328(a0) # 20412530 <_global_impure_ptr>allGrp
20400fb8:    03c5a583              lw    a1,60(a1)                              allGrp
20400fbc:    53052503              lw    a0,1328(a0)                            allGrp
20400fc0:    000580e7              jalr    a1                                   Call-Instr, allGrp, controlFlowGrp
20400fc4:    0040006f              j    20400fc8 <exit+0x64>                    Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
  _exit (code);
20400fc8:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20400fcc:    00000097              auipc    ra,0x0                              allGrp
20400fd0:    c0c080e7              jalr    -1012(ra) # 20400bd8 <__wrap_exit>   Call-Instr, allGrp, controlFlowGrp

20400fd4 <__libc_fini_array>:
20400fd4:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
__libc_fini_array (void)
{
  size_t count;
  size_t i;
  
  count = __fini_array_end - __fini_array_start;
20400fd8:    00112623              sw    ra,12(sp)                              allGrp
20400fdc:    00812423              sw    s0,8(sp)                               allGrp
20400fe0:    01010413              addi    s0,sp,16                             allGrp
20400fe4:    20413537              lui    a0,0x20413                            allGrp
20400fe8:    9c050513              addi    a0,a0,-1600 # 204129c0 <__fini_array_end>allGrp
20400fec:    204135b7              lui    a1,0x20413                            allGrp
20400ff0:    9c058593              addi    a1,a1,-1600 # 204129c0 <__fini_array_end>allGrp
20400ff4:    40a58533              sub    a0,a1,a0                              allGrp
20400ff8:    40255513              srai    a0,a0,0x2                            allGrp
20400ffc:    fea42a23              sw    a0,-12(s0)                             allGrp
  for (i = count; i > 0; i--)
20401000:    ff442503              lw    a0,-12(s0)                             allGrp
20401004:    fea42823              sw    a0,-16(s0)                             allGrp
20401008:    0040006f              j    2040100c <__libc_fini_array+0x38>       allGrp, Branch-Instr, controlFlowGrp
2040100c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20401010:    00000593              li    a1,0                                   allGrp
20401014:    02b50c63              beq    a0,a1,2040104c <__libc_fini_array+0x78>allGrp, Branch-Instr, controlFlowGrp
20401018:    0040006f              j    2040101c <__libc_fini_array+0x48>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    __fini_array_start[i-1] ();
2040101c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20401020:    00251513              slli    a0,a0,0x2                            allGrp
20401024:    204135b7              lui    a1,0x20413                            allGrp
20401028:    9c058593              addi    a1,a1,-1600 # 204129c0 <__fini_array_end>allGrp
2040102c:    00b50533              add    a0,a0,a1                              allGrp
20401030:    ffc52503              lw    a0,-4(a0)                              allGrp
20401034:    000500e7              jalr    a0                                   Call-Instr, allGrp, controlFlowGrp
20401038:    0040006f              j    2040103c <__libc_fini_array+0x68>       Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
  for (i = count; i > 0; i--)
2040103c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20401040:    fff50513              addi    a0,a0,-1                             allGrp
20401044:    fea42823              sw    a0,-16(s0)                             allGrp
20401048:    fc5ff06f              j    2040100c <__libc_fini_array+0x38>       allGrp, Branch-Instr, controlFlowGrp

  _fini ();
2040104c:    fffff097              auipc    ra,0xfffff                          Branch-Tgt, allGrp
20401050:    4d4080e7              jalr    1236(ra) # 20400520 <_fini>          Call-Instr, allGrp, controlFlowGrp
}
20401054:    00812403              lw    s0,8(sp)                               Return-Tgt, allGrp
20401058:    00012423              sw    zero,8(sp)                             allGrp
2040105c:    00c12083              lw    ra,12(sp)                              allGrp
20401060:    00012623              sw    zero,12(sp)                            allGrp
20401064:    01010113              addi    sp,sp,16                             allGrp
20401068:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040106c <__libc_init_array>:
2040106c:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
__libc_init_array (void)
{
  size_t count;
  size_t i;

  count = __preinit_array_end - __preinit_array_start;
20401070:    00112623              sw    ra,12(sp)                              allGrp
20401074:    00812423              sw    s0,8(sp)                               allGrp
20401078:    01010413              addi    s0,sp,16                             allGrp
2040107c:    20413537              lui    a0,0x20413                            allGrp
20401080:    9c050513              addi    a0,a0,-1600 # 204129c0 <__fini_array_end>allGrp
20401084:    204135b7              lui    a1,0x20413                            allGrp
20401088:    9c058593              addi    a1,a1,-1600 # 204129c0 <__fini_array_end>allGrp
2040108c:    40a58533              sub    a0,a1,a0                              allGrp
20401090:    40255513              srai    a0,a0,0x2                            allGrp
20401094:    fea42a23              sw    a0,-12(s0)                             allGrp
20401098:    00000513              li    a0,0                                   allGrp
  for (i = 0; i < count; i++)
2040109c:    fea42823              sw    a0,-16(s0)                             allGrp
204010a0:    0040006f              j    204010a4 <__libc_init_array+0x38>       allGrp, Branch-Instr, controlFlowGrp
204010a4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204010a8:    ff442583              lw    a1,-12(s0)                             allGrp
204010ac:    02b57c63              bleu    a1,a0,204010e4 <__libc_init_array+0x78>allGrp, Branch-Instr, controlFlowGrp
204010b0:    0040006f              j    204010b4 <__libc_init_array+0x48>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    __preinit_array_start[i] ();
204010b4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204010b8:    204135b7              lui    a1,0x20413                            allGrp
204010bc:    9c058593              addi    a1,a1,-1600 # 204129c0 <__fini_array_end>allGrp
204010c0:    00251513              slli    a0,a0,0x2                            allGrp
204010c4:    00b50533              add    a0,a0,a1                              allGrp
204010c8:    00052503              lw    a0,0(a0)                               allGrp
204010cc:    000500e7              jalr    a0                                   Call-Instr, allGrp, controlFlowGrp
204010d0:    0040006f              j    204010d4 <__libc_init_array+0x68>       Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
  for (i = 0; i < count; i++)
204010d4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204010d8:    00150513              addi    a0,a0,1                              allGrp
204010dc:    fea42823              sw    a0,-16(s0)                             allGrp
204010e0:    fc5ff06f              j    204010a4 <__libc_init_array+0x38>       allGrp, Branch-Instr, controlFlowGrp

  _init ();
204010e4:    fffff097              auipc    ra,0xfffff                          Branch-Tgt, allGrp
204010e8:    2a8080e7              jalr    680(ra) # 2040038c <_init>           Call-Instr, allGrp, controlFlowGrp

  count = __init_array_end - __init_array_start;
204010ec:    20413537              lui    a0,0x20413                            Return-Tgt, allGrp
204010f0:    9c050513              addi    a0,a0,-1600 # 204129c0 <__fini_array_end>allGrp
204010f4:    204135b7              lui    a1,0x20413                            allGrp
204010f8:    9c058593              addi    a1,a1,-1600 # 204129c0 <__fini_array_end>allGrp
204010fc:    40a58533              sub    a0,a1,a0                              allGrp
20401100:    40255513              srai    a0,a0,0x2                            allGrp
20401104:    fea42a23              sw    a0,-12(s0)                             allGrp
20401108:    00000513              li    a0,0                                   allGrp
  for (i = 0; i < count; i++)
2040110c:    fea42823              sw    a0,-16(s0)                             allGrp
20401110:    0040006f              j    20401114 <__libc_init_array+0xa8>       allGrp, Branch-Instr, controlFlowGrp
20401114:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20401118:    ff442583              lw    a1,-12(s0)                             allGrp
2040111c:    02b57c63              bleu    a1,a0,20401154 <__libc_init_array+0xe8>allGrp, Branch-Instr, controlFlowGrp
20401120:    0040006f              j    20401124 <__libc_init_array+0xb8>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    __init_array_start[i] ();
20401124:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20401128:    204135b7              lui    a1,0x20413                            allGrp
2040112c:    9c058593              addi    a1,a1,-1600 # 204129c0 <__fini_array_end>allGrp
20401130:    00251513              slli    a0,a0,0x2                            allGrp
20401134:    00b50533              add    a0,a0,a1                              allGrp
20401138:    00052503              lw    a0,0(a0)                               allGrp
2040113c:    000500e7              jalr    a0                                   Call-Instr, allGrp, controlFlowGrp
20401140:    0040006f              j    20401144 <__libc_init_array+0xd8>       Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
  for (i = 0; i < count; i++)
20401144:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20401148:    00150513              addi    a0,a0,1                              allGrp
2040114c:    fea42823              sw    a0,-16(s0)                             allGrp
20401150:    fc5ff06f              j    20401114 <__libc_init_array+0xa8>       allGrp, Branch-Instr, controlFlowGrp
}
20401154:    00812403              lw    s0,8(sp)                               Branch-Tgt, allGrp
20401158:    00012423              sw    zero,8(sp)                             allGrp
2040115c:    00c12083              lw    ra,12(sp)                              allGrp
20401160:    00012623              sw    zero,12(sp)                            allGrp
20401164:    01010113              addi    sp,sp,16                             allGrp
20401168:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040116c <memcpy>:
2040116c:    f9010113              addi    sp,sp,-112                           Call-Tgt, allGrp, Branch-Tgt
20401170:    06112623              sw    ra,108(sp)                             allGrp
20401174:    06812423              sw    s0,104(sp)                             allGrp
20401178:    07010413              addi    s0,sp,112                            allGrp
2040117c:    00060693              mv    a3,a2                                  allGrp
20401180:    00058713              mv    a4,a1                                  allGrp
20401184:    00050793              mv    a5,a0                                  allGrp
20401188:    fea42823              sw    a0,-16(s0)                             allGrp
2040118c:    feb42623              sw    a1,-20(s0)                             allGrp
20401190:    fec42423              sw    a2,-24(s0)                             allGrp
    t tt = *b; \
    a++, b++; \
    *(a-1) = tt; \
  }

  char* a = (char*)aa;
20401194:    ff042503              lw    a0,-16(s0)                             allGrp
20401198:    fea42223              sw    a0,-28(s0)                             allGrp
  const char* b = (const char*)bb;
2040119c:    fec42503              lw    a0,-20(s0)                             allGrp
204011a0:    fea42023              sw    a0,-32(s0)                             allGrp
  char* end = a+n;
204011a4:    fe442503              lw    a0,-28(s0)                             allGrp
204011a8:    fe842583              lw    a1,-24(s0)                             allGrp
204011ac:    00b50533              add    a0,a0,a1                              allGrp
204011b0:    fca42e23              sw    a0,-36(s0)                             allGrp
204011b4:    00300513              li    a0,3                                   allGrp
  uintptr_t msk = sizeof(long)-1;
204011b8:    fca42c23              sw    a0,-40(s0)                             allGrp
  if (__builtin_expect(((uintptr_t)a & msk) != ((uintptr_t)b & msk) || n < sizeof(long), 0))
204011bc:    fe442503              lw    a0,-28(s0)                             allGrp
204011c0:    fd842583              lw    a1,-40(s0)                             allGrp
204011c4:    00b57533              and    a0,a0,a1                              allGrp
204011c8:    fe042583              lw    a1,-32(s0)                             allGrp
204011cc:    fd842603              lw    a2,-40(s0)                             allGrp
204011d0:    00c5f5b3              and    a1,a1,a2                              allGrp
204011d4:    00100613              li    a2,1                                   allGrp
204011d8:    f8d42e23              sw    a3,-100(s0)                            allGrp
204011dc:    f8e42c23              sw    a4,-104(s0)                            allGrp
204011e0:    f8f42a23              sw    a5,-108(s0)                            allGrp
204011e4:    f8c42823              sw    a2,-112(s0)                            allGrp
204011e8:    00b51c63              bne    a0,a1,20401200 <memcpy+0x94>          allGrp, Branch-Instr, controlFlowGrp
204011ec:    0040006f              j    204011f0 <memcpy+0x84>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204011f0:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
204011f4:    00453513              sltiu    a0,a0,4                             allGrp
204011f8:    f8a42823              sw    a0,-112(s0)                            allGrp
204011fc:    0040006f              j    20401200 <memcpy+0x94>                  allGrp, Branch-Instr, controlFlowGrp
20401200:    f9042503              lw    a0,-112(s0)                            Branch-Tgt, allGrp
20401204:    00157513              andi    a0,a0,1                              allGrp
20401208:    00000593              li    a1,0                                   allGrp
2040120c:    06b50a63              beq    a0,a1,20401280 <memcpy+0x114>         allGrp, Branch-Instr, controlFlowGrp
20401210:    0040006f              j    20401214 <memcpy+0xa8>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  {
20401214:    0040006f              j    20401218 <memcpy+0xac>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
small:
    if (__builtin_expect(a < end, 1))
20401218:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040121c:    fdc42583              lw    a1,-36(s0)                             allGrp
20401220:    04b57a63              bleu    a1,a0,20401274 <memcpy+0x108>        allGrp, Branch-Instr, controlFlowGrp
20401224:    0040006f              j    20401228 <memcpy+0xbc>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      while (a < end)
20401228:    0040006f              j    2040122c <memcpy+0xc0>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040122c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20401230:    fdc42583              lw    a1,-36(s0)                             allGrp
20401234:    02b57e63              bleu    a1,a0,20401270 <memcpy+0x104>        allGrp, Branch-Instr, controlFlowGrp
20401238:    0040006f              j    2040123c <memcpy+0xd0>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        BODY(a, b, char);
2040123c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20401240:    00050503              lb    a0,0(a0)                               allGrp
20401244:    fca40ba3              sb    a0,-41(s0)                             allGrp
20401248:    fe442503              lw    a0,-28(s0)                             allGrp
2040124c:    00150513              addi    a0,a0,1                              allGrp
20401250:    fea42223              sw    a0,-28(s0)                             allGrp
20401254:    fe042503              lw    a0,-32(s0)                             allGrp
20401258:    00150513              addi    a0,a0,1                              allGrp
2040125c:    fea42023              sw    a0,-32(s0)                             allGrp
20401260:    fd740503              lb    a0,-41(s0)                             allGrp
20401264:    fe442583              lw    a1,-28(s0)                             allGrp
20401268:    fea58fa3              sb    a0,-1(a1)                              allGrp
      while (a < end)
2040126c:    fc1ff06f              j    2040122c <memcpy+0xc0>                  allGrp, Branch-Instr, controlFlowGrp
20401270:    0040006f              j    20401274 <memcpy+0x108>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return aa;
20401274:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20401278:    fea42a23              sw    a0,-12(s0)                             allGrp
2040127c:    2a80006f              j    20401524 <memcpy+0x3b8>                 allGrp, Branch-Instr, controlFlowGrp
  }

  if (__builtin_expect(((uintptr_t)a & msk) != 0, 0))
20401280:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20401284:    fd842583              lw    a1,-40(s0)                             allGrp
20401288:    00b57533              and    a0,a0,a1                              allGrp
2040128c:    00000593              li    a1,0                                   allGrp
20401290:    04b50e63              beq    a0,a1,204012ec <memcpy+0x180>         allGrp, Branch-Instr, controlFlowGrp
20401294:    0040006f              j    20401298 <memcpy+0x12c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    while ((uintptr_t)a & msk)
20401298:    0040006f              j    2040129c <memcpy+0x130>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040129c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204012a0:    fd842583              lw    a1,-40(s0)                             allGrp
204012a4:    00b57533              and    a0,a0,a1                              allGrp
204012a8:    00000593              li    a1,0                                   allGrp
204012ac:    02b50e63              beq    a0,a1,204012e8 <memcpy+0x17c>         allGrp, Branch-Instr, controlFlowGrp
204012b0:    0040006f              j    204012b4 <memcpy+0x148>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      BODY(a, b, char);
204012b4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
204012b8:    00050503              lb    a0,0(a0)                               allGrp
204012bc:    fca40b23              sb    a0,-42(s0)                             allGrp
204012c0:    fe442503              lw    a0,-28(s0)                             allGrp
204012c4:    00150513              addi    a0,a0,1                              allGrp
204012c8:    fea42223              sw    a0,-28(s0)                             allGrp
204012cc:    fe042503              lw    a0,-32(s0)                             allGrp
204012d0:    00150513              addi    a0,a0,1                              allGrp
204012d4:    fea42023              sw    a0,-32(s0)                             allGrp
204012d8:    fd640503              lb    a0,-42(s0)                             allGrp
204012dc:    fe442583              lw    a1,-28(s0)                             allGrp
204012e0:    fea58fa3              sb    a0,-1(a1)                              allGrp
    while ((uintptr_t)a & msk)
204012e4:    fb9ff06f              j    2040129c <memcpy+0x130>                 allGrp, Branch-Instr, controlFlowGrp
204012e8:    0040006f              j    204012ec <memcpy+0x180>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

  long* la = (long*)a;
204012ec:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204012f0:    fca42823              sw    a0,-48(s0)                             allGrp
  const long* lb = (const long*)b;
204012f4:    fe042503              lw    a0,-32(s0)                             allGrp
204012f8:    fca42623              sw    a0,-52(s0)                             allGrp
  long* lend = (long*)((uintptr_t)end & ~msk);
204012fc:    fdc42503              lw    a0,-36(s0)                             allGrp
20401300:    fd842583              lw    a1,-40(s0)                             allGrp
20401304:    fff5c593              not    a1,a1                                 allGrp
20401308:    00b57533              and    a0,a0,a1                              allGrp
2040130c:    fca42423              sw    a0,-56(s0)                             allGrp

  if (__builtin_expect(la < lend-8, 0))
20401310:    fd042503              lw    a0,-48(s0)                             allGrp
20401314:    fc842583              lw    a1,-56(s0)                             allGrp
20401318:    fe058593              addi    a1,a1,-32                            allGrp
2040131c:    18b57863              bleu    a1,a0,204014ac <memcpy+0x340>        allGrp, Branch-Instr, controlFlowGrp
20401320:    0040006f              j    20401324 <memcpy+0x1b8>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  {
    while (la < lend-8)
20401324:    0040006f              j    20401328 <memcpy+0x1bc>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401328:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040132c:    fc842583              lw    a1,-56(s0)                             allGrp
20401330:    fe058593              addi    a1,a1,-32                            allGrp
20401334:    16b57a63              bleu    a1,a0,204014a8 <memcpy+0x33c>        allGrp, Branch-Instr, controlFlowGrp
20401338:    0040006f              j    2040133c <memcpy+0x1d0>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      long b0 = *lb++;
2040133c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20401340:    00450593              addi    a1,a0,4                              allGrp
20401344:    fcb42623              sw    a1,-52(s0)                             allGrp
20401348:    00052503              lw    a0,0(a0)                               allGrp
2040134c:    fca42223              sw    a0,-60(s0)                             allGrp
      long b1 = *lb++;
20401350:    fcc42503              lw    a0,-52(s0)                             allGrp
20401354:    00450593              addi    a1,a0,4                              allGrp
20401358:    fcb42623              sw    a1,-52(s0)                             allGrp
2040135c:    00052503              lw    a0,0(a0)                               allGrp
20401360:    fca42023              sw    a0,-64(s0)                             allGrp
      long b2 = *lb++;
20401364:    fcc42503              lw    a0,-52(s0)                             allGrp
20401368:    00450593              addi    a1,a0,4                              allGrp
2040136c:    fcb42623              sw    a1,-52(s0)                             allGrp
20401370:    00052503              lw    a0,0(a0)                               allGrp
20401374:    faa42e23              sw    a0,-68(s0)                             allGrp
      long b3 = *lb++;
20401378:    fcc42503              lw    a0,-52(s0)                             allGrp
2040137c:    00450593              addi    a1,a0,4                              allGrp
20401380:    fcb42623              sw    a1,-52(s0)                             allGrp
20401384:    00052503              lw    a0,0(a0)                               allGrp
20401388:    faa42c23              sw    a0,-72(s0)                             allGrp
      long b4 = *lb++;
2040138c:    fcc42503              lw    a0,-52(s0)                             allGrp
20401390:    00450593              addi    a1,a0,4                              allGrp
20401394:    fcb42623              sw    a1,-52(s0)                             allGrp
20401398:    00052503              lw    a0,0(a0)                               allGrp
2040139c:    faa42a23              sw    a0,-76(s0)                             allGrp
      long b5 = *lb++;
204013a0:    fcc42503              lw    a0,-52(s0)                             allGrp
204013a4:    00450593              addi    a1,a0,4                              allGrp
204013a8:    fcb42623              sw    a1,-52(s0)                             allGrp
204013ac:    00052503              lw    a0,0(a0)                               allGrp
204013b0:    faa42823              sw    a0,-80(s0)                             allGrp
      long b6 = *lb++;
204013b4:    fcc42503              lw    a0,-52(s0)                             allGrp
204013b8:    00450593              addi    a1,a0,4                              allGrp
204013bc:    fcb42623              sw    a1,-52(s0)                             allGrp
204013c0:    00052503              lw    a0,0(a0)                               allGrp
204013c4:    faa42623              sw    a0,-84(s0)                             allGrp
      long b7 = *lb++;
204013c8:    fcc42503              lw    a0,-52(s0)                             allGrp
204013cc:    00450593              addi    a1,a0,4                              allGrp
204013d0:    fcb42623              sw    a1,-52(s0)                             allGrp
204013d4:    00052503              lw    a0,0(a0)                               allGrp
204013d8:    faa42423              sw    a0,-88(s0)                             allGrp
      long b8 = *lb++;
204013dc:    fcc42503              lw    a0,-52(s0)                             allGrp
204013e0:    00450593              addi    a1,a0,4                              allGrp
204013e4:    fcb42623              sw    a1,-52(s0)                             allGrp
204013e8:    00052503              lw    a0,0(a0)                               allGrp
204013ec:    faa42223              sw    a0,-92(s0)                             allGrp
      *la++ = b0;
204013f0:    fc442503              lw    a0,-60(s0)                             allGrp
204013f4:    fd042583              lw    a1,-48(s0)                             allGrp
204013f8:    00458613              addi    a2,a1,4                              allGrp
204013fc:    fcc42823              sw    a2,-48(s0)                             allGrp
20401400:    00a5a023              sw    a0,0(a1)                               allGrp
      *la++ = b1;
20401404:    fc042503              lw    a0,-64(s0)                             allGrp
20401408:    fd042583              lw    a1,-48(s0)                             allGrp
2040140c:    00458613              addi    a2,a1,4                              allGrp
20401410:    fcc42823              sw    a2,-48(s0)                             allGrp
20401414:    00a5a023              sw    a0,0(a1)                               allGrp
      *la++ = b2;
20401418:    fbc42503              lw    a0,-68(s0)                             allGrp
2040141c:    fd042583              lw    a1,-48(s0)                             allGrp
20401420:    00458613              addi    a2,a1,4                              allGrp
20401424:    fcc42823              sw    a2,-48(s0)                             allGrp
20401428:    00a5a023              sw    a0,0(a1)                               allGrp
      *la++ = b3;
2040142c:    fb842503              lw    a0,-72(s0)                             allGrp
20401430:    fd042583              lw    a1,-48(s0)                             allGrp
20401434:    00458613              addi    a2,a1,4                              allGrp
20401438:    fcc42823              sw    a2,-48(s0)                             allGrp
2040143c:    00a5a023              sw    a0,0(a1)                               allGrp
      *la++ = b4;
20401440:    fb442503              lw    a0,-76(s0)                             allGrp
20401444:    fd042583              lw    a1,-48(s0)                             allGrp
20401448:    00458613              addi    a2,a1,4                              allGrp
2040144c:    fcc42823              sw    a2,-48(s0)                             allGrp
20401450:    00a5a023              sw    a0,0(a1)                               allGrp
      *la++ = b5;
20401454:    fb042503              lw    a0,-80(s0)                             allGrp
20401458:    fd042583              lw    a1,-48(s0)                             allGrp
2040145c:    00458613              addi    a2,a1,4                              allGrp
20401460:    fcc42823              sw    a2,-48(s0)                             allGrp
20401464:    00a5a023              sw    a0,0(a1)                               allGrp
      *la++ = b6;
20401468:    fac42503              lw    a0,-84(s0)                             allGrp
2040146c:    fd042583              lw    a1,-48(s0)                             allGrp
20401470:    00458613              addi    a2,a1,4                              allGrp
20401474:    fcc42823              sw    a2,-48(s0)                             allGrp
20401478:    00a5a023              sw    a0,0(a1)                               allGrp
      *la++ = b7;
2040147c:    fa842503              lw    a0,-88(s0)                             allGrp
20401480:    fd042583              lw    a1,-48(s0)                             allGrp
20401484:    00458613              addi    a2,a1,4                              allGrp
20401488:    fcc42823              sw    a2,-48(s0)                             allGrp
2040148c:    00a5a023              sw    a0,0(a1)                               allGrp
      *la++ = b8;
20401490:    fa442503              lw    a0,-92(s0)                             allGrp
20401494:    fd042583              lw    a1,-48(s0)                             allGrp
20401498:    00458613              addi    a2,a1,4                              allGrp
2040149c:    fcc42823              sw    a2,-48(s0)                             allGrp
204014a0:    00a5a023              sw    a0,0(a1)                               allGrp
    while (la < lend-8)
204014a4:    e85ff06f              j    20401328 <memcpy+0x1bc>                 allGrp, Branch-Instr, controlFlowGrp
    }
  }
204014a8:    0040006f              j    204014ac <memcpy+0x340>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

  while (la < lend)
204014ac:    0040006f              j    204014b0 <memcpy+0x344>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204014b0:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
204014b4:    fc842583              lw    a1,-56(s0)                             allGrp
204014b8:    02b57e63              bleu    a1,a0,204014f4 <memcpy+0x388>        allGrp, Branch-Instr, controlFlowGrp
204014bc:    0040006f              j    204014c0 <memcpy+0x354>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    BODY(la, lb, long);
204014c0:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
204014c4:    00052503              lw    a0,0(a0)                               allGrp
204014c8:    faa42023              sw    a0,-96(s0)                             allGrp
204014cc:    fd042503              lw    a0,-48(s0)                             allGrp
204014d0:    00450513              addi    a0,a0,4                              allGrp
204014d4:    fca42823              sw    a0,-48(s0)                             allGrp
204014d8:    fcc42503              lw    a0,-52(s0)                             allGrp
204014dc:    00450513              addi    a0,a0,4                              allGrp
204014e0:    fca42623              sw    a0,-52(s0)                             allGrp
204014e4:    fa042503              lw    a0,-96(s0)                             allGrp
204014e8:    fd042583              lw    a1,-48(s0)                             allGrp
204014ec:    fea5ae23              sw    a0,-4(a1)                              allGrp
  while (la < lend)
204014f0:    fc1ff06f              j    204014b0 <memcpy+0x344>                 allGrp, Branch-Instr, controlFlowGrp

  a = (char*)la;
204014f4:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
204014f8:    fea42223              sw    a0,-28(s0)                             allGrp
  b = (const char*)lb;
204014fc:    fcc42503              lw    a0,-52(s0)                             allGrp
20401500:    fea42023              sw    a0,-32(s0)                             allGrp
  if (__builtin_expect(a < end, 0))
20401504:    fe442503              lw    a0,-28(s0)                             allGrp
20401508:    fdc42583              lw    a1,-36(s0)                             allGrp
2040150c:    00b57663              bleu    a1,a0,20401518 <memcpy+0x3ac>        allGrp, Branch-Instr, controlFlowGrp
20401510:    0040006f              j    20401514 <memcpy+0x3a8>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    goto small;
20401514:    d05ff06f              j    20401218 <memcpy+0xac>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  return aa;
20401518:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040151c:    fea42a23              sw    a0,-12(s0)                             allGrp
20401520:    0040006f              j    20401524 <memcpy+0x3b8>                 allGrp, Branch-Instr, controlFlowGrp
}
20401524:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20401528:    06812403              lw    s0,104(sp)                             allGrp
2040152c:    06012423              sw    zero,104(sp)                           allGrp
20401530:    06c12083              lw    ra,108(sp)                             allGrp
20401534:    06012623              sw    zero,108(sp)                           allGrp
20401538:    07010113              addi    sp,sp,112                            allGrp
2040153c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20401540 <vsnprintf>:
20401540:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
20401544:    02112623              sw    ra,44(sp)                              allGrp
20401548:    02812423              sw    s0,40(sp)                              allGrp
2040154c:    03010413              addi    s0,sp,48                             allGrp
20401550:    00068713              mv    a4,a3                                  allGrp
20401554:    00060793              mv    a5,a2                                  allGrp
20401558:    00058813              mv    a6,a1                                  allGrp
2040155c:    00050893              mv    a7,a0                                  allGrp
20401560:    fea42a23              sw    a0,-12(s0)                             allGrp
20401564:    feb42823              sw    a1,-16(s0)                             allGrp
20401568:    fec42623              sw    a2,-20(s0)                             allGrp
2040156c:    fed42423              sw    a3,-24(s0)                             allGrp
       char *__restrict str        _AND
       size_t size      _AND
       const char *__restrict fmt _AND
       va_list ap)
{
  return _vsnprintf_r (_REENT, str, size, fmt, ap);
20401570:    80000537              lui    a0,0x80000                            allGrp
20401574:    43052503              lw    a0,1072(a0) # 80000430 <_sp+0xffffc430>allGrp
20401578:    ff442583              lw    a1,-12(s0)                             allGrp
2040157c:    ff042603              lw    a2,-16(s0)                             allGrp
20401580:    fec42683              lw    a3,-20(s0)                             allGrp
20401584:    fe842283              lw    t0,-24(s0)                             allGrp
20401588:    fee42223              sw    a4,-28(s0)                             allGrp
2040158c:    00028713              mv    a4,t0                                  allGrp
20401590:    ff142023              sw    a7,-32(s0)                             allGrp
20401594:    fcf42e23              sw    a5,-36(s0)                             allGrp
20401598:    fd042c23              sw    a6,-40(s0)                             allGrp
2040159c:    00000097              auipc    ra,0x0                              allGrp
204015a0:    020080e7              jalr    32(ra) # 204015bc <_vsnprintf_r>     Call-Instr, allGrp, controlFlowGrp
204015a4:    02812403              lw    s0,40(sp)                              Return-Tgt, allGrp
204015a8:    02012423              sw    zero,40(sp)                            allGrp
204015ac:    02c12083              lw    ra,44(sp)                              allGrp
204015b0:    02012623              sw    zero,44(sp)                            allGrp
204015b4:    03010113              addi    sp,sp,48                             allGrp
204015b8:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204015bc <_vsnprintf_r>:
204015bc:    f5010113              addi    sp,sp,-176                           Call-Tgt, allGrp, Branch-Tgt
204015c0:    0a112623              sw    ra,172(sp)                             allGrp
204015c4:    0a812423              sw    s0,168(sp)                             allGrp
204015c8:    0b010413              addi    s0,sp,176                            allGrp
204015cc:    00070793              mv    a5,a4                                  allGrp
204015d0:    00068813              mv    a6,a3                                  allGrp
204015d4:    00060893              mv    a7,a2                                  allGrp
204015d8:    00058293              mv    t0,a1                                  allGrp
204015dc:    00050313              mv    t1,a0                                  allGrp
204015e0:    fea42823              sw    a0,-16(s0)                             allGrp
204015e4:    feb42623              sw    a1,-20(s0)                             allGrp
204015e8:    fec42423              sw    a2,-24(s0)                             allGrp
204015ec:    fed42223              sw    a3,-28(s0)                             allGrp
204015f0:    fee42023              sw    a4,-32(s0)                             allGrp
       va_list ap)
{
  int ret;
  FILE f;

  if (size > INT_MAX)
204015f4:    fe842503              lw    a0,-24(s0)                             allGrp
204015f8:    fff00593              li    a1,-1                                  allGrp
204015fc:    f6f42623              sw    a5,-148(s0)                            allGrp
20401600:    f7042423              sw    a6,-152(s0)                            allGrp
20401604:    f7142223              sw    a7,-156(s0)                            allGrp
20401608:    f6542023              sw    t0,-160(s0)                            allGrp
2040160c:    f4642e23              sw    t1,-164(s0)                            allGrp
20401610:    02a5c063              blt    a1,a0,20401630 <_vsnprintf_r+0x74>    allGrp, Branch-Instr, controlFlowGrp
20401614:    0040006f              j    20401618 <_vsnprintf_r+0x5c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      ptr->_errno = EOVERFLOW;
20401618:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040161c:    08b00593              li    a1,139                                 allGrp
20401620:    00b52023              sw    a1,0(a0)                               allGrp
20401624:    fff00513              li    a0,-1                                  allGrp
      return EOF;
20401628:    fea42a23              sw    a0,-12(s0)                             allGrp
2040162c:    0c40006f              j    204016f0 <_vsnprintf_r+0x134>           allGrp, Branch-Instr, controlFlowGrp
    }
  f._flags = __SWR | __SSTR;
20401630:    20800513              li    a0,520                                 Branch-Tgt, allGrp
20401634:    f6a41e23              sh    a0,-132(s0)                            allGrp
  f._bf._base = f._p = (unsigned char *) str;
20401638:    fec42503              lw    a0,-20(s0)                             allGrp
2040163c:    f6a42823              sw    a0,-144(s0)                            allGrp
20401640:    f8a42023              sw    a0,-128(s0)                            allGrp
  f._bf._size = f._w = (size > 0 ? size - 1 : 0);
20401644:    fe842503              lw    a0,-24(s0)                             allGrp
20401648:    00000593              li    a1,0                                   allGrp
2040164c:    00b50c63              beq    a0,a1,20401664 <_vsnprintf_r+0xa8>    allGrp, Branch-Instr, controlFlowGrp
20401650:    0040006f              j    20401654 <_vsnprintf_r+0x98>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401654:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20401658:    fff50513              addi    a0,a0,-1                             allGrp
2040165c:    f4a42c23              sw    a0,-168(s0)                            allGrp
20401660:    0100006f              j    20401670 <_vsnprintf_r+0xb4>            allGrp, Branch-Instr, controlFlowGrp
20401664:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20401668:    f4a42c23              sw    a0,-168(s0)                            allGrp
2040166c:    0040006f              j    20401670 <_vsnprintf_r+0xb4>            allGrp, Branch-Instr, controlFlowGrp
20401670:    f5842503              lw    a0,-168(s0)                            Branch-Tgt, allGrp
20401674:    f6a42c23              sw    a0,-136(s0)                            allGrp
20401678:    f8a42223              sw    a0,-124(s0)                            allGrp
2040167c:    00010537              lui    a0,0x10                               allGrp
20401680:    fff50513              addi    a0,a0,-1 # ffff <__stack_size+0xf7ff>allGrp
  f._file = -1;  /* No file. */
20401684:    f6a41f23              sh    a0,-130(s0)                            allGrp
  ret = _svfprintf_r (ptr, &f, fmt, ap);
20401688:    ff042503              lw    a0,-16(s0)                             allGrp
2040168c:    fe442603              lw    a2,-28(s0)                             allGrp
20401690:    fe042683              lw    a3,-32(s0)                             allGrp
20401694:    f7040593              addi    a1,s0,-144                           allGrp
20401698:    00000097              auipc    ra,0x0                              allGrp
2040169c:    47c080e7              jalr    1148(ra) # 20401b14 <_svfprintf_r>   Call-Instr, allGrp, controlFlowGrp
204016a0:    fca42e23              sw    a0,-36(s0)                             Return-Tgt, allGrp
  if (ret < EOF)
204016a4:    fdc42503              lw    a0,-36(s0)                             allGrp
204016a8:    ffe00593              li    a1,-2                                  allGrp
204016ac:    00a5cc63              blt    a1,a0,204016c4 <_vsnprintf_r+0x108>   allGrp, Branch-Instr, controlFlowGrp
204016b0:    0040006f              j    204016b4 <_vsnprintf_r+0xf8>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    ptr->_errno = EOVERFLOW;
204016b4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204016b8:    08b00593              li    a1,139                                 allGrp
204016bc:    00b52023              sw    a1,0(a0)                               allGrp
204016c0:    0040006f              j    204016c4 <_vsnprintf_r+0x108>           allGrp, Branch-Instr, controlFlowGrp
  if (size > 0)
204016c4:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
204016c8:    00000593              li    a1,0                                   allGrp
204016cc:    00b50c63              beq    a0,a1,204016e4 <_vsnprintf_r+0x128>   allGrp, Branch-Instr, controlFlowGrp
204016d0:    0040006f              j    204016d4 <_vsnprintf_r+0x118>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    *f._p = 0;
204016d4:    f7042503              lw    a0,-144(s0)                            Branch-Tgt, allGrp
204016d8:    00000593              li    a1,0                                   allGrp
204016dc:    00b50023              sb    a1,0(a0)                               allGrp
204016e0:    0040006f              j    204016e4 <_vsnprintf_r+0x128>           allGrp, Branch-Instr, controlFlowGrp
  return ret;
204016e4:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
204016e8:    fea42a23              sw    a0,-12(s0)                             allGrp
204016ec:    0040006f              j    204016f0 <_vsnprintf_r+0x134>           allGrp, Branch-Instr, controlFlowGrp
}
204016f0:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
204016f4:    0a812403              lw    s0,168(sp)                             allGrp
204016f8:    0a012423              sw    zero,168(sp)                           allGrp
204016fc:    0ac12083              lw    ra,172(sp)                             allGrp
20401700:    0a012623              sw    zero,172(sp)                           allGrp
20401704:    0b010113              addi    sp,sp,176                            allGrp
20401708:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040170c <__register_exitproc>:
2040170c:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp, Branch-Tgt
20401710:    02112e23              sw    ra,60(sp)                              allGrp
20401714:    02812c23              sw    s0,56(sp)                              allGrp
20401718:    04010413              addi    s0,sp,64                             allGrp
2040171c:    00068713              mv    a4,a3                                  allGrp
20401720:    00060793              mv    a5,a2                                  allGrp
20401724:    00058813              mv    a6,a1                                  allGrp
20401728:    00050893              mv    a7,a0                                  allGrp
2040172c:    fea42823              sw    a0,-16(s0)                             allGrp
20401730:    feb42623              sw    a1,-20(s0)                             allGrp
20401734:    fec42423              sw    a2,-24(s0)                             allGrp
20401738:    fed42223              sw    a3,-28(s0)                             allGrp

#ifndef __SINGLE_THREAD__
  __lock_acquire_recursive(__atexit_lock);
#endif

  p = _GLOBAL_ATEXIT;
2040173c:    20412537              lui    a0,0x20412                            allGrp
20401740:    53052503              lw    a0,1328(a0) # 20412530 <_global_impure_ptr>allGrp
20401744:    14852503              lw    a0,328(a0)                             allGrp
20401748:    fca42e23              sw    a0,-36(s0)                             allGrp
  if (p == NULL)
2040174c:    fdc42503              lw    a0,-36(s0)                             allGrp
20401750:    00000593              li    a1,0                                   allGrp
20401754:    fce42c23              sw    a4,-40(s0)                             allGrp
20401758:    fcf42a23              sw    a5,-44(s0)                             allGrp
2040175c:    fd042823              sw    a6,-48(s0)                             allGrp
20401760:    fd142623              sw    a7,-52(s0)                             allGrp
20401764:    02b51263              bne    a0,a1,20401788 <__register_exitproc+0x7c>allGrp, Branch-Instr, controlFlowGrp
20401768:    0040006f              j    2040176c <__register_exitproc+0x60>     Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      _GLOBAL_ATEXIT = p = _GLOBAL_ATEXIT0;
2040176c:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
20401770:    53052583              lw    a1,1328(a0) # 20412530 <_global_impure_ptr>allGrp
20401774:    14c58593              addi    a1,a1,332                            allGrp
20401778:    fcb42e23              sw    a1,-36(s0)                             allGrp
2040177c:    53052503              lw    a0,1328(a0)                            allGrp
20401780:    14b52423              sw    a1,328(a0)                             allGrp
#ifdef _REENT_SMALL
      extern struct _on_exit_args * const __on_exit_args _ATTRIBUTE ((weak));
      if (&__on_exit_args != NULL)
	p->_on_exit_args_ptr = __on_exit_args;
#endif	/* def _REENT_SMALL */
    }
20401784:    0040006f              j    20401788 <__register_exitproc+0x7c>     allGrp, Branch-Instr, controlFlowGrp
  if (p->_ind >= _ATEXIT_SIZE)
20401788:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040178c:    00452503              lw    a0,4(a0)                               allGrp
20401790:    02000593              li    a1,32                                  allGrp
20401794:    00b54a63              blt    a0,a1,204017a8 <__register_exitproc+0x9c>allGrp, Branch-Instr, controlFlowGrp
20401798:    0040006f              j    2040179c <__register_exitproc+0x90>     Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
#ifndef _ATEXIT_DYNAMIC_ALLOC
#ifndef __SINGLE_THREAD__
      __lock_release_recursive(__atexit_lock);
#endif
      return -1;
2040179c:    fff00513              li    a0,-1                                  Branch-Tgt, allGrp
204017a0:    fea42a23              sw    a0,-12(s0)                             allGrp
204017a4:    0e00006f              j    20401884 <__register_exitproc+0x178>    allGrp, Branch-Instr, controlFlowGrp
      p->_on_exit_args_ptr = NULL;
#endif
#endif
    }

  if (type != __et_atexit)
204017a8:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204017ac:    00000593              li    a1,0                                   allGrp
204017b0:    0ab50263              beq    a0,a1,20401854 <__register_exitproc+0x148>allGrp, Branch-Instr, controlFlowGrp
204017b4:    0040006f              j    204017b8 <__register_exitproc+0xac>     Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  args->_is_cxa = 0;
	  p->_on_exit_args_ptr = args;
#endif
	}
#else
      args = &p->_on_exit_args;
204017b8:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
204017bc:    08850513              addi    a0,a0,136                            allGrp
204017c0:    fea42023              sw    a0,-32(s0)                             allGrp
#endif
      args->_fnargs[p->_ind] = arg;
204017c4:    fe842503              lw    a0,-24(s0)                             allGrp
204017c8:    fe042583              lw    a1,-32(s0)                             allGrp
204017cc:    fdc42603              lw    a2,-36(s0)                             allGrp
204017d0:    00462603              lw    a2,4(a2)                               allGrp
204017d4:    00261613              slli    a2,a2,0x2                            allGrp
204017d8:    00c585b3              add    a1,a1,a2                              allGrp
204017dc:    00a5a023              sw    a0,0(a1)                               allGrp
      args->_fntypes |= (1 << p->_ind);
204017e0:    fdc42503              lw    a0,-36(s0)                             allGrp
204017e4:    00452503              lw    a0,4(a0)                               allGrp
204017e8:    00100593              li    a1,1                                   allGrp
204017ec:    00a59533              sll    a0,a1,a0                              allGrp
204017f0:    fe042583              lw    a1,-32(s0)                             allGrp
204017f4:    1005a603              lw    a2,256(a1)                             allGrp
204017f8:    00a66533              or    a0,a2,a0                               allGrp
204017fc:    10a5a023              sw    a0,256(a1)                             allGrp
      args->_dso_handle[p->_ind] = d;
20401800:    fe442503              lw    a0,-28(s0)                             allGrp
20401804:    fe042583              lw    a1,-32(s0)                             allGrp
20401808:    fdc42603              lw    a2,-36(s0)                             allGrp
2040180c:    00462603              lw    a2,4(a2)                               allGrp
20401810:    00261613              slli    a2,a2,0x2                            allGrp
20401814:    00c585b3              add    a1,a1,a2                              allGrp
20401818:    08a5a023              sw    a0,128(a1)                             allGrp
      if (type == __et_cxa)
2040181c:    ff042503              lw    a0,-16(s0)                             allGrp
20401820:    00200593              li    a1,2                                   allGrp
20401824:    02b51663              bne    a0,a1,20401850 <__register_exitproc+0x144>allGrp, Branch-Instr, controlFlowGrp
20401828:    0040006f              j    2040182c <__register_exitproc+0x120>    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	args->_is_cxa |= (1 << p->_ind);
2040182c:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20401830:    00452503              lw    a0,4(a0)                               allGrp
20401834:    00100593              li    a1,1                                   allGrp
20401838:    00a59533              sll    a0,a1,a0                              allGrp
2040183c:    fe042583              lw    a1,-32(s0)                             allGrp
20401840:    1045a603              lw    a2,260(a1)                             allGrp
20401844:    00a66533              or    a0,a2,a0                               allGrp
20401848:    10a5a223              sw    a0,260(a1)                             allGrp
2040184c:    0040006f              j    20401850 <__register_exitproc+0x144>    allGrp, Branch-Instr, controlFlowGrp
    }
20401850:    0040006f              j    20401854 <__register_exitproc+0x148>    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  p->_fns[p->_ind++] = fn;
20401854:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20401858:    fdc42583              lw    a1,-36(s0)                             allGrp
2040185c:    fdc42603              lw    a2,-36(s0)                             allGrp
20401860:    00462683              lw    a3,4(a2)                               allGrp
20401864:    00269713              slli    a4,a3,0x2                            allGrp
20401868:    00e585b3              add    a1,a1,a4                              allGrp
2040186c:    00168693              addi    a3,a3,1                              allGrp
20401870:    00d62223              sw    a3,4(a2)                               allGrp
20401874:    00a5a423              sw    a0,8(a1)                               allGrp
20401878:    00000513              li    a0,0                                   allGrp
#ifndef __SINGLE_THREAD__
  __lock_release_recursive(__atexit_lock);
#endif
  return 0;
2040187c:    fea42a23              sw    a0,-12(s0)                             allGrp
20401880:    0040006f              j    20401884 <__register_exitproc+0x178>    allGrp, Branch-Instr, controlFlowGrp
}
20401884:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20401888:    03812403              lw    s0,56(sp)                              allGrp
2040188c:    02012c23              sw    zero,56(sp)                            allGrp
20401890:    03c12083              lw    ra,60(sp)                              allGrp
20401894:    02012e23              sw    zero,60(sp)                            allGrp
20401898:    04010113              addi    sp,sp,64                             allGrp
2040189c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204018a0 <__call_exitprocs>:
204018a0:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp, Branch-Tgt
204018a4:    02112e23              sw    ra,60(sp)                              allGrp
204018a8:    02812c23              sw    s0,56(sp)                              allGrp
204018ac:    04010413              addi    s0,sp,64                             allGrp
204018b0:    00058613              mv    a2,a1                                  allGrp
204018b4:    00050693              mv    a3,a0                                  allGrp
204018b8:    fea42a23              sw    a0,-12(s0)                             allGrp
204018bc:    feb42823              sw    a1,-16(s0)                             allGrp
  int i;
  void (*fn) (void);


#ifndef __SINGLE_THREAD__
  __lock_acquire_recursive(__atexit_lock);
204018c0:    fcc42823              sw    a2,-48(s0)                             allGrp
204018c4:    fcd42623              sw    a3,-52(s0)                             allGrp
204018c8:    0040006f              j    204018cc <__call_exitprocs+0x2c>        allGrp, Branch-Instr, controlFlowGrp
#endif

 restart:

  p = _GLOBAL_ATEXIT;
204018cc:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
204018d0:    53052583              lw    a1,1328(a0) # 20412530 <_global_impure_ptr>allGrp
204018d4:    1485a583              lw    a1,328(a1)                             allGrp
204018d8:    feb42623              sw    a1,-20(s0)                             allGrp
  lastp = &_GLOBAL_ATEXIT;
204018dc:    53052503              lw    a0,1328(a0)                            allGrp
204018e0:    14850513              addi    a0,a0,328                            allGrp
204018e4:    fea42423              sw    a0,-24(s0)                             allGrp
  while (p)
204018e8:    0040006f              j    204018ec <__call_exitprocs+0x4c>        allGrp, Branch-Instr, controlFlowGrp
204018ec:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204018f0:    00000593              li    a1,0                                   allGrp
204018f4:    20b50463              beq    a0,a1,20401afc <__call_exitprocs+0x25c>allGrp, Branch-Instr, controlFlowGrp
204018f8:    0040006f              j    204018fc <__call_exitprocs+0x5c>        Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
#ifdef _REENT_SMALL
      args = p->_on_exit_args_ptr;
#else
      args = &p->_on_exit_args;
204018fc:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20401900:    08850513              addi    a0,a0,136                            allGrp
20401904:    fea42223              sw    a0,-28(s0)                             allGrp
#endif
      for (n = p->_ind - 1; n >= 0; n--)
20401908:    fec42503              lw    a0,-20(s0)                             allGrp
2040190c:    00452503              lw    a0,4(a0)                               allGrp
20401910:    fff50513              addi    a0,a0,-1                             allGrp
20401914:    fea42023              sw    a0,-32(s0)                             allGrp
20401918:    0040006f              j    2040191c <__call_exitprocs+0x7c>        allGrp, Branch-Instr, controlFlowGrp
2040191c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20401920:    00000593              li    a1,0                                   allGrp
20401924:    1cb54a63              blt    a0,a1,20401af8 <__call_exitprocs+0x258>allGrp, Branch-Instr, controlFlowGrp
20401928:    0040006f              j    2040192c <__call_exitprocs+0x8c>        Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  int ind;

	  i = 1 << n;
2040192c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20401930:    00100593              li    a1,1                                   allGrp
20401934:    00a59533              sll    a0,a1,a0                              allGrp
20401938:    fca42e23              sw    a0,-36(s0)                             allGrp

	  /* Skip functions not from this dso.  */
	  if (d && (!args || args->_dso_handle[n] != d))
2040193c:    ff042503              lw    a0,-16(s0)                             allGrp
20401940:    00000593              li    a1,0                                   allGrp
20401944:    02b50e63              beq    a0,a1,20401980 <__call_exitprocs+0xe0>allGrp, Branch-Instr, controlFlowGrp
20401948:    0040006f              j    2040194c <__call_exitprocs+0xac>        Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040194c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20401950:    00000593              li    a1,0                                   allGrp
20401954:    02b50463              beq    a0,a1,2040197c <__call_exitprocs+0xdc>allGrp, Branch-Instr, controlFlowGrp
20401958:    0040006f              j    2040195c <__call_exitprocs+0xbc>        Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040195c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20401960:    fe042583              lw    a1,-32(s0)                             allGrp
20401964:    00259593              slli    a1,a1,0x2                            allGrp
20401968:    00b50533              add    a0,a0,a1                              allGrp
2040196c:    08052503              lw    a0,128(a0)                             allGrp
20401970:    ff042583              lw    a1,-16(s0)                             allGrp
20401974:    00b50663              beq    a0,a1,20401980 <__call_exitprocs+0xe0>allGrp, Branch-Instr, controlFlowGrp
20401978:    0040006f              j    2040197c <__call_exitprocs+0xdc>        Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    continue;
2040197c:    16c0006f              j    20401ae8 <__call_exitprocs+0x248>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

	  /* Remove the function now to protect against the
	     function calling exit recursively.  */
	  fn = p->_fns[n];
20401980:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20401984:    fe042583              lw    a1,-32(s0)                             allGrp
20401988:    00259593              slli    a1,a1,0x2                            allGrp
2040198c:    00b50533              add    a0,a0,a1                              allGrp
20401990:    00852503              lw    a0,8(a0)                               allGrp
20401994:    fca42c23              sw    a0,-40(s0)                             allGrp
	  if (n == p->_ind - 1)
20401998:    fe042503              lw    a0,-32(s0)                             allGrp
2040199c:    fec42583              lw    a1,-20(s0)                             allGrp
204019a0:    0045a583              lw    a1,4(a1)                               allGrp
204019a4:    fff58593              addi    a1,a1,-1                             allGrp
204019a8:    00b51e63              bne    a0,a1,204019c4 <__call_exitprocs+0x124>allGrp, Branch-Instr, controlFlowGrp
204019ac:    0040006f              j    204019b0 <__call_exitprocs+0x110>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    p->_ind--;
204019b0:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204019b4:    00452583              lw    a1,4(a0)                               allGrp
204019b8:    fff58593              addi    a1,a1,-1                             allGrp
204019bc:    00b52223              sw    a1,4(a0)                               allGrp
204019c0:    0200006f              j    204019e0 <__call_exitprocs+0x140>       allGrp, Branch-Instr, controlFlowGrp
	  else
	    p->_fns[n] = NULL;
204019c4:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204019c8:    fe042583              lw    a1,-32(s0)                             allGrp
204019cc:    00259593              slli    a1,a1,0x2                            allGrp
204019d0:    00b50533              add    a0,a0,a1                              allGrp
204019d4:    00000593              li    a1,0                                   allGrp
204019d8:    00b52423              sw    a1,8(a0)                               allGrp
204019dc:    0040006f              j    204019e0 <__call_exitprocs+0x140>       allGrp, Branch-Instr, controlFlowGrp

	  /* Skip functions that have already been called.  */
	  if (!fn)
204019e0:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
204019e4:    00000593              li    a1,0                                   allGrp
204019e8:    00b51663              bne    a0,a1,204019f4 <__call_exitprocs+0x154>allGrp, Branch-Instr, controlFlowGrp
204019ec:    0040006f              j    204019f0 <__call_exitprocs+0x150>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    continue;
204019f0:    0f80006f              j    20401ae8 <__call_exitprocs+0x248>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

	  ind = p->_ind;
204019f4:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204019f8:    00452503              lw    a0,4(a0)                               allGrp
204019fc:    fca42a23              sw    a0,-44(s0)                             allGrp

	  /* Call the function.  */
	  if (!args || (args->_fntypes & i) == 0)
20401a00:    fe442503              lw    a0,-28(s0)                             allGrp
20401a04:    00000593              li    a1,0                                   allGrp
20401a08:    02b50263              beq    a0,a1,20401a2c <__call_exitprocs+0x18c>allGrp, Branch-Instr, controlFlowGrp
20401a0c:    0040006f              j    20401a10 <__call_exitprocs+0x170>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401a10:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20401a14:    10052503              lw    a0,256(a0)                             allGrp
20401a18:    fdc42583              lw    a1,-36(s0)                             allGrp
20401a1c:    00b57533              and    a0,a0,a1                              allGrp
20401a20:    00000593              li    a1,0                                   allGrp
20401a24:    00b51a63              bne    a0,a1,20401a38 <__call_exitprocs+0x198>allGrp, Branch-Instr, controlFlowGrp
20401a28:    0040006f              j    20401a2c <__call_exitprocs+0x18c>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    fn ();
20401a2c:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20401a30:    000500e7              jalr    a0                                   Call-Instr, allGrp, controlFlowGrp
20401a34:    0840006f              j    20401ab8 <__call_exitprocs+0x218>       Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  else if ((args->_is_cxa & i) == 0)
20401a38:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20401a3c:    10452503              lw    a0,260(a0)                             allGrp
20401a40:    fdc42583              lw    a1,-36(s0)                             allGrp
20401a44:    00b57533              and    a0,a0,a1                              allGrp
20401a48:    00000593              li    a1,0                                   allGrp
20401a4c:    02b51e63              bne    a0,a1,20401a88 <__call_exitprocs+0x1e8>allGrp, Branch-Instr, controlFlowGrp
20401a50:    0040006f              j    20401a54 <__call_exitprocs+0x1b4>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    (*((void (*)(int, _PTR)) fn))(code, args->_fnargs[n]);
20401a54:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20401a58:    ff442583              lw    a1,-12(s0)                             allGrp
20401a5c:    fe442603              lw    a2,-28(s0)                             allGrp
20401a60:    fe042683              lw    a3,-32(s0)                             allGrp
20401a64:    00269693              slli    a3,a3,0x2                            allGrp
20401a68:    00d60633              add    a2,a2,a3                              allGrp
20401a6c:    00062603              lw    a2,0(a2)                               allGrp
20401a70:    fca42423              sw    a0,-56(s0)                             allGrp
20401a74:    00058513              mv    a0,a1                                  allGrp
20401a78:    00060593              mv    a1,a2                                  allGrp
20401a7c:    fc842603              lw    a2,-56(s0)                             allGrp
20401a80:    000600e7              jalr    a2                                   Call-Instr, allGrp, controlFlowGrp
20401a84:    0300006f              j    20401ab4 <__call_exitprocs+0x214>       Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  else
	    (*((void (*)(_PTR)) fn))(args->_fnargs[n]);
20401a88:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20401a8c:    fe442583              lw    a1,-28(s0)                             allGrp
20401a90:    fe042603              lw    a2,-32(s0)                             allGrp
20401a94:    00261613              slli    a2,a2,0x2                            allGrp
20401a98:    00c585b3              add    a1,a1,a2                              allGrp
20401a9c:    0005a583              lw    a1,0(a1)                               allGrp
20401aa0:    fca42223              sw    a0,-60(s0)                             allGrp
20401aa4:    00058513              mv    a0,a1                                  allGrp
20401aa8:    fc442583              lw    a1,-60(s0)                             allGrp
20401aac:    000580e7              jalr    a1                                   Call-Instr, allGrp, controlFlowGrp
20401ab0:    0040006f              j    20401ab4 <__call_exitprocs+0x214>       Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401ab4:    0040006f              j    20401ab8 <__call_exitprocs+0x218>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

	  /* The function we called call atexit and registered another
	     function (or functions).  Call these new functions before
	     continuing with the already registered functions.  */
	  if (ind != p->_ind || *lastp != p)
20401ab8:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
20401abc:    fec42583              lw    a1,-20(s0)                             allGrp
20401ac0:    0045a583              lw    a1,4(a1)                               allGrp
20401ac4:    00b51e63              bne    a0,a1,20401ae0 <__call_exitprocs+0x240>allGrp, Branch-Instr, controlFlowGrp
20401ac8:    0040006f              j    20401acc <__call_exitprocs+0x22c>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401acc:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20401ad0:    00052503              lw    a0,0(a0)                               allGrp
20401ad4:    fec42583              lw    a1,-20(s0)                             allGrp
20401ad8:    00b50663              beq    a0,a1,20401ae4 <__call_exitprocs+0x244>allGrp, Branch-Instr, controlFlowGrp
20401adc:    0040006f              j    20401ae0 <__call_exitprocs+0x240>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    goto restart;
20401ae0:    dedff06f              j    204018cc <__call_exitprocs+0x2c>        Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	}
20401ae4:    0040006f              j    20401ae8 <__call_exitprocs+0x248>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      for (n = p->_ind - 1; n >= 0; n--)
20401ae8:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20401aec:    fff50513              addi    a0,a0,-1                             allGrp
20401af0:    fea42023              sw    a0,-32(s0)                             allGrp
20401af4:    e29ff06f              j    2040191c <__call_exitprocs+0x7c>        allGrp, Branch-Instr, controlFlowGrp

#ifndef _ATEXIT_DYNAMIC_ALLOC
      break;
20401af8:    0040006f              j    20401afc <__call_exitprocs+0x25c>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    }
#ifndef __SINGLE_THREAD__
  __lock_release_recursive(__atexit_lock);
#endif

}
20401afc:    03812403              lw    s0,56(sp)                              Branch-Tgt, allGrp
20401b00:    02012c23              sw    zero,56(sp)                            allGrp
20401b04:    03c12083              lw    ra,60(sp)                              allGrp
20401b08:    02012e23              sw    zero,60(sp)                            allGrp
20401b0c:    04010113              addi    sp,sp,64                             allGrp
20401b10:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20401b14 <_svfprintf_r>:
20401b14:    e2010113              addi    sp,sp,-480                           Call-Tgt, allGrp, Branch-Tgt
20401b18:    1c112e23              sw    ra,476(sp)                             allGrp
20401b1c:    1c812c23              sw    s0,472(sp)                             allGrp
20401b20:    1e010413              addi    s0,sp,480                            allGrp
20401b24:    00068713              mv    a4,a3                                  allGrp
20401b28:    00060793              mv    a5,a2                                  allGrp
20401b2c:    00058813              mv    a6,a1                                  allGrp
20401b30:    00050893              mv    a7,a0                                  allGrp
20401b34:    fea42823              sw    a0,-16(s0)                             allGrp
20401b38:    feb42623              sw    a1,-20(s0)                             allGrp
20401b3c:    fec42423              sw    a2,-24(s0)                             allGrp
20401b40:    fed42223              sw    a3,-28(s0)                             allGrp
	char *thousands_sep = NULL;
	size_t thsnd_len = 0;
	const char *grouping = NULL;
#endif
#ifdef FLOATING_POINT
	char *decimal_point = _localeconv_r (data)->decimal_point;
20401b44:    ff042503              lw    a0,-16(s0)                             allGrp
20401b48:    eae42623              sw    a4,-340(s0)                            allGrp
20401b4c:    eaf42423              sw    a5,-344(s0)                            allGrp
20401b50:    eb042223              sw    a6,-348(s0)                            allGrp
20401b54:    eb142023              sw    a7,-352(s0)                            allGrp
20401b58:    00005097              auipc    ra,0x5                              allGrp
20401b5c:    50c080e7              jalr    1292(ra) # 20407064 <_localeconv_r>  Call-Instr, allGrp, controlFlowGrp
20401b60:    00052503              lw    a0,0(a0)                               Return-Tgt, allGrp
20401b64:    faa42a23              sw    a0,-76(s0)                             allGrp
	size_t decp_len = strlen (decimal_point);
20401b68:    fb442503              lw    a0,-76(s0)                             allGrp
20401b6c:    00008097              auipc    ra,0x8                              allGrp
20401b70:    048080e7              jalr    72(ra) # 20409bb4 <strlen>           Call-Instr, allGrp, controlFlowGrp
20401b74:    faa42823              sw    a0,-80(s0)                             Return-Tgt, allGrp
20401b78:    20412537              lui    a0,0x20412                            allGrp
20401b7c:    53850593              addi    a1,a0,1336 # 20412538 <_global_impure_ptr+0x8>allGrp
	char softsign;		/* temporary negative sign for floats */
	union { int i; _PRINTF_FLOAT_TYPE fp; } _double_ = {0};
20401b80:    0045a583              lw    a1,4(a1)                               allGrp
20401b84:    fab42223              sw    a1,-92(s0)                             allGrp
20401b88:    53852503              lw    a0,1336(a0)                            allGrp
20401b8c:    faa42023              sw    a0,-96(s0)                             allGrp
20401b90:    00000513              li    a0,0                                   allGrp
# define _fpvalue (_double_.fp)
	int expt;		/* integer value of exponent */
	int expsize = 0;	/* character count for expstr */
20401b94:    f8a42c23              sw    a0,-104(s0)                            allGrp
	char expstr[MAXEXPLEN];	/* buffer for exponent string */
	int lead;		/* sig figs before decimal or group sep */
#endif /* FLOATING_POINT */
#if defined (FLOATING_POINT) || defined (_WANT_IO_C99_FORMATS)
	int ndig = 0;		/* actual number of digits returned by cvt */
20401b98:    f8a42423              sw    a0,-120(s0)                            allGrp
	u_quad_t _uquad;	/* integer arguments %[diouxX] */
	enum { OCT, DEC, HEX } base;/* base for [diouxX] conversion */
	int dprec;		/* a copy of prec if [diouxX], 0 otherwise */
	int realsz;		/* field size expanded by dprec */
	int size;		/* size of converted field or string */
	char *xdigs = NULL;	/* digits for [xX] conversion */
20401b9c:    f6a42823              sw    a0,-144(s0)                            allGrp
	char ox[2];		/* space for 0x hex-prefix */
#ifdef _MB_CAPABLE
	wchar_t wc;
	mbstate_t state;        /* mbtowc calls from library must not change state */
#endif
	char *malloc_buf = NULL;/* handy pointer for malloced buffers */
20401ba0:    eea42623              sw    a0,-276(s0)                            allGrp
		return (__sbprintf (data, fp, fmt0, ap));
	}
#endif
#else /* STRING_ONLY */
        /* Create initial buffer if we are called by asprintf family.  */
        if (fp->_flags & __SMBF && !fp->_bf._base)
20401ba4:    fec42583              lw    a1,-20(s0)                             allGrp
20401ba8:    00c5d583              lhu    a1,12(a1)                             allGrp
20401bac:    0805f593              andi    a1,a1,128                            allGrp
20401bb0:    06a58c63              beq    a1,a0,20401c28 <_svfprintf_r+0x114>   allGrp, Branch-Instr, controlFlowGrp
20401bb4:    0040006f              j    20401bb8 <_svfprintf_r+0xa4>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401bb8:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20401bbc:    01052503              lw    a0,16(a0)                              allGrp
20401bc0:    00000593              li    a1,0                                   allGrp
20401bc4:    06b51263              bne    a0,a1,20401c28 <_svfprintf_r+0x114>   allGrp, Branch-Instr, controlFlowGrp
20401bc8:    0040006f              j    20401bcc <_svfprintf_r+0xb8>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        {
		fp->_bf._base = fp->_p = _malloc_r (data, 64);
20401bcc:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20401bd0:    04000593              li    a1,64                                  allGrp
20401bd4:    00010097              auipc    ra,0x10                             allGrp
20401bd8:    7b0080e7              jalr    1968(ra) # 20412384 <_malloc_r>      Call-Instr, allGrp, controlFlowGrp
20401bdc:    fec42583              lw    a1,-20(s0)                             Return-Tgt, allGrp
20401be0:    00a5a023              sw    a0,0(a1)                               allGrp
20401be4:    fec42583              lw    a1,-20(s0)                             allGrp
20401be8:    00a5a823              sw    a0,16(a1)                              allGrp
		if (!fp->_p)
20401bec:    fec42503              lw    a0,-20(s0)                             allGrp
20401bf0:    00052503              lw    a0,0(a0)                               allGrp
20401bf4:    00000593              li    a1,0                                   allGrp
20401bf8:    02b51063              bne    a0,a1,20401c18 <_svfprintf_r+0x104>   allGrp, Branch-Instr, controlFlowGrp
20401bfc:    0040006f              j    20401c00 <_svfprintf_r+0xec>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		{
			data->_errno = ENOMEM;
20401c00:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20401c04:    00c00593              li    a1,12                                  allGrp
20401c08:    00b52023              sw    a1,0(a0)                               allGrp
20401c0c:    fff00513              li    a0,-1                                  allGrp
			return EOF;
20401c10:    fea42a23              sw    a0,-12(s0)                             allGrp
20401c14:    2b10206f              j    204046c4 <_svfprintf_r+0x2bb0>          allGrp, Branch-Instr, controlFlowGrp
		}
		fp->_bf._size = 64;
20401c18:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20401c1c:    04000593              li    a1,64                                  allGrp
20401c20:    00b52a23              sw    a1,20(a0)                              allGrp
        }
20401c24:    0040006f              j    20401c28 <_svfprintf_r+0x114>           allGrp, Branch-Instr, controlFlowGrp
#endif /* STRING_ONLY */

	fmt = (char *)fmt0;
20401c28:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20401c2c:    fea42023              sw    a0,-32(s0)                             allGrp
20401c30:    f2040513              addi    a0,s0,-224                           allGrp
#ifdef _FVWRITE_IN_STREAMIO
	uio.uio_iov = iovp = iov;
20401c34:    f0a42e23              sw    a0,-228(s0)                            allGrp
20401c38:    f6a42023              sw    a0,-160(s0)                            allGrp
20401c3c:    00000513              li    a0,0                                   allGrp
	uio.uio_resid = 0;
20401c40:    f6a42423              sw    a0,-152(s0)                            allGrp
	uio.uio_iovcnt = 0;
20401c44:    f6a42223              sw    a0,-156(s0)                            allGrp
#endif
	ret = 0;
20401c48:    fca42223              sw    a0,-60(s0)                             allGrp
#endif

	/*
	 * Scan the format for conversions (`%' character).
	 */
	for (;;) {
20401c4c:    0040006f              j    20401c50 <_svfprintf_r+0x13c>           allGrp, Branch-Instr, controlFlowGrp
	        cp = fmt;
20401c50:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20401c54:    fca42823              sw    a0,-48(s0)                             allGrp
                    else if (wc == '%')
                        break;
                    fmt += n;
		}
#else
                while (*fmt != '\0' && *fmt != '%')
20401c58:    0040006f              j    20401c5c <_svfprintf_r+0x148>           allGrp, Branch-Instr, controlFlowGrp
20401c5c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20401c60:    00054503              lbu    a0,0(a0)                              allGrp
20401c64:    00000593              li    a1,0                                   allGrp
20401c68:    00058613              mv    a2,a1                                  allGrp
20401c6c:    e8c42e23              sw    a2,-356(s0)                            allGrp
20401c70:    02b50263              beq    a0,a1,20401c94 <_svfprintf_r+0x180>   allGrp, Branch-Instr, controlFlowGrp
20401c74:    0040006f              j    20401c78 <_svfprintf_r+0x164>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401c78:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20401c7c:    00054503              lbu    a0,0(a0)                              allGrp
20401c80:    02500593              li    a1,37                                  allGrp
20401c84:    00b54533              xor    a0,a0,a1                              allGrp
20401c88:    00a03533              snez    a0,a0                                allGrp
20401c8c:    e8a42e23              sw    a0,-356(s0)                            allGrp
20401c90:    0040006f              j    20401c94 <_svfprintf_r+0x180>           allGrp, Branch-Instr, controlFlowGrp
20401c94:    e9c42503              lw    a0,-356(s0)                            Branch-Tgt, allGrp
20401c98:    00157513              andi    a0,a0,1                              allGrp
20401c9c:    00000593              li    a1,0                                   allGrp
20401ca0:    00b50c63              beq    a0,a1,20401cb8 <_svfprintf_r+0x1a4>   allGrp, Branch-Instr, controlFlowGrp
20401ca4:    0040006f              j    20401ca8 <_svfprintf_r+0x194>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
                    fmt += 1;
20401ca8:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20401cac:    00150513              addi    a0,a0,1                              allGrp
20401cb0:    fea42023              sw    a0,-32(s0)                             allGrp
                while (*fmt != '\0' && *fmt != '%')
20401cb4:    fa9ff06f              j    20401c5c <_svfprintf_r+0x148>           allGrp, Branch-Instr, controlFlowGrp
#endif
		if ((m = fmt - cp) != 0) {
20401cb8:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20401cbc:    fd042583              lw    a1,-48(s0)                             allGrp
20401cc0:    40b50533              sub    a0,a0,a1                              allGrp
20401cc4:    fca42a23              sw    a0,-44(s0)                             allGrp
20401cc8:    00000593              li    a1,0                                   allGrp
20401ccc:    08b50c63              beq    a0,a1,20401d64 <_svfprintf_r+0x250>   allGrp, Branch-Instr, controlFlowGrp
20401cd0:    0040006f              j    20401cd4 <_svfprintf_r+0x1c0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PRINT (cp, m);
20401cd4:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20401cd8:    f1c42583              lw    a1,-228(s0)                            allGrp
20401cdc:    00a5a023              sw    a0,0(a1)                               allGrp
20401ce0:    fd442503              lw    a0,-44(s0)                             allGrp
20401ce4:    f1c42583              lw    a1,-228(s0)                            allGrp
20401ce8:    00a5a223              sw    a0,4(a1)                               allGrp
20401cec:    fd442503              lw    a0,-44(s0)                             allGrp
20401cf0:    f6842583              lw    a1,-152(s0)                            allGrp
20401cf4:    00a58533              add    a0,a1,a0                              allGrp
20401cf8:    f6a42423              sw    a0,-152(s0)                            allGrp
20401cfc:    f1c42503              lw    a0,-228(s0)                            allGrp
20401d00:    00850513              addi    a0,a0,8                              allGrp
20401d04:    f0a42e23              sw    a0,-228(s0)                            allGrp
20401d08:    f6442503              lw    a0,-156(s0)                            allGrp
20401d0c:    00150513              addi    a0,a0,1                              allGrp
20401d10:    f6a42223              sw    a0,-156(s0)                            allGrp
20401d14:    00800593              li    a1,8                                   allGrp
20401d18:    02b54c63              blt    a0,a1,20401d50 <_svfprintf_r+0x23c>   allGrp, Branch-Instr, controlFlowGrp
20401d1c:    0040006f              j    20401d20 <_svfprintf_r+0x20c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401d20:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20401d24:    fec42583              lw    a1,-20(s0)                             allGrp
20401d28:    f6040613              addi    a2,s0,-160                           allGrp
20401d2c:    00008097              auipc    ra,0x8                              allGrp
20401d30:    214080e7              jalr    532(ra) # 20409f40 <__ssprint_r>     Call-Instr, allGrp, controlFlowGrp
20401d34:    00000593              li    a1,0                                   Return-Tgt, allGrp
20401d38:    00b50663              beq    a0,a1,20401d44 <_svfprintf_r+0x230>   allGrp, Branch-Instr, controlFlowGrp
20401d3c:    0040006f              j    20401d40 <_svfprintf_r+0x22c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401d40:    1250206f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401d44:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20401d48:    f0a42e23              sw    a0,-228(s0)                            allGrp
20401d4c:    0040006f              j    20401d50 <_svfprintf_r+0x23c>           allGrp, Branch-Instr, controlFlowGrp
			ret += m;
20401d50:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
20401d54:    fc442583              lw    a1,-60(s0)                             allGrp
20401d58:    00a58533              add    a0,a1,a0                              allGrp
20401d5c:    fca42223              sw    a0,-60(s0)                             allGrp
		}
20401d60:    0040006f              j    20401d64 <_svfprintf_r+0x250>           allGrp, Branch-Instr, controlFlowGrp
#ifdef _MB_CAPABLE
		if (n <= 0)
                    goto done;
#else
                if (*fmt == '\0')
20401d64:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20401d68:    00054503              lbu    a0,0(a0)                              allGrp
20401d6c:    00000593              li    a1,0                                   allGrp
20401d70:    00b51663              bne    a0,a1,20401d7c <_svfprintf_r+0x268>   allGrp, Branch-Instr, controlFlowGrp
20401d74:    0040006f              j    20401d78 <_svfprintf_r+0x264>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
                    goto done;
20401d78:    0a50206f              j    2040461c <_svfprintf_r+0x2b08>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
#endif
		fmt_anchor = fmt;
20401d7c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20401d80:    fca42423              sw    a0,-56(s0)                             allGrp
		fmt++;		/* skip over '%' */
20401d84:    fe042503              lw    a0,-32(s0)                             allGrp
20401d88:    00150513              addi    a0,a0,1                              allGrp
20401d8c:    fea42023              sw    a0,-32(s0)                             allGrp
20401d90:    00000513              li    a0,0                                   allGrp

		flags = 0;
20401d94:    fca42623              sw    a0,-52(s0)                             allGrp
		dprec = 0;
20401d98:    f6a42e23              sw    a0,-132(s0)                            allGrp
		width = 0;
20401d9c:    fca42023              sw    a0,-64(s0)                             allGrp
20401da0:    fff00593              li    a1,-1                                  allGrp
		prec = -1;
20401da4:    fab42e23              sw    a1,-68(s0)                             allGrp
		sign = '\0';
20401da8:    faa40da3              sb    a0,-69(s0)                             allGrp
#ifdef FLOATING_POINT
		lead = 0;
20401dac:    f8a42623              sw    a0,-116(s0)                            allGrp
20401db0:    0040006f              j    20401db4 <_svfprintf_r+0x2a0>           allGrp, Branch-Instr, controlFlowGrp
#ifndef _NO_POS_ARGS
		N = arg_index;
		is_pos_arg = 0;
#endif

rflag:		ch = *fmt++;
20401db4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20401db8:    00150593              addi    a1,a0,1                              allGrp
20401dbc:    feb42023              sw    a1,-32(s0)                             allGrp
20401dc0:    00054503              lbu    a0,0(a0)                              allGrp
20401dc4:    fca42e23              sw    a0,-36(s0)                             allGrp
20401dc8:    0040006f              j    20401dcc <_svfprintf_r+0x2b8>           allGrp, Branch-Instr, controlFlowGrp
reswitch:	switch (ch) {
20401dcc:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20401dd0:    02000593              li    a1,32                                  allGrp
20401dd4:    e8a42c23              sw    a0,-360(s0)                            allGrp
20401dd8:    1cb50063              beq    a0,a1,20401f98 <_svfprintf_r+0x484>   allGrp, Branch-Instr, controlFlowGrp
20401ddc:    0040006f              j    20401de0 <_svfprintf_r+0x2cc>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401de0:    02300513              li    a0,35                                  Branch-Tgt, allGrp
20401de4:    e9842583              lw    a1,-360(s0)                            allGrp
20401de8:    1ca58863              beq    a1,a0,20401fb8 <_svfprintf_r+0x4a4>   allGrp, Branch-Instr, controlFlowGrp
20401dec:    0040006f              j    20401df0 <_svfprintf_r+0x2dc>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401df0:    02a00513              li    a0,42                                  Branch-Tgt, allGrp
20401df4:    e9842583              lw    a1,-360(s0)                            allGrp
20401df8:    1ca58863              beq    a1,a0,20401fc8 <_svfprintf_r+0x4b4>   allGrp, Branch-Instr, controlFlowGrp
20401dfc:    0040006f              j    20401e00 <_svfprintf_r+0x2ec>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401e00:    02b00513              li    a0,43                                  Branch-Tgt, allGrp
20401e04:    e9842583              lw    a1,-360(s0)                            allGrp
20401e08:    20a58663              beq    a1,a0,20402014 <_svfprintf_r+0x500>   allGrp, Branch-Instr, controlFlowGrp
20401e0c:    0040006f              j    20401e10 <_svfprintf_r+0x2fc>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401e10:    02d00513              li    a0,45                                  Branch-Tgt, allGrp
20401e14:    e9842583              lw    a1,-360(s0)                            allGrp
20401e18:    1ea58663              beq    a1,a0,20402004 <_svfprintf_r+0x4f0>   allGrp, Branch-Instr, controlFlowGrp
20401e1c:    0040006f              j    20401e20 <_svfprintf_r+0x30c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401e20:    02e00513              li    a0,46                                  Branch-Tgt, allGrp
20401e24:    e9842583              lw    a1,-360(s0)                            allGrp
20401e28:    1ea58c63              beq    a1,a0,20402020 <_svfprintf_r+0x50c>   allGrp, Branch-Instr, controlFlowGrp
20401e2c:    0040006f              j    20401e30 <_svfprintf_r+0x31c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401e30:    03000513              li    a0,48                                  Branch-Tgt, allGrp
20401e34:    e9842583              lw    a1,-360(s0)                            allGrp
20401e38:    2ca58463              beq    a1,a0,20402100 <_svfprintf_r+0x5ec>   allGrp, Branch-Instr, controlFlowGrp
20401e3c:    0040006f              j    20401e40 <_svfprintf_r+0x32c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401e40:    e9842503              lw    a0,-360(s0)                            Branch-Tgt, allGrp
20401e44:    fcf50593              addi    a1,a0,-49                            allGrp
20401e48:    00900613              li    a2,9                                   allGrp
20401e4c:    2cc5e263              bltu    a1,a2,20402110 <_svfprintf_r+0x5fc>  allGrp, Branch-Instr, controlFlowGrp
20401e50:    0040006f              j    20401e54 <_svfprintf_r+0x340>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401e54:    04400513              li    a0,68                                  Branch-Tgt, allGrp
20401e58:    e9842583              lw    a1,-360(s0)                            allGrp
20401e5c:    38a58663              beq    a1,a0,204021e8 <_svfprintf_r+0x6d4>   allGrp, Branch-Instr, controlFlowGrp
20401e60:    0040006f              j    20401e64 <_svfprintf_r+0x350>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401e64:    04500513              li    a0,69                                  Branch-Tgt, allGrp
20401e68:    e9842583              lw    a1,-360(s0)                            allGrp
20401e6c:    46a58c63              beq    a1,a0,204022e4 <_svfprintf_r+0x7d0>   allGrp, Branch-Instr, controlFlowGrp
20401e70:    0040006f              j    20401e74 <_svfprintf_r+0x360>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401e74:    04700513              li    a0,71                                  Branch-Tgt, allGrp
20401e78:    e9842583              lw    a1,-360(s0)                            allGrp
20401e7c:    46a58463              beq    a1,a0,204022e4 <_svfprintf_r+0x7d0>   allGrp, Branch-Instr, controlFlowGrp
20401e80:    0040006f              j    20401e84 <_svfprintf_r+0x370>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401e84:    04c00513              li    a0,76                                  Branch-Tgt, allGrp
20401e88:    e9842583              lw    a1,-360(s0)                            allGrp
20401e8c:    2ea58463              beq    a1,a0,20402174 <_svfprintf_r+0x660>   allGrp, Branch-Instr, controlFlowGrp
20401e90:    0040006f              j    20401e94 <_svfprintf_r+0x380>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401e94:    04f00513              li    a0,79                                  Branch-Tgt, allGrp
20401e98:    e9842583              lw    a1,-360(s0)                            allGrp
20401e9c:    1ea584e3              beq    a1,a0,20402884 <_svfprintf_r+0xd70>   allGrp, Branch-Instr, controlFlowGrp
20401ea0:    0040006f              j    20401ea4 <_svfprintf_r+0x390>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401ea4:    05500513              li    a0,85                                  Branch-Tgt, allGrp
20401ea8:    e9842583              lw    a1,-360(s0)                            allGrp
20401eac:    3ca58ce3              beq    a1,a0,20402a84 <_svfprintf_r+0xf70>   allGrp, Branch-Instr, controlFlowGrp
20401eb0:    0040006f              j    20401eb4 <_svfprintf_r+0x3a0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401eb4:    05800513              li    a0,88                                  Branch-Tgt, allGrp
20401eb8:    e9842583              lw    a1,-360(s0)                            allGrp
20401ebc:    48a58ce3              beq    a1,a0,20402b54 <_svfprintf_r+0x1040>  allGrp, Branch-Instr, controlFlowGrp
20401ec0:    0040006f              j    20401ec4 <_svfprintf_r+0x3b0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401ec4:    06300513              li    a0,99                                  Branch-Tgt, allGrp
20401ec8:    e9842583              lw    a1,-360(s0)                            allGrp
20401ecc:    2ea58463              beq    a1,a0,204021b4 <_svfprintf_r+0x6a0>   allGrp, Branch-Instr, controlFlowGrp
20401ed0:    0040006f              j    20401ed4 <_svfprintf_r+0x3c0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401ed4:    06400513              li    a0,100                                 Branch-Tgt, allGrp
20401ed8:    e9842583              lw    a1,-360(s0)                            allGrp
20401edc:    30a58e63              beq    a1,a0,204021f8 <_svfprintf_r+0x6e4>   allGrp, Branch-Instr, controlFlowGrp
20401ee0:    0040006f              j    20401ee4 <_svfprintf_r+0x3d0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401ee4:    e9842503              lw    a0,-360(s0)                            Branch-Tgt, allGrp
20401ee8:    f9b50593              addi    a1,a0,-101                           allGrp
20401eec:    00300613              li    a2,3                                   allGrp
20401ef0:    3ec5ea63              bltu    a1,a2,204022e4 <_svfprintf_r+0x7d0>  allGrp, Branch-Instr, controlFlowGrp
20401ef4:    0040006f              j    20401ef8 <_svfprintf_r+0x3e4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401ef8:    06800513              li    a0,104                                 Branch-Tgt, allGrp
20401efc:    e9842583              lw    a1,-360(s0)                            allGrp
20401f00:    28a58263              beq    a1,a0,20402184 <_svfprintf_r+0x670>   allGrp, Branch-Instr, controlFlowGrp
20401f04:    0040006f              j    20401f08 <_svfprintf_r+0x3f4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401f08:    06900513              li    a0,105                                 Branch-Tgt, allGrp
20401f0c:    e9842583              lw    a1,-360(s0)                            allGrp
20401f10:    2ea58463              beq    a1,a0,204021f8 <_svfprintf_r+0x6e4>   allGrp, Branch-Instr, controlFlowGrp
20401f14:    0040006f              j    20401f18 <_svfprintf_r+0x404>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401f18:    06c00513              li    a0,108                                 Branch-Tgt, allGrp
20401f1c:    e9842583              lw    a1,-360(s0)                            allGrp
20401f20:    26a58a63              beq    a1,a0,20402194 <_svfprintf_r+0x680>   allGrp, Branch-Instr, controlFlowGrp
20401f24:    0040006f              j    20401f28 <_svfprintf_r+0x414>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401f28:    06e00513              li    a0,110                                 Branch-Tgt, allGrp
20401f2c:    e9842583              lw    a1,-360(s0)                            allGrp
20401f30:    0ca588e3              beq    a1,a0,20402800 <_svfprintf_r+0xcec>   allGrp, Branch-Instr, controlFlowGrp
20401f34:    0040006f              j    20401f38 <_svfprintf_r+0x424>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401f38:    06f00513              li    a0,111                                 Branch-Tgt, allGrp
20401f3c:    e9842583              lw    a1,-360(s0)                            allGrp
20401f40:    14a58ae3              beq    a1,a0,20402894 <_svfprintf_r+0xd80>   allGrp, Branch-Instr, controlFlowGrp
20401f44:    0040006f              j    20401f48 <_svfprintf_r+0x434>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401f48:    07000513              li    a0,112                                 Branch-Tgt, allGrp
20401f4c:    e9842583              lw    a1,-360(s0)                            allGrp
20401f50:    20a582e3              beq    a1,a0,20402954 <_svfprintf_r+0xe40>   allGrp, Branch-Instr, controlFlowGrp
20401f54:    0040006f              j    20401f58 <_svfprintf_r+0x444>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401f58:    07100513              li    a0,113                                 Branch-Tgt, allGrp
20401f5c:    e9842583              lw    a1,-360(s0)                            allGrp
20401f60:    24a58263              beq    a1,a0,204021a4 <_svfprintf_r+0x690>   allGrp, Branch-Instr, controlFlowGrp
20401f64:    0040006f              j    20401f68 <_svfprintf_r+0x454>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401f68:    07300513              li    a0,115                                 Branch-Tgt, allGrp
20401f6c:    e9842583              lw    a1,-360(s0)                            allGrp
20401f70:    22a588e3              beq    a1,a0,204029a0 <_svfprintf_r+0xe8c>   allGrp, Branch-Instr, controlFlowGrp
20401f74:    0040006f              j    20401f78 <_svfprintf_r+0x464>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401f78:    07500513              li    a0,117                                 Branch-Tgt, allGrp
20401f7c:    e9842583              lw    a1,-360(s0)                            allGrp
20401f80:    30a58ae3              beq    a1,a0,20402a94 <_svfprintf_r+0xf80>   allGrp, Branch-Instr, controlFlowGrp
20401f84:    0040006f              j    20401f88 <_svfprintf_r+0x474>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20401f88:    07800513              li    a0,120                                 Branch-Tgt, allGrp
20401f8c:    e9842583              lw    a1,-360(s0)                            allGrp
20401f90:    3ca58ae3              beq    a1,a0,20402b64 <_svfprintf_r+0x1050>  allGrp, Branch-Instr, controlFlowGrp
20401f94:    7410006f              j    20402ed4 <_svfprintf_r+0x13c0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			/*
			 * ``If the space and + flags both appear, the space
			 * flag will be ignored.''
			 *	-- ANSI X3J11
			 */
			if (!sign)
20401f98:    fbb44503              lbu    a0,-69(s0)                            Branch-Tgt, allGrp
20401f9c:    00000593              li    a1,0                                   allGrp
20401fa0:    00b51a63              bne    a0,a1,20401fb4 <_svfprintf_r+0x4a0>   allGrp, Branch-Instr, controlFlowGrp
20401fa4:    0040006f              j    20401fa8 <_svfprintf_r+0x494>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				sign = ' ';
20401fa8:    02000513              li    a0,32                                  Branch-Tgt, allGrp
20401fac:    faa40da3              sb    a0,-69(s0)                             allGrp
20401fb0:    0040006f              j    20401fb4 <_svfprintf_r+0x4a0>           allGrp, Branch-Instr, controlFlowGrp
			goto rflag;
20401fb4:    e01ff06f              j    20401db4 <_svfprintf_r+0x2a0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		case '#':
			flags |= ALT;
20401fb8:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20401fbc:    00156513              ori    a0,a0,1                               allGrp
20401fc0:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
20401fc4:    df1ff06f              j    20401db4 <_svfprintf_r+0x2a0>           allGrp, Branch-Instr, controlFlowGrp
			 * ``A negative field width argument is taken as a
			 * - flag followed by a positive field width.''
			 *	-- ANSI X3J11
			 * They don't exclude field widths read from args.
			 */
			width = GET_ARG (n, ap, int);
20401fc8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20401fcc:    00450593              addi    a1,a0,4                              allGrp
20401fd0:    feb42223              sw    a1,-28(s0)                             allGrp
20401fd4:    00052503              lw    a0,0(a0)                               allGrp
20401fd8:    fca42023              sw    a0,-64(s0)                             allGrp
#ifndef _NO_POS_ARGS
			is_pos_arg = old_is_pos_arg;
#endif
			if (width >= 0)
20401fdc:    fc042503              lw    a0,-64(s0)                             allGrp
20401fe0:    00000593              li    a1,0                                   allGrp
20401fe4:    00b54663              blt    a0,a1,20401ff0 <_svfprintf_r+0x4dc>   allGrp, Branch-Instr, controlFlowGrp
20401fe8:    0040006f              j    20401fec <_svfprintf_r+0x4d8>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				goto rflag;
20401fec:    dc9ff06f              j    20401db4 <_svfprintf_r+0x2a0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			width = -width;
20401ff0:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
20401ff4:    00000593              li    a1,0                                   allGrp
20401ff8:    40a58533              sub    a0,a1,a0                              allGrp
20401ffc:    fca42023              sw    a0,-64(s0)                             allGrp
20402000:    0040006f              j    20402004 <_svfprintf_r+0x4f0>           allGrp, Branch-Instr, controlFlowGrp
			/* FALLTHROUGH */
		case '-':
			flags |= LADJUST;
20402004:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402008:    00456513              ori    a0,a0,4                               allGrp
2040200c:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
20402010:    da5ff06f              j    20401db4 <_svfprintf_r+0x2a0>           allGrp, Branch-Instr, controlFlowGrp
		case '+':
			sign = '+';
20402014:    02b00513              li    a0,43                                  Branch-Tgt, allGrp
20402018:    faa40da3              sb    a0,-69(s0)                             allGrp
			goto rflag;
2040201c:    d99ff06f              j    20401db4 <_svfprintf_r+0x2a0>           allGrp, Branch-Instr, controlFlowGrp
		case '.':
			if ((ch = *fmt++) == '*') {
20402020:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20402024:    00150593              addi    a1,a0,1                              allGrp
20402028:    feb42023              sw    a1,-32(s0)                             allGrp
2040202c:    00054503              lbu    a0,0(a0)                              allGrp
20402030:    fca42e23              sw    a0,-36(s0)                             allGrp
20402034:    02a00593              li    a1,42                                  allGrp
20402038:    02b51e63              bne    a0,a1,20402074 <_svfprintf_r+0x560>   allGrp, Branch-Instr, controlFlowGrp
2040203c:    0040006f              j    20402040 <_svfprintf_r+0x52c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						fmt = old_fmt;
						goto rflag;
					}
				}
#endif /* !_NO_POS_ARGS */
				prec = GET_ARG (n, ap, int);
20402040:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402044:    00450593              addi    a1,a0,4                              allGrp
20402048:    feb42223              sw    a1,-28(s0)                             allGrp
2040204c:    00052503              lw    a0,0(a0)                               allGrp
20402050:    faa42e23              sw    a0,-68(s0)                             allGrp
#ifndef _NO_POS_ARGS
				is_pos_arg = old_is_pos_arg;
#endif
				if (prec < 0)
20402054:    fbc42503              lw    a0,-68(s0)                             allGrp
20402058:    fff00593              li    a1,-1                                  allGrp
2040205c:    00a5ca63              blt    a1,a0,20402070 <_svfprintf_r+0x55c>   allGrp, Branch-Instr, controlFlowGrp
20402060:    0040006f              j    20402064 <_svfprintf_r+0x550>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					prec = -1;
20402064:    fff00513              li    a0,-1                                  Branch-Tgt, allGrp
20402068:    faa42e23              sw    a0,-68(s0)                             allGrp
2040206c:    0040006f              j    20402070 <_svfprintf_r+0x55c>           allGrp, Branch-Instr, controlFlowGrp
				goto rflag;
20402070:    d45ff06f              j    20401db4 <_svfprintf_r+0x2a0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			}
			n = 0;
20402074:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20402078:    fca42c23              sw    a0,-40(s0)                             allGrp
			while (is_digit (ch)) {
2040207c:    0040006f              j    20402080 <_svfprintf_r+0x56c>           allGrp, Branch-Instr, controlFlowGrp
20402080:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20402084:    fd050513              addi    a0,a0,-48                            allGrp
20402088:    00900593              li    a1,9                                   allGrp
2040208c:    04a5e063              bltu    a1,a0,204020cc <_svfprintf_r+0x5b8>  allGrp, Branch-Instr, controlFlowGrp
20402090:    0040006f              j    20402094 <_svfprintf_r+0x580>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				n = 10 * n + to_digit (ch);
20402094:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20402098:    00a00593              li    a1,10                                  allGrp
2040209c:    00010097              auipc    ra,0x10                             allGrp
204020a0:    1b8080e7              jalr    440(ra) # 20412254 <__mulsi3>        Call-Instr, allGrp, controlFlowGrp
204020a4:    fdc42583              lw    a1,-36(s0)                             Return-Tgt, allGrp
204020a8:    00b50533              add    a0,a0,a1                              allGrp
204020ac:    fd050513              addi    a0,a0,-48                            allGrp
204020b0:    fca42c23              sw    a0,-40(s0)                             allGrp
				ch = *fmt++;
204020b4:    fe042503              lw    a0,-32(s0)                             allGrp
204020b8:    00150593              addi    a1,a0,1                              allGrp
204020bc:    feb42023              sw    a1,-32(s0)                             allGrp
204020c0:    00054503              lbu    a0,0(a0)                              allGrp
204020c4:    fca42e23              sw    a0,-36(s0)                             allGrp
			while (is_digit (ch)) {
204020c8:    fb9ff06f              j    20402080 <_svfprintf_r+0x56c>           allGrp, Branch-Instr, controlFlowGrp
			}
			prec = n < 0 ? -1 : n;
204020cc:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
204020d0:    fff00593              li    a1,-1                                  allGrp
204020d4:    00a5ca63              blt    a1,a0,204020e8 <_svfprintf_r+0x5d4>   allGrp, Branch-Instr, controlFlowGrp
204020d8:    0040006f              j    204020dc <_svfprintf_r+0x5c8>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204020dc:    fff00513              li    a0,-1                                  Branch-Tgt, allGrp
204020e0:    e8a42a23              sw    a0,-364(s0)                            allGrp
204020e4:    0100006f              j    204020f4 <_svfprintf_r+0x5e0>           allGrp, Branch-Instr, controlFlowGrp
204020e8:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
204020ec:    e8a42a23              sw    a0,-364(s0)                            allGrp
204020f0:    0040006f              j    204020f4 <_svfprintf_r+0x5e0>           allGrp, Branch-Instr, controlFlowGrp
204020f4:    e9442503              lw    a0,-364(s0)                            Branch-Tgt, allGrp
204020f8:    faa42e23              sw    a0,-68(s0)                             allGrp
			goto reswitch;
204020fc:    cd1ff06f              j    20401dcc <_svfprintf_r+0x2b8>           allGrp, Branch-Instr, controlFlowGrp
			/*
			 * ``Note that 0 is taken as a flag, not as the
			 * beginning of a field width.''
			 *	-- ANSI X3J11
			 */
			flags |= ZEROPAD;
20402100:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402104:    08056513              ori    a0,a0,128                             allGrp
20402108:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
2040210c:    ca9ff06f              j    20401db4 <_svfprintf_r+0x2a0>           allGrp, Branch-Instr, controlFlowGrp
		case '1': case '2': case '3': case '4':
		case '5': case '6': case '7': case '8': case '9':
			n = 0;
20402110:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20402114:    fca42c23              sw    a0,-40(s0)                             allGrp
			do {
20402118:    0040006f              j    2040211c <_svfprintf_r+0x608>           allGrp, Branch-Instr, controlFlowGrp
				n = 10 * n + to_digit (ch);
2040211c:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20402120:    00a00593              li    a1,10                                  allGrp
20402124:    00010097              auipc    ra,0x10                             allGrp
20402128:    130080e7              jalr    304(ra) # 20412254 <__mulsi3>        Call-Instr, allGrp, controlFlowGrp
2040212c:    fdc42583              lw    a1,-36(s0)                             Return-Tgt, allGrp
20402130:    00b50533              add    a0,a0,a1                              allGrp
20402134:    fd050513              addi    a0,a0,-48                            allGrp
20402138:    fca42c23              sw    a0,-40(s0)                             allGrp
				ch = *fmt++;
2040213c:    fe042503              lw    a0,-32(s0)                             allGrp
20402140:    00150593              addi    a1,a0,1                              allGrp
20402144:    feb42023              sw    a1,-32(s0)                             allGrp
20402148:    00054503              lbu    a0,0(a0)                              allGrp
2040214c:    fca42e23              sw    a0,-36(s0)                             allGrp
			} while (is_digit (ch));
20402150:    0040006f              j    20402154 <_svfprintf_r+0x640>           allGrp, Branch-Instr, controlFlowGrp
20402154:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20402158:    fd050513              addi    a0,a0,-48                            allGrp
2040215c:    00a00593              li    a1,10                                  allGrp
20402160:    fab56ee3              bltu    a0,a1,2040211c <_svfprintf_r+0x608>  allGrp, Branch-Instr, controlFlowGrp
20402164:    0040006f              j    20402168 <_svfprintf_r+0x654>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				}
				else
					goto error;
			}
#endif /* !_NO_POS_ARGS */
			width = n;
20402168:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040216c:    fca42023              sw    a0,-64(s0)                             allGrp
			goto reswitch;
20402170:    c5dff06f              j    20401dcc <_svfprintf_r+0x2b8>           allGrp, Branch-Instr, controlFlowGrp
#ifdef FLOATING_POINT
		case 'L':
			flags |= LONGDBL;
20402174:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402178:    00856513              ori    a0,a0,8                               allGrp
2040217c:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
20402180:    c35ff06f              j    20401db4 <_svfprintf_r+0x2a0>           allGrp, Branch-Instr, controlFlowGrp
			if (*fmt == 'h') {
				fmt++;
				flags |= CHARINT;
			} else
#endif
				flags |= SHORTINT;
20402184:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402188:    04056513              ori    a0,a0,64                              allGrp
2040218c:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
20402190:    c25ff06f              j    20401db4 <_svfprintf_r+0x2a0>           allGrp, Branch-Instr, controlFlowGrp
			if (*fmt == 'l') {
				fmt++;
				flags |= QUADINT;
			} else
#endif
				flags |= LONGINT;
20402194:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402198:    01056513              ori    a0,a0,16                              allGrp
2040219c:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
204021a0:    c15ff06f              j    20401db4 <_svfprintf_r+0x2a0>           allGrp, Branch-Instr, controlFlowGrp
		case 'q': /* extension */
			flags |= QUADINT;
204021a4:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
204021a8:    01056513              ori    a0,a0,16                              allGrp
204021ac:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
204021b0:    c05ff06f              j    20401db4 <_svfprintf_r+0x2a0>           allGrp, Branch-Instr, controlFlowGrp
		    flags |= QUADINT;
		  goto rflag;
		case 'C':
#endif /* _WANT_IO_C99_FORMATS */
		case 'c':
			cp = buf;
204021b4:    ef440513              addi    a0,s0,-268                           Branch-Tgt, allGrp
204021b8:    fca42823              sw    a0,-48(s0)                             allGrp
				}
			}
			else
#endif /* _MB_CAPABLE */
			{
				*cp = GET_ARG (N, ap, int);
204021bc:    fe442503              lw    a0,-28(s0)                             allGrp
204021c0:    00450593              addi    a1,a0,4                              allGrp
204021c4:    feb42223              sw    a1,-28(s0)                             allGrp
204021c8:    00052503              lw    a0,0(a0)                               allGrp
204021cc:    fd042583              lw    a1,-48(s0)                             allGrp
204021d0:    00a58023              sb    a0,0(a1)                               allGrp
204021d4:    00100513              li    a0,1                                   allGrp
				size = 1;
204021d8:    f6a42a23              sw    a0,-140(s0)                            allGrp
204021dc:    00000513              li    a0,0                                   allGrp
			}
			sign = '\0';
204021e0:    faa40da3              sb    a0,-69(s0)                             allGrp
			break;
204021e4:    52d0006f              j    20402f10 <_svfprintf_r+0x13fc>          allGrp, Branch-Instr, controlFlowGrp
		case 'D':  /* extension */
			flags |= LONGINT;
204021e8:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
204021ec:    01056513              ori    a0,a0,16                              allGrp
204021f0:    fca42623              sw    a0,-52(s0)                             allGrp
204021f4:    0040006f              j    204021f8 <_svfprintf_r+0x6e4>           allGrp, Branch-Instr, controlFlowGrp
			/*FALLTHROUGH*/
		case 'd':
		case 'i':
			_uquad = SARG ();
204021f8:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
204021fc:    01057513              andi    a0,a0,16                             allGrp
20402200:    00000593              li    a1,0                                   allGrp
20402204:    02b50063              beq    a0,a1,20402224 <_svfprintf_r+0x710>   allGrp, Branch-Instr, controlFlowGrp
20402208:    0040006f              j    2040220c <_svfprintf_r+0x6f8>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040220c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402210:    00450593              addi    a1,a0,4                              allGrp
20402214:    feb42223              sw    a1,-28(s0)                             allGrp
20402218:    00052503              lw    a0,0(a0)                               allGrp
2040221c:    e8a42823              sw    a0,-368(s0)                            allGrp
20402220:    0840006f              j    204022a4 <_svfprintf_r+0x790>           allGrp, Branch-Instr, controlFlowGrp
20402224:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402228:    04057513              andi    a0,a0,64                             allGrp
2040222c:    00000593              li    a1,0                                   allGrp
20402230:    02b50063              beq    a0,a1,20402250 <_svfprintf_r+0x73c>   allGrp, Branch-Instr, controlFlowGrp
20402234:    0040006f              j    20402238 <_svfprintf_r+0x724>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402238:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040223c:    00450593              addi    a1,a0,4                              allGrp
20402240:    feb42223              sw    a1,-28(s0)                             allGrp
20402244:    00051503              lh    a0,0(a0)                               allGrp
20402248:    e8a42623              sw    a0,-372(s0)                            allGrp
2040224c:    04c0006f              j    20402298 <_svfprintf_r+0x784>           allGrp, Branch-Instr, controlFlowGrp
20402250:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20402254:    02051063              bnez    a0,20402274 <_svfprintf_r+0x760>     allGrp, Branch-Instr, controlFlowGrp
20402258:    0040006f              j    2040225c <_svfprintf_r+0x748>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040225c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402260:    00450593              addi    a1,a0,4                              allGrp
20402264:    feb42223              sw    a1,-28(s0)                             allGrp
20402268:    00050503              lb    a0,0(a0)                               allGrp
2040226c:    e8a42423              sw    a0,-376(s0)                            allGrp
20402270:    01c0006f              j    2040228c <_svfprintf_r+0x778>           allGrp, Branch-Instr, controlFlowGrp
20402274:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402278:    00450593              addi    a1,a0,4                              allGrp
2040227c:    feb42223              sw    a1,-28(s0)                             allGrp
20402280:    00052503              lw    a0,0(a0)                               allGrp
20402284:    e8a42423              sw    a0,-376(s0)                            allGrp
20402288:    0040006f              j    2040228c <_svfprintf_r+0x778>           allGrp, Branch-Instr, controlFlowGrp
2040228c:    e8842503              lw    a0,-376(s0)                            Branch-Tgt, allGrp
20402290:    e8a42623              sw    a0,-372(s0)                            allGrp
20402294:    0040006f              j    20402298 <_svfprintf_r+0x784>           allGrp, Branch-Instr, controlFlowGrp
20402298:    e8c42503              lw    a0,-372(s0)                            Branch-Tgt, allGrp
2040229c:    e8a42823              sw    a0,-368(s0)                            allGrp
204022a0:    0040006f              j    204022a4 <_svfprintf_r+0x790>           allGrp, Branch-Instr, controlFlowGrp
204022a4:    e9042503              lw    a0,-368(s0)                            Branch-Tgt, allGrp
204022a8:    f8a42223              sw    a0,-124(s0)                            allGrp
#ifndef _NO_LONGLONG
			if ((quad_t)_uquad < 0)
#else
			if ((long) _uquad < 0)
204022ac:    f8442503              lw    a0,-124(s0)                            allGrp
204022b0:    fff00593              li    a1,-1                                  allGrp
204022b4:    02a5c263              blt    a1,a0,204022d8 <_svfprintf_r+0x7c4>   allGrp, Branch-Instr, controlFlowGrp
204022b8:    0040006f              j    204022bc <_svfprintf_r+0x7a8>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
#endif
			{

				_uquad = -_uquad;
204022bc:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
204022c0:    00000593              li    a1,0                                   allGrp
204022c4:    40a58533              sub    a0,a1,a0                              allGrp
204022c8:    f8a42223              sw    a0,-124(s0)                            allGrp
204022cc:    02d00513              li    a0,45                                  allGrp
				sign = '-';
204022d0:    faa40da3              sb    a0,-69(s0)                             allGrp
			}
204022d4:    0040006f              j    204022d8 <_svfprintf_r+0x7c4>           allGrp, Branch-Instr, controlFlowGrp
			base = DEC;
204022d8:    00100513              li    a0,1                                   Branch-Tgt, allGrp
204022dc:    f8a401a3              sb    a0,-125(s0)                            allGrp
			goto number;
204022e0:    1a50006f              j    20402c84 <_svfprintf_r+0x1170>          allGrp, Branch-Instr, controlFlowGrp
		case 'E':
		case 'f':
		case 'g':
		case 'G':
# ifdef _NO_LONGDBL
			if (flags & LONGDBL) {
204022e4:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
204022e8:    00857513              andi    a0,a0,8                              allGrp
204022ec:    00000593              li    a1,0                                   allGrp
204022f0:    04b50863              beq    a0,a1,20402340 <_svfprintf_r+0x82c>   allGrp, Branch-Instr, controlFlowGrp
204022f4:    0040006f              j    204022f8 <_svfprintf_r+0x7e4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				_fpvalue = (double) GET_ARG (N, ap, _LONG_DOUBLE);
204022f8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204022fc:    00450593              addi    a1,a0,4                              allGrp
20402300:    feb42223              sw    a1,-28(s0)                             allGrp
20402304:    00052503              lw    a0,0(a0)                               allGrp
20402308:    00052583              lw    a1,0(a0)                               allGrp
2040230c:    00452603              lw    a2,4(a0)                               allGrp
20402310:    00852683              lw    a3,8(a0)                               allGrp
20402314:    00c52503              lw    a0,12(a0)                              allGrp
20402318:    eca42623              sw    a0,-308(s0)                            allGrp
2040231c:    ecd42423              sw    a3,-312(s0)                            allGrp
20402320:    ecc42223              sw    a2,-316(s0)                            allGrp
20402324:    ecb42023              sw    a1,-320(s0)                            allGrp
20402328:    ec040513              addi    a0,s0,-320                           allGrp
2040232c:    00010097              auipc    ra,0x10                             allGrp
20402330:    a44080e7              jalr    -1468(ra) # 20411d70 <__trunctfdf2>  Call-Instr, allGrp, controlFlowGrp
20402334:    fab42223              sw    a1,-92(s0)                             Return-Tgt, allGrp
20402338:    faa42023              sw    a0,-96(s0)                             allGrp
			} else {
2040233c:    0300006f              j    2040236c <_svfprintf_r+0x858>           allGrp, Branch-Instr, controlFlowGrp
				_fpvalue = GET_ARG (N, ap, double);
20402340:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402344:    00750513              addi    a0,a0,7                              allGrp
20402348:    ff857513              andi    a0,a0,-8                             allGrp
2040234c:    00850593              addi    a1,a0,8                              allGrp
20402350:    feb42223              sw    a1,-28(s0)                             allGrp
20402354:    00052583              lw    a1,0(a0)                               allGrp
20402358:    00456513              ori    a0,a0,4                               allGrp
2040235c:    00052503              lw    a0,0(a0)                               allGrp
20402360:    faa42223              sw    a0,-92(s0)                             allGrp
20402364:    fab42023              sw    a1,-96(s0)                             allGrp
20402368:    0040006f              j    2040236c <_svfprintf_r+0x858>           allGrp, Branch-Instr, controlFlowGrp

			   If the output is infinite or NaN, leading
			   zeros are not permitted.  Otherwise, scanf
			   could not read what printf wrote.
			 */
			if (isinf (_fpvalue)) {
2040236c:    fa442583              lw    a1,-92(s0)                             Branch-Tgt, allGrp
20402370:    fa042503              lw    a0,-96(s0)                             allGrp
20402374:    00007097              auipc    ra,0x7                              allGrp
20402378:    50c080e7              jalr    1292(ra) # 20409880 <__fpclassifyd>  Call-Instr, allGrp, controlFlowGrp
2040237c:    00100593              li    a1,1                                   Return-Tgt, allGrp
20402380:    08b51263              bne    a0,a1,20402404 <_svfprintf_r+0x8f0>   allGrp, Branch-Instr, controlFlowGrp
20402384:    0040006f              j    20402388 <_svfprintf_r+0x874>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				if (_fpvalue < 0)
20402388:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
2040238c:    fa442583              lw    a1,-92(s0)                             allGrp
20402390:    00000613              li    a2,0                                   allGrp
20402394:    e8c42223              sw    a2,-380(s0)                            allGrp
20402398:    e8442683              lw    a3,-380(s0)                            allGrp
2040239c:    0000e097              auipc    ra,0xe                              allGrp
204023a0:    e44080e7              jalr    -444(ra) # 204101e0 <__ledf2>        Call-Instr, allGrp, controlFlowGrp
204023a4:    fff00593              li    a1,-1                                  Return-Tgt, allGrp
204023a8:    00a5ca63              blt    a1,a0,204023bc <_svfprintf_r+0x8a8>   allGrp, Branch-Instr, controlFlowGrp
204023ac:    0040006f              j    204023b0 <_svfprintf_r+0x89c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					sign = '-';
204023b0:    02d00513              li    a0,45                                  Branch-Tgt, allGrp
204023b4:    faa40da3              sb    a0,-69(s0)                             allGrp
204023b8:    0040006f              j    204023bc <_svfprintf_r+0x8a8>           allGrp, Branch-Instr, controlFlowGrp
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
204023bc:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
204023c0:    04700593              li    a1,71                                  allGrp
204023c4:    00a5cc63              blt    a1,a0,204023dc <_svfprintf_r+0x8c8>   allGrp, Branch-Instr, controlFlowGrp
204023c8:    0040006f              j    204023cc <_svfprintf_r+0x8b8>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					cp = "INF";
204023cc:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
204023d0:    56050513              addi    a0,a0,1376 # 20412560 <_svfprintf_r.zeroes+0x10>allGrp
204023d4:    fca42823              sw    a0,-48(s0)                             allGrp
204023d8:    0140006f              j    204023ec <_svfprintf_r+0x8d8>           allGrp, Branch-Instr, controlFlowGrp
				else
					cp = "inf";
204023dc:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
204023e0:    56450513              addi    a0,a0,1380 # 20412564 <_svfprintf_r.zeroes+0x14>allGrp
204023e4:    fca42823              sw    a0,-48(s0)                             allGrp
204023e8:    0040006f              j    204023ec <_svfprintf_r+0x8d8>           allGrp, Branch-Instr, controlFlowGrp
				size = 3;
204023ec:    00300513              li    a0,3                                   Branch-Tgt, allGrp
204023f0:    f6a42a23              sw    a0,-140(s0)                            allGrp
				flags &= ~ZEROPAD;
204023f4:    fcc42503              lw    a0,-52(s0)                             allGrp
204023f8:    f7f57513              andi    a0,a0,-129                           allGrp
204023fc:    fca42623              sw    a0,-52(s0)                             allGrp
				break;
20402400:    3110006f              j    20402f10 <_svfprintf_r+0x13fc>          allGrp, Branch-Instr, controlFlowGrp
			}
			if (isnan (_fpvalue)) {
20402404:    fa442583              lw    a1,-92(s0)                             Branch-Tgt, allGrp
20402408:    fa042503              lw    a0,-96(s0)                             allGrp
2040240c:    00007097              auipc    ra,0x7                              allGrp
20402410:    474080e7              jalr    1140(ra) # 20409880 <__fpclassifyd>  Call-Instr, allGrp, controlFlowGrp
20402414:    00000593              li    a1,0                                   Return-Tgt, allGrp
20402418:    0eb51463              bne    a0,a1,20402500 <_svfprintf_r+0x9ec>   allGrp, Branch-Instr, controlFlowGrp
2040241c:    0040006f              j    20402420 <_svfprintf_r+0x90c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				if (signbit (_fpvalue))
20402420:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20402424:    02051263              bnez    a0,20402448 <_svfprintf_r+0x934>     allGrp, Branch-Instr, controlFlowGrp
20402428:    0040006f              j    2040242c <_svfprintf_r+0x918>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040242c:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
20402430:    fa442583              lw    a1,-92(s0)                             allGrp
20402434:    0000f097              auipc    ra,0xf                              allGrp
20402438:    65c080e7              jalr    1628(ra) # 20411a90 <__truncdfsf2>   Call-Instr, allGrp, controlFlowGrp
2040243c:    00000593              li    a1,0                                   Return-Tgt, allGrp
20402440:    06b54663              blt    a0,a1,204024ac <_svfprintf_r+0x998>   allGrp, Branch-Instr, controlFlowGrp
20402444:    0740006f              j    204024b8 <_svfprintf_r+0x9a4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402448:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040244c:    00051c63              bnez    a0,20402464 <_svfprintf_r+0x950>     allGrp, Branch-Instr, controlFlowGrp
20402450:    0040006f              j    20402454 <_svfprintf_r+0x940>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402454:    fa442503              lw    a0,-92(s0)                             Branch-Tgt, allGrp
20402458:    00000593              li    a1,0                                   allGrp
2040245c:    04b54863              blt    a0,a1,204024ac <_svfprintf_r+0x998>   allGrp, Branch-Instr, controlFlowGrp
20402460:    0580006f              j    204024b8 <_svfprintf_r+0x9a4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402464:    fa042583              lw    a1,-96(s0)                             Branch-Tgt, allGrp
20402468:    fa442603              lw    a2,-92(s0)                             allGrp
2040246c:    eb040513              addi    a0,s0,-336                           allGrp
20402470:    0000f097              auipc    ra,0xf                              allGrp
20402474:    3b8080e7              jalr    952(ra) # 20411828 <__extenddftf2>   Call-Instr, allGrp, controlFlowGrp
20402478:    ebd44503              lbu    a0,-323(s0)                           Return-Tgt, allGrp
2040247c:    00851513              slli    a0,a0,0x8                            allGrp
20402480:    ebc44583              lbu    a1,-324(s0)                           allGrp
20402484:    00b56533              or    a0,a0,a1                               allGrp
20402488:    ebf44583              lbu    a1,-321(s0)                           allGrp
2040248c:    00859593              slli    a1,a1,0x8                            allGrp
20402490:    ebe44603              lbu    a2,-322(s0)                           allGrp
20402494:    00c5e5b3              or    a1,a1,a2                               allGrp
20402498:    01059593              slli    a1,a1,0x10                           allGrp
2040249c:    00a5e533              or    a0,a1,a0                               allGrp
204024a0:    fff00593              li    a1,-1                                  allGrp
204024a4:    00a5ca63              blt    a1,a0,204024b8 <_svfprintf_r+0x9a4>   allGrp, Branch-Instr, controlFlowGrp
204024a8:    0040006f              j    204024ac <_svfprintf_r+0x998>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					sign = '-';
204024ac:    02d00513              li    a0,45                                  Branch-Tgt, allGrp
204024b0:    faa40da3              sb    a0,-69(s0)                             allGrp
204024b4:    0040006f              j    204024b8 <_svfprintf_r+0x9a4>           allGrp, Branch-Instr, controlFlowGrp
				if (ch <= 'G') /* 'A', 'E', 'F', or 'G' */
204024b8:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
204024bc:    04700593              li    a1,71                                  allGrp
204024c0:    00a5cc63              blt    a1,a0,204024d8 <_svfprintf_r+0x9c4>   allGrp, Branch-Instr, controlFlowGrp
204024c4:    0040006f              j    204024c8 <_svfprintf_r+0x9b4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					cp = "NAN";
204024c8:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
204024cc:    56850513              addi    a0,a0,1384 # 20412568 <_svfprintf_r.zeroes+0x18>allGrp
204024d0:    fca42823              sw    a0,-48(s0)                             allGrp
204024d4:    0140006f              j    204024e8 <_svfprintf_r+0x9d4>           allGrp, Branch-Instr, controlFlowGrp
				else
					cp = "nan";
204024d8:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
204024dc:    56c50513              addi    a0,a0,1388 # 2041256c <_svfprintf_r.zeroes+0x1c>allGrp
204024e0:    fca42823              sw    a0,-48(s0)                             allGrp
204024e4:    0040006f              j    204024e8 <_svfprintf_r+0x9d4>           allGrp, Branch-Instr, controlFlowGrp
				size = 3;
204024e8:    00300513              li    a0,3                                   Branch-Tgt, allGrp
204024ec:    f6a42a23              sw    a0,-140(s0)                            allGrp
				flags &= ~ZEROPAD;
204024f0:    fcc42503              lw    a0,-52(s0)                             allGrp
204024f4:    f7f57513              andi    a0,a0,-129                           allGrp
204024f8:    fca42623              sw    a0,-52(s0)                             allGrp
				break;
204024fc:    2150006f              j    20402f10 <_svfprintf_r+0x13fc>          allGrp, Branch-Instr, controlFlowGrp
				  }
				else
				  cp = buf;
			} else
# endif /* _WANT_IO_C99_FORMATS */
			if (prec == -1) {
20402500:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20402504:    fff00593              li    a1,-1                                  allGrp
20402508:    00b51a63              bne    a0,a1,2040251c <_svfprintf_r+0xa08>   allGrp, Branch-Instr, controlFlowGrp
2040250c:    0040006f              j    20402510 <_svfprintf_r+0x9fc>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				prec = DEFPREC;
20402510:    00600513              li    a0,6                                   Branch-Tgt, allGrp
20402514:    faa42e23              sw    a0,-68(s0)                             allGrp
			} else if ((ch == 'g' || ch == 'G') && prec == 0) {
20402518:    0440006f              j    2040255c <_svfprintf_r+0xa48>           allGrp, Branch-Instr, controlFlowGrp
2040251c:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20402520:    06700593              li    a1,103                                 allGrp
20402524:    00b50c63              beq    a0,a1,2040253c <_svfprintf_r+0xa28>   allGrp, Branch-Instr, controlFlowGrp
20402528:    0040006f              j    2040252c <_svfprintf_r+0xa18>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040252c:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20402530:    04700593              li    a1,71                                  allGrp
20402534:    02b51263              bne    a0,a1,20402558 <_svfprintf_r+0xa44>   allGrp, Branch-Instr, controlFlowGrp
20402538:    0040006f              j    2040253c <_svfprintf_r+0xa28>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040253c:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20402540:    00000593              li    a1,0                                   allGrp
20402544:    00b51a63              bne    a0,a1,20402558 <_svfprintf_r+0xa44>   allGrp, Branch-Instr, controlFlowGrp
20402548:    0040006f              j    2040254c <_svfprintf_r+0xa38>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				prec = 1;
2040254c:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20402550:    faa42e23              sw    a0,-68(s0)                             allGrp
			}
20402554:    0040006f              j    20402558 <_svfprintf_r+0xa44>           allGrp, Branch-Instr, controlFlowGrp
20402558:    0040006f              j    2040255c <_svfprintf_r+0xa48>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

			flags |= FPT;
2040255c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402560:    10056513              ori    a0,a0,256                             allGrp
20402564:    fca42623              sw    a0,-52(s0)                             allGrp

			cp = cvt (data, _fpvalue, prec, flags, &softsign,
20402568:    ff042503              lw    a0,-16(s0)                             allGrp
2040256c:    fa442603              lw    a2,-92(s0)                             allGrp
20402570:    fa042583              lw    a1,-96(s0)                             allGrp
20402574:    fbc42683              lw    a3,-68(s0)                             allGrp
20402578:    fcc42703              lw    a4,-52(s0)                             allGrp
				  &expt, ch, &ndig, cp);
2040257c:    fdc42883              lw    a7,-36(s0)                             allGrp
20402580:    fd042783              lw    a5,-48(s0)                             allGrp
			cp = cvt (data, _fpvalue, prec, flags, &softsign,
20402584:    00010813              mv    a6,sp                                  allGrp
20402588:    00f82223              sw    a5,4(a6)                               allGrp
2040258c:    f8840793              addi    a5,s0,-120                           allGrp
20402590:    00f82023              sw    a5,0(a6)                               allGrp
20402594:    faf40793              addi    a5,s0,-81                            allGrp
20402598:    f9c40813              addi    a6,s0,-100                           allGrp
2040259c:    00002097              auipc    ra,0x2                              allGrp
204025a0:    144080e7              jalr    324(ra) # 204046e0 <cvt>             Call-Instr, allGrp, controlFlowGrp
204025a4:    fca42823              sw    a0,-48(s0)                             Return-Tgt, allGrp

			if (ch == 'g' || ch == 'G') {
204025a8:    fdc42503              lw    a0,-36(s0)                             allGrp
204025ac:    06700593              li    a1,103                                 allGrp
204025b0:    00b50c63              beq    a0,a1,204025c8 <_svfprintf_r+0xab4>   allGrp, Branch-Instr, controlFlowGrp
204025b4:    0040006f              j    204025b8 <_svfprintf_r+0xaa4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204025b8:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
204025bc:    04700593              li    a1,71                                  allGrp
204025c0:    04b51463              bne    a0,a1,20402608 <_svfprintf_r+0xaf4>   allGrp, Branch-Instr, controlFlowGrp
204025c4:    0040006f              j    204025c8 <_svfprintf_r+0xab4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				if (expt <= -4 || expt > prec)
204025c8:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
204025cc:    ffd00593              li    a1,-3                                  allGrp
204025d0:    00b54c63              blt    a0,a1,204025e8 <_svfprintf_r+0xad4>   allGrp, Branch-Instr, controlFlowGrp
204025d4:    0040006f              j    204025d8 <_svfprintf_r+0xac4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204025d8:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
204025dc:    fbc42583              lw    a1,-68(s0)                             allGrp
204025e0:    00a5dc63              ble    a0,a1,204025f8 <_svfprintf_r+0xae4>   allGrp, Branch-Instr, controlFlowGrp
204025e4:    0040006f              j    204025e8 <_svfprintf_r+0xad4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					ch -= 2; /* 'e' or 'E' */
204025e8:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
204025ec:    ffe50513              addi    a0,a0,-2                             allGrp
204025f0:    fca42e23              sw    a0,-36(s0)                             allGrp
204025f4:    0100006f              j    20402604 <_svfprintf_r+0xaf0>           allGrp, Branch-Instr, controlFlowGrp
				else
					ch = 'g';
204025f8:    06700513              li    a0,103                                 Branch-Tgt, allGrp
204025fc:    fca42e23              sw    a0,-36(s0)                             allGrp
20402600:    0040006f              j    20402604 <_svfprintf_r+0xaf0>           allGrp, Branch-Instr, controlFlowGrp
			}
20402604:    0040006f              j    20402608 <_svfprintf_r+0xaf4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
# ifdef _WANT_IO_C99_FORMATS
			else if (ch == 'F')
				ch = 'f';
# endif
			if (ch <= 'e') {	/* 'a', 'A', 'e', or 'E' fmt */
20402608:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040260c:    06500593              li    a1,101                                 allGrp
20402610:    06a5cc63              blt    a1,a0,20402688 <_svfprintf_r+0xb74>   allGrp, Branch-Instr, controlFlowGrp
20402614:    0040006f              j    20402618 <_svfprintf_r+0xb04>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				--expt;
20402618:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
2040261c:    fff50513              addi    a0,a0,-1                             allGrp
20402620:    f8a42e23              sw    a0,-100(s0)                            allGrp
				expsize = exponent (expstr, expt, ch);
20402624:    f9c42583              lw    a1,-100(s0)                            allGrp
20402628:    fdc42603              lw    a2,-36(s0)                             allGrp
2040262c:    f9140513              addi    a0,s0,-111                           allGrp
20402630:    00002097              auipc    ra,0x2                              allGrp
20402634:    3b4080e7              jalr    948(ra) # 204049e4 <exponent>        Call-Instr, allGrp, controlFlowGrp
20402638:    f8a42c23              sw    a0,-104(s0)                            Return-Tgt, allGrp
				size = expsize + ndig;
2040263c:    f9842503              lw    a0,-104(s0)                            allGrp
20402640:    f8842583              lw    a1,-120(s0)                            allGrp
20402644:    00b50533              add    a0,a0,a1                              allGrp
20402648:    f6a42a23              sw    a0,-140(s0)                            allGrp
				if (ndig > 1 || flags & ALT)
2040264c:    f8842503              lw    a0,-120(s0)                            allGrp
20402650:    00100593              li    a1,1                                   allGrp
20402654:    00a5ce63              blt    a1,a0,20402670 <_svfprintf_r+0xb5c>   allGrp, Branch-Instr, controlFlowGrp
20402658:    0040006f              j    2040265c <_svfprintf_r+0xb48>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040265c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402660:    00157513              andi    a0,a0,1                              allGrp
20402664:    00000593              li    a1,0                                   allGrp
20402668:    00b50e63              beq    a0,a1,20402684 <_svfprintf_r+0xb70>   allGrp, Branch-Instr, controlFlowGrp
2040266c:    0040006f              j    20402670 <_svfprintf_r+0xb5c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					size += decp_len;
20402670:    fb042503              lw    a0,-80(s0)                             Branch-Tgt, allGrp
20402674:    f7442583              lw    a1,-140(s0)                            allGrp
20402678:    00a58533              add    a0,a1,a0                              allGrp
2040267c:    f6a42a23              sw    a0,-140(s0)                            allGrp
20402680:    0040006f              j    20402684 <_svfprintf_r+0xb70>           allGrp, Branch-Instr, controlFlowGrp
# ifdef _WANT_IO_C99_FORMATS
				flags &= ~GROUPING;
# endif
			} else {
20402684:    15c0006f              j    204027e0 <_svfprintf_r+0xccc>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				if (ch == 'f') {		/* f fmt */
20402688:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040268c:    06600593              li    a1,102                                 allGrp
20402690:    0ab51e63              bne    a0,a1,2040274c <_svfprintf_r+0xc38>   allGrp, Branch-Instr, controlFlowGrp
20402694:    0040006f              j    20402698 <_svfprintf_r+0xb84>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					if (expt > 0) {
20402698:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
2040269c:    00100593              li    a1,1                                   allGrp
204026a0:    04b54a63              blt    a0,a1,204026f4 <_svfprintf_r+0xbe0>   allGrp, Branch-Instr, controlFlowGrp
204026a4:    0040006f              j    204026a8 <_svfprintf_r+0xb94>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						size = expt;
204026a8:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
204026ac:    f6a42a23              sw    a0,-140(s0)                            allGrp
						if (prec || flags & ALT)
204026b0:    fbc42503              lw    a0,-68(s0)                             allGrp
204026b4:    00000593              li    a1,0                                   allGrp
204026b8:    00b51e63              bne    a0,a1,204026d4 <_svfprintf_r+0xbc0>   allGrp, Branch-Instr, controlFlowGrp
204026bc:    0040006f              j    204026c0 <_svfprintf_r+0xbac>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204026c0:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
204026c4:    00157513              andi    a0,a0,1                              allGrp
204026c8:    00000593              li    a1,0                                   allGrp
204026cc:    02b50263              beq    a0,a1,204026f0 <_svfprintf_r+0xbdc>   allGrp, Branch-Instr, controlFlowGrp
204026d0:    0040006f              j    204026d4 <_svfprintf_r+0xbc0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
							size += prec + decp_len;
204026d4:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
204026d8:    fb042583              lw    a1,-80(s0)                             allGrp
204026dc:    00b50533              add    a0,a0,a1                              allGrp
204026e0:    f7442583              lw    a1,-140(s0)                            allGrp
204026e4:    00a58533              add    a0,a1,a0                              allGrp
204026e8:    f6a42a23              sw    a0,-140(s0)                            allGrp
204026ec:    0040006f              j    204026f0 <_svfprintf_r+0xbdc>           allGrp, Branch-Instr, controlFlowGrp
					} else	/* "0.X" */
204026f0:    0580006f              j    20402748 <_svfprintf_r+0xc34>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						size = (prec || flags & ALT)
204026f4:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
204026f8:    00000593              li    a1,0                                   allGrp
204026fc:    00b51e63              bne    a0,a1,20402718 <_svfprintf_r+0xc04>   allGrp, Branch-Instr, controlFlowGrp
20402700:    0040006f              j    20402704 <_svfprintf_r+0xbf0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402704:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402708:    00157513              andi    a0,a0,1                              allGrp
2040270c:    00000593              li    a1,0                                   allGrp
20402710:    02b50063              beq    a0,a1,20402730 <_svfprintf_r+0xc1c>   allGrp, Branch-Instr, controlFlowGrp
20402714:    0040006f              j    20402718 <_svfprintf_r+0xc04>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
							  ? prec + 1 + decp_len
20402718:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
2040271c:    fb042583              lw    a1,-80(s0)                             allGrp
20402720:    00b50533              add    a0,a0,a1                              allGrp
20402724:    00150513              addi    a0,a0,1                              allGrp
						size = (prec || flags & ALT)
20402728:    e8a42023              sw    a0,-384(s0)                            allGrp
2040272c:    0100006f              j    2040273c <_svfprintf_r+0xc28>           allGrp, Branch-Instr, controlFlowGrp
20402730:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20402734:    e8a42023              sw    a0,-384(s0)                            allGrp
20402738:    0040006f              j    2040273c <_svfprintf_r+0xc28>           allGrp, Branch-Instr, controlFlowGrp
2040273c:    e8042503              lw    a0,-384(s0)                            Branch-Tgt, allGrp
20402740:    f6a42a23              sw    a0,-140(s0)                            allGrp
20402744:    0040006f              j    20402748 <_svfprintf_r+0xc34>           allGrp, Branch-Instr, controlFlowGrp
							  : 1;
				} else if (expt >= ndig) { /* fixed g fmt */
20402748:    08c0006f              j    204027d4 <_svfprintf_r+0xcc0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040274c:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
20402750:    f8842583              lw    a1,-120(s0)                            allGrp
20402754:    02b54e63              blt    a0,a1,20402790 <_svfprintf_r+0xc7c>   allGrp, Branch-Instr, controlFlowGrp
20402758:    0040006f              j    2040275c <_svfprintf_r+0xc48>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					size = expt;
2040275c:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
20402760:    f6a42a23              sw    a0,-140(s0)                            allGrp
					if (flags & ALT)
20402764:    fcc42503              lw    a0,-52(s0)                             allGrp
20402768:    00157513              andi    a0,a0,1                              allGrp
2040276c:    00000593              li    a1,0                                   allGrp
20402770:    00b50e63              beq    a0,a1,2040278c <_svfprintf_r+0xc78>   allGrp, Branch-Instr, controlFlowGrp
20402774:    0040006f              j    20402778 <_svfprintf_r+0xc64>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						size += decp_len;
20402778:    fb042503              lw    a0,-80(s0)                             Branch-Tgt, allGrp
2040277c:    f7442583              lw    a1,-140(s0)                            allGrp
20402780:    00a58533              add    a0,a1,a0                              allGrp
20402784:    f6a42a23              sw    a0,-140(s0)                            allGrp
20402788:    0040006f              j    2040278c <_svfprintf_r+0xc78>           allGrp, Branch-Instr, controlFlowGrp
				} else {
2040278c:    0440006f              j    204027d0 <_svfprintf_r+0xcbc>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					size = ndig + decp_len;
20402790:    f8842503              lw    a0,-120(s0)                            Branch-Tgt, allGrp
20402794:    fb042583              lw    a1,-80(s0)                             allGrp
20402798:    00b50533              add    a0,a0,a1                              allGrp
2040279c:    f6a42a23              sw    a0,-140(s0)                            allGrp
					if (expt <= 0)
204027a0:    f9c42503              lw    a0,-100(s0)                            allGrp
204027a4:    00000593              li    a1,0                                   allGrp
204027a8:    02a5c263              blt    a1,a0,204027cc <_svfprintf_r+0xcb8>   allGrp, Branch-Instr, controlFlowGrp
204027ac:    0040006f              j    204027b0 <_svfprintf_r+0xc9c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						size += 1 - expt;
204027b0:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
204027b4:    00100593              li    a1,1                                   allGrp
204027b8:    40a58533              sub    a0,a1,a0                              allGrp
204027bc:    f7442583              lw    a1,-140(s0)                            allGrp
204027c0:    00a58533              add    a0,a1,a0                              allGrp
204027c4:    f6a42a23              sw    a0,-140(s0)                            allGrp
204027c8:    0040006f              j    204027cc <_svfprintf_r+0xcb8>           allGrp, Branch-Instr, controlFlowGrp
204027cc:    0040006f              j    204027d0 <_svfprintf_r+0xcbc>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204027d0:    0040006f              j    204027d4 <_svfprintf_r+0xcc0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
							nrepeats++;
					}
					size += (nseps + nrepeats) * thsnd_len;
				} else
# endif
					lead = expt;
204027d4:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
204027d8:    f8a42623              sw    a0,-116(s0)                            allGrp
204027dc:    0040006f              j    204027e0 <_svfprintf_r+0xccc>           allGrp, Branch-Instr, controlFlowGrp
			}

			if (softsign)
204027e0:    faf44503              lbu    a0,-81(s0)                            Branch-Tgt, allGrp
204027e4:    00000593              li    a1,0                                   allGrp
204027e8:    00b50a63              beq    a0,a1,204027fc <_svfprintf_r+0xce8>   allGrp, Branch-Instr, controlFlowGrp
204027ec:    0040006f              j    204027f0 <_svfprintf_r+0xcdc>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				sign = '-';
204027f0:    02d00513              li    a0,45                                  Branch-Tgt, allGrp
204027f4:    faa40da3              sb    a0,-69(s0)                             allGrp
204027f8:    0040006f              j    204027fc <_svfprintf_r+0xce8>           allGrp, Branch-Instr, controlFlowGrp
			break;
204027fc:    7140006f              j    20402f10 <_svfprintf_r+0x13fc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
#ifndef _NO_LONGLONG
			if (flags & QUADINT)
				*GET_ARG (N, ap, quad_ptr_t) = ret;
			else
#endif
			if (flags & LONGINT)
20402800:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402804:    01057513              andi    a0,a0,16                             allGrp
20402808:    00000593              li    a1,0                                   allGrp
2040280c:    02b50263              beq    a0,a1,20402830 <_svfprintf_r+0xd1c>   allGrp, Branch-Instr, controlFlowGrp
20402810:    0040006f              j    20402814 <_svfprintf_r+0xd00>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				*GET_ARG (N, ap, long_ptr_t) = ret;
20402814:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
20402818:    fe442583              lw    a1,-28(s0)                             allGrp
2040281c:    00458613              addi    a2,a1,4                              allGrp
20402820:    fec42223              sw    a2,-28(s0)                             allGrp
20402824:    0005a583              lw    a1,0(a1)                               allGrp
20402828:    00a5a023              sw    a0,0(a1)                               allGrp
2040282c:    0540006f              j    20402880 <_svfprintf_r+0xd6c>           allGrp, Branch-Instr, controlFlowGrp
			else if (flags & SHORTINT)
20402830:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402834:    04057513              andi    a0,a0,64                             allGrp
20402838:    00000593              li    a1,0                                   allGrp
2040283c:    02b50263              beq    a0,a1,20402860 <_svfprintf_r+0xd4c>   allGrp, Branch-Instr, controlFlowGrp
20402840:    0040006f              j    20402844 <_svfprintf_r+0xd30>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				*GET_ARG (N, ap, short_ptr_t) = ret;
20402844:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
20402848:    fe442583              lw    a1,-28(s0)                             allGrp
2040284c:    00458613              addi    a2,a1,4                              allGrp
20402850:    fec42223              sw    a2,-28(s0)                             allGrp
20402854:    0005a583              lw    a1,0(a1)                               allGrp
20402858:    00a59023              sh    a0,0(a1)                               allGrp
2040285c:    0200006f              j    2040287c <_svfprintf_r+0xd68>           allGrp, Branch-Instr, controlFlowGrp
#ifdef _WANT_IO_C99_FORMATS
			else if (flags & CHARINT)
				*GET_ARG (N, ap, char_ptr_t) = ret;
#endif
			else
				*GET_ARG (N, ap, int_ptr_t) = ret;
20402860:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
20402864:    fe442583              lw    a1,-28(s0)                             allGrp
20402868:    00458613              addi    a2,a1,4                              allGrp
2040286c:    fec42223              sw    a2,-28(s0)                             allGrp
20402870:    0005a583              lw    a1,0(a1)                               allGrp
20402874:    00a5a023              sw    a0,0(a1)                               allGrp
20402878:    0040006f              j    2040287c <_svfprintf_r+0xd68>           allGrp, Branch-Instr, controlFlowGrp
2040287c:    0040006f              j    20402880 <_svfprintf_r+0xd6c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			continue;	/* no output */
20402880:    bd0ff06f              j    20401c50 <_svfprintf_r+0x13c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		case 'O': /* extension */
			flags |= LONGINT;
20402884:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402888:    01056513              ori    a0,a0,16                              allGrp
2040288c:    fca42623              sw    a0,-52(s0)                             allGrp
20402890:    0040006f              j    20402894 <_svfprintf_r+0xd80>           allGrp, Branch-Instr, controlFlowGrp
			/*FALLTHROUGH*/
		case 'o':
			_uquad = UARG ();
20402894:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402898:    01057513              andi    a0,a0,16                             allGrp
2040289c:    00000593              li    a1,0                                   allGrp
204028a0:    02b50063              beq    a0,a1,204028c0 <_svfprintf_r+0xdac>   allGrp, Branch-Instr, controlFlowGrp
204028a4:    0040006f              j    204028a8 <_svfprintf_r+0xd94>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204028a8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204028ac:    00450593              addi    a1,a0,4                              allGrp
204028b0:    feb42223              sw    a1,-28(s0)                             allGrp
204028b4:    00052503              lw    a0,0(a0)                               allGrp
204028b8:    e6a42e23              sw    a0,-388(s0)                            allGrp
204028bc:    0840006f              j    20402940 <_svfprintf_r+0xe2c>           allGrp, Branch-Instr, controlFlowGrp
204028c0:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
204028c4:    04057513              andi    a0,a0,64                             allGrp
204028c8:    00000593              li    a1,0                                   allGrp
204028cc:    02b50063              beq    a0,a1,204028ec <_svfprintf_r+0xdd8>   allGrp, Branch-Instr, controlFlowGrp
204028d0:    0040006f              j    204028d4 <_svfprintf_r+0xdc0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204028d4:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204028d8:    00450593              addi    a1,a0,4                              allGrp
204028dc:    feb42223              sw    a1,-28(s0)                             allGrp
204028e0:    00055503              lhu    a0,0(a0)                              allGrp
204028e4:    e6a42c23              sw    a0,-392(s0)                            allGrp
204028e8:    04c0006f              j    20402934 <_svfprintf_r+0xe20>           allGrp, Branch-Instr, controlFlowGrp
204028ec:    00100513              li    a0,1                                   Branch-Tgt, allGrp
204028f0:    02051063              bnez    a0,20402910 <_svfprintf_r+0xdfc>     allGrp, Branch-Instr, controlFlowGrp
204028f4:    0040006f              j    204028f8 <_svfprintf_r+0xde4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204028f8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204028fc:    00450593              addi    a1,a0,4                              allGrp
20402900:    feb42223              sw    a1,-28(s0)                             allGrp
20402904:    00054503              lbu    a0,0(a0)                              allGrp
20402908:    e6a42a23              sw    a0,-396(s0)                            allGrp
2040290c:    01c0006f              j    20402928 <_svfprintf_r+0xe14>           allGrp, Branch-Instr, controlFlowGrp
20402910:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402914:    00450593              addi    a1,a0,4                              allGrp
20402918:    feb42223              sw    a1,-28(s0)                             allGrp
2040291c:    00052503              lw    a0,0(a0)                               allGrp
20402920:    e6a42a23              sw    a0,-396(s0)                            allGrp
20402924:    0040006f              j    20402928 <_svfprintf_r+0xe14>           allGrp, Branch-Instr, controlFlowGrp
20402928:    e7442503              lw    a0,-396(s0)                            Branch-Tgt, allGrp
2040292c:    e6a42c23              sw    a0,-392(s0)                            allGrp
20402930:    0040006f              j    20402934 <_svfprintf_r+0xe20>           allGrp, Branch-Instr, controlFlowGrp
20402934:    e7842503              lw    a0,-392(s0)                            Branch-Tgt, allGrp
20402938:    e6a42e23              sw    a0,-388(s0)                            allGrp
2040293c:    0040006f              j    20402940 <_svfprintf_r+0xe2c>           allGrp, Branch-Instr, controlFlowGrp
20402940:    e7c42503              lw    a0,-388(s0)                            Branch-Tgt, allGrp
20402944:    f8a42223              sw    a0,-124(s0)                            allGrp
20402948:    00000513              li    a0,0                                   allGrp
			base = OCT;
2040294c:    f8a401a3              sb    a0,-125(s0)                            allGrp
#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			goto nosign;
20402950:    3280006f              j    20402c78 <_svfprintf_r+0x1164>          allGrp, Branch-Instr, controlFlowGrp
			 * of printable characters, in an implementation-
			 * defined manner.''
			 *	-- ANSI X3J11
			 */
			/* NOSTRICT */
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
20402954:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402958:    00450593              addi    a1,a0,4                              allGrp
2040295c:    feb42223              sw    a1,-28(s0)                             allGrp
20402960:    00052503              lw    a0,0(a0)                               allGrp
20402964:    f8a42223              sw    a0,-124(s0)                            allGrp
20402968:    00200513              li    a0,2                                   allGrp
			base = HEX;
2040296c:    f8a401a3              sb    a0,-125(s0)                            allGrp
			xdigs = "0123456789abcdef";
20402970:    20412537              lui    a0,0x20412                            allGrp
20402974:    57050513              addi    a0,a0,1392 # 20412570 <_svfprintf_r.zeroes+0x20>allGrp
20402978:    f6a42823              sw    a0,-144(s0)                            allGrp
			flags |= HEXPREFIX;
2040297c:    fcc42503              lw    a0,-52(s0)                             allGrp
20402980:    00256513              ori    a0,a0,2                               allGrp
20402984:    fca42623              sw    a0,-52(s0)                             allGrp
20402988:    03000513              li    a0,48                                  allGrp
			ox[0] = '0';
2040298c:    eea40923              sb    a0,-270(s0)                            allGrp
20402990:    07800513              li    a0,120                                 allGrp
			ox[1] = ch = 'x';
20402994:    fca42e23              sw    a0,-36(s0)                             allGrp
20402998:    eea409a3              sb    a0,-269(s0)                            allGrp
			goto nosign;
2040299c:    2dc0006f              j    20402c78 <_svfprintf_r+0x1164>          allGrp, Branch-Instr, controlFlowGrp
		case 's':
#ifdef _WANT_IO_C99_FORMATS
		case 'S':
#endif
			cp = GET_ARG (N, ap, char_ptr_t);
204029a0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204029a4:    00450593              addi    a1,a0,4                              allGrp
204029a8:    feb42223              sw    a1,-28(s0)                             allGrp
204029ac:    00052503              lw    a0,0(a0)                               allGrp
204029b0:    fca42823              sw    a0,-48(s0)                             allGrp
204029b4:    00000513              li    a0,0                                   allGrp
#ifdef _GLIBC_EXTENSION
string:
#endif
			sign = '\0';
204029b8:    faa40da3              sb    a0,-69(s0)                             allGrp
#ifndef __OPTIMIZE_SIZE__
			/* Behavior is undefined if the user passed a
			   NULL string when precision is not 0.
			   However, if we are not optimizing for size,
			   we might as well mirror glibc behavior.  */
			if (cp == NULL) {
204029bc:    fd042583              lw    a1,-48(s0)                             allGrp
204029c0:    04a59463              bne    a1,a0,20402a08 <_svfprintf_r+0xef4>   allGrp, Branch-Instr, controlFlowGrp
204029c4:    0040006f              j    204029c8 <_svfprintf_r+0xeb4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				cp = "(null)";
204029c8:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
204029cc:    58150513              addi    a0,a0,1409 # 20412581 <_svfprintf_r.zeroes+0x31>allGrp
204029d0:    fca42823              sw    a0,-48(s0)                             allGrp
				size = ((unsigned) prec > 6U) ? 6 : prec;
204029d4:    fbc42503              lw    a0,-68(s0)                             allGrp
204029d8:    00700593              li    a1,7                                   allGrp
204029dc:    00b56a63              bltu    a0,a1,204029f0 <_svfprintf_r+0xedc>  allGrp, Branch-Instr, controlFlowGrp
204029e0:    0040006f              j    204029e4 <_svfprintf_r+0xed0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204029e4:    00600513              li    a0,6                                   Branch-Tgt, allGrp
204029e8:    e6a42823              sw    a0,-400(s0)                            allGrp
204029ec:    0100006f              j    204029fc <_svfprintf_r+0xee8>           allGrp, Branch-Instr, controlFlowGrp
204029f0:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
204029f4:    e6a42823              sw    a0,-400(s0)                            allGrp
204029f8:    0040006f              j    204029fc <_svfprintf_r+0xee8>           allGrp, Branch-Instr, controlFlowGrp
204029fc:    e7042503              lw    a0,-400(s0)                            Branch-Tgt, allGrp
20402a00:    f6a42a23              sw    a0,-140(s0)                            allGrp
			}
20402a04:    07c0006f              j    20402a80 <_svfprintf_r+0xf6c>           allGrp, Branch-Instr, controlFlowGrp
				}
				cp[size] = '\0';
			}
			else
#endif /* _MB_CAPABLE */
			if (prec >= 0) {
20402a08:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20402a0c:    00000593              li    a1,0                                   allGrp
20402a10:    04b54c63              blt    a0,a1,20402a68 <_svfprintf_r+0xf54>   allGrp, Branch-Instr, controlFlowGrp
20402a14:    0040006f              j    20402a18 <_svfprintf_r+0xf04>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				/*
				 * can't use strlen; can only look for the
				 * NUL in the first `prec' characters, and
				 * strlen () will go further.
				 */
				char *p = memchr (cp, 0, prec);
20402a18:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20402a1c:    fbc42603              lw    a2,-68(s0)                             allGrp
20402a20:    00000593              li    a1,0                                   allGrp
20402a24:    e6b42623              sw    a1,-404(s0)                            allGrp
20402a28:    00005097              auipc    ra,0x5                              allGrp
20402a2c:    bf8080e7              jalr    -1032(ra) # 20407620 <memchr>        Call-Instr, allGrp, controlFlowGrp
20402a30:    eea42423              sw    a0,-280(s0)                            Return-Tgt, allGrp

				if (p != NULL)
20402a34:    ee842503              lw    a0,-280(s0)                            allGrp
20402a38:    e6c42583              lw    a1,-404(s0)                            allGrp
20402a3c:    00b50e63              beq    a0,a1,20402a58 <_svfprintf_r+0xf44>   allGrp, Branch-Instr, controlFlowGrp
20402a40:    0040006f              j    20402a44 <_svfprintf_r+0xf30>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					size = p - cp;
20402a44:    ee842503              lw    a0,-280(s0)                            Branch-Tgt, allGrp
20402a48:    fd042583              lw    a1,-48(s0)                             allGrp
20402a4c:    40b50533              sub    a0,a0,a1                              allGrp
20402a50:    f6a42a23              sw    a0,-140(s0)                            allGrp
20402a54:    0100006f              j    20402a64 <_svfprintf_r+0xf50>           allGrp, Branch-Instr, controlFlowGrp
				else
					size = prec;
20402a58:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20402a5c:    f6a42a23              sw    a0,-140(s0)                            allGrp
20402a60:    0040006f              j    20402a64 <_svfprintf_r+0xf50>           allGrp, Branch-Instr, controlFlowGrp
			} else
20402a64:    0180006f              j    20402a7c <_svfprintf_r+0xf68>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				size = strlen (cp);
20402a68:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20402a6c:    00007097              auipc    ra,0x7                              allGrp
20402a70:    148080e7              jalr    328(ra) # 20409bb4 <strlen>          Call-Instr, allGrp, controlFlowGrp
20402a74:    f6a42a23              sw    a0,-140(s0)                            Return-Tgt, allGrp
20402a78:    0040006f              j    20402a7c <_svfprintf_r+0xf68>           allGrp, Branch-Instr, controlFlowGrp
20402a7c:    0040006f              j    20402a80 <_svfprintf_r+0xf6c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

			break;
20402a80:    4900006f              j    20402f10 <_svfprintf_r+0x13fc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		case 'U': /* extension */
			flags |= LONGINT;
20402a84:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402a88:    01056513              ori    a0,a0,16                              allGrp
20402a8c:    fca42623              sw    a0,-52(s0)                             allGrp
20402a90:    0040006f              j    20402a94 <_svfprintf_r+0xf80>           allGrp, Branch-Instr, controlFlowGrp
			/*FALLTHROUGH*/
		case 'u':
			_uquad = UARG ();
20402a94:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402a98:    01057513              andi    a0,a0,16                             allGrp
20402a9c:    00000593              li    a1,0                                   allGrp
20402aa0:    02b50063              beq    a0,a1,20402ac0 <_svfprintf_r+0xfac>   allGrp, Branch-Instr, controlFlowGrp
20402aa4:    0040006f              j    20402aa8 <_svfprintf_r+0xf94>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402aa8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402aac:    00450593              addi    a1,a0,4                              allGrp
20402ab0:    feb42223              sw    a1,-28(s0)                             allGrp
20402ab4:    00052503              lw    a0,0(a0)                               allGrp
20402ab8:    e6a42423              sw    a0,-408(s0)                            allGrp
20402abc:    0840006f              j    20402b40 <_svfprintf_r+0x102c>          allGrp, Branch-Instr, controlFlowGrp
20402ac0:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402ac4:    04057513              andi    a0,a0,64                             allGrp
20402ac8:    00000593              li    a1,0                                   allGrp
20402acc:    02b50063              beq    a0,a1,20402aec <_svfprintf_r+0xfd8>   allGrp, Branch-Instr, controlFlowGrp
20402ad0:    0040006f              j    20402ad4 <_svfprintf_r+0xfc0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402ad4:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402ad8:    00450593              addi    a1,a0,4                              allGrp
20402adc:    feb42223              sw    a1,-28(s0)                             allGrp
20402ae0:    00055503              lhu    a0,0(a0)                              allGrp
20402ae4:    e6a42223              sw    a0,-412(s0)                            allGrp
20402ae8:    04c0006f              j    20402b34 <_svfprintf_r+0x1020>          allGrp, Branch-Instr, controlFlowGrp
20402aec:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20402af0:    02051063              bnez    a0,20402b10 <_svfprintf_r+0xffc>     allGrp, Branch-Instr, controlFlowGrp
20402af4:    0040006f              j    20402af8 <_svfprintf_r+0xfe4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402af8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402afc:    00450593              addi    a1,a0,4                              allGrp
20402b00:    feb42223              sw    a1,-28(s0)                             allGrp
20402b04:    00054503              lbu    a0,0(a0)                              allGrp
20402b08:    e6a42023              sw    a0,-416(s0)                            allGrp
20402b0c:    01c0006f              j    20402b28 <_svfprintf_r+0x1014>          allGrp, Branch-Instr, controlFlowGrp
20402b10:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402b14:    00450593              addi    a1,a0,4                              allGrp
20402b18:    feb42223              sw    a1,-28(s0)                             allGrp
20402b1c:    00052503              lw    a0,0(a0)                               allGrp
20402b20:    e6a42023              sw    a0,-416(s0)                            allGrp
20402b24:    0040006f              j    20402b28 <_svfprintf_r+0x1014>          allGrp, Branch-Instr, controlFlowGrp
20402b28:    e6042503              lw    a0,-416(s0)                            Branch-Tgt, allGrp
20402b2c:    e6a42223              sw    a0,-412(s0)                            allGrp
20402b30:    0040006f              j    20402b34 <_svfprintf_r+0x1020>          allGrp, Branch-Instr, controlFlowGrp
20402b34:    e6442503              lw    a0,-412(s0)                            Branch-Tgt, allGrp
20402b38:    e6a42423              sw    a0,-408(s0)                            allGrp
20402b3c:    0040006f              j    20402b40 <_svfprintf_r+0x102c>          allGrp, Branch-Instr, controlFlowGrp
20402b40:    e6842503              lw    a0,-408(s0)                            Branch-Tgt, allGrp
20402b44:    f8a42223              sw    a0,-124(s0)                            allGrp
20402b48:    00100513              li    a0,1                                   allGrp
			base = DEC;
20402b4c:    f8a401a3              sb    a0,-125(s0)                            allGrp
			goto nosign;
20402b50:    1280006f              j    20402c78 <_svfprintf_r+0x1164>          allGrp, Branch-Instr, controlFlowGrp
		case 'X':
			xdigs = "0123456789ABCDEF";
20402b54:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
20402b58:    58850513              addi    a0,a0,1416 # 20412588 <_svfprintf_r.zeroes+0x38>allGrp
20402b5c:    f6a42823              sw    a0,-144(s0)                            allGrp
			goto hex;
20402b60:    0140006f              j    20402b74 <_svfprintf_r+0x1060>          allGrp, Branch-Instr, controlFlowGrp
		case 'x':
			xdigs = "0123456789abcdef";
20402b64:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
20402b68:    57050513              addi    a0,a0,1392 # 20412570 <_svfprintf_r.zeroes+0x20>allGrp
20402b6c:    f6a42823              sw    a0,-144(s0)                            allGrp
20402b70:    0040006f              j    20402b74 <_svfprintf_r+0x1060>          allGrp, Branch-Instr, controlFlowGrp
hex:			_uquad = UARG ();
20402b74:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402b78:    01057513              andi    a0,a0,16                             allGrp
20402b7c:    00000593              li    a1,0                                   allGrp
20402b80:    02b50063              beq    a0,a1,20402ba0 <_svfprintf_r+0x108c>  allGrp, Branch-Instr, controlFlowGrp
20402b84:    0040006f              j    20402b88 <_svfprintf_r+0x1074>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402b88:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402b8c:    00450593              addi    a1,a0,4                              allGrp
20402b90:    feb42223              sw    a1,-28(s0)                             allGrp
20402b94:    00052503              lw    a0,0(a0)                               allGrp
20402b98:    e4a42e23              sw    a0,-420(s0)                            allGrp
20402b9c:    0840006f              j    20402c20 <_svfprintf_r+0x110c>          allGrp, Branch-Instr, controlFlowGrp
20402ba0:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402ba4:    04057513              andi    a0,a0,64                             allGrp
20402ba8:    00000593              li    a1,0                                   allGrp
20402bac:    02b50063              beq    a0,a1,20402bcc <_svfprintf_r+0x10b8>  allGrp, Branch-Instr, controlFlowGrp
20402bb0:    0040006f              j    20402bb4 <_svfprintf_r+0x10a0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402bb4:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402bb8:    00450593              addi    a1,a0,4                              allGrp
20402bbc:    feb42223              sw    a1,-28(s0)                             allGrp
20402bc0:    00055503              lhu    a0,0(a0)                              allGrp
20402bc4:    e4a42c23              sw    a0,-424(s0)                            allGrp
20402bc8:    04c0006f              j    20402c14 <_svfprintf_r+0x1100>          allGrp, Branch-Instr, controlFlowGrp
20402bcc:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20402bd0:    02051063              bnez    a0,20402bf0 <_svfprintf_r+0x10dc>    allGrp, Branch-Instr, controlFlowGrp
20402bd4:    0040006f              j    20402bd8 <_svfprintf_r+0x10c4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402bd8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402bdc:    00450593              addi    a1,a0,4                              allGrp
20402be0:    feb42223              sw    a1,-28(s0)                             allGrp
20402be4:    00054503              lbu    a0,0(a0)                              allGrp
20402be8:    e4a42a23              sw    a0,-428(s0)                            allGrp
20402bec:    01c0006f              j    20402c08 <_svfprintf_r+0x10f4>          allGrp, Branch-Instr, controlFlowGrp
20402bf0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20402bf4:    00450593              addi    a1,a0,4                              allGrp
20402bf8:    feb42223              sw    a1,-28(s0)                             allGrp
20402bfc:    00052503              lw    a0,0(a0)                               allGrp
20402c00:    e4a42a23              sw    a0,-428(s0)                            allGrp
20402c04:    0040006f              j    20402c08 <_svfprintf_r+0x10f4>          allGrp, Branch-Instr, controlFlowGrp
20402c08:    e5442503              lw    a0,-428(s0)                            Branch-Tgt, allGrp
20402c0c:    e4a42c23              sw    a0,-424(s0)                            allGrp
20402c10:    0040006f              j    20402c14 <_svfprintf_r+0x1100>          allGrp, Branch-Instr, controlFlowGrp
20402c14:    e5842503              lw    a0,-424(s0)                            Branch-Tgt, allGrp
20402c18:    e4a42e23              sw    a0,-420(s0)                            allGrp
20402c1c:    0040006f              j    20402c20 <_svfprintf_r+0x110c>          allGrp, Branch-Instr, controlFlowGrp
20402c20:    e5c42503              lw    a0,-420(s0)                            Branch-Tgt, allGrp
20402c24:    f8a42223              sw    a0,-124(s0)                            allGrp
20402c28:    00200513              li    a0,2                                   allGrp
			base = HEX;
20402c2c:    f8a401a3              sb    a0,-125(s0)                            allGrp
			/* leading 0x/X only if non-zero */
			if (flags & ALT && _uquad != 0) {
20402c30:    fcc42503              lw    a0,-52(s0)                             allGrp
20402c34:    00157513              andi    a0,a0,1                              allGrp
20402c38:    00000593              li    a1,0                                   allGrp
20402c3c:    02b50c63              beq    a0,a1,20402c74 <_svfprintf_r+0x1160>  allGrp, Branch-Instr, controlFlowGrp
20402c40:    0040006f              j    20402c44 <_svfprintf_r+0x1130>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402c44:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
20402c48:    00000593              li    a1,0                                   allGrp
20402c4c:    02b50463              beq    a0,a1,20402c74 <_svfprintf_r+0x1160>  allGrp, Branch-Instr, controlFlowGrp
20402c50:    0040006f              j    20402c54 <_svfprintf_r+0x1140>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				ox[0] = '0';
20402c54:    03000513              li    a0,48                                  Branch-Tgt, allGrp
20402c58:    eea40923              sb    a0,-270(s0)                            allGrp
				ox[1] = ch;
20402c5c:    fdc42503              lw    a0,-36(s0)                             allGrp
20402c60:    eea409a3              sb    a0,-269(s0)                            allGrp
				flags |= HEXPREFIX;
20402c64:    fcc42503              lw    a0,-52(s0)                             allGrp
20402c68:    00256513              ori    a0,a0,2                               allGrp
20402c6c:    fca42623              sw    a0,-52(s0)                             allGrp
			}
20402c70:    0040006f              j    20402c74 <_svfprintf_r+0x1160>          allGrp, Branch-Instr, controlFlowGrp
			if (flags & ALT && _uquad != 0) {
20402c74:    0040006f              j    20402c78 <_svfprintf_r+0x1164>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

#ifdef _WANT_IO_C99_FORMATS
			flags &= ~GROUPING;
#endif
			/* unsigned conversions */
nosign:			sign = '\0';
20402c78:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20402c7c:    faa40da3              sb    a0,-69(s0)                             allGrp
20402c80:    0040006f              j    20402c84 <_svfprintf_r+0x1170>          allGrp, Branch-Instr, controlFlowGrp
			/*
			 * ``... diouXx conversions ... if a precision is
			 * specified, the 0 flag will be ignored.''
			 *	-- ANSI X3J11
			 */
number:			if ((dprec = prec) >= 0)
20402c84:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20402c88:    f6a42e23              sw    a0,-132(s0)                            allGrp
20402c8c:    00000593              li    a1,0                                   allGrp
20402c90:    00b54c63              blt    a0,a1,20402ca8 <_svfprintf_r+0x1194>  allGrp, Branch-Instr, controlFlowGrp
20402c94:    0040006f              j    20402c98 <_svfprintf_r+0x1184>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				flags &= ~ZEROPAD;
20402c98:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402c9c:    f7f57513              andi    a0,a0,-129                           allGrp
20402ca0:    fca42623              sw    a0,-52(s0)                             allGrp
20402ca4:    0040006f              j    20402ca8 <_svfprintf_r+0x1194>          allGrp, Branch-Instr, controlFlowGrp
			/*
			 * ``The result of converting a zero value with an
			 * explicit precision of zero is no characters.''
			 *	-- ANSI X3J11
			 */
			cp = buf + BUF;
20402ca8:    f1c40513              addi    a0,s0,-228                           Branch-Tgt, allGrp
20402cac:    fca42823              sw    a0,-48(s0)                             allGrp
			if (_uquad != 0 || prec != 0) {
20402cb0:    f8442503              lw    a0,-124(s0)                            allGrp
20402cb4:    00000593              li    a1,0                                   allGrp
20402cb8:    00b51c63              bne    a0,a1,20402cd0 <_svfprintf_r+0x11bc>  allGrp, Branch-Instr, controlFlowGrp
20402cbc:    0040006f              j    20402cc0 <_svfprintf_r+0x11ac>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402cc0:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20402cc4:    00000593              li    a1,0                                   allGrp
20402cc8:    1ab50a63              beq    a0,a1,20402e7c <_svfprintf_r+0x1368>  allGrp, Branch-Instr, controlFlowGrp
20402ccc:    0040006f              j    20402cd0 <_svfprintf_r+0x11bc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				/*
				 * Unsigned mod is hard, and unsigned mod
				 * by a constant is easier than that by
				 * a variable; hence this switch.
				 */
				switch (base) {
20402cd0:    f8344503              lbu    a0,-125(s0)                           Branch-Tgt, allGrp
20402cd4:    00000593              li    a1,0                                   allGrp
20402cd8:    e4a42823              sw    a0,-432(s0)                            allGrp
20402cdc:    02b50463              beq    a0,a1,20402d04 <_svfprintf_r+0x11f0>  allGrp, Branch-Instr, controlFlowGrp
20402ce0:    0040006f              j    20402ce4 <_svfprintf_r+0x11d0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402ce4:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20402ce8:    e5042583              lw    a1,-432(s0)                            allGrp
20402cec:    08a58e63              beq    a1,a0,20402d88 <_svfprintf_r+0x1274>  allGrp, Branch-Instr, controlFlowGrp
20402cf0:    0040006f              j    20402cf4 <_svfprintf_r+0x11e0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402cf4:    00200513              li    a0,2                                   Branch-Tgt, allGrp
20402cf8:    e5042583              lw    a1,-432(s0)                            allGrp
20402cfc:    10a58863              beq    a1,a0,20402e0c <_svfprintf_r+0x12f8>  allGrp, Branch-Instr, controlFlowGrp
20402d00:    1580006f              j    20402e58 <_svfprintf_r+0x1344>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				case OCT:
					do {
20402d04:    0040006f              j    20402d08 <_svfprintf_r+0x11f4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						*--cp = to_char (_uquad & 7);
20402d08:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
20402d0c:    00757513              andi    a0,a0,7                              allGrp
20402d10:    03056513              ori    a0,a0,48                              allGrp
20402d14:    fd042583              lw    a1,-48(s0)                             allGrp
20402d18:    fff58613              addi    a2,a1,-1                             allGrp
20402d1c:    fcc42823              sw    a2,-48(s0)                             allGrp
20402d20:    fea58fa3              sb    a0,-1(a1)                              allGrp
						_uquad >>= 3;
20402d24:    f8442503              lw    a0,-124(s0)                            allGrp
20402d28:    00355513              srli    a0,a0,0x3                            allGrp
20402d2c:    f8a42223              sw    a0,-124(s0)                            allGrp
					} while (_uquad);
20402d30:    0040006f              j    20402d34 <_svfprintf_r+0x1220>          allGrp, Branch-Instr, controlFlowGrp
20402d34:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
20402d38:    00000593              li    a1,0                                   allGrp
20402d3c:    fcb516e3              bne    a0,a1,20402d08 <_svfprintf_r+0x11f4>  allGrp, Branch-Instr, controlFlowGrp
20402d40:    0040006f              j    20402d44 <_svfprintf_r+0x1230>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					/* handle octal leading 0 */
					if (flags & ALT && *cp != '0')
20402d44:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402d48:    00157513              andi    a0,a0,1                              allGrp
20402d4c:    00000593              li    a1,0                                   allGrp
20402d50:    02b50a63              beq    a0,a1,20402d84 <_svfprintf_r+0x1270>  allGrp, Branch-Instr, controlFlowGrp
20402d54:    0040006f              j    20402d58 <_svfprintf_r+0x1244>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402d58:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20402d5c:    00054503              lbu    a0,0(a0)                              allGrp
20402d60:    03000593              li    a1,48                                  allGrp
20402d64:    02b50063              beq    a0,a1,20402d84 <_svfprintf_r+0x1270>  allGrp, Branch-Instr, controlFlowGrp
20402d68:    0040006f              j    20402d6c <_svfprintf_r+0x1258>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						*--cp = '0';
20402d6c:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20402d70:    fff50593              addi    a1,a0,-1                             allGrp
20402d74:    fcb42823              sw    a1,-48(s0)                             allGrp
20402d78:    03000593              li    a1,48                                  allGrp
20402d7c:    feb50fa3              sb    a1,-1(a0)                              allGrp
20402d80:    0040006f              j    20402d84 <_svfprintf_r+0x1270>          allGrp, Branch-Instr, controlFlowGrp
					break;
20402d84:    0f40006f              j    20402e78 <_svfprintf_r+0x1364>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

				case DEC:
					/* many numbers are 1 digit */
					if (_uquad < 10) {
20402d88:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
20402d8c:    00900593              li    a1,9                                   allGrp
20402d90:    02a5e263              bltu    a1,a0,20402db4 <_svfprintf_r+0x12a0> allGrp, Branch-Instr, controlFlowGrp
20402d94:    0040006f              j    20402d98 <_svfprintf_r+0x1284>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						*--cp = to_char(_uquad);
20402d98:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
20402d9c:    03050513              addi    a0,a0,48                             allGrp
20402da0:    fd042583              lw    a1,-48(s0)                             allGrp
20402da4:    fff58613              addi    a2,a1,-1                             allGrp
20402da8:    fcc42823              sw    a2,-48(s0)                             allGrp
20402dac:    fea58fa3              sb    a0,-1(a1)                              allGrp
						break;
20402db0:    0c80006f              j    20402e78 <_svfprintf_r+0x1364>          allGrp, Branch-Instr, controlFlowGrp
					}
#ifdef _WANT_IO_C99_FORMATS
					ndig = 0;
#endif
					do {
20402db4:    0040006f              j    20402db8 <_svfprintf_r+0x12a4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					  *--cp = to_char (_uquad % 10);
20402db8:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
20402dbc:    00a00593              li    a1,10                                  allGrp
20402dc0:    e4b42623              sw    a1,-436(s0)                            allGrp
20402dc4:    0000f097              auipc    ra,0xf                              allGrp
20402dc8:    504080e7              jalr    1284(ra) # 204122c8 <__umodsi3>      Call-Instr, allGrp, controlFlowGrp
20402dcc:    03056513              ori    a0,a0,48                              Return-Tgt, allGrp
20402dd0:    fd042583              lw    a1,-48(s0)                             allGrp
20402dd4:    fff58613              addi    a2,a1,-1                             allGrp
20402dd8:    fcc42823              sw    a2,-48(s0)                             allGrp
20402ddc:    fea58fa3              sb    a0,-1(a1)                              allGrp
					       next cases. */
					    if (grouping[1] != '\0')
					      grouping++;
					  }
#endif
					  _uquad /= 10;
20402de0:    f8442503              lw    a0,-124(s0)                            allGrp
20402de4:    e4c42583              lw    a1,-436(s0)                            allGrp
20402de8:    0000f097              auipc    ra,0xf                              allGrp
20402dec:    498080e7              jalr    1176(ra) # 20412280 <__udivsi3>      Call-Instr, allGrp, controlFlowGrp
20402df0:    f8a42223              sw    a0,-124(s0)                            Return-Tgt, allGrp
					} while (_uquad != 0);
20402df4:    0040006f              j    20402df8 <_svfprintf_r+0x12e4>          allGrp, Branch-Instr, controlFlowGrp
20402df8:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
20402dfc:    00000593              li    a1,0                                   allGrp
20402e00:    fab51ce3              bne    a0,a1,20402db8 <_svfprintf_r+0x12a4>  allGrp, Branch-Instr, controlFlowGrp
20402e04:    0040006f              j    20402e08 <_svfprintf_r+0x12f4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					break;
20402e08:    0700006f              j    20402e78 <_svfprintf_r+0x1364>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

				case HEX:
					do {
20402e0c:    0040006f              j    20402e10 <_svfprintf_r+0x12fc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						*--cp = xdigs[_uquad & 15];
20402e10:    f7042503              lw    a0,-144(s0)                            Branch-Tgt, allGrp
20402e14:    f8442583              lw    a1,-124(s0)                            allGrp
20402e18:    00f5f593              andi    a1,a1,15                             allGrp
20402e1c:    00b50533              add    a0,a0,a1                              allGrp
20402e20:    00050503              lb    a0,0(a0)                               allGrp
20402e24:    fd042583              lw    a1,-48(s0)                             allGrp
20402e28:    fff58613              addi    a2,a1,-1                             allGrp
20402e2c:    fcc42823              sw    a2,-48(s0)                             allGrp
20402e30:    fea58fa3              sb    a0,-1(a1)                              allGrp
						_uquad >>= 4;
20402e34:    f8442503              lw    a0,-124(s0)                            allGrp
20402e38:    00455513              srli    a0,a0,0x4                            allGrp
20402e3c:    f8a42223              sw    a0,-124(s0)                            allGrp
					} while (_uquad);
20402e40:    0040006f              j    20402e44 <_svfprintf_r+0x1330>          allGrp, Branch-Instr, controlFlowGrp
20402e44:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
20402e48:    00000593              li    a1,0                                   allGrp
20402e4c:    fcb512e3              bne    a0,a1,20402e10 <_svfprintf_r+0x12fc>  allGrp, Branch-Instr, controlFlowGrp
20402e50:    0040006f              j    20402e54 <_svfprintf_r+0x1340>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					break;
20402e54:    0240006f              j    20402e78 <_svfprintf_r+0x1364>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

				default:
					cp = "bug in vfprintf: bad base";
20402e58:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
20402e5c:    59950513              addi    a0,a0,1433 # 20412599 <_svfprintf_r.zeroes+0x49>allGrp
20402e60:    fca42823              sw    a0,-48(s0)                             allGrp
					size = strlen (cp);
20402e64:    fd042503              lw    a0,-48(s0)                             allGrp
20402e68:    00007097              auipc    ra,0x7                              allGrp
20402e6c:    d4c080e7              jalr    -692(ra) # 20409bb4 <strlen>         Call-Instr, allGrp, controlFlowGrp
20402e70:    f6a42a23              sw    a0,-140(s0)                            Return-Tgt, allGrp
					goto skipsize;
20402e74:    05c0006f              j    20402ed0 <_svfprintf_r+0x13bc>          allGrp, Branch-Instr, controlFlowGrp
				}
			}
20402e78:    0440006f              j    20402ebc <_svfprintf_r+0x13a8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			*     -- ANSI X3J11
			*
			* To demonstrate this case, compile and run:
                        *    printf ("%#.0o",0);
			*/
                       else if (base == OCT && (flags & ALT))
20402e7c:    f8344503              lbu    a0,-125(s0)                           Branch-Tgt, allGrp
20402e80:    00000593              li    a1,0                                   allGrp
20402e84:    02b51a63              bne    a0,a1,20402eb8 <_svfprintf_r+0x13a4>  allGrp, Branch-Instr, controlFlowGrp
20402e88:    0040006f              j    20402e8c <_svfprintf_r+0x1378>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402e8c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402e90:    00157513              andi    a0,a0,1                              allGrp
20402e94:    00000593              li    a1,0                                   allGrp
20402e98:    02b50063              beq    a0,a1,20402eb8 <_svfprintf_r+0x13a4>  allGrp, Branch-Instr, controlFlowGrp
20402e9c:    0040006f              j    20402ea0 <_svfprintf_r+0x138c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
                         *--cp = '0';
20402ea0:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20402ea4:    fff50593              addi    a1,a0,-1                             allGrp
20402ea8:    fcb42823              sw    a1,-48(s0)                             allGrp
20402eac:    03000593              li    a1,48                                  allGrp
20402eb0:    feb50fa3              sb    a1,-1(a0)                              allGrp
20402eb4:    0040006f              j    20402eb8 <_svfprintf_r+0x13a4>          allGrp, Branch-Instr, controlFlowGrp
20402eb8:    0040006f              j    20402ebc <_svfprintf_r+0x13a8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

			size = buf + BUF - cp;
20402ebc:    f1c40513              addi    a0,s0,-228                           Branch-Tgt, allGrp
20402ec0:    fd042583              lw    a1,-48(s0)                             allGrp
20402ec4:    40b50533              sub    a0,a0,a1                              allGrp
20402ec8:    f6a42a23              sw    a0,-140(s0)                            allGrp
20402ecc:    0040006f              j    20402ed0 <_svfprintf_r+0x13bc>          allGrp, Branch-Instr, controlFlowGrp
		skipsize:
			break;
20402ed0:    0400006f              j    20402f10 <_svfprintf_r+0x13fc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		default:	/* "%?" prints ?, unless ? is NUL */
			if (ch == '\0')
20402ed4:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20402ed8:    00000593              li    a1,0                                   allGrp
20402edc:    00b51663              bne    a0,a1,20402ee8 <_svfprintf_r+0x13d4>  allGrp, Branch-Instr, controlFlowGrp
20402ee0:    0040006f              j    20402ee4 <_svfprintf_r+0x13d0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				goto done;
20402ee4:    7380106f              j    2040461c <_svfprintf_r+0x2b08>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			/* pretend it was %c with argument ch */
			cp = buf;
20402ee8:    ef440513              addi    a0,s0,-268                           Branch-Tgt, allGrp
20402eec:    fca42823              sw    a0,-48(s0)                             allGrp
			*cp = ch;
20402ef0:    fdc42503              lw    a0,-36(s0)                             allGrp
20402ef4:    fd042583              lw    a1,-48(s0)                             allGrp
20402ef8:    00a58023              sb    a0,0(a1)                               allGrp
20402efc:    00100513              li    a0,1                                   allGrp
			size = 1;
20402f00:    f6a42a23              sw    a0,-140(s0)                            allGrp
20402f04:    00000513              li    a0,0                                   allGrp
			sign = '\0';
20402f08:    faa40da3              sb    a0,-69(s0)                             allGrp
			break;
20402f0c:    0040006f              j    20402f10 <_svfprintf_r+0x13fc>          allGrp, Branch-Instr, controlFlowGrp
		 * If flags&FPT, ch must be in [aAeEfg].
		 *
		 * Compute actual size, so we know how much to pad.
		 * size excludes decimal prec; realsz includes it.
		 */
		realsz = dprec > size ? dprec : size;
20402f10:    f7c42503              lw    a0,-132(s0)                            Branch-Tgt, allGrp
20402f14:    f7442583              lw    a1,-140(s0)                            allGrp
20402f18:    00a5da63              ble    a0,a1,20402f2c <_svfprintf_r+0x1418>  allGrp, Branch-Instr, controlFlowGrp
20402f1c:    0040006f              j    20402f20 <_svfprintf_r+0x140c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402f20:    f7c42503              lw    a0,-132(s0)                            Branch-Tgt, allGrp
20402f24:    e4a42423              sw    a0,-440(s0)                            allGrp
20402f28:    0100006f              j    20402f38 <_svfprintf_r+0x1424>          allGrp, Branch-Instr, controlFlowGrp
20402f2c:    f7442503              lw    a0,-140(s0)                            Branch-Tgt, allGrp
20402f30:    e4a42423              sw    a0,-440(s0)                            allGrp
20402f34:    0040006f              j    20402f38 <_svfprintf_r+0x1424>          allGrp, Branch-Instr, controlFlowGrp
20402f38:    e4842503              lw    a0,-440(s0)                            Branch-Tgt, allGrp
20402f3c:    f6a42c23              sw    a0,-136(s0)                            allGrp
		if (sign)
20402f40:    fbb44503              lbu    a0,-69(s0)                            allGrp
20402f44:    00000593              li    a1,0                                   allGrp
20402f48:    00b50c63              beq    a0,a1,20402f60 <_svfprintf_r+0x144c>  allGrp, Branch-Instr, controlFlowGrp
20402f4c:    0040006f              j    20402f50 <_svfprintf_r+0x143c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			realsz++;
20402f50:    f7842503              lw    a0,-136(s0)                            Branch-Tgt, allGrp
20402f54:    00150513              addi    a0,a0,1                              allGrp
20402f58:    f6a42c23              sw    a0,-136(s0)                            allGrp
20402f5c:    0040006f              j    20402f60 <_svfprintf_r+0x144c>          allGrp, Branch-Instr, controlFlowGrp
		if (flags & HEXPREFIX)
20402f60:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402f64:    00257513              andi    a0,a0,2                              allGrp
20402f68:    00000593              li    a1,0                                   allGrp
20402f6c:    00b50c63              beq    a0,a1,20402f84 <_svfprintf_r+0x1470>  allGrp, Branch-Instr, controlFlowGrp
20402f70:    0040006f              j    20402f74 <_svfprintf_r+0x1460>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			realsz+= 2;
20402f74:    f7842503              lw    a0,-136(s0)                            Branch-Tgt, allGrp
20402f78:    00250513              addi    a0,a0,2                              allGrp
20402f7c:    f6a42c23              sw    a0,-136(s0)                            allGrp
20402f80:    0040006f              j    20402f84 <_svfprintf_r+0x1470>          allGrp, Branch-Instr, controlFlowGrp

		/* right-adjusting blank padding */
		if ((flags & (LADJUST|ZEROPAD)) == 0)
20402f84:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20402f88:    08457513              andi    a0,a0,132                            allGrp
20402f8c:    00000593              li    a1,0                                   allGrp
20402f90:    14b51663              bne    a0,a1,204030dc <_svfprintf_r+0x15c8>  allGrp, Branch-Instr, controlFlowGrp
20402f94:    0040006f              j    20402f98 <_svfprintf_r+0x1484>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PAD (width - realsz, blanks);
20402f98:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
20402f9c:    f7842583              lw    a1,-136(s0)                            allGrp
20402fa0:    40b50533              sub    a0,a0,a1                              allGrp
20402fa4:    fca42c23              sw    a0,-40(s0)                             allGrp
20402fa8:    00100593              li    a1,1                                   allGrp
20402fac:    12b54663              blt    a0,a1,204030d8 <_svfprintf_r+0x15c4>  allGrp, Branch-Instr, controlFlowGrp
20402fb0:    0040006f              j    20402fb4 <_svfprintf_r+0x14a0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402fb4:    0040006f              j    20402fb8 <_svfprintf_r+0x14a4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402fb8:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20402fbc:    01100593              li    a1,17                                  allGrp
20402fc0:    08b54a63              blt    a0,a1,20403054 <_svfprintf_r+0x1540>  allGrp, Branch-Instr, controlFlowGrp
20402fc4:    0040006f              j    20402fc8 <_svfprintf_r+0x14b4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20402fc8:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20402fcc:    204125b7              lui    a1,0x20412                            allGrp
20402fd0:    54058593              addi    a1,a1,1344 # 20412540 <_svfprintf_r.blanks>allGrp
20402fd4:    00b52023              sw    a1,0(a0)                               allGrp
20402fd8:    f1c42503              lw    a0,-228(s0)                            allGrp
20402fdc:    01000593              li    a1,16                                  allGrp
20402fe0:    00b52223              sw    a1,4(a0)                               allGrp
20402fe4:    f6842503              lw    a0,-152(s0)                            allGrp
20402fe8:    01050513              addi    a0,a0,16                             allGrp
20402fec:    f6a42423              sw    a0,-152(s0)                            allGrp
20402ff0:    f1c42503              lw    a0,-228(s0)                            allGrp
20402ff4:    00850513              addi    a0,a0,8                              allGrp
20402ff8:    f0a42e23              sw    a0,-228(s0)                            allGrp
20402ffc:    f6442503              lw    a0,-156(s0)                            allGrp
20403000:    00150513              addi    a0,a0,1                              allGrp
20403004:    f6a42223              sw    a0,-156(s0)                            allGrp
20403008:    00800593              li    a1,8                                   allGrp
2040300c:    02b54c63              blt    a0,a1,20403044 <_svfprintf_r+0x1530>  allGrp, Branch-Instr, controlFlowGrp
20403010:    0040006f              j    20403014 <_svfprintf_r+0x1500>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403014:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403018:    fec42583              lw    a1,-20(s0)                             allGrp
2040301c:    f6040613              addi    a2,s0,-160                           allGrp
20403020:    00007097              auipc    ra,0x7                              allGrp
20403024:    f20080e7              jalr    -224(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
20403028:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040302c:    00b50663              beq    a0,a1,20403038 <_svfprintf_r+0x1524>  allGrp, Branch-Instr, controlFlowGrp
20403030:    0040006f              j    20403034 <_svfprintf_r+0x1520>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403034:    6300106f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403038:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
2040303c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403040:    0040006f              j    20403044 <_svfprintf_r+0x1530>          allGrp, Branch-Instr, controlFlowGrp
20403044:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20403048:    ff050513              addi    a0,a0,-16                            allGrp
2040304c:    fca42c23              sw    a0,-40(s0)                             allGrp
20403050:    f69ff06f              j    20402fb8 <_svfprintf_r+0x14a4>          allGrp, Branch-Instr, controlFlowGrp
20403054:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20403058:    204125b7              lui    a1,0x20412                            allGrp
2040305c:    54058593              addi    a1,a1,1344 # 20412540 <_svfprintf_r.blanks>allGrp
20403060:    00b52023              sw    a1,0(a0)                               allGrp
20403064:    fd842503              lw    a0,-40(s0)                             allGrp
20403068:    f1c42583              lw    a1,-228(s0)                            allGrp
2040306c:    00a5a223              sw    a0,4(a1)                               allGrp
20403070:    fd842503              lw    a0,-40(s0)                             allGrp
20403074:    f6842583              lw    a1,-152(s0)                            allGrp
20403078:    00a58533              add    a0,a1,a0                              allGrp
2040307c:    f6a42423              sw    a0,-152(s0)                            allGrp
20403080:    f1c42503              lw    a0,-228(s0)                            allGrp
20403084:    00850513              addi    a0,a0,8                              allGrp
20403088:    f0a42e23              sw    a0,-228(s0)                            allGrp
2040308c:    f6442503              lw    a0,-156(s0)                            allGrp
20403090:    00150513              addi    a0,a0,1                              allGrp
20403094:    f6a42223              sw    a0,-156(s0)                            allGrp
20403098:    00800593              li    a1,8                                   allGrp
2040309c:    02b54c63              blt    a0,a1,204030d4 <_svfprintf_r+0x15c0>  allGrp, Branch-Instr, controlFlowGrp
204030a0:    0040006f              j    204030a4 <_svfprintf_r+0x1590>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204030a4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204030a8:    fec42583              lw    a1,-20(s0)                             allGrp
204030ac:    f6040613              addi    a2,s0,-160                           allGrp
204030b0:    00007097              auipc    ra,0x7                              allGrp
204030b4:    e90080e7              jalr    -368(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
204030b8:    00000593              li    a1,0                                   Return-Tgt, allGrp
204030bc:    00b50663              beq    a0,a1,204030c8 <_svfprintf_r+0x15b4>  allGrp, Branch-Instr, controlFlowGrp
204030c0:    0040006f              j    204030c4 <_svfprintf_r+0x15b0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204030c4:    5a00106f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204030c8:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
204030cc:    f0a42e23              sw    a0,-228(s0)                            allGrp
204030d0:    0040006f              j    204030d4 <_svfprintf_r+0x15c0>          allGrp, Branch-Instr, controlFlowGrp
204030d4:    0040006f              j    204030d8 <_svfprintf_r+0x15c4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204030d8:    0040006f              j    204030dc <_svfprintf_r+0x15c8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

		/* prefix */
		if (sign)
204030dc:    fbb44503              lbu    a0,-69(s0)                            Branch-Tgt, allGrp
204030e0:    00000593              li    a1,0                                   allGrp
204030e4:    08b50263              beq    a0,a1,20403168 <_svfprintf_r+0x1654>  allGrp, Branch-Instr, controlFlowGrp
204030e8:    0040006f              j    204030ec <_svfprintf_r+0x15d8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PRINT (&sign, 1);
204030ec:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
204030f0:    fbb40593              addi    a1,s0,-69                            allGrp
204030f4:    00b52023              sw    a1,0(a0)                               allGrp
204030f8:    f1c42503              lw    a0,-228(s0)                            allGrp
204030fc:    00100593              li    a1,1                                   allGrp
20403100:    00b52223              sw    a1,4(a0)                               allGrp
20403104:    f6842503              lw    a0,-152(s0)                            allGrp
20403108:    00150513              addi    a0,a0,1                              allGrp
2040310c:    f6a42423              sw    a0,-152(s0)                            allGrp
20403110:    f1c42503              lw    a0,-228(s0)                            allGrp
20403114:    00850513              addi    a0,a0,8                              allGrp
20403118:    f0a42e23              sw    a0,-228(s0)                            allGrp
2040311c:    f6442503              lw    a0,-156(s0)                            allGrp
20403120:    00150513              addi    a0,a0,1                              allGrp
20403124:    f6a42223              sw    a0,-156(s0)                            allGrp
20403128:    00800593              li    a1,8                                   allGrp
2040312c:    02b54c63              blt    a0,a1,20403164 <_svfprintf_r+0x1650>  allGrp, Branch-Instr, controlFlowGrp
20403130:    0040006f              j    20403134 <_svfprintf_r+0x1620>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403134:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403138:    fec42583              lw    a1,-20(s0)                             allGrp
2040313c:    f6040613              addi    a2,s0,-160                           allGrp
20403140:    00007097              auipc    ra,0x7                              allGrp
20403144:    e00080e7              jalr    -512(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
20403148:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040314c:    00b50663              beq    a0,a1,20403158 <_svfprintf_r+0x1644>  allGrp, Branch-Instr, controlFlowGrp
20403150:    0040006f              j    20403154 <_svfprintf_r+0x1640>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403154:    5100106f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403158:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
2040315c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403160:    0040006f              j    20403164 <_svfprintf_r+0x1650>          allGrp, Branch-Instr, controlFlowGrp
20403164:    0040006f              j    20403168 <_svfprintf_r+0x1654>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		if (flags & HEXPREFIX)
20403168:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040316c:    00257513              andi    a0,a0,2                              allGrp
20403170:    00000593              li    a1,0                                   allGrp
20403174:    08b50263              beq    a0,a1,204031f8 <_svfprintf_r+0x16e4>  allGrp, Branch-Instr, controlFlowGrp
20403178:    0040006f              j    2040317c <_svfprintf_r+0x1668>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PRINT (ox, 2);
2040317c:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20403180:    ef240593              addi    a1,s0,-270                           allGrp
20403184:    00b52023              sw    a1,0(a0)                               allGrp
20403188:    f1c42503              lw    a0,-228(s0)                            allGrp
2040318c:    00200593              li    a1,2                                   allGrp
20403190:    00b52223              sw    a1,4(a0)                               allGrp
20403194:    f6842503              lw    a0,-152(s0)                            allGrp
20403198:    00250513              addi    a0,a0,2                              allGrp
2040319c:    f6a42423              sw    a0,-152(s0)                            allGrp
204031a0:    f1c42503              lw    a0,-228(s0)                            allGrp
204031a4:    00850513              addi    a0,a0,8                              allGrp
204031a8:    f0a42e23              sw    a0,-228(s0)                            allGrp
204031ac:    f6442503              lw    a0,-156(s0)                            allGrp
204031b0:    00150513              addi    a0,a0,1                              allGrp
204031b4:    f6a42223              sw    a0,-156(s0)                            allGrp
204031b8:    00800593              li    a1,8                                   allGrp
204031bc:    02b54c63              blt    a0,a1,204031f4 <_svfprintf_r+0x16e0>  allGrp, Branch-Instr, controlFlowGrp
204031c0:    0040006f              j    204031c4 <_svfprintf_r+0x16b0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204031c4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204031c8:    fec42583              lw    a1,-20(s0)                             allGrp
204031cc:    f6040613              addi    a2,s0,-160                           allGrp
204031d0:    00007097              auipc    ra,0x7                              allGrp
204031d4:    d70080e7              jalr    -656(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
204031d8:    00000593              li    a1,0                                   Return-Tgt, allGrp
204031dc:    00b50663              beq    a0,a1,204031e8 <_svfprintf_r+0x16d4>  allGrp, Branch-Instr, controlFlowGrp
204031e0:    0040006f              j    204031e4 <_svfprintf_r+0x16d0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204031e4:    4800106f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204031e8:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
204031ec:    f0a42e23              sw    a0,-228(s0)                            allGrp
204031f0:    0040006f              j    204031f4 <_svfprintf_r+0x16e0>          allGrp, Branch-Instr, controlFlowGrp
204031f4:    0040006f              j    204031f8 <_svfprintf_r+0x16e4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

		/* right-adjusting zero padding */
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
204031f8:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
204031fc:    08457513              andi    a0,a0,132                            allGrp
20403200:    08000593              li    a1,128                                 allGrp
20403204:    14b51663              bne    a0,a1,20403350 <_svfprintf_r+0x183c>  allGrp, Branch-Instr, controlFlowGrp
20403208:    0040006f              j    2040320c <_svfprintf_r+0x16f8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PAD (width - realsz, zeroes);
2040320c:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
20403210:    f7842583              lw    a1,-136(s0)                            allGrp
20403214:    40b50533              sub    a0,a0,a1                              allGrp
20403218:    fca42c23              sw    a0,-40(s0)                             allGrp
2040321c:    00100593              li    a1,1                                   allGrp
20403220:    12b54663              blt    a0,a1,2040334c <_svfprintf_r+0x1838>  allGrp, Branch-Instr, controlFlowGrp
20403224:    0040006f              j    20403228 <_svfprintf_r+0x1714>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403228:    0040006f              j    2040322c <_svfprintf_r+0x1718>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040322c:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20403230:    01100593              li    a1,17                                  allGrp
20403234:    08b54a63              blt    a0,a1,204032c8 <_svfprintf_r+0x17b4>  allGrp, Branch-Instr, controlFlowGrp
20403238:    0040006f              j    2040323c <_svfprintf_r+0x1728>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040323c:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20403240:    204125b7              lui    a1,0x20412                            allGrp
20403244:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
20403248:    00b52023              sw    a1,0(a0)                               allGrp
2040324c:    f1c42503              lw    a0,-228(s0)                            allGrp
20403250:    01000593              li    a1,16                                  allGrp
20403254:    00b52223              sw    a1,4(a0)                               allGrp
20403258:    f6842503              lw    a0,-152(s0)                            allGrp
2040325c:    01050513              addi    a0,a0,16                             allGrp
20403260:    f6a42423              sw    a0,-152(s0)                            allGrp
20403264:    f1c42503              lw    a0,-228(s0)                            allGrp
20403268:    00850513              addi    a0,a0,8                              allGrp
2040326c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403270:    f6442503              lw    a0,-156(s0)                            allGrp
20403274:    00150513              addi    a0,a0,1                              allGrp
20403278:    f6a42223              sw    a0,-156(s0)                            allGrp
2040327c:    00800593              li    a1,8                                   allGrp
20403280:    02b54c63              blt    a0,a1,204032b8 <_svfprintf_r+0x17a4>  allGrp, Branch-Instr, controlFlowGrp
20403284:    0040006f              j    20403288 <_svfprintf_r+0x1774>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403288:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040328c:    fec42583              lw    a1,-20(s0)                             allGrp
20403290:    f6040613              addi    a2,s0,-160                           allGrp
20403294:    00007097              auipc    ra,0x7                              allGrp
20403298:    cac080e7              jalr    -852(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
2040329c:    00000593              li    a1,0                                   Return-Tgt, allGrp
204032a0:    00b50663              beq    a0,a1,204032ac <_svfprintf_r+0x1798>  allGrp, Branch-Instr, controlFlowGrp
204032a4:    0040006f              j    204032a8 <_svfprintf_r+0x1794>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204032a8:    3bc0106f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204032ac:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
204032b0:    f0a42e23              sw    a0,-228(s0)                            allGrp
204032b4:    0040006f              j    204032b8 <_svfprintf_r+0x17a4>          allGrp, Branch-Instr, controlFlowGrp
204032b8:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
204032bc:    ff050513              addi    a0,a0,-16                            allGrp
204032c0:    fca42c23              sw    a0,-40(s0)                             allGrp
204032c4:    f69ff06f              j    2040322c <_svfprintf_r+0x1718>          allGrp, Branch-Instr, controlFlowGrp
204032c8:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
204032cc:    204125b7              lui    a1,0x20412                            allGrp
204032d0:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
204032d4:    00b52023              sw    a1,0(a0)                               allGrp
204032d8:    fd842503              lw    a0,-40(s0)                             allGrp
204032dc:    f1c42583              lw    a1,-228(s0)                            allGrp
204032e0:    00a5a223              sw    a0,4(a1)                               allGrp
204032e4:    fd842503              lw    a0,-40(s0)                             allGrp
204032e8:    f6842583              lw    a1,-152(s0)                            allGrp
204032ec:    00a58533              add    a0,a1,a0                              allGrp
204032f0:    f6a42423              sw    a0,-152(s0)                            allGrp
204032f4:    f1c42503              lw    a0,-228(s0)                            allGrp
204032f8:    00850513              addi    a0,a0,8                              allGrp
204032fc:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403300:    f6442503              lw    a0,-156(s0)                            allGrp
20403304:    00150513              addi    a0,a0,1                              allGrp
20403308:    f6a42223              sw    a0,-156(s0)                            allGrp
2040330c:    00800593              li    a1,8                                   allGrp
20403310:    02b54c63              blt    a0,a1,20403348 <_svfprintf_r+0x1834>  allGrp, Branch-Instr, controlFlowGrp
20403314:    0040006f              j    20403318 <_svfprintf_r+0x1804>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403318:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040331c:    fec42583              lw    a1,-20(s0)                             allGrp
20403320:    f6040613              addi    a2,s0,-160                           allGrp
20403324:    00007097              auipc    ra,0x7                              allGrp
20403328:    c1c080e7              jalr    -996(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
2040332c:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403330:    00b50663              beq    a0,a1,2040333c <_svfprintf_r+0x1828>  allGrp, Branch-Instr, controlFlowGrp
20403334:    0040006f              j    20403338 <_svfprintf_r+0x1824>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403338:    32c0106f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040333c:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403340:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403344:    0040006f              j    20403348 <_svfprintf_r+0x1834>          allGrp, Branch-Instr, controlFlowGrp
20403348:    0040006f              j    2040334c <_svfprintf_r+0x1838>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040334c:    0040006f              j    20403350 <_svfprintf_r+0x183c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

		/* leading zeroes from decimal precision */
		PAD (dprec - size, zeroes);
20403350:    f7c42503              lw    a0,-132(s0)                            Branch-Tgt, allGrp
20403354:    f7442583              lw    a1,-140(s0)                            allGrp
20403358:    40b50533              sub    a0,a0,a1                              allGrp
2040335c:    fca42c23              sw    a0,-40(s0)                             allGrp
20403360:    00100593              li    a1,1                                   allGrp
20403364:    12b54663              blt    a0,a1,20403490 <_svfprintf_r+0x197c>  allGrp, Branch-Instr, controlFlowGrp
20403368:    0040006f              j    2040336c <_svfprintf_r+0x1858>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040336c:    0040006f              j    20403370 <_svfprintf_r+0x185c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403370:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20403374:    01100593              li    a1,17                                  allGrp
20403378:    08b54a63              blt    a0,a1,2040340c <_svfprintf_r+0x18f8>  allGrp, Branch-Instr, controlFlowGrp
2040337c:    0040006f              j    20403380 <_svfprintf_r+0x186c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403380:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20403384:    204125b7              lui    a1,0x20412                            allGrp
20403388:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
2040338c:    00b52023              sw    a1,0(a0)                               allGrp
20403390:    f1c42503              lw    a0,-228(s0)                            allGrp
20403394:    01000593              li    a1,16                                  allGrp
20403398:    00b52223              sw    a1,4(a0)                               allGrp
2040339c:    f6842503              lw    a0,-152(s0)                            allGrp
204033a0:    01050513              addi    a0,a0,16                             allGrp
204033a4:    f6a42423              sw    a0,-152(s0)                            allGrp
204033a8:    f1c42503              lw    a0,-228(s0)                            allGrp
204033ac:    00850513              addi    a0,a0,8                              allGrp
204033b0:    f0a42e23              sw    a0,-228(s0)                            allGrp
204033b4:    f6442503              lw    a0,-156(s0)                            allGrp
204033b8:    00150513              addi    a0,a0,1                              allGrp
204033bc:    f6a42223              sw    a0,-156(s0)                            allGrp
204033c0:    00800593              li    a1,8                                   allGrp
204033c4:    02b54c63              blt    a0,a1,204033fc <_svfprintf_r+0x18e8>  allGrp, Branch-Instr, controlFlowGrp
204033c8:    0040006f              j    204033cc <_svfprintf_r+0x18b8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204033cc:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204033d0:    fec42583              lw    a1,-20(s0)                             allGrp
204033d4:    f6040613              addi    a2,s0,-160                           allGrp
204033d8:    00007097              auipc    ra,0x7                              allGrp
204033dc:    b68080e7              jalr    -1176(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
204033e0:    00000593              li    a1,0                                   Return-Tgt, allGrp
204033e4:    00b50663              beq    a0,a1,204033f0 <_svfprintf_r+0x18dc>  allGrp, Branch-Instr, controlFlowGrp
204033e8:    0040006f              j    204033ec <_svfprintf_r+0x18d8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204033ec:    2780106f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204033f0:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
204033f4:    f0a42e23              sw    a0,-228(s0)                            allGrp
204033f8:    0040006f              j    204033fc <_svfprintf_r+0x18e8>          allGrp, Branch-Instr, controlFlowGrp
204033fc:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20403400:    ff050513              addi    a0,a0,-16                            allGrp
20403404:    fca42c23              sw    a0,-40(s0)                             allGrp
20403408:    f69ff06f              j    20403370 <_svfprintf_r+0x185c>          allGrp, Branch-Instr, controlFlowGrp
2040340c:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20403410:    204125b7              lui    a1,0x20412                            allGrp
20403414:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
20403418:    00b52023              sw    a1,0(a0)                               allGrp
2040341c:    fd842503              lw    a0,-40(s0)                             allGrp
20403420:    f1c42583              lw    a1,-228(s0)                            allGrp
20403424:    00a5a223              sw    a0,4(a1)                               allGrp
20403428:    fd842503              lw    a0,-40(s0)                             allGrp
2040342c:    f6842583              lw    a1,-152(s0)                            allGrp
20403430:    00a58533              add    a0,a1,a0                              allGrp
20403434:    f6a42423              sw    a0,-152(s0)                            allGrp
20403438:    f1c42503              lw    a0,-228(s0)                            allGrp
2040343c:    00850513              addi    a0,a0,8                              allGrp
20403440:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403444:    f6442503              lw    a0,-156(s0)                            allGrp
20403448:    00150513              addi    a0,a0,1                              allGrp
2040344c:    f6a42223              sw    a0,-156(s0)                            allGrp
20403450:    00800593              li    a1,8                                   allGrp
20403454:    02b54c63              blt    a0,a1,2040348c <_svfprintf_r+0x1978>  allGrp, Branch-Instr, controlFlowGrp
20403458:    0040006f              j    2040345c <_svfprintf_r+0x1948>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040345c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403460:    fec42583              lw    a1,-20(s0)                             allGrp
20403464:    f6040613              addi    a2,s0,-160                           allGrp
20403468:    00007097              auipc    ra,0x7                              allGrp
2040346c:    ad8080e7              jalr    -1320(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
20403470:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403474:    00b50663              beq    a0,a1,20403480 <_svfprintf_r+0x196c>  allGrp, Branch-Instr, controlFlowGrp
20403478:    0040006f              j    2040347c <_svfprintf_r+0x1968>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040347c:    1e80106f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403480:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403484:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403488:    0040006f              j    2040348c <_svfprintf_r+0x1978>          allGrp, Branch-Instr, controlFlowGrp
2040348c:    0040006f              j    20403490 <_svfprintf_r+0x197c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

		/* the string or number proper */
#ifdef FLOATING_POINT
		if ((flags & FPT) == 0) {
20403490:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20403494:    10057513              andi    a0,a0,256                            allGrp
20403498:    00000593              li    a1,0                                   allGrp
2040349c:    08b51463              bne    a0,a1,20403524 <_svfprintf_r+0x1a10>  allGrp, Branch-Instr, controlFlowGrp
204034a0:    0040006f              j    204034a4 <_svfprintf_r+0x1990>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PRINT (cp, size);
204034a4:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
204034a8:    f1c42583              lw    a1,-228(s0)                            allGrp
204034ac:    00a5a023              sw    a0,0(a1)                               allGrp
204034b0:    f7442503              lw    a0,-140(s0)                            allGrp
204034b4:    f1c42583              lw    a1,-228(s0)                            allGrp
204034b8:    00a5a223              sw    a0,4(a1)                               allGrp
204034bc:    f7442503              lw    a0,-140(s0)                            allGrp
204034c0:    f6842583              lw    a1,-152(s0)                            allGrp
204034c4:    00a58533              add    a0,a1,a0                              allGrp
204034c8:    f6a42423              sw    a0,-152(s0)                            allGrp
204034cc:    f1c42503              lw    a0,-228(s0)                            allGrp
204034d0:    00850513              addi    a0,a0,8                              allGrp
204034d4:    f0a42e23              sw    a0,-228(s0)                            allGrp
204034d8:    f6442503              lw    a0,-156(s0)                            allGrp
204034dc:    00150513              addi    a0,a0,1                              allGrp
204034e0:    f6a42223              sw    a0,-156(s0)                            allGrp
204034e4:    00800593              li    a1,8                                   allGrp
204034e8:    02b54c63              blt    a0,a1,20403520 <_svfprintf_r+0x1a0c>  allGrp, Branch-Instr, controlFlowGrp
204034ec:    0040006f              j    204034f0 <_svfprintf_r+0x19dc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204034f0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204034f4:    fec42583              lw    a1,-20(s0)                             allGrp
204034f8:    f6040613              addi    a2,s0,-160                           allGrp
204034fc:    00007097              auipc    ra,0x7                              allGrp
20403500:    a44080e7              jalr    -1468(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
20403504:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403508:    00b50663              beq    a0,a1,20403514 <_svfprintf_r+0x1a00>  allGrp, Branch-Instr, controlFlowGrp
2040350c:    0040006f              j    20403510 <_svfprintf_r+0x19fc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403510:    1540106f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403514:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403518:    f0a42e23              sw    a0,-228(s0)                            allGrp
2040351c:    0040006f              j    20403520 <_svfprintf_r+0x1a0c>          allGrp, Branch-Instr, controlFlowGrp
		} else {	/* glue together f_p fragments */
20403520:    6fd0006f              j    2040441c <_svfprintf_r+0x2908>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			if (ch >= 'f') {	/* 'f' or 'g' */
20403524:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20403528:    06600593              li    a1,102                                 allGrp
2040352c:    2cb54ce3              blt    a0,a1,20404004 <_svfprintf_r+0x24f0>  allGrp, Branch-Instr, controlFlowGrp
20403530:    0040006f              j    20403534 <_svfprintf_r+0x1a20>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				if (_fpvalue == 0) {
20403534:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
20403538:    fa442583              lw    a1,-92(s0)                             allGrp
2040353c:    00000613              li    a2,0                                   allGrp
20403540:    e4c42223              sw    a2,-444(s0)                            allGrp
20403544:    e4442683              lw    a3,-444(s0)                            allGrp
20403548:    0000d097              auipc    ra,0xd                              allGrp
2040354c:    ac8080e7              jalr    -1336(ra) # 20410010 <__eqdf2>       Call-Instr, allGrp, controlFlowGrp
20403550:    e4442583              lw    a1,-444(s0)                            Return-Tgt, allGrp
20403554:    26b51463              bne    a0,a1,204037bc <_svfprintf_r+0x1ca8>  allGrp, Branch-Instr, controlFlowGrp
20403558:    0040006f              j    2040355c <_svfprintf_r+0x1a48>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					/* kludge for __dtoa irregularity */
					PRINT ("0", 1);
2040355c:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20403560:    204125b7              lui    a1,0x20412                            allGrp
20403564:    5b358593              addi    a1,a1,1459 # 204125b3 <_svfprintf_r.zeroes+0x63>allGrp
20403568:    00b52023              sw    a1,0(a0)                               allGrp
2040356c:    f1c42503              lw    a0,-228(s0)                            allGrp
20403570:    00100593              li    a1,1                                   allGrp
20403574:    00b52223              sw    a1,4(a0)                               allGrp
20403578:    f6842503              lw    a0,-152(s0)                            allGrp
2040357c:    00150513              addi    a0,a0,1                              allGrp
20403580:    f6a42423              sw    a0,-152(s0)                            allGrp
20403584:    f1c42503              lw    a0,-228(s0)                            allGrp
20403588:    00850513              addi    a0,a0,8                              allGrp
2040358c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403590:    f6442503              lw    a0,-156(s0)                            allGrp
20403594:    00150513              addi    a0,a0,1                              allGrp
20403598:    f6a42223              sw    a0,-156(s0)                            allGrp
2040359c:    00800593              li    a1,8                                   allGrp
204035a0:    02b54c63              blt    a0,a1,204035d8 <_svfprintf_r+0x1ac4>  allGrp, Branch-Instr, controlFlowGrp
204035a4:    0040006f              j    204035a8 <_svfprintf_r+0x1a94>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204035a8:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204035ac:    fec42583              lw    a1,-20(s0)                             allGrp
204035b0:    f6040613              addi    a2,s0,-160                           allGrp
204035b4:    00007097              auipc    ra,0x7                              allGrp
204035b8:    98c080e7              jalr    -1652(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
204035bc:    00000593              li    a1,0                                   Return-Tgt, allGrp
204035c0:    00b50663              beq    a0,a1,204035cc <_svfprintf_r+0x1ab8>  allGrp, Branch-Instr, controlFlowGrp
204035c4:    0040006f              j    204035c8 <_svfprintf_r+0x1ab4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204035c8:    09c0106f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204035cc:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
204035d0:    f0a42e23              sw    a0,-228(s0)                            allGrp
204035d4:    0040006f              j    204035d8 <_svfprintf_r+0x1ac4>          allGrp, Branch-Instr, controlFlowGrp
					if (expt < ndig || flags & ALT) {
204035d8:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
204035dc:    f8842583              lw    a1,-120(s0)                            allGrp
204035e0:    00b54e63              blt    a0,a1,204035fc <_svfprintf_r+0x1ae8>  allGrp, Branch-Instr, controlFlowGrp
204035e4:    0040006f              j    204035e8 <_svfprintf_r+0x1ad4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204035e8:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
204035ec:    00157513              andi    a0,a0,1                              allGrp
204035f0:    00000593              li    a1,0                                   allGrp
204035f4:    1cb50263              beq    a0,a1,204037b8 <_svfprintf_r+0x1ca4>  allGrp, Branch-Instr, controlFlowGrp
204035f8:    0040006f              j    204035fc <_svfprintf_r+0x1ae8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						PRINT (decimal_point, decp_len);
204035fc:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
20403600:    f1c42583              lw    a1,-228(s0)                            allGrp
20403604:    00a5a023              sw    a0,0(a1)                               allGrp
20403608:    fb042503              lw    a0,-80(s0)                             allGrp
2040360c:    f1c42583              lw    a1,-228(s0)                            allGrp
20403610:    00a5a223              sw    a0,4(a1)                               allGrp
20403614:    fb042503              lw    a0,-80(s0)                             allGrp
20403618:    f6842583              lw    a1,-152(s0)                            allGrp
2040361c:    00a58533              add    a0,a1,a0                              allGrp
20403620:    f6a42423              sw    a0,-152(s0)                            allGrp
20403624:    f1c42503              lw    a0,-228(s0)                            allGrp
20403628:    00850513              addi    a0,a0,8                              allGrp
2040362c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403630:    f6442503              lw    a0,-156(s0)                            allGrp
20403634:    00150513              addi    a0,a0,1                              allGrp
20403638:    f6a42223              sw    a0,-156(s0)                            allGrp
2040363c:    00800593              li    a1,8                                   allGrp
20403640:    02b54c63              blt    a0,a1,20403678 <_svfprintf_r+0x1b64>  allGrp, Branch-Instr, controlFlowGrp
20403644:    0040006f              j    20403648 <_svfprintf_r+0x1b34>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403648:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040364c:    fec42583              lw    a1,-20(s0)                             allGrp
20403650:    f6040613              addi    a2,s0,-160                           allGrp
20403654:    00007097              auipc    ra,0x7                              allGrp
20403658:    8ec080e7              jalr    -1812(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
2040365c:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403660:    00b50663              beq    a0,a1,2040366c <_svfprintf_r+0x1b58>  allGrp, Branch-Instr, controlFlowGrp
20403664:    0040006f              j    20403668 <_svfprintf_r+0x1b54>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403668:    7fd0006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040366c:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403670:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403674:    0040006f              j    20403678 <_svfprintf_r+0x1b64>          allGrp, Branch-Instr, controlFlowGrp
						PAD (ndig - 1, zeroes);
20403678:    f8842503              lw    a0,-120(s0)                            Branch-Tgt, allGrp
2040367c:    fff50513              addi    a0,a0,-1                             allGrp
20403680:    fca42c23              sw    a0,-40(s0)                             allGrp
20403684:    00100593              li    a1,1                                   allGrp
20403688:    12b54663              blt    a0,a1,204037b4 <_svfprintf_r+0x1ca0>  allGrp, Branch-Instr, controlFlowGrp
2040368c:    0040006f              j    20403690 <_svfprintf_r+0x1b7c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403690:    0040006f              j    20403694 <_svfprintf_r+0x1b80>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403694:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20403698:    01100593              li    a1,17                                  allGrp
2040369c:    08b54a63              blt    a0,a1,20403730 <_svfprintf_r+0x1c1c>  allGrp, Branch-Instr, controlFlowGrp
204036a0:    0040006f              j    204036a4 <_svfprintf_r+0x1b90>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204036a4:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
204036a8:    204125b7              lui    a1,0x20412                            allGrp
204036ac:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
204036b0:    00b52023              sw    a1,0(a0)                               allGrp
204036b4:    f1c42503              lw    a0,-228(s0)                            allGrp
204036b8:    01000593              li    a1,16                                  allGrp
204036bc:    00b52223              sw    a1,4(a0)                               allGrp
204036c0:    f6842503              lw    a0,-152(s0)                            allGrp
204036c4:    01050513              addi    a0,a0,16                             allGrp
204036c8:    f6a42423              sw    a0,-152(s0)                            allGrp
204036cc:    f1c42503              lw    a0,-228(s0)                            allGrp
204036d0:    00850513              addi    a0,a0,8                              allGrp
204036d4:    f0a42e23              sw    a0,-228(s0)                            allGrp
204036d8:    f6442503              lw    a0,-156(s0)                            allGrp
204036dc:    00150513              addi    a0,a0,1                              allGrp
204036e0:    f6a42223              sw    a0,-156(s0)                            allGrp
204036e4:    00800593              li    a1,8                                   allGrp
204036e8:    02b54c63              blt    a0,a1,20403720 <_svfprintf_r+0x1c0c>  allGrp, Branch-Instr, controlFlowGrp
204036ec:    0040006f              j    204036f0 <_svfprintf_r+0x1bdc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204036f0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204036f4:    fec42583              lw    a1,-20(s0)                             allGrp
204036f8:    f6040613              addi    a2,s0,-160                           allGrp
204036fc:    00007097              auipc    ra,0x7                              allGrp
20403700:    844080e7              jalr    -1980(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
20403704:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403708:    00b50663              beq    a0,a1,20403714 <_svfprintf_r+0x1c00>  allGrp, Branch-Instr, controlFlowGrp
2040370c:    0040006f              j    20403710 <_svfprintf_r+0x1bfc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403710:    7550006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403714:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403718:    f0a42e23              sw    a0,-228(s0)                            allGrp
2040371c:    0040006f              j    20403720 <_svfprintf_r+0x1c0c>          allGrp, Branch-Instr, controlFlowGrp
20403720:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20403724:    ff050513              addi    a0,a0,-16                            allGrp
20403728:    fca42c23              sw    a0,-40(s0)                             allGrp
2040372c:    f69ff06f              j    20403694 <_svfprintf_r+0x1b80>          allGrp, Branch-Instr, controlFlowGrp
20403730:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20403734:    204125b7              lui    a1,0x20412                            allGrp
20403738:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
2040373c:    00b52023              sw    a1,0(a0)                               allGrp
20403740:    fd842503              lw    a0,-40(s0)                             allGrp
20403744:    f1c42583              lw    a1,-228(s0)                            allGrp
20403748:    00a5a223              sw    a0,4(a1)                               allGrp
2040374c:    fd842503              lw    a0,-40(s0)                             allGrp
20403750:    f6842583              lw    a1,-152(s0)                            allGrp
20403754:    00a58533              add    a0,a1,a0                              allGrp
20403758:    f6a42423              sw    a0,-152(s0)                            allGrp
2040375c:    f1c42503              lw    a0,-228(s0)                            allGrp
20403760:    00850513              addi    a0,a0,8                              allGrp
20403764:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403768:    f6442503              lw    a0,-156(s0)                            allGrp
2040376c:    00150513              addi    a0,a0,1                              allGrp
20403770:    f6a42223              sw    a0,-156(s0)                            allGrp
20403774:    00800593              li    a1,8                                   allGrp
20403778:    02b54c63              blt    a0,a1,204037b0 <_svfprintf_r+0x1c9c>  allGrp, Branch-Instr, controlFlowGrp
2040377c:    0040006f              j    20403780 <_svfprintf_r+0x1c6c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403780:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403784:    fec42583              lw    a1,-20(s0)                             allGrp
20403788:    f6040613              addi    a2,s0,-160                           allGrp
2040378c:    00006097              auipc    ra,0x6                              allGrp
20403790:    7b4080e7              jalr    1972(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
20403794:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403798:    00b50663              beq    a0,a1,204037a4 <_svfprintf_r+0x1c90>  allGrp, Branch-Instr, controlFlowGrp
2040379c:    0040006f              j    204037a0 <_svfprintf_r+0x1c8c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204037a0:    6c50006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204037a4:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
204037a8:    f0a42e23              sw    a0,-228(s0)                            allGrp
204037ac:    0040006f              j    204037b0 <_svfprintf_r+0x1c9c>          allGrp, Branch-Instr, controlFlowGrp
204037b0:    0040006f              j    204037b4 <_svfprintf_r+0x1ca0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					}
204037b4:    0040006f              j    204037b8 <_svfprintf_r+0x1ca4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				} else if (expt <= 0) {
204037b8:    0490006f              j    20404000 <_svfprintf_r+0x24ec>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204037bc:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
204037c0:    00000593              li    a1,0                                   allGrp
204037c4:    2ea5cc63              blt    a1,a0,20403abc <_svfprintf_r+0x1fa8>  allGrp, Branch-Instr, controlFlowGrp
204037c8:    0040006f              j    204037cc <_svfprintf_r+0x1cb8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					PRINT ("0", 1);
204037cc:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
204037d0:    204125b7              lui    a1,0x20412                            allGrp
204037d4:    5b358593              addi    a1,a1,1459 # 204125b3 <_svfprintf_r.zeroes+0x63>allGrp
204037d8:    00b52023              sw    a1,0(a0)                               allGrp
204037dc:    f1c42503              lw    a0,-228(s0)                            allGrp
204037e0:    00100593              li    a1,1                                   allGrp
204037e4:    00b52223              sw    a1,4(a0)                               allGrp
204037e8:    f6842503              lw    a0,-152(s0)                            allGrp
204037ec:    00150513              addi    a0,a0,1                              allGrp
204037f0:    f6a42423              sw    a0,-152(s0)                            allGrp
204037f4:    f1c42503              lw    a0,-228(s0)                            allGrp
204037f8:    00850513              addi    a0,a0,8                              allGrp
204037fc:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403800:    f6442503              lw    a0,-156(s0)                            allGrp
20403804:    00150513              addi    a0,a0,1                              allGrp
20403808:    f6a42223              sw    a0,-156(s0)                            allGrp
2040380c:    00800593              li    a1,8                                   allGrp
20403810:    02b54c63              blt    a0,a1,20403848 <_svfprintf_r+0x1d34>  allGrp, Branch-Instr, controlFlowGrp
20403814:    0040006f              j    20403818 <_svfprintf_r+0x1d04>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403818:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040381c:    fec42583              lw    a1,-20(s0)                             allGrp
20403820:    f6040613              addi    a2,s0,-160                           allGrp
20403824:    00006097              auipc    ra,0x6                              allGrp
20403828:    71c080e7              jalr    1820(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
2040382c:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403830:    00b50663              beq    a0,a1,2040383c <_svfprintf_r+0x1d28>  allGrp, Branch-Instr, controlFlowGrp
20403834:    0040006f              j    20403838 <_svfprintf_r+0x1d24>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403838:    62d0006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040383c:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403840:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403844:    0040006f              j    20403848 <_svfprintf_r+0x1d34>          allGrp, Branch-Instr, controlFlowGrp
					if (expt || ndig || flags & ALT) {
20403848:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
2040384c:    00000593              li    a1,0                                   allGrp
20403850:    02b51663              bne    a0,a1,2040387c <_svfprintf_r+0x1d68>  allGrp, Branch-Instr, controlFlowGrp
20403854:    0040006f              j    20403858 <_svfprintf_r+0x1d44>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403858:    f8842503              lw    a0,-120(s0)                            Branch-Tgt, allGrp
2040385c:    00000593              li    a1,0                                   allGrp
20403860:    00b51e63              bne    a0,a1,2040387c <_svfprintf_r+0x1d68>  allGrp, Branch-Instr, controlFlowGrp
20403864:    0040006f              j    20403868 <_svfprintf_r+0x1d54>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403868:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040386c:    00157513              andi    a0,a0,1                              allGrp
20403870:    00000593              li    a1,0                                   allGrp
20403874:    24b50263              beq    a0,a1,20403ab8 <_svfprintf_r+0x1fa4>  allGrp, Branch-Instr, controlFlowGrp
20403878:    0040006f              j    2040387c <_svfprintf_r+0x1d68>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						PRINT (decimal_point, decp_len);
2040387c:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
20403880:    f1c42583              lw    a1,-228(s0)                            allGrp
20403884:    00a5a023              sw    a0,0(a1)                               allGrp
20403888:    fb042503              lw    a0,-80(s0)                             allGrp
2040388c:    f1c42583              lw    a1,-228(s0)                            allGrp
20403890:    00a5a223              sw    a0,4(a1)                               allGrp
20403894:    fb042503              lw    a0,-80(s0)                             allGrp
20403898:    f6842583              lw    a1,-152(s0)                            allGrp
2040389c:    00a58533              add    a0,a1,a0                              allGrp
204038a0:    f6a42423              sw    a0,-152(s0)                            allGrp
204038a4:    f1c42503              lw    a0,-228(s0)                            allGrp
204038a8:    00850513              addi    a0,a0,8                              allGrp
204038ac:    f0a42e23              sw    a0,-228(s0)                            allGrp
204038b0:    f6442503              lw    a0,-156(s0)                            allGrp
204038b4:    00150513              addi    a0,a0,1                              allGrp
204038b8:    f6a42223              sw    a0,-156(s0)                            allGrp
204038bc:    00800593              li    a1,8                                   allGrp
204038c0:    02b54c63              blt    a0,a1,204038f8 <_svfprintf_r+0x1de4>  allGrp, Branch-Instr, controlFlowGrp
204038c4:    0040006f              j    204038c8 <_svfprintf_r+0x1db4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204038c8:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204038cc:    fec42583              lw    a1,-20(s0)                             allGrp
204038d0:    f6040613              addi    a2,s0,-160                           allGrp
204038d4:    00006097              auipc    ra,0x6                              allGrp
204038d8:    66c080e7              jalr    1644(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
204038dc:    00000593              li    a1,0                                   Return-Tgt, allGrp
204038e0:    00b50663              beq    a0,a1,204038ec <_svfprintf_r+0x1dd8>  allGrp, Branch-Instr, controlFlowGrp
204038e4:    0040006f              j    204038e8 <_svfprintf_r+0x1dd4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204038e8:    57d0006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204038ec:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
204038f0:    f0a42e23              sw    a0,-228(s0)                            allGrp
204038f4:    0040006f              j    204038f8 <_svfprintf_r+0x1de4>          allGrp, Branch-Instr, controlFlowGrp
						PAD (-expt, zeroes);
204038f8:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
204038fc:    00000593              li    a1,0                                   allGrp
20403900:    40a58533              sub    a0,a1,a0                              allGrp
20403904:    fca42c23              sw    a0,-40(s0)                             allGrp
20403908:    00100593              li    a1,1                                   allGrp
2040390c:    12b54663              blt    a0,a1,20403a38 <_svfprintf_r+0x1f24>  allGrp, Branch-Instr, controlFlowGrp
20403910:    0040006f              j    20403914 <_svfprintf_r+0x1e00>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403914:    0040006f              j    20403918 <_svfprintf_r+0x1e04>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403918:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040391c:    01100593              li    a1,17                                  allGrp
20403920:    08b54a63              blt    a0,a1,204039b4 <_svfprintf_r+0x1ea0>  allGrp, Branch-Instr, controlFlowGrp
20403924:    0040006f              j    20403928 <_svfprintf_r+0x1e14>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403928:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
2040392c:    204125b7              lui    a1,0x20412                            allGrp
20403930:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
20403934:    00b52023              sw    a1,0(a0)                               allGrp
20403938:    f1c42503              lw    a0,-228(s0)                            allGrp
2040393c:    01000593              li    a1,16                                  allGrp
20403940:    00b52223              sw    a1,4(a0)                               allGrp
20403944:    f6842503              lw    a0,-152(s0)                            allGrp
20403948:    01050513              addi    a0,a0,16                             allGrp
2040394c:    f6a42423              sw    a0,-152(s0)                            allGrp
20403950:    f1c42503              lw    a0,-228(s0)                            allGrp
20403954:    00850513              addi    a0,a0,8                              allGrp
20403958:    f0a42e23              sw    a0,-228(s0)                            allGrp
2040395c:    f6442503              lw    a0,-156(s0)                            allGrp
20403960:    00150513              addi    a0,a0,1                              allGrp
20403964:    f6a42223              sw    a0,-156(s0)                            allGrp
20403968:    00800593              li    a1,8                                   allGrp
2040396c:    02b54c63              blt    a0,a1,204039a4 <_svfprintf_r+0x1e90>  allGrp, Branch-Instr, controlFlowGrp
20403970:    0040006f              j    20403974 <_svfprintf_r+0x1e60>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403974:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403978:    fec42583              lw    a1,-20(s0)                             allGrp
2040397c:    f6040613              addi    a2,s0,-160                           allGrp
20403980:    00006097              auipc    ra,0x6                              allGrp
20403984:    5c0080e7              jalr    1472(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
20403988:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040398c:    00b50663              beq    a0,a1,20403998 <_svfprintf_r+0x1e84>  allGrp, Branch-Instr, controlFlowGrp
20403990:    0040006f              j    20403994 <_svfprintf_r+0x1e80>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403994:    4d10006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403998:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
2040399c:    f0a42e23              sw    a0,-228(s0)                            allGrp
204039a0:    0040006f              j    204039a4 <_svfprintf_r+0x1e90>          allGrp, Branch-Instr, controlFlowGrp
204039a4:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
204039a8:    ff050513              addi    a0,a0,-16                            allGrp
204039ac:    fca42c23              sw    a0,-40(s0)                             allGrp
204039b0:    f69ff06f              j    20403918 <_svfprintf_r+0x1e04>          allGrp, Branch-Instr, controlFlowGrp
204039b4:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
204039b8:    204125b7              lui    a1,0x20412                            allGrp
204039bc:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
204039c0:    00b52023              sw    a1,0(a0)                               allGrp
204039c4:    fd842503              lw    a0,-40(s0)                             allGrp
204039c8:    f1c42583              lw    a1,-228(s0)                            allGrp
204039cc:    00a5a223              sw    a0,4(a1)                               allGrp
204039d0:    fd842503              lw    a0,-40(s0)                             allGrp
204039d4:    f6842583              lw    a1,-152(s0)                            allGrp
204039d8:    00a58533              add    a0,a1,a0                              allGrp
204039dc:    f6a42423              sw    a0,-152(s0)                            allGrp
204039e0:    f1c42503              lw    a0,-228(s0)                            allGrp
204039e4:    00850513              addi    a0,a0,8                              allGrp
204039e8:    f0a42e23              sw    a0,-228(s0)                            allGrp
204039ec:    f6442503              lw    a0,-156(s0)                            allGrp
204039f0:    00150513              addi    a0,a0,1                              allGrp
204039f4:    f6a42223              sw    a0,-156(s0)                            allGrp
204039f8:    00800593              li    a1,8                                   allGrp
204039fc:    02b54c63              blt    a0,a1,20403a34 <_svfprintf_r+0x1f20>  allGrp, Branch-Instr, controlFlowGrp
20403a00:    0040006f              j    20403a04 <_svfprintf_r+0x1ef0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403a04:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403a08:    fec42583              lw    a1,-20(s0)                             allGrp
20403a0c:    f6040613              addi    a2,s0,-160                           allGrp
20403a10:    00006097              auipc    ra,0x6                              allGrp
20403a14:    530080e7              jalr    1328(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
20403a18:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403a1c:    00b50663              beq    a0,a1,20403a28 <_svfprintf_r+0x1f14>  allGrp, Branch-Instr, controlFlowGrp
20403a20:    0040006f              j    20403a24 <_svfprintf_r+0x1f10>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403a24:    4410006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403a28:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403a2c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403a30:    0040006f              j    20403a34 <_svfprintf_r+0x1f20>          allGrp, Branch-Instr, controlFlowGrp
20403a34:    0040006f              j    20403a38 <_svfprintf_r+0x1f24>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						PRINT (cp, ndig);
20403a38:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20403a3c:    f1c42583              lw    a1,-228(s0)                            allGrp
20403a40:    00a5a023              sw    a0,0(a1)                               allGrp
20403a44:    f8842503              lw    a0,-120(s0)                            allGrp
20403a48:    f1c42583              lw    a1,-228(s0)                            allGrp
20403a4c:    00a5a223              sw    a0,4(a1)                               allGrp
20403a50:    f8842503              lw    a0,-120(s0)                            allGrp
20403a54:    f6842583              lw    a1,-152(s0)                            allGrp
20403a58:    00a58533              add    a0,a1,a0                              allGrp
20403a5c:    f6a42423              sw    a0,-152(s0)                            allGrp
20403a60:    f1c42503              lw    a0,-228(s0)                            allGrp
20403a64:    00850513              addi    a0,a0,8                              allGrp
20403a68:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403a6c:    f6442503              lw    a0,-156(s0)                            allGrp
20403a70:    00150513              addi    a0,a0,1                              allGrp
20403a74:    f6a42223              sw    a0,-156(s0)                            allGrp
20403a78:    00800593              li    a1,8                                   allGrp
20403a7c:    02b54c63              blt    a0,a1,20403ab4 <_svfprintf_r+0x1fa0>  allGrp, Branch-Instr, controlFlowGrp
20403a80:    0040006f              j    20403a84 <_svfprintf_r+0x1f70>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403a84:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403a88:    fec42583              lw    a1,-20(s0)                             allGrp
20403a8c:    f6040613              addi    a2,s0,-160                           allGrp
20403a90:    00006097              auipc    ra,0x6                              allGrp
20403a94:    4b0080e7              jalr    1200(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
20403a98:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403a9c:    00b50663              beq    a0,a1,20403aa8 <_svfprintf_r+0x1f94>  allGrp, Branch-Instr, controlFlowGrp
20403aa0:    0040006f              j    20403aa4 <_svfprintf_r+0x1f90>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403aa4:    3c10006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403aa8:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403aac:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403ab0:    0040006f              j    20403ab4 <_svfprintf_r+0x1fa0>          allGrp, Branch-Instr, controlFlowGrp
					}
20403ab4:    0040006f              j    20403ab8 <_svfprintf_r+0x1fa4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				} else {
20403ab8:    5440006f              j    20403ffc <_svfprintf_r+0x24e8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					char *convbuf = cp;
20403abc:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20403ac0:    eea42223              sw    a0,-284(s0)                            allGrp
					PRINTANDPAD(cp, convbuf + ndig,
20403ac4:    ee442503              lw    a0,-284(s0)                            allGrp
20403ac8:    f8842583              lw    a1,-120(s0)                            allGrp
20403acc:    00b50533              add    a0,a0,a1                              allGrp
20403ad0:    fd042583              lw    a1,-48(s0)                             allGrp
20403ad4:    40b50533              sub    a0,a0,a1                              allGrp
20403ad8:    eea42023              sw    a0,-288(s0)                            allGrp
20403adc:    ee042503              lw    a0,-288(s0)                            allGrp
20403ae0:    f8c42583              lw    a1,-116(s0)                            allGrp
20403ae4:    00a5da63              ble    a0,a1,20403af8 <_svfprintf_r+0x1fe4>  allGrp, Branch-Instr, controlFlowGrp
20403ae8:    0040006f              j    20403aec <_svfprintf_r+0x1fd8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403aec:    f8c42503              lw    a0,-116(s0)                            Branch-Tgt, allGrp
20403af0:    eea42023              sw    a0,-288(s0)                            allGrp
20403af4:    0040006f              j    20403af8 <_svfprintf_r+0x1fe4>          allGrp, Branch-Instr, controlFlowGrp
20403af8:    ee042503              lw    a0,-288(s0)                            Branch-Tgt, allGrp
20403afc:    00100593              li    a1,1                                   allGrp
20403b00:    08b54463              blt    a0,a1,20403b88 <_svfprintf_r+0x2074>  allGrp, Branch-Instr, controlFlowGrp
20403b04:    0040006f              j    20403b08 <_svfprintf_r+0x1ff4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403b08:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20403b0c:    f1c42583              lw    a1,-228(s0)                            allGrp
20403b10:    00a5a023              sw    a0,0(a1)                               allGrp
20403b14:    ee042503              lw    a0,-288(s0)                            allGrp
20403b18:    f1c42583              lw    a1,-228(s0)                            allGrp
20403b1c:    00a5a223              sw    a0,4(a1)                               allGrp
20403b20:    ee042503              lw    a0,-288(s0)                            allGrp
20403b24:    f6842583              lw    a1,-152(s0)                            allGrp
20403b28:    00a58533              add    a0,a1,a0                              allGrp
20403b2c:    f6a42423              sw    a0,-152(s0)                            allGrp
20403b30:    f1c42503              lw    a0,-228(s0)                            allGrp
20403b34:    00850513              addi    a0,a0,8                              allGrp
20403b38:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403b3c:    f6442503              lw    a0,-156(s0)                            allGrp
20403b40:    00150513              addi    a0,a0,1                              allGrp
20403b44:    f6a42223              sw    a0,-156(s0)                            allGrp
20403b48:    00800593              li    a1,8                                   allGrp
20403b4c:    02b54c63              blt    a0,a1,20403b84 <_svfprintf_r+0x2070>  allGrp, Branch-Instr, controlFlowGrp
20403b50:    0040006f              j    20403b54 <_svfprintf_r+0x2040>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403b54:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403b58:    fec42583              lw    a1,-20(s0)                             allGrp
20403b5c:    f6040613              addi    a2,s0,-160                           allGrp
20403b60:    00006097              auipc    ra,0x6                              allGrp
20403b64:    3e0080e7              jalr    992(ra) # 20409f40 <__ssprint_r>     Call-Instr, allGrp, controlFlowGrp
20403b68:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403b6c:    00b50663              beq    a0,a1,20403b78 <_svfprintf_r+0x2064>  allGrp, Branch-Instr, controlFlowGrp
20403b70:    0040006f              j    20403b74 <_svfprintf_r+0x2060>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403b74:    2f10006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403b78:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403b7c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403b80:    0040006f              j    20403b84 <_svfprintf_r+0x2070>          allGrp, Branch-Instr, controlFlowGrp
20403b84:    0040006f              j    20403b88 <_svfprintf_r+0x2074>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403b88:    f8c42503              lw    a0,-116(s0)                            Branch-Tgt, allGrp
20403b8c:    ee042583              lw    a1,-288(s0)                            allGrp
20403b90:    00100613              li    a2,1                                   allGrp
20403b94:    e4a42023              sw    a0,-448(s0)                            allGrp
20403b98:    00c5ca63              blt    a1,a2,20403bac <_svfprintf_r+0x2098>  allGrp, Branch-Instr, controlFlowGrp
20403b9c:    0040006f              j    20403ba0 <_svfprintf_r+0x208c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403ba0:    ee042503              lw    a0,-288(s0)                            Branch-Tgt, allGrp
20403ba4:    e2a42e23              sw    a0,-452(s0)                            allGrp
20403ba8:    0100006f              j    20403bb8 <_svfprintf_r+0x20a4>          allGrp, Branch-Instr, controlFlowGrp
20403bac:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20403bb0:    e2a42e23              sw    a0,-452(s0)                            allGrp
20403bb4:    0040006f              j    20403bb8 <_svfprintf_r+0x20a4>          allGrp, Branch-Instr, controlFlowGrp
20403bb8:    e3c42503              lw    a0,-452(s0)                            Branch-Tgt, allGrp
20403bbc:    e4042583              lw    a1,-448(s0)                            allGrp
20403bc0:    40a58533              sub    a0,a1,a0                              allGrp
20403bc4:    eea42023              sw    a0,-288(s0)                            allGrp
20403bc8:    00100613              li    a2,1                                   allGrp
20403bcc:    12c54663              blt    a0,a2,20403cf8 <_svfprintf_r+0x21e4>  allGrp, Branch-Instr, controlFlowGrp
20403bd0:    0040006f              j    20403bd4 <_svfprintf_r+0x20c0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403bd4:    0040006f              j    20403bd8 <_svfprintf_r+0x20c4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403bd8:    ee042503              lw    a0,-288(s0)                            Branch-Tgt, allGrp
20403bdc:    01100593              li    a1,17                                  allGrp
20403be0:    08b54a63              blt    a0,a1,20403c74 <_svfprintf_r+0x2160>  allGrp, Branch-Instr, controlFlowGrp
20403be4:    0040006f              j    20403be8 <_svfprintf_r+0x20d4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403be8:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20403bec:    204125b7              lui    a1,0x20412                            allGrp
20403bf0:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
20403bf4:    00b52023              sw    a1,0(a0)                               allGrp
20403bf8:    f1c42503              lw    a0,-228(s0)                            allGrp
20403bfc:    01000593              li    a1,16                                  allGrp
20403c00:    00b52223              sw    a1,4(a0)                               allGrp
20403c04:    f6842503              lw    a0,-152(s0)                            allGrp
20403c08:    01050513              addi    a0,a0,16                             allGrp
20403c0c:    f6a42423              sw    a0,-152(s0)                            allGrp
20403c10:    f1c42503              lw    a0,-228(s0)                            allGrp
20403c14:    00850513              addi    a0,a0,8                              allGrp
20403c18:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403c1c:    f6442503              lw    a0,-156(s0)                            allGrp
20403c20:    00150513              addi    a0,a0,1                              allGrp
20403c24:    f6a42223              sw    a0,-156(s0)                            allGrp
20403c28:    00800593              li    a1,8                                   allGrp
20403c2c:    02b54c63              blt    a0,a1,20403c64 <_svfprintf_r+0x2150>  allGrp, Branch-Instr, controlFlowGrp
20403c30:    0040006f              j    20403c34 <_svfprintf_r+0x2120>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403c34:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403c38:    fec42583              lw    a1,-20(s0)                             allGrp
20403c3c:    f6040613              addi    a2,s0,-160                           allGrp
20403c40:    00006097              auipc    ra,0x6                              allGrp
20403c44:    300080e7              jalr    768(ra) # 20409f40 <__ssprint_r>     Call-Instr, allGrp, controlFlowGrp
20403c48:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403c4c:    00b50663              beq    a0,a1,20403c58 <_svfprintf_r+0x2144>  allGrp, Branch-Instr, controlFlowGrp
20403c50:    0040006f              j    20403c54 <_svfprintf_r+0x2140>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403c54:    2110006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403c58:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403c5c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403c60:    0040006f              j    20403c64 <_svfprintf_r+0x2150>          allGrp, Branch-Instr, controlFlowGrp
20403c64:    ee042503              lw    a0,-288(s0)                            Branch-Tgt, allGrp
20403c68:    ff050513              addi    a0,a0,-16                            allGrp
20403c6c:    eea42023              sw    a0,-288(s0)                            allGrp
20403c70:    f69ff06f              j    20403bd8 <_svfprintf_r+0x20c4>          allGrp, Branch-Instr, controlFlowGrp
20403c74:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20403c78:    204125b7              lui    a1,0x20412                            allGrp
20403c7c:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
20403c80:    00b52023              sw    a1,0(a0)                               allGrp
20403c84:    ee042503              lw    a0,-288(s0)                            allGrp
20403c88:    f1c42583              lw    a1,-228(s0)                            allGrp
20403c8c:    00a5a223              sw    a0,4(a1)                               allGrp
20403c90:    ee042503              lw    a0,-288(s0)                            allGrp
20403c94:    f6842583              lw    a1,-152(s0)                            allGrp
20403c98:    00a58533              add    a0,a1,a0                              allGrp
20403c9c:    f6a42423              sw    a0,-152(s0)                            allGrp
20403ca0:    f1c42503              lw    a0,-228(s0)                            allGrp
20403ca4:    00850513              addi    a0,a0,8                              allGrp
20403ca8:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403cac:    f6442503              lw    a0,-156(s0)                            allGrp
20403cb0:    00150513              addi    a0,a0,1                              allGrp
20403cb4:    f6a42223              sw    a0,-156(s0)                            allGrp
20403cb8:    00800593              li    a1,8                                   allGrp
20403cbc:    02b54c63              blt    a0,a1,20403cf4 <_svfprintf_r+0x21e0>  allGrp, Branch-Instr, controlFlowGrp
20403cc0:    0040006f              j    20403cc4 <_svfprintf_r+0x21b0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403cc4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403cc8:    fec42583              lw    a1,-20(s0)                             allGrp
20403ccc:    f6040613              addi    a2,s0,-160                           allGrp
20403cd0:    00006097              auipc    ra,0x6                              allGrp
20403cd4:    270080e7              jalr    624(ra) # 20409f40 <__ssprint_r>     Call-Instr, allGrp, controlFlowGrp
20403cd8:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403cdc:    00b50663              beq    a0,a1,20403ce8 <_svfprintf_r+0x21d4>  allGrp, Branch-Instr, controlFlowGrp
20403ce0:    0040006f              j    20403ce4 <_svfprintf_r+0x21d0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403ce4:    1810006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403ce8:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403cec:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403cf0:    0040006f              j    20403cf4 <_svfprintf_r+0x21e0>          allGrp, Branch-Instr, controlFlowGrp
20403cf4:    0040006f              j    20403cf8 <_svfprintf_r+0x21e4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						    lead, zeroes);
					cp += lead;
20403cf8:    f8c42503              lw    a0,-116(s0)                            Branch-Tgt, allGrp
20403cfc:    fd042583              lw    a1,-48(s0)                             allGrp
20403d00:    00a58533              add    a0,a1,a0                              allGrp
20403d04:    fca42823              sw    a0,-48(s0)                             allGrp
					    }
					    if (cp > convbuf + ndig)
						cp = convbuf + ndig;
					}
#endif
					if (expt < ndig || flags & ALT)
20403d08:    f9c42503              lw    a0,-100(s0)                            allGrp
20403d0c:    f8842583              lw    a1,-120(s0)                            allGrp
20403d10:    00b54e63              blt    a0,a1,20403d2c <_svfprintf_r+0x2218>  allGrp, Branch-Instr, controlFlowGrp
20403d14:    0040006f              j    20403d18 <_svfprintf_r+0x2204>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403d18:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20403d1c:    00157513              andi    a0,a0,1                              allGrp
20403d20:    00000593              li    a1,0                                   allGrp
20403d24:    08b50463              beq    a0,a1,20403dac <_svfprintf_r+0x2298>  allGrp, Branch-Instr, controlFlowGrp
20403d28:    0040006f              j    20403d2c <_svfprintf_r+0x2218>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					    PRINT (decimal_point, decp_len);
20403d2c:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
20403d30:    f1c42583              lw    a1,-228(s0)                            allGrp
20403d34:    00a5a023              sw    a0,0(a1)                               allGrp
20403d38:    fb042503              lw    a0,-80(s0)                             allGrp
20403d3c:    f1c42583              lw    a1,-228(s0)                            allGrp
20403d40:    00a5a223              sw    a0,4(a1)                               allGrp
20403d44:    fb042503              lw    a0,-80(s0)                             allGrp
20403d48:    f6842583              lw    a1,-152(s0)                            allGrp
20403d4c:    00a58533              add    a0,a1,a0                              allGrp
20403d50:    f6a42423              sw    a0,-152(s0)                            allGrp
20403d54:    f1c42503              lw    a0,-228(s0)                            allGrp
20403d58:    00850513              addi    a0,a0,8                              allGrp
20403d5c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403d60:    f6442503              lw    a0,-156(s0)                            allGrp
20403d64:    00150513              addi    a0,a0,1                              allGrp
20403d68:    f6a42223              sw    a0,-156(s0)                            allGrp
20403d6c:    00800593              li    a1,8                                   allGrp
20403d70:    02b54c63              blt    a0,a1,20403da8 <_svfprintf_r+0x2294>  allGrp, Branch-Instr, controlFlowGrp
20403d74:    0040006f              j    20403d78 <_svfprintf_r+0x2264>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403d78:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403d7c:    fec42583              lw    a1,-20(s0)                             allGrp
20403d80:    f6040613              addi    a2,s0,-160                           allGrp
20403d84:    00006097              auipc    ra,0x6                              allGrp
20403d88:    1bc080e7              jalr    444(ra) # 20409f40 <__ssprint_r>     Call-Instr, allGrp, controlFlowGrp
20403d8c:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403d90:    00b50663              beq    a0,a1,20403d9c <_svfprintf_r+0x2288>  allGrp, Branch-Instr, controlFlowGrp
20403d94:    0040006f              j    20403d98 <_svfprintf_r+0x2284>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403d98:    0cd0006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403d9c:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403da0:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403da4:    0040006f              j    20403da8 <_svfprintf_r+0x2294>          allGrp, Branch-Instr, controlFlowGrp
20403da8:    0040006f              j    20403dac <_svfprintf_r+0x2298>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					PRINTANDPAD (cp, convbuf + ndig,
20403dac:    ee442503              lw    a0,-284(s0)                            Branch-Tgt, allGrp
20403db0:    f8842583              lw    a1,-120(s0)                            allGrp
20403db4:    00b50533              add    a0,a0,a1                              allGrp
20403db8:    fd042583              lw    a1,-48(s0)                             allGrp
20403dbc:    40b50533              sub    a0,a0,a1                              allGrp
20403dc0:    eca42e23              sw    a0,-292(s0)                            allGrp
20403dc4:    edc42503              lw    a0,-292(s0)                            allGrp
20403dc8:    f8842583              lw    a1,-120(s0)                            allGrp
20403dcc:    f9c42603              lw    a2,-100(s0)                            allGrp
20403dd0:    40c585b3              sub    a1,a1,a2                              allGrp
20403dd4:    00a5de63              ble    a0,a1,20403df0 <_svfprintf_r+0x22dc>  allGrp, Branch-Instr, controlFlowGrp
20403dd8:    0040006f              j    20403ddc <_svfprintf_r+0x22c8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403ddc:    f8842503              lw    a0,-120(s0)                            Branch-Tgt, allGrp
20403de0:    f9c42583              lw    a1,-100(s0)                            allGrp
20403de4:    40b50533              sub    a0,a0,a1                              allGrp
20403de8:    eca42e23              sw    a0,-292(s0)                            allGrp
20403dec:    0040006f              j    20403df0 <_svfprintf_r+0x22dc>          allGrp, Branch-Instr, controlFlowGrp
20403df0:    edc42503              lw    a0,-292(s0)                            Branch-Tgt, allGrp
20403df4:    00100593              li    a1,1                                   allGrp
20403df8:    08b54463              blt    a0,a1,20403e80 <_svfprintf_r+0x236c>  allGrp, Branch-Instr, controlFlowGrp
20403dfc:    0040006f              j    20403e00 <_svfprintf_r+0x22ec>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403e00:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20403e04:    f1c42583              lw    a1,-228(s0)                            allGrp
20403e08:    00a5a023              sw    a0,0(a1)                               allGrp
20403e0c:    edc42503              lw    a0,-292(s0)                            allGrp
20403e10:    f1c42583              lw    a1,-228(s0)                            allGrp
20403e14:    00a5a223              sw    a0,4(a1)                               allGrp
20403e18:    edc42503              lw    a0,-292(s0)                            allGrp
20403e1c:    f6842583              lw    a1,-152(s0)                            allGrp
20403e20:    00a58533              add    a0,a1,a0                              allGrp
20403e24:    f6a42423              sw    a0,-152(s0)                            allGrp
20403e28:    f1c42503              lw    a0,-228(s0)                            allGrp
20403e2c:    00850513              addi    a0,a0,8                              allGrp
20403e30:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403e34:    f6442503              lw    a0,-156(s0)                            allGrp
20403e38:    00150513              addi    a0,a0,1                              allGrp
20403e3c:    f6a42223              sw    a0,-156(s0)                            allGrp
20403e40:    00800593              li    a1,8                                   allGrp
20403e44:    02b54c63              blt    a0,a1,20403e7c <_svfprintf_r+0x2368>  allGrp, Branch-Instr, controlFlowGrp
20403e48:    0040006f              j    20403e4c <_svfprintf_r+0x2338>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403e4c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403e50:    fec42583              lw    a1,-20(s0)                             allGrp
20403e54:    f6040613              addi    a2,s0,-160                           allGrp
20403e58:    00006097              auipc    ra,0x6                              allGrp
20403e5c:    0e8080e7              jalr    232(ra) # 20409f40 <__ssprint_r>     Call-Instr, allGrp, controlFlowGrp
20403e60:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403e64:    00b50663              beq    a0,a1,20403e70 <_svfprintf_r+0x235c>  allGrp, Branch-Instr, controlFlowGrp
20403e68:    0040006f              j    20403e6c <_svfprintf_r+0x2358>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403e6c:    7f80006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403e70:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403e74:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403e78:    0040006f              j    20403e7c <_svfprintf_r+0x2368>          allGrp, Branch-Instr, controlFlowGrp
20403e7c:    0040006f              j    20403e80 <_svfprintf_r+0x236c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403e80:    f8842503              lw    a0,-120(s0)                            Branch-Tgt, allGrp
20403e84:    f9c42583              lw    a1,-100(s0)                            allGrp
20403e88:    40b50533              sub    a0,a0,a1                              allGrp
20403e8c:    edc42583              lw    a1,-292(s0)                            allGrp
20403e90:    00100613              li    a2,1                                   allGrp
20403e94:    e2a42c23              sw    a0,-456(s0)                            allGrp
20403e98:    00c5ca63              blt    a1,a2,20403eac <_svfprintf_r+0x2398>  allGrp, Branch-Instr, controlFlowGrp
20403e9c:    0040006f              j    20403ea0 <_svfprintf_r+0x238c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403ea0:    edc42503              lw    a0,-292(s0)                            Branch-Tgt, allGrp
20403ea4:    e2a42a23              sw    a0,-460(s0)                            allGrp
20403ea8:    0100006f              j    20403eb8 <_svfprintf_r+0x23a4>          allGrp, Branch-Instr, controlFlowGrp
20403eac:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20403eb0:    e2a42a23              sw    a0,-460(s0)                            allGrp
20403eb4:    0040006f              j    20403eb8 <_svfprintf_r+0x23a4>          allGrp, Branch-Instr, controlFlowGrp
20403eb8:    e3442503              lw    a0,-460(s0)                            Branch-Tgt, allGrp
20403ebc:    e3842583              lw    a1,-456(s0)                            allGrp
20403ec0:    40a58533              sub    a0,a1,a0                              allGrp
20403ec4:    eca42e23              sw    a0,-292(s0)                            allGrp
20403ec8:    00100613              li    a2,1                                   allGrp
20403ecc:    12c54663              blt    a0,a2,20403ff8 <_svfprintf_r+0x24e4>  allGrp, Branch-Instr, controlFlowGrp
20403ed0:    0040006f              j    20403ed4 <_svfprintf_r+0x23c0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403ed4:    0040006f              j    20403ed8 <_svfprintf_r+0x23c4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403ed8:    edc42503              lw    a0,-292(s0)                            Branch-Tgt, allGrp
20403edc:    01100593              li    a1,17                                  allGrp
20403ee0:    08b54a63              blt    a0,a1,20403f74 <_svfprintf_r+0x2460>  allGrp, Branch-Instr, controlFlowGrp
20403ee4:    0040006f              j    20403ee8 <_svfprintf_r+0x23d4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403ee8:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20403eec:    204125b7              lui    a1,0x20412                            allGrp
20403ef0:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
20403ef4:    00b52023              sw    a1,0(a0)                               allGrp
20403ef8:    f1c42503              lw    a0,-228(s0)                            allGrp
20403efc:    01000593              li    a1,16                                  allGrp
20403f00:    00b52223              sw    a1,4(a0)                               allGrp
20403f04:    f6842503              lw    a0,-152(s0)                            allGrp
20403f08:    01050513              addi    a0,a0,16                             allGrp
20403f0c:    f6a42423              sw    a0,-152(s0)                            allGrp
20403f10:    f1c42503              lw    a0,-228(s0)                            allGrp
20403f14:    00850513              addi    a0,a0,8                              allGrp
20403f18:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403f1c:    f6442503              lw    a0,-156(s0)                            allGrp
20403f20:    00150513              addi    a0,a0,1                              allGrp
20403f24:    f6a42223              sw    a0,-156(s0)                            allGrp
20403f28:    00800593              li    a1,8                                   allGrp
20403f2c:    02b54c63              blt    a0,a1,20403f64 <_svfprintf_r+0x2450>  allGrp, Branch-Instr, controlFlowGrp
20403f30:    0040006f              j    20403f34 <_svfprintf_r+0x2420>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403f34:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403f38:    fec42583              lw    a1,-20(s0)                             allGrp
20403f3c:    f6040613              addi    a2,s0,-160                           allGrp
20403f40:    00006097              auipc    ra,0x6                              allGrp
20403f44:    000080e7              jalr    ra # 20409f40 <__ssprint_r>          Call-Instr, allGrp, controlFlowGrp
20403f48:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403f4c:    00b50663              beq    a0,a1,20403f58 <_svfprintf_r+0x2444>  allGrp, Branch-Instr, controlFlowGrp
20403f50:    0040006f              j    20403f54 <_svfprintf_r+0x2440>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403f54:    7100006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403f58:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403f5c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403f60:    0040006f              j    20403f64 <_svfprintf_r+0x2450>          allGrp, Branch-Instr, controlFlowGrp
20403f64:    edc42503              lw    a0,-292(s0)                            Branch-Tgt, allGrp
20403f68:    ff050513              addi    a0,a0,-16                            allGrp
20403f6c:    eca42e23              sw    a0,-292(s0)                            allGrp
20403f70:    f69ff06f              j    20403ed8 <_svfprintf_r+0x23c4>          allGrp, Branch-Instr, controlFlowGrp
20403f74:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20403f78:    204125b7              lui    a1,0x20412                            allGrp
20403f7c:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
20403f80:    00b52023              sw    a1,0(a0)                               allGrp
20403f84:    edc42503              lw    a0,-292(s0)                            allGrp
20403f88:    f1c42583              lw    a1,-228(s0)                            allGrp
20403f8c:    00a5a223              sw    a0,4(a1)                               allGrp
20403f90:    edc42503              lw    a0,-292(s0)                            allGrp
20403f94:    f6842583              lw    a1,-152(s0)                            allGrp
20403f98:    00a58533              add    a0,a1,a0                              allGrp
20403f9c:    f6a42423              sw    a0,-152(s0)                            allGrp
20403fa0:    f1c42503              lw    a0,-228(s0)                            allGrp
20403fa4:    00850513              addi    a0,a0,8                              allGrp
20403fa8:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403fac:    f6442503              lw    a0,-156(s0)                            allGrp
20403fb0:    00150513              addi    a0,a0,1                              allGrp
20403fb4:    f6a42223              sw    a0,-156(s0)                            allGrp
20403fb8:    00800593              li    a1,8                                   allGrp
20403fbc:    02b54c63              blt    a0,a1,20403ff4 <_svfprintf_r+0x24e0>  allGrp, Branch-Instr, controlFlowGrp
20403fc0:    0040006f              j    20403fc4 <_svfprintf_r+0x24b0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403fc4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20403fc8:    fec42583              lw    a1,-20(s0)                             allGrp
20403fcc:    f6040613              addi    a2,s0,-160                           allGrp
20403fd0:    00006097              auipc    ra,0x6                              allGrp
20403fd4:    f70080e7              jalr    -144(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
20403fd8:    00000593              li    a1,0                                   Return-Tgt, allGrp
20403fdc:    00b50663              beq    a0,a1,20403fe8 <_svfprintf_r+0x24d4>  allGrp, Branch-Instr, controlFlowGrp
20403fe0:    0040006f              j    20403fe4 <_svfprintf_r+0x24d0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403fe4:    6800006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403fe8:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20403fec:    f0a42e23              sw    a0,-228(s0)                            allGrp
20403ff0:    0040006f              j    20403ff4 <_svfprintf_r+0x24e0>          allGrp, Branch-Instr, controlFlowGrp
20403ff4:    0040006f              j    20403ff8 <_svfprintf_r+0x24e4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403ff8:    0040006f              j    20403ffc <_svfprintf_r+0x24e8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20403ffc:    0040006f              j    20404000 <_svfprintf_r+0x24ec>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						     ndig - expt, zeroes);
				}
			} else {	/* 'a', 'A', 'e', or 'E' */
20404000:    4180006f              j    20404418 <_svfprintf_r+0x2904>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				if (ndig > 1 || flags & ALT) {
20404004:    f8842503              lw    a0,-120(s0)                            Branch-Tgt, allGrp
20404008:    00100593              li    a1,1                                   allGrp
2040400c:    00a5ce63              blt    a1,a0,20404028 <_svfprintf_r+0x2514>  allGrp, Branch-Instr, controlFlowGrp
20404010:    0040006f              j    20404014 <_svfprintf_r+0x2500>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404014:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20404018:    00157513              andi    a0,a0,1                              allGrp
2040401c:    00000593              li    a1,0                                   allGrp
20404020:    2eb50e63              beq    a0,a1,2040431c <_svfprintf_r+0x2808>  allGrp, Branch-Instr, controlFlowGrp
20404024:    0040006f              j    20404028 <_svfprintf_r+0x2514>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					PRINT (cp, 1);
20404028:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040402c:    f1c42583              lw    a1,-228(s0)                            allGrp
20404030:    00a5a023              sw    a0,0(a1)                               allGrp
20404034:    f1c42503              lw    a0,-228(s0)                            allGrp
20404038:    00100593              li    a1,1                                   allGrp
2040403c:    00b52223              sw    a1,4(a0)                               allGrp
20404040:    f6842503              lw    a0,-152(s0)                            allGrp
20404044:    00150513              addi    a0,a0,1                              allGrp
20404048:    f6a42423              sw    a0,-152(s0)                            allGrp
2040404c:    f1c42503              lw    a0,-228(s0)                            allGrp
20404050:    00850513              addi    a0,a0,8                              allGrp
20404054:    f0a42e23              sw    a0,-228(s0)                            allGrp
20404058:    f6442503              lw    a0,-156(s0)                            allGrp
2040405c:    00150513              addi    a0,a0,1                              allGrp
20404060:    f6a42223              sw    a0,-156(s0)                            allGrp
20404064:    00800593              li    a1,8                                   allGrp
20404068:    02b54c63              blt    a0,a1,204040a0 <_svfprintf_r+0x258c>  allGrp, Branch-Instr, controlFlowGrp
2040406c:    0040006f              j    20404070 <_svfprintf_r+0x255c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404070:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20404074:    fec42583              lw    a1,-20(s0)                             allGrp
20404078:    f6040613              addi    a2,s0,-160                           allGrp
2040407c:    00006097              auipc    ra,0x6                              allGrp
20404080:    ec4080e7              jalr    -316(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
20404084:    00000593              li    a1,0                                   Return-Tgt, allGrp
20404088:    00b50663              beq    a0,a1,20404094 <_svfprintf_r+0x2580>  allGrp, Branch-Instr, controlFlowGrp
2040408c:    0040006f              j    20404090 <_svfprintf_r+0x257c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404090:    5d40006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404094:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20404098:    f0a42e23              sw    a0,-228(s0)                            allGrp
2040409c:    0040006f              j    204040a0 <_svfprintf_r+0x258c>          allGrp, Branch-Instr, controlFlowGrp
					cp++;
204040a0:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
204040a4:    00150513              addi    a0,a0,1                              allGrp
204040a8:    fca42823              sw    a0,-48(s0)                             allGrp
					PRINT (decimal_point, decp_len);
204040ac:    fb442503              lw    a0,-76(s0)                             allGrp
204040b0:    f1c42583              lw    a1,-228(s0)                            allGrp
204040b4:    00a5a023              sw    a0,0(a1)                               allGrp
204040b8:    fb042503              lw    a0,-80(s0)                             allGrp
204040bc:    f1c42583              lw    a1,-228(s0)                            allGrp
204040c0:    00a5a223              sw    a0,4(a1)                               allGrp
204040c4:    fb042503              lw    a0,-80(s0)                             allGrp
204040c8:    f6842583              lw    a1,-152(s0)                            allGrp
204040cc:    00a58533              add    a0,a1,a0                              allGrp
204040d0:    f6a42423              sw    a0,-152(s0)                            allGrp
204040d4:    f1c42503              lw    a0,-228(s0)                            allGrp
204040d8:    00850513              addi    a0,a0,8                              allGrp
204040dc:    f0a42e23              sw    a0,-228(s0)                            allGrp
204040e0:    f6442503              lw    a0,-156(s0)                            allGrp
204040e4:    00150513              addi    a0,a0,1                              allGrp
204040e8:    f6a42223              sw    a0,-156(s0)                            allGrp
204040ec:    00800593              li    a1,8                                   allGrp
204040f0:    02b54c63              blt    a0,a1,20404128 <_svfprintf_r+0x2614>  allGrp, Branch-Instr, controlFlowGrp
204040f4:    0040006f              j    204040f8 <_svfprintf_r+0x25e4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204040f8:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204040fc:    fec42583              lw    a1,-20(s0)                             allGrp
20404100:    f6040613              addi    a2,s0,-160                           allGrp
20404104:    00006097              auipc    ra,0x6                              allGrp
20404108:    e3c080e7              jalr    -452(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
2040410c:    00000593              li    a1,0                                   Return-Tgt, allGrp
20404110:    00b50663              beq    a0,a1,2040411c <_svfprintf_r+0x2608>  allGrp, Branch-Instr, controlFlowGrp
20404114:    0040006f              j    20404118 <_svfprintf_r+0x2604>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404118:    54c0006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040411c:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20404120:    f0a42e23              sw    a0,-228(s0)                            allGrp
20404124:    0040006f              j    20404128 <_svfprintf_r+0x2614>          allGrp, Branch-Instr, controlFlowGrp
					if (_fpvalue) {
20404128:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
2040412c:    fa442583              lw    a1,-92(s0)                             allGrp
20404130:    00000613              li    a2,0                                   allGrp
20404134:    e2c42823              sw    a2,-464(s0)                            allGrp
20404138:    e3042683              lw    a3,-464(s0)                            allGrp
2040413c:    0000c097              auipc    ra,0xc                              allGrp
20404140:    ed4080e7              jalr    -300(ra) # 20410010 <__eqdf2>        Call-Instr, allGrp, controlFlowGrp
20404144:    e3042583              lw    a1,-464(s0)                            Return-Tgt, allGrp
20404148:    08b50863              beq    a0,a1,204041d8 <_svfprintf_r+0x26c4>  allGrp, Branch-Instr, controlFlowGrp
2040414c:    0040006f              j    20404150 <_svfprintf_r+0x263c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						PRINT (cp, ndig - 1);
20404150:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20404154:    f1c42583              lw    a1,-228(s0)                            allGrp
20404158:    00a5a023              sw    a0,0(a1)                               allGrp
2040415c:    f8842503              lw    a0,-120(s0)                            allGrp
20404160:    fff50513              addi    a0,a0,-1                             allGrp
20404164:    f1c42583              lw    a1,-228(s0)                            allGrp
20404168:    00a5a223              sw    a0,4(a1)                               allGrp
2040416c:    f8842503              lw    a0,-120(s0)                            allGrp
20404170:    f6842583              lw    a1,-152(s0)                            allGrp
20404174:    00a58533              add    a0,a1,a0                              allGrp
20404178:    fff50513              addi    a0,a0,-1                             allGrp
2040417c:    f6a42423              sw    a0,-152(s0)                            allGrp
20404180:    f1c42503              lw    a0,-228(s0)                            allGrp
20404184:    00850513              addi    a0,a0,8                              allGrp
20404188:    f0a42e23              sw    a0,-228(s0)                            allGrp
2040418c:    f6442503              lw    a0,-156(s0)                            allGrp
20404190:    00150513              addi    a0,a0,1                              allGrp
20404194:    f6a42223              sw    a0,-156(s0)                            allGrp
20404198:    00800593              li    a1,8                                   allGrp
2040419c:    02b54c63              blt    a0,a1,204041d4 <_svfprintf_r+0x26c0>  allGrp, Branch-Instr, controlFlowGrp
204041a0:    0040006f              j    204041a4 <_svfprintf_r+0x2690>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204041a4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204041a8:    fec42583              lw    a1,-20(s0)                             allGrp
204041ac:    f6040613              addi    a2,s0,-160                           allGrp
204041b0:    00006097              auipc    ra,0x6                              allGrp
204041b4:    d90080e7              jalr    -624(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
204041b8:    00000593              li    a1,0                                   Return-Tgt, allGrp
204041bc:    00b50663              beq    a0,a1,204041c8 <_svfprintf_r+0x26b4>  allGrp, Branch-Instr, controlFlowGrp
204041c0:    0040006f              j    204041c4 <_svfprintf_r+0x26b0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204041c4:    4a00006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204041c8:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
204041cc:    f0a42e23              sw    a0,-228(s0)                            allGrp
204041d0:    0040006f              j    204041d4 <_svfprintf_r+0x26c0>          allGrp, Branch-Instr, controlFlowGrp
					} else	/* 0.[0..] */
204041d4:    1440006f              j    20404318 <_svfprintf_r+0x2804>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						/* __dtoa irregularity */
						PAD (ndig - 1, zeroes);
204041d8:    f8842503              lw    a0,-120(s0)                            Branch-Tgt, allGrp
204041dc:    fff50513              addi    a0,a0,-1                             allGrp
204041e0:    fca42c23              sw    a0,-40(s0)                             allGrp
204041e4:    00100593              li    a1,1                                   allGrp
204041e8:    12b54663              blt    a0,a1,20404314 <_svfprintf_r+0x2800>  allGrp, Branch-Instr, controlFlowGrp
204041ec:    0040006f              j    204041f0 <_svfprintf_r+0x26dc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204041f0:    0040006f              j    204041f4 <_svfprintf_r+0x26e0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204041f4:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
204041f8:    01100593              li    a1,17                                  allGrp
204041fc:    08b54a63              blt    a0,a1,20404290 <_svfprintf_r+0x277c>  allGrp, Branch-Instr, controlFlowGrp
20404200:    0040006f              j    20404204 <_svfprintf_r+0x26f0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404204:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20404208:    204125b7              lui    a1,0x20412                            allGrp
2040420c:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
20404210:    00b52023              sw    a1,0(a0)                               allGrp
20404214:    f1c42503              lw    a0,-228(s0)                            allGrp
20404218:    01000593              li    a1,16                                  allGrp
2040421c:    00b52223              sw    a1,4(a0)                               allGrp
20404220:    f6842503              lw    a0,-152(s0)                            allGrp
20404224:    01050513              addi    a0,a0,16                             allGrp
20404228:    f6a42423              sw    a0,-152(s0)                            allGrp
2040422c:    f1c42503              lw    a0,-228(s0)                            allGrp
20404230:    00850513              addi    a0,a0,8                              allGrp
20404234:    f0a42e23              sw    a0,-228(s0)                            allGrp
20404238:    f6442503              lw    a0,-156(s0)                            allGrp
2040423c:    00150513              addi    a0,a0,1                              allGrp
20404240:    f6a42223              sw    a0,-156(s0)                            allGrp
20404244:    00800593              li    a1,8                                   allGrp
20404248:    02b54c63              blt    a0,a1,20404280 <_svfprintf_r+0x276c>  allGrp, Branch-Instr, controlFlowGrp
2040424c:    0040006f              j    20404250 <_svfprintf_r+0x273c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404250:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20404254:    fec42583              lw    a1,-20(s0)                             allGrp
20404258:    f6040613              addi    a2,s0,-160                           allGrp
2040425c:    00006097              auipc    ra,0x6                              allGrp
20404260:    ce4080e7              jalr    -796(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
20404264:    00000593              li    a1,0                                   Return-Tgt, allGrp
20404268:    00b50663              beq    a0,a1,20404274 <_svfprintf_r+0x2760>  allGrp, Branch-Instr, controlFlowGrp
2040426c:    0040006f              j    20404270 <_svfprintf_r+0x275c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404270:    3f40006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404274:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20404278:    f0a42e23              sw    a0,-228(s0)                            allGrp
2040427c:    0040006f              j    20404280 <_svfprintf_r+0x276c>          allGrp, Branch-Instr, controlFlowGrp
20404280:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20404284:    ff050513              addi    a0,a0,-16                            allGrp
20404288:    fca42c23              sw    a0,-40(s0)                             allGrp
2040428c:    f69ff06f              j    204041f4 <_svfprintf_r+0x26e0>          allGrp, Branch-Instr, controlFlowGrp
20404290:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20404294:    204125b7              lui    a1,0x20412                            allGrp
20404298:    55058593              addi    a1,a1,1360 # 20412550 <_svfprintf_r.zeroes>allGrp
2040429c:    00b52023              sw    a1,0(a0)                               allGrp
204042a0:    fd842503              lw    a0,-40(s0)                             allGrp
204042a4:    f1c42583              lw    a1,-228(s0)                            allGrp
204042a8:    00a5a223              sw    a0,4(a1)                               allGrp
204042ac:    fd842503              lw    a0,-40(s0)                             allGrp
204042b0:    f6842583              lw    a1,-152(s0)                            allGrp
204042b4:    00a58533              add    a0,a1,a0                              allGrp
204042b8:    f6a42423              sw    a0,-152(s0)                            allGrp
204042bc:    f1c42503              lw    a0,-228(s0)                            allGrp
204042c0:    00850513              addi    a0,a0,8                              allGrp
204042c4:    f0a42e23              sw    a0,-228(s0)                            allGrp
204042c8:    f6442503              lw    a0,-156(s0)                            allGrp
204042cc:    00150513              addi    a0,a0,1                              allGrp
204042d0:    f6a42223              sw    a0,-156(s0)                            allGrp
204042d4:    00800593              li    a1,8                                   allGrp
204042d8:    02b54c63              blt    a0,a1,20404310 <_svfprintf_r+0x27fc>  allGrp, Branch-Instr, controlFlowGrp
204042dc:    0040006f              j    204042e0 <_svfprintf_r+0x27cc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204042e0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204042e4:    fec42583              lw    a1,-20(s0)                             allGrp
204042e8:    f6040613              addi    a2,s0,-160                           allGrp
204042ec:    00006097              auipc    ra,0x6                              allGrp
204042f0:    c54080e7              jalr    -940(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
204042f4:    00000593              li    a1,0                                   Return-Tgt, allGrp
204042f8:    00b50663              beq    a0,a1,20404304 <_svfprintf_r+0x27f0>  allGrp, Branch-Instr, controlFlowGrp
204042fc:    0040006f              j    20404300 <_svfprintf_r+0x27ec>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404300:    3640006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404304:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20404308:    f0a42e23              sw    a0,-228(s0)                            allGrp
2040430c:    0040006f              j    20404310 <_svfprintf_r+0x27fc>          allGrp, Branch-Instr, controlFlowGrp
20404310:    0040006f              j    20404314 <_svfprintf_r+0x2800>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404314:    0040006f              j    20404318 <_svfprintf_r+0x2804>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				} else	/* XeYYY */
20404318:    0800006f              j    20404398 <_svfprintf_r+0x2884>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					PRINT (cp, 1);
2040431c:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20404320:    f1c42583              lw    a1,-228(s0)                            allGrp
20404324:    00a5a023              sw    a0,0(a1)                               allGrp
20404328:    f1c42503              lw    a0,-228(s0)                            allGrp
2040432c:    00100593              li    a1,1                                   allGrp
20404330:    00b52223              sw    a1,4(a0)                               allGrp
20404334:    f6842503              lw    a0,-152(s0)                            allGrp
20404338:    00150513              addi    a0,a0,1                              allGrp
2040433c:    f6a42423              sw    a0,-152(s0)                            allGrp
20404340:    f1c42503              lw    a0,-228(s0)                            allGrp
20404344:    00850513              addi    a0,a0,8                              allGrp
20404348:    f0a42e23              sw    a0,-228(s0)                            allGrp
2040434c:    f6442503              lw    a0,-156(s0)                            allGrp
20404350:    00150513              addi    a0,a0,1                              allGrp
20404354:    f6a42223              sw    a0,-156(s0)                            allGrp
20404358:    00800593              li    a1,8                                   allGrp
2040435c:    02b54c63              blt    a0,a1,20404394 <_svfprintf_r+0x2880>  allGrp, Branch-Instr, controlFlowGrp
20404360:    0040006f              j    20404364 <_svfprintf_r+0x2850>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404364:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20404368:    fec42583              lw    a1,-20(s0)                             allGrp
2040436c:    f6040613              addi    a2,s0,-160                           allGrp
20404370:    00006097              auipc    ra,0x6                              allGrp
20404374:    bd0080e7              jalr    -1072(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
20404378:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040437c:    00b50663              beq    a0,a1,20404388 <_svfprintf_r+0x2874>  allGrp, Branch-Instr, controlFlowGrp
20404380:    0040006f              j    20404384 <_svfprintf_r+0x2870>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404384:    2e00006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404388:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
2040438c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20404390:    0040006f              j    20404394 <_svfprintf_r+0x2880>          allGrp, Branch-Instr, controlFlowGrp
20404394:    0040006f              j    20404398 <_svfprintf_r+0x2884>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				PRINT (expstr, expsize);
20404398:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
2040439c:    f9140593              addi    a1,s0,-111                           allGrp
204043a0:    00b52023              sw    a1,0(a0)                               allGrp
204043a4:    f9842503              lw    a0,-104(s0)                            allGrp
204043a8:    f1c42583              lw    a1,-228(s0)                            allGrp
204043ac:    00a5a223              sw    a0,4(a1)                               allGrp
204043b0:    f9842503              lw    a0,-104(s0)                            allGrp
204043b4:    f6842583              lw    a1,-152(s0)                            allGrp
204043b8:    00a58533              add    a0,a1,a0                              allGrp
204043bc:    f6a42423              sw    a0,-152(s0)                            allGrp
204043c0:    f1c42503              lw    a0,-228(s0)                            allGrp
204043c4:    00850513              addi    a0,a0,8                              allGrp
204043c8:    f0a42e23              sw    a0,-228(s0)                            allGrp
204043cc:    f6442503              lw    a0,-156(s0)                            allGrp
204043d0:    00150513              addi    a0,a0,1                              allGrp
204043d4:    f6a42223              sw    a0,-156(s0)                            allGrp
204043d8:    00800593              li    a1,8                                   allGrp
204043dc:    02b54c63              blt    a0,a1,20404414 <_svfprintf_r+0x2900>  allGrp, Branch-Instr, controlFlowGrp
204043e0:    0040006f              j    204043e4 <_svfprintf_r+0x28d0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204043e4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204043e8:    fec42583              lw    a1,-20(s0)                             allGrp
204043ec:    f6040613              addi    a2,s0,-160                           allGrp
204043f0:    00006097              auipc    ra,0x6                              allGrp
204043f4:    b50080e7              jalr    -1200(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
204043f8:    00000593              li    a1,0                                   Return-Tgt, allGrp
204043fc:    00b50663              beq    a0,a1,20404408 <_svfprintf_r+0x28f4>  allGrp, Branch-Instr, controlFlowGrp
20404400:    0040006f              j    20404404 <_svfprintf_r+0x28f0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404404:    2600006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404408:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
2040440c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20404410:    0040006f              j    20404414 <_svfprintf_r+0x2900>          allGrp, Branch-Instr, controlFlowGrp
20404414:    0040006f              j    20404418 <_svfprintf_r+0x2904>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404418:    0040006f              j    2040441c <_svfprintf_r+0x2908>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		}
#else /* !FLOATING_POINT */
		PRINT (cp, size);
#endif
		/* left-adjusting padding (always blank) */
		if (flags & LADJUST)
2040441c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20404420:    00457513              andi    a0,a0,4                              allGrp
20404424:    00000593              li    a1,0                                   allGrp
20404428:    14b50663              beq    a0,a1,20404574 <_svfprintf_r+0x2a60>  allGrp, Branch-Instr, controlFlowGrp
2040442c:    0040006f              j    20404430 <_svfprintf_r+0x291c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PAD (width - realsz, blanks);
20404430:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
20404434:    f7842583              lw    a1,-136(s0)                            allGrp
20404438:    40b50533              sub    a0,a0,a1                              allGrp
2040443c:    fca42c23              sw    a0,-40(s0)                             allGrp
20404440:    00100593              li    a1,1                                   allGrp
20404444:    12b54663              blt    a0,a1,20404570 <_svfprintf_r+0x2a5c>  allGrp, Branch-Instr, controlFlowGrp
20404448:    0040006f              j    2040444c <_svfprintf_r+0x2938>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040444c:    0040006f              j    20404450 <_svfprintf_r+0x293c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404450:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20404454:    01100593              li    a1,17                                  allGrp
20404458:    08b54a63              blt    a0,a1,204044ec <_svfprintf_r+0x29d8>  allGrp, Branch-Instr, controlFlowGrp
2040445c:    0040006f              j    20404460 <_svfprintf_r+0x294c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404460:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
20404464:    204125b7              lui    a1,0x20412                            allGrp
20404468:    54058593              addi    a1,a1,1344 # 20412540 <_svfprintf_r.blanks>allGrp
2040446c:    00b52023              sw    a1,0(a0)                               allGrp
20404470:    f1c42503              lw    a0,-228(s0)                            allGrp
20404474:    01000593              li    a1,16                                  allGrp
20404478:    00b52223              sw    a1,4(a0)                               allGrp
2040447c:    f6842503              lw    a0,-152(s0)                            allGrp
20404480:    01050513              addi    a0,a0,16                             allGrp
20404484:    f6a42423              sw    a0,-152(s0)                            allGrp
20404488:    f1c42503              lw    a0,-228(s0)                            allGrp
2040448c:    00850513              addi    a0,a0,8                              allGrp
20404490:    f0a42e23              sw    a0,-228(s0)                            allGrp
20404494:    f6442503              lw    a0,-156(s0)                            allGrp
20404498:    00150513              addi    a0,a0,1                              allGrp
2040449c:    f6a42223              sw    a0,-156(s0)                            allGrp
204044a0:    00800593              li    a1,8                                   allGrp
204044a4:    02b54c63              blt    a0,a1,204044dc <_svfprintf_r+0x29c8>  allGrp, Branch-Instr, controlFlowGrp
204044a8:    0040006f              j    204044ac <_svfprintf_r+0x2998>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204044ac:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204044b0:    fec42583              lw    a1,-20(s0)                             allGrp
204044b4:    f6040613              addi    a2,s0,-160                           allGrp
204044b8:    00006097              auipc    ra,0x6                              allGrp
204044bc:    a88080e7              jalr    -1400(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
204044c0:    00000593              li    a1,0                                   Return-Tgt, allGrp
204044c4:    00b50663              beq    a0,a1,204044d0 <_svfprintf_r+0x29bc>  allGrp, Branch-Instr, controlFlowGrp
204044c8:    0040006f              j    204044cc <_svfprintf_r+0x29b8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204044cc:    1980006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204044d0:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
204044d4:    f0a42e23              sw    a0,-228(s0)                            allGrp
204044d8:    0040006f              j    204044dc <_svfprintf_r+0x29c8>          allGrp, Branch-Instr, controlFlowGrp
204044dc:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
204044e0:    ff050513              addi    a0,a0,-16                            allGrp
204044e4:    fca42c23              sw    a0,-40(s0)                             allGrp
204044e8:    f69ff06f              j    20404450 <_svfprintf_r+0x293c>          allGrp, Branch-Instr, controlFlowGrp
204044ec:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
204044f0:    204125b7              lui    a1,0x20412                            allGrp
204044f4:    54058593              addi    a1,a1,1344 # 20412540 <_svfprintf_r.blanks>allGrp
204044f8:    00b52023              sw    a1,0(a0)                               allGrp
204044fc:    fd842503              lw    a0,-40(s0)                             allGrp
20404500:    f1c42583              lw    a1,-228(s0)                            allGrp
20404504:    00a5a223              sw    a0,4(a1)                               allGrp
20404508:    fd842503              lw    a0,-40(s0)                             allGrp
2040450c:    f6842583              lw    a1,-152(s0)                            allGrp
20404510:    00a58533              add    a0,a1,a0                              allGrp
20404514:    f6a42423              sw    a0,-152(s0)                            allGrp
20404518:    f1c42503              lw    a0,-228(s0)                            allGrp
2040451c:    00850513              addi    a0,a0,8                              allGrp
20404520:    f0a42e23              sw    a0,-228(s0)                            allGrp
20404524:    f6442503              lw    a0,-156(s0)                            allGrp
20404528:    00150513              addi    a0,a0,1                              allGrp
2040452c:    f6a42223              sw    a0,-156(s0)                            allGrp
20404530:    00800593              li    a1,8                                   allGrp
20404534:    02b54c63              blt    a0,a1,2040456c <_svfprintf_r+0x2a58>  allGrp, Branch-Instr, controlFlowGrp
20404538:    0040006f              j    2040453c <_svfprintf_r+0x2a28>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040453c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20404540:    fec42583              lw    a1,-20(s0)                             allGrp
20404544:    f6040613              addi    a2,s0,-160                           allGrp
20404548:    00006097              auipc    ra,0x6                              allGrp
2040454c:    9f8080e7              jalr    -1544(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
20404550:    00000593              li    a1,0                                   Return-Tgt, allGrp
20404554:    00b50663              beq    a0,a1,20404560 <_svfprintf_r+0x2a4c>  allGrp, Branch-Instr, controlFlowGrp
20404558:    0040006f              j    2040455c <_svfprintf_r+0x2a48>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040455c:    1080006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404560:    f2040513              addi    a0,s0,-224                           Branch-Tgt, allGrp
20404564:    f0a42e23              sw    a0,-228(s0)                            allGrp
20404568:    0040006f              j    2040456c <_svfprintf_r+0x2a58>          allGrp, Branch-Instr, controlFlowGrp
2040456c:    0040006f              j    20404570 <_svfprintf_r+0x2a5c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404570:    0040006f              j    20404574 <_svfprintf_r+0x2a60>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

		/* finally, adjust ret */
		ret += width > realsz ? width : realsz;
20404574:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
20404578:    f7842583              lw    a1,-136(s0)                            allGrp
2040457c:    00a5da63              ble    a0,a1,20404590 <_svfprintf_r+0x2a7c>  allGrp, Branch-Instr, controlFlowGrp
20404580:    0040006f              j    20404584 <_svfprintf_r+0x2a70>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404584:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
20404588:    e2a42623              sw    a0,-468(s0)                            allGrp
2040458c:    0100006f              j    2040459c <_svfprintf_r+0x2a88>          allGrp, Branch-Instr, controlFlowGrp
20404590:    f7842503              lw    a0,-136(s0)                            Branch-Tgt, allGrp
20404594:    e2a42623              sw    a0,-468(s0)                            allGrp
20404598:    0040006f              j    2040459c <_svfprintf_r+0x2a88>          allGrp, Branch-Instr, controlFlowGrp
2040459c:    e2c42503              lw    a0,-468(s0)                            Branch-Tgt, allGrp
204045a0:    fc442583              lw    a1,-60(s0)                             allGrp
204045a4:    00a58533              add    a0,a1,a0                              allGrp
204045a8:    fca42223              sw    a0,-60(s0)                             allGrp

		FLUSH ();	/* copy out the I/O vectors */
204045ac:    f6842503              lw    a0,-152(s0)                            allGrp
204045b0:    00000593              li    a1,0                                   allGrp
204045b4:    02b50663              beq    a0,a1,204045e0 <_svfprintf_r+0x2acc>  allGrp, Branch-Instr, controlFlowGrp
204045b8:    0040006f              j    204045bc <_svfprintf_r+0x2aa8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204045bc:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204045c0:    fec42583              lw    a1,-20(s0)                             allGrp
204045c4:    f6040613              addi    a2,s0,-160                           allGrp
204045c8:    00006097              auipc    ra,0x6                              allGrp
204045cc:    978080e7              jalr    -1672(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
204045d0:    00000593              li    a1,0                                   Return-Tgt, allGrp
204045d4:    00b50663              beq    a0,a1,204045e0 <_svfprintf_r+0x2acc>  allGrp, Branch-Instr, controlFlowGrp
204045d8:    0040006f              j    204045dc <_svfprintf_r+0x2ac8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204045dc:    0880006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204045e0:    00000513              li    a0,0                                   Branch-Tgt, allGrp
204045e4:    f6a42223              sw    a0,-156(s0)                            allGrp
204045e8:    f2040593              addi    a1,s0,-224                           allGrp
204045ec:    f0b42e23              sw    a1,-228(s0)                            allGrp

                if (malloc_buf != NULL) {
204045f0:    eec42583              lw    a1,-276(s0)                            allGrp
204045f4:    02a58263              beq    a1,a0,20404618 <_svfprintf_r+0x2b04>  allGrp, Branch-Instr, controlFlowGrp
204045f8:    0040006f              j    204045fc <_svfprintf_r+0x2ae8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			_free_r (data, malloc_buf);
204045fc:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20404600:    eec42583              lw    a1,-276(s0)                            allGrp
20404604:    0000e097              auipc    ra,0xe                              allGrp
20404608:    dd0080e7              jalr    -560(ra) # 204123d4 <_free_r>        Call-Instr, allGrp, controlFlowGrp
2040460c:    00000513              li    a0,0                                   Return-Tgt, allGrp
			malloc_buf = NULL;
20404610:    eea42623              sw    a0,-276(s0)                            allGrp
		}
20404614:    0040006f              j    20404618 <_svfprintf_r+0x2b04>          allGrp, Branch-Instr, controlFlowGrp
	for (;;) {
20404618:    e38fd06f              j    20401c50 <_svfprintf_r+0x13c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	}
done:
	FLUSH ();
2040461c:    f6842503              lw    a0,-152(s0)                            Branch-Tgt, allGrp
20404620:    00000593              li    a1,0                                   allGrp
20404624:    02b50663              beq    a0,a1,20404650 <_svfprintf_r+0x2b3c>  allGrp, Branch-Instr, controlFlowGrp
20404628:    0040006f              j    2040462c <_svfprintf_r+0x2b18>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040462c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20404630:    fec42583              lw    a1,-20(s0)                             allGrp
20404634:    f6040613              addi    a2,s0,-160                           allGrp
20404638:    00006097              auipc    ra,0x6                              allGrp
2040463c:    908080e7              jalr    -1784(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
20404640:    00000593              li    a1,0                                   Return-Tgt, allGrp
20404644:    00b50663              beq    a0,a1,20404650 <_svfprintf_r+0x2b3c>  allGrp, Branch-Instr, controlFlowGrp
20404648:    0040006f              j    2040464c <_svfprintf_r+0x2b38>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040464c:    0180006f              j    20404664 <_svfprintf_r+0x2b50>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404650:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20404654:    f6a42223              sw    a0,-156(s0)                            allGrp
20404658:    f2040513              addi    a0,s0,-224                           allGrp
2040465c:    f0a42e23              sw    a0,-228(s0)                            allGrp
20404660:    0040006f              j    20404664 <_svfprintf_r+0x2b50>          allGrp, Branch-Instr, controlFlowGrp
error:
	if (malloc_buf != NULL)
20404664:    eec42503              lw    a0,-276(s0)                            Branch-Tgt, allGrp
20404668:    00000593              li    a1,0                                   allGrp
2040466c:    00b50e63              beq    a0,a1,20404688 <_svfprintf_r+0x2b74>  allGrp, Branch-Instr, controlFlowGrp
20404670:    0040006f              j    20404674 <_svfprintf_r+0x2b60>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		_free_r (data, malloc_buf);
20404674:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20404678:    eec42583              lw    a1,-276(s0)                            allGrp
2040467c:    0000e097              auipc    ra,0xe                              allGrp
20404680:    d58080e7              jalr    -680(ra) # 204123d4 <_free_r>        Call-Instr, allGrp, controlFlowGrp
20404684:    0040006f              j    20404688 <_svfprintf_r+0x2b74>          Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
#ifndef STRING_ONLY
	_newlib_flockfile_end (fp);
#endif
	return (__sferror (fp) ? EOF : ret);
20404688:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040468c:    00c55503              lhu    a0,12(a0)                             allGrp
20404690:    04057513              andi    a0,a0,64                             allGrp
20404694:    00000593              li    a1,0                                   allGrp
20404698:    00b50a63              beq    a0,a1,204046ac <_svfprintf_r+0x2b98>  allGrp, Branch-Instr, controlFlowGrp
2040469c:    0040006f              j    204046a0 <_svfprintf_r+0x2b8c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204046a0:    fff00513              li    a0,-1                                  Branch-Tgt, allGrp
204046a4:    e2a42423              sw    a0,-472(s0)                            allGrp
204046a8:    0100006f              j    204046b8 <_svfprintf_r+0x2ba4>          allGrp, Branch-Instr, controlFlowGrp
204046ac:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
204046b0:    e2a42423              sw    a0,-472(s0)                            allGrp
204046b4:    0040006f              j    204046b8 <_svfprintf_r+0x2ba4>          allGrp, Branch-Instr, controlFlowGrp
204046b8:    e2842503              lw    a0,-472(s0)                            Branch-Tgt, allGrp
204046bc:    fea42a23              sw    a0,-12(s0)                             allGrp
204046c0:    0040006f              j    204046c4 <_svfprintf_r+0x2bb0>          allGrp, Branch-Instr, controlFlowGrp
	/* NOTREACHED */
}
204046c4:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
204046c8:    1d812403              lw    s0,472(sp)                             allGrp
204046cc:    1c012c23              sw    zero,472(sp)                           allGrp
204046d0:    1dc12083              lw    ra,476(sp)                             allGrp
204046d4:    1c012e23              sw    zero,476(sp)                           allGrp
204046d8:    1e010113              addi    sp,sp,480                            allGrp
204046dc:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204046e0 <cvt>:
204046e0:    f8010113              addi    sp,sp,-128                           Call-Tgt, allGrp, Branch-Tgt
204046e4:    06112e23              sw    ra,124(sp)                             allGrp
204046e8:    06812c23              sw    s0,120(sp)                             allGrp
204046ec:    06912a23              sw    s1,116(sp)                             allGrp
204046f0:    07212823              sw    s2,112(sp)                             allGrp
204046f4:    07312623              sw    s3,108(sp)                             allGrp
204046f8:    08010413              addi    s0,sp,128                            allGrp
204046fc:    00060293              mv    t0,a2                                  allGrp
20404700:    00058313              mv    t1,a1                                  allGrp
20404704:    00442383              lw    t2,4(s0)                               allGrp
20404708:    00042e03              lw    t3,0(s0)                               allGrp
2040470c:    00088e93              mv    t4,a7                                  allGrp
20404710:    00080f13              mv    t5,a6                                  allGrp
20404714:    00078f93              mv    t6,a5                                  allGrp
20404718:    00070493              mv    s1,a4                                  allGrp
2040471c:    00068913              mv    s2,a3                                  allGrp
20404720:    00050993              mv    s3,a0                                  allGrp
20404724:    fea42423              sw    a0,-24(s0)                             allGrp
20404728:    fec42223              sw    a2,-28(s0)                             allGrp
2040472c:    feb42023              sw    a1,-32(s0)                             allGrp
20404730:    fcd42e23              sw    a3,-36(s0)                             allGrp
20404734:    fce42c23              sw    a4,-40(s0)                             allGrp
20404738:    fcf42a23              sw    a5,-44(s0)                             allGrp
2040473c:    fd042823              sw    a6,-48(s0)                             allGrp
20404740:    fd142623              sw    a7,-52(s0)                             allGrp
	int mode, dsgn;
	char *digits, *bp, *rve;
# ifdef _NO_LONGDBL
	union double_union tmp;

	tmp.d = value;
20404744:    fe042503              lw    a0,-32(s0)                             allGrp
20404748:    fe442583              lw    a1,-28(s0)                             allGrp
2040474c:    fab42a23              sw    a1,-76(s0)                             allGrp
20404750:    faa42823              sw    a0,-80(s0)                             allGrp
	if (word0 (tmp) & Sign_bit) { /* this will check for < 0 and -0.0 */
20404754:    fb442503              lw    a0,-76(s0)                             allGrp
20404758:    800005b7              lui    a1,0x80000                            allGrp
2040475c:    00b57533              and    a0,a0,a1                              allGrp
20404760:    00000593              li    a1,0                                   allGrp
20404764:    fa742623              sw    t2,-84(s0)                             allGrp
20404768:    fbc42423              sw    t3,-88(s0)                             allGrp
2040476c:    fbd42223              sw    t4,-92(s0)                             allGrp
20404770:    fbe42023              sw    t5,-96(s0)                             allGrp
20404774:    f9f42e23              sw    t6,-100(s0)                            allGrp
20404778:    f9242c23              sw    s2,-104(s0)                            allGrp
2040477c:    f8942a23              sw    s1,-108(s0)                            allGrp
20404780:    f9342823              sw    s3,-112(s0)                            allGrp
20404784:    f8542623              sw    t0,-116(s0)                            allGrp
20404788:    f8642423              sw    t1,-120(s0)                            allGrp
2040478c:    02b50c63              beq    a0,a1,204047c4 <cvt+0xe4>             allGrp, Branch-Instr, controlFlowGrp
20404790:    0040006f              j    20404794 <cvt+0xb4>                     Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		value = -value;
20404794:    fe042603              lw    a2,-32(s0)                             Branch-Tgt, allGrp
20404798:    fe442683              lw    a3,-28(s0)                             allGrp
2040479c:    00000513              li    a0,0                                   allGrp
204047a0:    800005b7              lui    a1,0x80000                            allGrp
204047a4:    0000c097              auipc    ra,0xc                              allGrp
204047a8:    334080e7              jalr    820(ra) # 20410ad8 <__subdf3>        Call-Instr, allGrp, controlFlowGrp
204047ac:    feb42223              sw    a1,-28(s0)                             Return-Tgt, allGrp
204047b0:    fea42023              sw    a0,-32(s0)                             allGrp
		*sign = '-';
204047b4:    fd442503              lw    a0,-44(s0)                             allGrp
204047b8:    02d00593              li    a1,45                                  allGrp
204047bc:    00b50023              sb    a1,0(a0)                               allGrp
	} else
204047c0:    0140006f              j    204047d4 <cvt+0xf4>                     allGrp, Branch-Instr, controlFlowGrp
		*sign = '\000';
204047c4:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
204047c8:    00000593              li    a1,0                                   allGrp
204047cc:    00b50023              sb    a1,0(a0)                               allGrp
204047d0:    0040006f              j    204047d4 <cvt+0xf4>                     allGrp, Branch-Instr, controlFlowGrp
		}
		*length = bp - buf;
		return buf;
	}
# endif /* _WANT_IO_C99_FORMATS */
	if (ch == 'f' || ch == 'F') {
204047d4:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
204047d8:    06600593              li    a1,102                                 allGrp
204047dc:    00b50c63              beq    a0,a1,204047f4 <cvt+0x114>            allGrp, Branch-Instr, controlFlowGrp
204047e0:    0040006f              j    204047e4 <cvt+0x104>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204047e4:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
204047e8:    04600593              li    a1,70                                  allGrp
204047ec:    00b51a63              bne    a0,a1,20404800 <cvt+0x120>            allGrp, Branch-Instr, controlFlowGrp
204047f0:    0040006f              j    204047f4 <cvt+0x114>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		mode = 3;		/* ndigits after the decimal point */
204047f4:    00300513              li    a0,3                                   Branch-Tgt, allGrp
204047f8:    fca42423              sw    a0,-56(s0)                             allGrp
	} else {
204047fc:    0400006f              j    2040483c <cvt+0x15c>                    allGrp, Branch-Instr, controlFlowGrp
		/* To obtain ndigits after the decimal point for the 'e'
		 * and 'E' formats, round to ndigits + 1 significant
		 * figures.
		 */
		if (ch == 'e' || ch == 'E') {
20404800:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20404804:    06500593              li    a1,101                                 allGrp
20404808:    00b50c63              beq    a0,a1,20404820 <cvt+0x140>            allGrp, Branch-Instr, controlFlowGrp
2040480c:    0040006f              j    20404810 <cvt+0x130>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404810:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20404814:    04500593              li    a1,69                                  allGrp
20404818:    00b51c63              bne    a0,a1,20404830 <cvt+0x150>            allGrp, Branch-Instr, controlFlowGrp
2040481c:    0040006f              j    20404820 <cvt+0x140>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			ndigits++;
20404820:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20404824:    00150513              addi    a0,a0,1                              allGrp
20404828:    fca42e23              sw    a0,-36(s0)                             allGrp
		}
2040482c:    0040006f              j    20404830 <cvt+0x150>                    allGrp, Branch-Instr, controlFlowGrp
		mode = 2;		/* ndigits significant digits */
20404830:    00200513              li    a0,2                                   Branch-Tgt, allGrp
20404834:    fca42423              sw    a0,-56(s0)                             allGrp
20404838:    0040006f              j    2040483c <cvt+0x15c>                    allGrp, Branch-Instr, controlFlowGrp
	}

	digits = _DTOA_R (data, value, mode, ndigits, decpt, &dsgn, &rve);
2040483c:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20404840:    fe442603              lw    a2,-28(s0)                             allGrp
20404844:    fe042583              lw    a1,-32(s0)                             allGrp
20404848:    fc842683              lw    a3,-56(s0)                             allGrp
2040484c:    fdc42703              lw    a4,-36(s0)                             allGrp
20404850:    fd042783              lw    a5,-48(s0)                             allGrp
20404854:    fc440813              addi    a6,s0,-60                            allGrp
20404858:    fb840893              addi    a7,s0,-72                            allGrp
2040485c:    00000097              auipc    ra,0x0                              allGrp
20404860:    338080e7              jalr    824(ra) # 20404b94 <_dtoa_r>         Call-Instr, allGrp, controlFlowGrp
20404864:    fca42023              sw    a0,-64(s0)                             Return-Tgt, allGrp

	if ((ch != 'g' && ch != 'G') || flags & ALT) {	/* Print trailing zeros */
20404868:    fcc42503              lw    a0,-52(s0)                             allGrp
2040486c:    06700593              li    a1,103                                 allGrp
20404870:    00b50c63              beq    a0,a1,20404888 <cvt+0x1a8>            allGrp, Branch-Instr, controlFlowGrp
20404874:    0040006f              j    20404878 <cvt+0x198>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404878:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040487c:    04700593              li    a1,71                                  allGrp
20404880:    00b51e63              bne    a0,a1,2040489c <cvt+0x1bc>            allGrp, Branch-Instr, controlFlowGrp
20404884:    0040006f              j    20404888 <cvt+0x1a8>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404888:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040488c:    00157513              andi    a0,a0,1                              allGrp
20404890:    00000593              li    a1,0                                   allGrp
20404894:    10b50463              beq    a0,a1,2040499c <cvt+0x2bc>            allGrp, Branch-Instr, controlFlowGrp
20404898:    0040006f              j    2040489c <cvt+0x1bc>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		bp = digits + ndigits;
2040489c:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
204048a0:    fdc42583              lw    a1,-36(s0)                             allGrp
204048a4:    00b50533              add    a0,a0,a1                              allGrp
204048a8:    faa42e23              sw    a0,-68(s0)                             allGrp
		if (ch == 'f' || ch == 'F') {
204048ac:    fcc42503              lw    a0,-52(s0)                             allGrp
204048b0:    06600593              li    a1,102                                 allGrp
204048b4:    00b50c63              beq    a0,a1,204048cc <cvt+0x1ec>            allGrp, Branch-Instr, controlFlowGrp
204048b8:    0040006f              j    204048bc <cvt+0x1dc>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204048bc:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
204048c0:    04600593              li    a1,70                                  allGrp
204048c4:    06b51a63              bne    a0,a1,20404938 <cvt+0x258>            allGrp, Branch-Instr, controlFlowGrp
204048c8:    0040006f              j    204048cc <cvt+0x1ec>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			if (*digits == '0' && value)
204048cc:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
204048d0:    00054503              lbu    a0,0(a0)                              allGrp
204048d4:    03000593              li    a1,48                                  allGrp
204048d8:    04b51463              bne    a0,a1,20404920 <cvt+0x240>            allGrp, Branch-Instr, controlFlowGrp
204048dc:    0040006f              j    204048e0 <cvt+0x200>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204048e0:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
204048e4:    fe442583              lw    a1,-28(s0)                             allGrp
204048e8:    00000613              li    a2,0                                   allGrp
204048ec:    f8c42223              sw    a2,-124(s0)                            allGrp
204048f0:    f8442683              lw    a3,-124(s0)                            allGrp
204048f4:    0000b097              auipc    ra,0xb                              allGrp
204048f8:    71c080e7              jalr    1820(ra) # 20410010 <__eqdf2>        Call-Instr, allGrp, controlFlowGrp
204048fc:    f8442583              lw    a1,-124(s0)                            Return-Tgt, allGrp
20404900:    02b50063              beq    a0,a1,20404920 <cvt+0x240>            allGrp, Branch-Instr, controlFlowGrp
20404904:    0040006f              j    20404908 <cvt+0x228>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				*decpt = -ndigits + 1;
20404908:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040490c:    00100593              li    a1,1                                   allGrp
20404910:    40a58533              sub    a0,a1,a0                              allGrp
20404914:    fd042583              lw    a1,-48(s0)                             allGrp
20404918:    00a5a023              sw    a0,0(a1) # 80000000 <_sp+0xffffc000>   allGrp
2040491c:    0040006f              j    20404920 <cvt+0x240>                    allGrp, Branch-Instr, controlFlowGrp
			bp += *decpt;
20404920:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20404924:    00052503              lw    a0,0(a0)                               allGrp
20404928:    fbc42583              lw    a1,-68(s0)                             allGrp
2040492c:    00a58533              add    a0,a1,a0                              allGrp
20404930:    faa42e23              sw    a0,-68(s0)                             allGrp
		}
20404934:    0040006f              j    20404938 <cvt+0x258>                    allGrp, Branch-Instr, controlFlowGrp
		if (value == 0)	/* kludge for __dtoa irregularity */
20404938:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040493c:    fe442583              lw    a1,-28(s0)                             allGrp
20404940:    00000613              li    a2,0                                   allGrp
20404944:    f8c42023              sw    a2,-128(s0)                            allGrp
20404948:    f8042683              lw    a3,-128(s0)                            allGrp
2040494c:    0000b097              auipc    ra,0xb                              allGrp
20404950:    6c4080e7              jalr    1732(ra) # 20410010 <__eqdf2>        Call-Instr, allGrp, controlFlowGrp
20404954:    f8042583              lw    a1,-128(s0)                            Return-Tgt, allGrp
20404958:    00b51a63              bne    a0,a1,2040496c <cvt+0x28c>            allGrp, Branch-Instr, controlFlowGrp
2040495c:    0040006f              j    20404960 <cvt+0x280>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			rve = bp;
20404960:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20404964:    faa42c23              sw    a0,-72(s0)                             allGrp
20404968:    0040006f              j    2040496c <cvt+0x28c>                    allGrp, Branch-Instr, controlFlowGrp
		while (rve < bp)
2040496c:    0040006f              j    20404970 <cvt+0x290>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404970:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
20404974:    fbc42583              lw    a1,-68(s0)                             allGrp
20404978:    02b57063              bleu    a1,a0,20404998 <cvt+0x2b8>           allGrp, Branch-Instr, controlFlowGrp
2040497c:    0040006f              j    20404980 <cvt+0x2a0>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			*rve++ = '0';
20404980:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
20404984:    00150593              addi    a1,a0,1                              allGrp
20404988:    fab42c23              sw    a1,-72(s0)                             allGrp
2040498c:    03000593              li    a1,48                                  allGrp
20404990:    00b50023              sb    a1,0(a0)                               allGrp
		while (rve < bp)
20404994:    fddff06f              j    20404970 <cvt+0x290>                    allGrp, Branch-Instr, controlFlowGrp
	}
20404998:    0040006f              j    2040499c <cvt+0x2bc>                    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	*length = rve - digits;
2040499c:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
204049a0:    fc042583              lw    a1,-64(s0)                             allGrp
204049a4:    40b50533              sub    a0,a0,a1                              allGrp
204049a8:    00042583              lw    a1,0(s0)                               allGrp
204049ac:    00a5a023              sw    a0,0(a1)                               allGrp
	return (digits);
204049b0:    fc042503              lw    a0,-64(s0)                             allGrp
204049b4:    06c12983              lw    s3,108(sp)                             allGrp
204049b8:    06012623              sw    zero,108(sp)                           allGrp
204049bc:    07012903              lw    s2,112(sp)                             allGrp
204049c0:    06012823              sw    zero,112(sp)                           allGrp
204049c4:    07412483              lw    s1,116(sp)                             allGrp
204049c8:    06012a23              sw    zero,116(sp)                           allGrp
204049cc:    07812403              lw    s0,120(sp)                             allGrp
204049d0:    06012c23              sw    zero,120(sp)                           allGrp
204049d4:    07c12083              lw    ra,124(sp)                             allGrp
204049d8:    06012e23              sw    zero,124(sp)                           allGrp
204049dc:    08010113              addi    sp,sp,128                            allGrp
204049e0:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204049e4 <exponent>:
204049e4:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
204049e8:    02112623              sw    ra,44(sp)                              allGrp
204049ec:    02812423              sw    s0,40(sp)                              allGrp
204049f0:    03010413              addi    s0,sp,48                             allGrp
204049f4:    00060693              mv    a3,a2                                  allGrp
204049f8:    00058713              mv    a4,a1                                  allGrp
204049fc:    00050793              mv    a5,a0                                  allGrp
20404a00:    fea42a23              sw    a0,-12(s0)                             allGrp
20404a04:    feb42823              sw    a1,-16(s0)                             allGrp
20404a08:    fec42623              sw    a2,-20(s0)                             allGrp
	int isa = fmtch == 'a' || fmtch == 'A';
# else
#  define isa 0
# endif

	p = p0;
20404a0c:    ff442503              lw    a0,-12(s0)                             allGrp
20404a10:    fea42423              sw    a0,-24(s0)                             allGrp
	*p++ = isa ? 'p' - 'a' + fmtch : fmtch;
20404a14:    fec42503              lw    a0,-20(s0)                             allGrp
20404a18:    fe842583              lw    a1,-24(s0)                             allGrp
20404a1c:    00158613              addi    a2,a1,1                              allGrp
20404a20:    fec42423              sw    a2,-24(s0)                             allGrp
20404a24:    00a58023              sb    a0,0(a1)                               allGrp
	if (exp < 0) {
20404a28:    ff042503              lw    a0,-16(s0)                             allGrp
20404a2c:    fff00593              li    a1,-1                                  allGrp
20404a30:    fcd42c23              sw    a3,-40(s0)                             allGrp
20404a34:    fce42a23              sw    a4,-44(s0)                             allGrp
20404a38:    fcf42823              sw    a5,-48(s0)                             allGrp
20404a3c:    02a5c863              blt    a1,a0,20404a6c <exponent+0x88>        allGrp, Branch-Instr, controlFlowGrp
20404a40:    0040006f              j    20404a44 <exponent+0x60>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		exp = -exp;
20404a44:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20404a48:    00000593              li    a1,0                                   allGrp
20404a4c:    40a58533              sub    a0,a1,a0                              allGrp
20404a50:    fea42823              sw    a0,-16(s0)                             allGrp
		*p++ = '-';
20404a54:    fe842503              lw    a0,-24(s0)                             allGrp
20404a58:    00150593              addi    a1,a0,1                              allGrp
20404a5c:    feb42423              sw    a1,-24(s0)                             allGrp
20404a60:    02d00593              li    a1,45                                  allGrp
20404a64:    00b50023              sb    a1,0(a0)                               allGrp
	}
20404a68:    01c0006f              j    20404a84 <exponent+0xa0>                allGrp, Branch-Instr, controlFlowGrp
	else
		*p++ = '+';
20404a6c:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20404a70:    00150593              addi    a1,a0,1                              allGrp
20404a74:    feb42423              sw    a1,-24(s0)                             allGrp
20404a78:    02b00593              li    a1,43                                  allGrp
20404a7c:    00b50023              sb    a1,0(a0)                               allGrp
20404a80:    0040006f              j    20404a84 <exponent+0xa0>                allGrp, Branch-Instr, controlFlowGrp
	t = expbuf + MAXEXPLEN;
20404a84:    fe440513              addi    a0,s0,-28                            Branch-Tgt, allGrp
20404a88:    fea42223              sw    a0,-28(s0)                             allGrp
	if (exp > 9) {
20404a8c:    ff042503              lw    a0,-16(s0)                             allGrp
20404a90:    00a00593              li    a1,10                                  allGrp
20404a94:    0ab54663              blt    a0,a1,20404b40 <exponent+0x15c>       allGrp, Branch-Instr, controlFlowGrp
20404a98:    0040006f              j    20404a9c <exponent+0xb8>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		do {
20404a9c:    0040006f              j    20404aa0 <exponent+0xbc>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			*--t = to_char (exp % 10);
20404aa0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20404aa4:    00a00593              li    a1,10                                  allGrp
20404aa8:    0000e097              auipc    ra,0xe                              allGrp
20404aac:    854080e7              jalr    -1964(ra) # 204122fc <__modsi3>      Call-Instr, allGrp, controlFlowGrp
20404ab0:    03050513              addi    a0,a0,48                             Return-Tgt, allGrp
20404ab4:    fe442583              lw    a1,-28(s0)                             allGrp
20404ab8:    fff58613              addi    a2,a1,-1                             allGrp
20404abc:    fec42223              sw    a2,-28(s0)                             allGrp
20404ac0:    fea58fa3              sb    a0,-1(a1)                              allGrp
		} while ((exp /= 10) > 9);
20404ac4:    0040006f              j    20404ac8 <exponent+0xe4>                allGrp, Branch-Instr, controlFlowGrp
20404ac8:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20404acc:    00a00593              li    a1,10                                  allGrp
20404ad0:    0000d097              auipc    ra,0xd                              allGrp
20404ad4:    7a8080e7              jalr    1960(ra) # 20412278 <__divsi3>       Call-Instr, allGrp, controlFlowGrp
20404ad8:    fea42823              sw    a0,-16(s0)                             Return-Tgt, allGrp
20404adc:    00900593              li    a1,9                                   allGrp
20404ae0:    fca5c0e3              blt    a1,a0,20404aa0 <exponent+0xbc>        allGrp, Branch-Instr, controlFlowGrp
20404ae4:    0040006f              j    20404ae8 <exponent+0x104>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		*--t = to_char (exp);
20404ae8:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20404aec:    03050513              addi    a0,a0,48                             allGrp
20404af0:    fe442583              lw    a1,-28(s0)                             allGrp
20404af4:    fff58613              addi    a2,a1,-1                             allGrp
20404af8:    fec42223              sw    a2,-28(s0)                             allGrp
20404afc:    fea58fa3              sb    a0,-1(a1)                              allGrp
		for (; t < expbuf + MAXEXPLEN; *p++ = *t++);
20404b00:    0040006f              j    20404b04 <exponent+0x120>               allGrp, Branch-Instr, controlFlowGrp
20404b04:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20404b08:    fe440593              addi    a1,s0,-28                            allGrp
20404b0c:    02b57863              bleu    a1,a0,20404b3c <exponent+0x158>      allGrp, Branch-Instr, controlFlowGrp
20404b10:    0040006f              j    20404b14 <exponent+0x130>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404b14:    0040006f              j    20404b18 <exponent+0x134>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404b18:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20404b1c:    00150593              addi    a1,a0,1                              allGrp
20404b20:    feb42223              sw    a1,-28(s0)                             allGrp
20404b24:    00050503              lb    a0,0(a0)                               allGrp
20404b28:    fe842583              lw    a1,-24(s0)                             allGrp
20404b2c:    00158613              addi    a2,a1,1                              allGrp
20404b30:    fec42423              sw    a2,-24(s0)                             allGrp
20404b34:    00a58023              sb    a0,0(a1)                               allGrp
20404b38:    fcdff06f              j    20404b04 <exponent+0x120>               allGrp, Branch-Instr, controlFlowGrp
	}
20404b3c:    0340006f              j    20404b70 <exponent+0x18c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	else {
		if (!isa)
			*p++ = '0';
20404b40:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20404b44:    00150593              addi    a1,a0,1                              allGrp
20404b48:    feb42423              sw    a1,-24(s0)                             allGrp
20404b4c:    03000593              li    a1,48                                  allGrp
20404b50:    00b50023              sb    a1,0(a0)                               allGrp
		*p++ = to_char (exp);
20404b54:    ff042503              lw    a0,-16(s0)                             allGrp
20404b58:    03050513              addi    a0,a0,48                             allGrp
20404b5c:    fe842583              lw    a1,-24(s0)                             allGrp
20404b60:    00158613              addi    a2,a1,1                              allGrp
20404b64:    fec42423              sw    a2,-24(s0)                             allGrp
20404b68:    00a58023              sb    a0,0(a1)                               allGrp
20404b6c:    0040006f              j    20404b70 <exponent+0x18c>               allGrp, Branch-Instr, controlFlowGrp
	}
	return (p - p0);
20404b70:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20404b74:    ff442583              lw    a1,-12(s0)                             allGrp
20404b78:    40b50533              sub    a0,a0,a1                              allGrp
20404b7c:    02812403              lw    s0,40(sp)                              allGrp
20404b80:    02012423              sw    zero,40(sp)                            allGrp
20404b84:    02c12083              lw    ra,44(sp)                              allGrp
20404b88:    02012623              sw    zero,44(sp)                            allGrp
20404b8c:    03010113              addi    sp,sp,48                             allGrp
20404b90:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20404b94 <_dtoa_r>:
20404b94:    e1010113              addi    sp,sp,-496                           Call-Tgt, allGrp, Branch-Tgt
20404b98:    1e112623              sw    ra,492(sp)                             allGrp
20404b9c:    1e812423              sw    s0,488(sp)                             allGrp
20404ba0:    1e912223              sw    s1,484(sp)                             allGrp
20404ba4:    1f010413              addi    s0,sp,496                            allGrp
20404ba8:    00060293              mv    t0,a2                                  allGrp
20404bac:    00058313              mv    t1,a1                                  allGrp
20404bb0:    00088393              mv    t2,a7                                  allGrp
20404bb4:    00080e13              mv    t3,a6                                  allGrp
20404bb8:    00078e93              mv    t4,a5                                  allGrp
20404bbc:    00070f13              mv    t5,a4                                  allGrp
20404bc0:    00068f93              mv    t6,a3                                  allGrp
20404bc4:    00050493              mv    s1,a0                                  allGrp
20404bc8:    fea42623              sw    a0,-20(s0)                             allGrp
20404bcc:    fec42223              sw    a2,-28(s0)                             allGrp
20404bd0:    feb42023              sw    a1,-32(s0)                             allGrp
20404bd4:    fcd42e23              sw    a3,-36(s0)                             allGrp
20404bd8:    fce42c23              sw    a4,-40(s0)                             allGrp
20404bdc:    fcf42a23              sw    a5,-44(s0)                             allGrp
20404be0:    fd042823              sw    a6,-48(s0)                             allGrp
20404be4:    fd142623              sw    a7,-52(s0)                             allGrp
20404be8:    00000513              li    a0,0                                   allGrp
  __Long L;
#ifndef Sudden_Underflow
  int denorm;
  __ULong x;
#endif
  _Bigint *b, *b1, *delta, *mlo = NULL, *mhi, *S;
20404bec:    f2a42e23              sw    a0,-196(s0)                            allGrp
  double ds;
  char *s, *s0;

  d.d = _d;
20404bf0:    fe042583              lw    a1,-32(s0)                             allGrp
20404bf4:    fe442603              lw    a2,-28(s0)                             allGrp
20404bf8:    f6c42623              sw    a2,-148(s0)                            allGrp
20404bfc:    f6b42423              sw    a1,-152(s0)                            allGrp

  _REENT_CHECK_MP(ptr);
  if (_REENT_MP_RESULT(ptr))
20404c00:    fec42583              lw    a1,-20(s0)                             allGrp
20404c04:    0405a583              lw    a1,64(a1)                              allGrp
20404c08:    f0542e23              sw    t0,-228(s0)                            allGrp
20404c0c:    f0642c23              sw    t1,-232(s0)                            allGrp
20404c10:    f0742a23              sw    t2,-236(s0)                            allGrp
20404c14:    f1c42823              sw    t3,-240(s0)                            allGrp
20404c18:    f1d42623              sw    t4,-244(s0)                            allGrp
20404c1c:    f1f42423              sw    t6,-248(s0)                            allGrp
20404c20:    f1e42223              sw    t5,-252(s0)                            allGrp
20404c24:    f0942023              sw    s1,-256(s0)                            allGrp
20404c28:    04a58e63              beq    a1,a0,20404c84 <_dtoa_r+0xf0>         allGrp, Branch-Instr, controlFlowGrp
20404c2c:    0040006f              j    20404c30 <_dtoa_r+0x9c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      _REENT_MP_RESULT(ptr)->_k = _REENT_MP_RESULT_K(ptr);
20404c30:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20404c34:    04452503              lw    a0,68(a0)                              allGrp
20404c38:    fec42583              lw    a1,-20(s0)                             allGrp
20404c3c:    0405a583              lw    a1,64(a1)                              allGrp
20404c40:    00a5a223              sw    a0,4(a1)                               allGrp
      _REENT_MP_RESULT(ptr)->_maxwds = 1 << _REENT_MP_RESULT_K(ptr);
20404c44:    fec42503              lw    a0,-20(s0)                             allGrp
20404c48:    04452503              lw    a0,68(a0)                              allGrp
20404c4c:    00100593              li    a1,1                                   allGrp
20404c50:    00a59533              sll    a0,a1,a0                              allGrp
20404c54:    fec42583              lw    a1,-20(s0)                             allGrp
20404c58:    0405a583              lw    a1,64(a1)                              allGrp
20404c5c:    00a5a423              sw    a0,8(a1)                               allGrp
      Bfree (ptr, _REENT_MP_RESULT(ptr));
20404c60:    fec42503              lw    a0,-20(s0)                             allGrp
20404c64:    fec42583              lw    a1,-20(s0)                             allGrp
20404c68:    0405a583              lw    a1,64(a1)                              allGrp
20404c6c:    00003097              auipc    ra,0x3                              allGrp
20404c70:    d54080e7              jalr    -684(ra) # 204079c0 <_Bfree>         Call-Instr, allGrp, controlFlowGrp
      _REENT_MP_RESULT(ptr) = 0;
20404c74:    fec42503              lw    a0,-20(s0)                             Return-Tgt, allGrp
20404c78:    00000593              li    a1,0                                   allGrp
20404c7c:    04b52023              sw    a1,64(a0)                              allGrp
    }
20404c80:    0040006f              j    20404c84 <_dtoa_r+0xf0>                 allGrp, Branch-Instr, controlFlowGrp

  if (word0 (d) & Sign_bit)
20404c84:    f6c42503              lw    a0,-148(s0)                            Branch-Tgt, allGrp
20404c88:    800005b7              lui    a1,0x80000                            allGrp
20404c8c:    00b57533              and    a0,a0,a1                              allGrp
20404c90:    00000593              li    a1,0                                   allGrp
20404c94:    02b50663              beq    a0,a1,20404cc0 <_dtoa_r+0x12c>        allGrp, Branch-Instr, controlFlowGrp
20404c98:    0040006f              j    20404c9c <_dtoa_r+0x108>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      /* set sign for everything, including 0's and NaNs */
      *sign = 1;
20404c9c:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20404ca0:    00100593              li    a1,1                                   allGrp
20404ca4:    00b52023              sw    a1,0(a0)                               allGrp
      word0 (d) &= ~Sign_bit;	/* clear sign bit */
20404ca8:    f6c42503              lw    a0,-148(s0)                            allGrp
20404cac:    800005b7              lui    a1,0x80000                            allGrp
20404cb0:    fff58593              addi    a1,a1,-1 # 7fffffff <_sp+0xffffbfff> allGrp
20404cb4:    00b57533              and    a0,a0,a1                              allGrp
20404cb8:    f6a42623              sw    a0,-148(s0)                            allGrp
    }
20404cbc:    0140006f              j    20404cd0 <_dtoa_r+0x13c>                allGrp, Branch-Instr, controlFlowGrp
  else
    *sign = 0;
20404cc0:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20404cc4:    00000593              li    a1,0                                   allGrp
20404cc8:    00b52023              sw    a1,0(a0)                               allGrp
20404ccc:    0040006f              j    20404cd0 <_dtoa_r+0x13c>                allGrp, Branch-Instr, controlFlowGrp

#if defined(IEEE_Arith) + defined(VAX)
#ifdef IEEE_Arith
  if ((word0 (d) & Exp_mask) == Exp_mask)
20404cd0:    f6c42503              lw    a0,-148(s0)                            Branch-Tgt, allGrp
20404cd4:    7ff005b7              lui    a1,0x7ff00                            allGrp
20404cd8:    00b57533              and    a0,a0,a1                              allGrp
20404cdc:    0eb51863              bne    a0,a1,20404dcc <_dtoa_r+0x238>        allGrp, Branch-Instr, controlFlowGrp
20404ce0:    0040006f              j    20404ce4 <_dtoa_r+0x150>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
#else
  if (word0 (d) == 0x8000)
#endif
    {
      /* Infinity or NaN */
      *decpt = 9999;
20404ce4:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
20404ce8:    000025b7              lui    a1,0x2                                allGrp
20404cec:    70f58593              addi    a1,a1,1807 # 270f <__stack_size+0x1f0f>allGrp
20404cf0:    00b52023              sw    a1,0(a0)                               allGrp
      s =
#ifdef IEEE_Arith
	!word1 (d) && !(word0 (d) & 0xfffff) ? "Infinity" :
20404cf4:    f6842503              lw    a0,-152(s0)                            allGrp
20404cf8:    00000593              li    a1,0                                   allGrp
20404cfc:    00058613              mv    a2,a1                                  allGrp
20404d00:    eec42e23              sw    a2,-260(s0)                            allGrp
20404d04:    02b51663              bne    a0,a1,20404d30 <_dtoa_r+0x19c>        allGrp, Branch-Instr, controlFlowGrp
20404d08:    0040006f              j    20404d0c <_dtoa_r+0x178>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404d0c:    f6c42503              lw    a0,-148(s0)                            Branch-Tgt, allGrp
20404d10:    001005b7              lui    a1,0x100                              allGrp
20404d14:    fff58593              addi    a1,a1,-1 # fffff <__stack_size+0xff7ff>allGrp
20404d18:    00b57533              and    a0,a0,a1                              allGrp
20404d1c:    00000593              li    a1,0                                   allGrp
20404d20:    00b54533              xor    a0,a0,a1                              allGrp
20404d24:    00153513              seqz    a0,a0                                allGrp
20404d28:    eea42e23              sw    a0,-260(s0)                            allGrp
20404d2c:    0040006f              j    20404d30 <_dtoa_r+0x19c>                allGrp, Branch-Instr, controlFlowGrp
20404d30:    efc42503              lw    a0,-260(s0)                            Branch-Tgt, allGrp
20404d34:    00157513              andi    a0,a0,1                              allGrp
20404d38:    204125b7              lui    a1,0x20412                            allGrp
20404d3c:    5be58593              addi    a1,a1,1470 # 204125be <_svfprintf_r.zeroes+0x6e>allGrp
20404d40:    20412637              lui    a2,0x20412                            allGrp
20404d44:    5b560613              addi    a2,a2,1461 # 204125b5 <_svfprintf_r.zeroes+0x65>allGrp
20404d48:    00000693              li    a3,0                                   allGrp
20404d4c:    eec42c23              sw    a2,-264(s0)                            allGrp
20404d50:    eeb42a23              sw    a1,-268(s0)                            allGrp
20404d54:    eed42823              sw    a3,-272(s0)                            allGrp
20404d58:    00d51663              bne    a0,a3,20404d64 <_dtoa_r+0x1d0>        allGrp, Branch-Instr, controlFlowGrp
20404d5c:    ef442503              lw    a0,-268(s0)                            Branch-Tgt, allGrp
20404d60:    eea42c23              sw    a0,-264(s0)                            allGrp
20404d64:    ef842503              lw    a0,-264(s0)                            Branch-Tgt, allGrp
      s =
20404d68:    f2a42223              sw    a0,-220(s0)                            allGrp
#endif
	"NaN";
      if (rve)
20404d6c:    fcc42503              lw    a0,-52(s0)                             allGrp
20404d70:    ef042583              lw    a1,-272(s0)                            allGrp
20404d74:    04b50663              beq    a0,a1,20404dc0 <_dtoa_r+0x22c>        allGrp, Branch-Instr, controlFlowGrp
20404d78:    0040006f              j    20404d7c <_dtoa_r+0x1e8>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	*rve =
#ifdef IEEE_Arith
	  s[3] ? s + 8 :
20404d7c:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20404d80:    00354503              lbu    a0,3(a0)                              allGrp
20404d84:    00000593              li    a1,0                                   allGrp
20404d88:    00b50c63              beq    a0,a1,20404da0 <_dtoa_r+0x20c>        allGrp, Branch-Instr, controlFlowGrp
20404d8c:    0040006f              j    20404d90 <_dtoa_r+0x1fc>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404d90:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20404d94:    00850513              addi    a0,a0,8                              allGrp
20404d98:    eea42623              sw    a0,-276(s0)                            allGrp
20404d9c:    0140006f              j    20404db0 <_dtoa_r+0x21c>                allGrp, Branch-Instr, controlFlowGrp
#endif
	  s + 3;
20404da0:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20404da4:    00350513              addi    a0,a0,3                              allGrp
	  s[3] ? s + 8 :
20404da8:    eea42623              sw    a0,-276(s0)                            allGrp
20404dac:    0040006f              j    20404db0 <_dtoa_r+0x21c>                allGrp, Branch-Instr, controlFlowGrp
20404db0:    eec42503              lw    a0,-276(s0)                            Branch-Tgt, allGrp
	*rve =
20404db4:    fcc42583              lw    a1,-52(s0)                             allGrp
20404db8:    00a5a023              sw    a0,0(a1)                               allGrp
20404dbc:    0040006f              j    20404dc0 <_dtoa_r+0x22c>                allGrp, Branch-Instr, controlFlowGrp
      return s;
20404dc0:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20404dc4:    fea42823              sw    a0,-16(s0)                             allGrp
20404dc8:    5a10106f              j    20406b68 <_dtoa_r+0x1fd4>               allGrp, Branch-Instr, controlFlowGrp
    }
#endif
#ifdef IBM
  d.d += 0;			/* normalize */
#endif
  if (!d.d)
20404dcc:    f6842503              lw    a0,-152(s0)                            Branch-Tgt, allGrp
20404dd0:    f6c42583              lw    a1,-148(s0)                            allGrp
20404dd4:    00000613              li    a2,0                                   allGrp
20404dd8:    eec42423              sw    a2,-280(s0)                            allGrp
20404ddc:    ee842683              lw    a3,-280(s0)                            allGrp
20404de0:    0000b097              auipc    ra,0xb                              allGrp
20404de4:    230080e7              jalr    560(ra) # 20410010 <__eqdf2>         Call-Instr, allGrp, controlFlowGrp
20404de8:    ee842583              lw    a1,-280(s0)                            Return-Tgt, allGrp
20404dec:    04b51863              bne    a0,a1,20404e3c <_dtoa_r+0x2a8>        allGrp, Branch-Instr, controlFlowGrp
20404df0:    0040006f              j    20404df4 <_dtoa_r+0x260>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      *decpt = 1;
20404df4:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
20404df8:    00100593              li    a1,1                                   allGrp
20404dfc:    00b52023              sw    a1,0(a0)                               allGrp
      s = "0";
20404e00:    20412537              lui    a0,0x20412                            allGrp
20404e04:    5b350513              addi    a0,a0,1459 # 204125b3 <_svfprintf_r.zeroes+0x63>allGrp
20404e08:    f2a42223              sw    a0,-220(s0)                            allGrp
      if (rve)
20404e0c:    fcc42503              lw    a0,-52(s0)                             allGrp
20404e10:    00000593              li    a1,0                                   allGrp
20404e14:    00b50e63              beq    a0,a1,20404e30 <_dtoa_r+0x29c>        allGrp, Branch-Instr, controlFlowGrp
20404e18:    0040006f              j    20404e1c <_dtoa_r+0x288>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	*rve = s + 1;
20404e1c:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20404e20:    00150513              addi    a0,a0,1                              allGrp
20404e24:    fcc42583              lw    a1,-52(s0)                             allGrp
20404e28:    00a5a023              sw    a0,0(a1)                               allGrp
20404e2c:    0040006f              j    20404e30 <_dtoa_r+0x29c>                allGrp, Branch-Instr, controlFlowGrp
      return s;
20404e30:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20404e34:    fea42823              sw    a0,-16(s0)                             allGrp
20404e38:    5310106f              j    20406b68 <_dtoa_r+0x1fd4>               allGrp, Branch-Instr, controlFlowGrp
    }

  b = d2b (ptr, d.d, &be, &bbits);
20404e3c:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20404e40:    f6c42603              lw    a2,-148(s0)                            allGrp
20404e44:    f6842583              lw    a1,-152(s0)                            allGrp
20404e48:    fbc40693              addi    a3,s0,-68                            allGrp
20404e4c:    fc840713              addi    a4,s0,-56                            allGrp
20404e50:    00004097              auipc    ra,0x4                              allGrp
20404e54:    358080e7              jalr    856(ra) # 204091a8 <__d2b>           Call-Instr, allGrp, controlFlowGrp
20404e58:    f4a42423              sw    a0,-184(s0)                            Return-Tgt, allGrp
#ifdef Sudden_Underflow
  i = (int) (word0 (d) >> Exp_shift1 & (Exp_mask >> Exp_shift1));
#else
  if ((i = (int) (word0 (d) >> Exp_shift1 & (Exp_mask >> Exp_shift1))) != 0)
20404e5c:    f6c42503              lw    a0,-148(s0)                            allGrp
20404e60:    01455513              srli    a0,a0,0x14                           allGrp
20404e64:    7ff57513              andi    a0,a0,2047                           allGrp
20404e68:    faa42a23              sw    a0,-76(s0)                             allGrp
20404e6c:    00000593              li    a1,0                                   allGrp
20404e70:    04b50a63              beq    a0,a1,20404ec4 <_dtoa_r+0x330>        allGrp, Branch-Instr, controlFlowGrp
20404e74:    0040006f              j    20404e78 <_dtoa_r+0x2e4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
#endif
      d2.d = d.d;
20404e78:    f6842503              lw    a0,-152(s0)                            Branch-Tgt, allGrp
20404e7c:    f6c42583              lw    a1,-148(s0)                            allGrp
20404e80:    f6b42223              sw    a1,-156(s0)                            allGrp
20404e84:    f6a42023              sw    a0,-160(s0)                            allGrp
      word0 (d2) &= Frac_mask1;
20404e88:    f6442503              lw    a0,-156(s0)                            allGrp
20404e8c:    001005b7              lui    a1,0x100                              allGrp
20404e90:    fff58593              addi    a1,a1,-1 # fffff <__stack_size+0xff7ff>allGrp
20404e94:    00b57533              and    a0,a0,a1                              allGrp
20404e98:    f6a42223              sw    a0,-156(s0)                            allGrp
      word0 (d2) |= Exp_11;
20404e9c:    f6442503              lw    a0,-156(s0)                            allGrp
20404ea0:    3ff005b7              lui    a1,0x3ff00                            allGrp
20404ea4:    00b56533              or    a0,a0,a1                               allGrp
20404ea8:    f6a42223              sw    a0,-156(s0)                            allGrp
		 * Hence we adjust the constant term to 0.1760912590558.
		 * (We could get a more accurate k by invoking log10,
		 *  but this is probably not worthwhile.)
		 */

      i -= Bias;
20404eac:    fb442503              lw    a0,-76(s0)                             allGrp
20404eb0:    c0150513              addi    a0,a0,-1023                          allGrp
20404eb4:    faa42a23              sw    a0,-76(s0)                             allGrp
20404eb8:    00000513              li    a0,0                                   allGrp
#ifdef IBM
      i <<= 2;
      i += j;
#endif
#ifndef Sudden_Underflow
      denorm = 0;
20404ebc:    f4a42823              sw    a0,-176(s0)                            allGrp
    }
20404ec0:    0b80006f              j    20404f78 <_dtoa_r+0x3e4>                allGrp, Branch-Instr, controlFlowGrp
  else
    {
      /* d is denormalized */

      i = bbits + be + (Bias + (P - 1) - 1);
20404ec4:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
20404ec8:    fbc42583              lw    a1,-68(s0)                             allGrp
20404ecc:    00b50533              add    a0,a0,a1                              allGrp
20404ed0:    43250513              addi    a0,a0,1074                           allGrp
20404ed4:    faa42a23              sw    a0,-76(s0)                             allGrp
#if defined (_DOUBLE_IS_32BITS)
      x = word0 (d) << (32 - i);
#else
      x = (i > 32) ? (word0 (d) << (64 - i)) | (word1 (d) >> (i - 32))
20404ed8:    fb442503              lw    a0,-76(s0)                             allGrp
20404edc:    02100593              li    a1,33                                  allGrp
20404ee0:    02b54c63              blt    a0,a1,20404f18 <_dtoa_r+0x384>        allGrp, Branch-Instr, controlFlowGrp
20404ee4:    0040006f              j    20404ee8 <_dtoa_r+0x354>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20404ee8:    f6c42503              lw    a0,-148(s0)                            Branch-Tgt, allGrp
20404eec:    fb442583              lw    a1,-76(s0)                             allGrp
20404ef0:    04000613              li    a2,64                                  allGrp
20404ef4:    40b605b3              sub    a1,a2,a1                              allGrp
20404ef8:    00b51533              sll    a0,a0,a1                              allGrp
20404efc:    f6842583              lw    a1,-152(s0)                            allGrp
20404f00:    fb442603              lw    a2,-76(s0)                             allGrp
20404f04:    fe060613              addi    a2,a2,-32                            allGrp
20404f08:    00c5d5b3              srl    a1,a1,a2                              allGrp
20404f0c:    00b56533              or    a0,a0,a1                               allGrp
20404f10:    eea42223              sw    a0,-284(s0)                            allGrp
20404f14:    0200006f              j    20404f34 <_dtoa_r+0x3a0>                allGrp, Branch-Instr, controlFlowGrp
       : (word1 (d) << (32 - i));
20404f18:    f6842503              lw    a0,-152(s0)                            Branch-Tgt, allGrp
20404f1c:    fb442583              lw    a1,-76(s0)                             allGrp
20404f20:    02000613              li    a2,32                                  allGrp
20404f24:    40b605b3              sub    a1,a2,a1                              allGrp
20404f28:    00b51533              sll    a0,a0,a1                              allGrp
      x = (i > 32) ? (word0 (d) << (64 - i)) | (word1 (d) >> (i - 32))
20404f2c:    eea42223              sw    a0,-284(s0)                            allGrp
20404f30:    0040006f              j    20404f34 <_dtoa_r+0x3a0>                allGrp, Branch-Instr, controlFlowGrp
20404f34:    ee442503              lw    a0,-284(s0)                            Branch-Tgt, allGrp
20404f38:    f4a42623              sw    a0,-180(s0)                            allGrp
#endif
      d2.d = x;
20404f3c:    f4c42503              lw    a0,-180(s0)                            allGrp
20404f40:    0000d097              auipc    ra,0xd                              allGrp
20404f44:    838080e7              jalr    -1992(ra) # 20411778 <__floatunsidf> Call-Instr, allGrp, controlFlowGrp
20404f48:    f6b42223              sw    a1,-156(s0)                            Return-Tgt, allGrp
20404f4c:    f6a42023              sw    a0,-160(s0)                            allGrp
      word0 (d2) -= 31 * Exp_msk1;	/* adjust exponent */
20404f50:    f6442503              lw    a0,-156(s0)                            allGrp
20404f54:    fe1005b7              lui    a1,0xfe100                            allGrp
20404f58:    00b50533              add    a0,a0,a1                              allGrp
20404f5c:    f6a42223              sw    a0,-156(s0)                            allGrp
      i -= (Bias + (P - 1) - 1) + 1;
20404f60:    fb442503              lw    a0,-76(s0)                             allGrp
20404f64:    bcd50513              addi    a0,a0,-1075                          allGrp
20404f68:    faa42a23              sw    a0,-76(s0)                             allGrp
20404f6c:    00100513              li    a0,1                                   allGrp
      denorm = 1;
20404f70:    f4a42823              sw    a0,-176(s0)                            allGrp
20404f74:    0040006f              j    20404f78 <_dtoa_r+0x3e4>                allGrp, Branch-Instr, controlFlowGrp
    }
#endif
#if defined (_DOUBLE_IS_32BITS)
  ds = (d2.d - 1.5) * 0.289529651 + 0.176091269 + i * 0.30103001;
#else
  ds = (d2.d - 1.5) * 0.289529654602168 + 0.1760912590558 + i * 0.301029995663981;
20404f78:    f6042503              lw    a0,-160(s0)                            Branch-Tgt, allGrp
20404f7c:    f6442583              lw    a1,-156(s0)                            allGrp
20404f80:    00000613              li    a2,0                                   allGrp
20404f84:    bff806b7              lui    a3,0xbff80                            allGrp
20404f88:    eec42023              sw    a2,-288(s0)                            allGrp
20404f8c:    0000a097              auipc    ra,0xa                              allGrp
20404f90:    cc4080e7              jalr    -828(ra) # 2040ec50 <__adddf3>       Call-Instr, allGrp, controlFlowGrp
20404f94:    636f4637              lui    a2,0x636f4                            Return-Tgt, allGrp
20404f98:    36160613              addi    a2,a2,865 # 636f4361 <__fini_array_end+0x432e19a1>allGrp
20404f9c:    3fd286b7              lui    a3,0x3fd28                            allGrp
20404fa0:    7a768693              addi    a3,a3,1959 # 3fd287a7 <__fini_array_end+0x1f915de7>allGrp
20404fa4:    0000b097              auipc    ra,0xb                              allGrp
20404fa8:    334080e7              jalr    820(ra) # 204102d8 <__muldf3>        Call-Instr, allGrp, controlFlowGrp
20404fac:    8b60d637              lui    a2,0x8b60d                            Return-Tgt, allGrp
20404fb0:    8b360613              addi    a2,a2,-1869 # 8b60c8b3 <_sp+0xb6088b3>allGrp
20404fb4:    3fc696b7              lui    a3,0x3fc69                            allGrp
20404fb8:    a2868693              addi    a3,a3,-1496 # 3fc68a28 <__fini_array_end+0x1f856068>allGrp
20404fbc:    0000a097              auipc    ra,0xa                              allGrp
20404fc0:    c94080e7              jalr    -876(ra) # 2040ec50 <__adddf3>       Call-Instr, allGrp, controlFlowGrp
20404fc4:    fb442603              lw    a2,-76(s0)                             Return-Tgt, allGrp
20404fc8:    eca42e23              sw    a0,-292(s0)                            allGrp
20404fcc:    00060513              mv    a0,a2                                  allGrp
20404fd0:    ecb42c23              sw    a1,-296(s0)                            allGrp
20404fd4:    0000c097              auipc    ra,0xc                              allGrp
20404fd8:    6cc080e7              jalr    1740(ra) # 204116a0 <__floatsidf>    Call-Instr, allGrp, controlFlowGrp
20404fdc:    509f8637              lui    a2,0x509f8                            Return-Tgt, allGrp
20404fe0:    9fb60613              addi    a2,a2,-1541 # 509f79fb <__fini_array_end+0x305e503b>allGrp
20404fe4:    3fd346b7              lui    a3,0x3fd34                            allGrp
20404fe8:    41368693              addi    a3,a3,1043 # 3fd34413 <__fini_array_end+0x1f921a53>allGrp
20404fec:    0000b097              auipc    ra,0xb                              allGrp
20404ff0:    2ec080e7              jalr    748(ra) # 204102d8 <__muldf3>        Call-Instr, allGrp, controlFlowGrp
20404ff4:    edc42603              lw    a2,-292(s0)                            Return-Tgt, allGrp
20404ff8:    eca42a23              sw    a0,-300(s0)                            allGrp
20404ffc:    00060513              mv    a0,a2                                  allGrp
20405000:    ed842683              lw    a3,-296(s0)                            allGrp
20405004:    ecb42823              sw    a1,-304(s0)                            allGrp
20405008:    00068593              mv    a1,a3                                  allGrp
2040500c:    ed442603              lw    a2,-300(s0)                            allGrp
20405010:    ed042683              lw    a3,-304(s0)                            allGrp
20405014:    0000a097              auipc    ra,0xa                              allGrp
20405018:    c3c080e7              jalr    -964(ra) # 2040ec50 <__adddf3>       Call-Instr, allGrp, controlFlowGrp
2040501c:    f2b42623              sw    a1,-212(s0)                            Return-Tgt, allGrp
20405020:    f2a42423              sw    a0,-216(s0)                            allGrp
#endif
  k = (int) ds;
20405024:    f2842503              lw    a0,-216(s0)                            allGrp
20405028:    f2c42583              lw    a1,-212(s0)                            allGrp
2040502c:    0000c097              auipc    ra,0xc                              allGrp
20405030:    57c080e7              jalr    1404(ra) # 204115a8 <__fixdfsi>      Call-Instr, allGrp, controlFlowGrp
20405034:    f8a42c23              sw    a0,-104(s0)                            Return-Tgt, allGrp
  if (ds < 0. && ds != k)
20405038:    f2842503              lw    a0,-216(s0)                            allGrp
2040503c:    f2c42583              lw    a1,-212(s0)                            allGrp
20405040:    ee042603              lw    a2,-288(s0)                            allGrp
20405044:    ee042683              lw    a3,-288(s0)                            allGrp
20405048:    0000b097              auipc    ra,0xb                              allGrp
2040504c:    198080e7              jalr    408(ra) # 204101e0 <__ledf2>         Call-Instr, allGrp, controlFlowGrp
20405050:    fff00593              li    a1,-1                                  Return-Tgt, allGrp
20405054:    06a5c663              blt    a1,a0,204050c0 <_dtoa_r+0x52c>        allGrp, Branch-Instr, controlFlowGrp
20405058:    0040006f              j    2040505c <_dtoa_r+0x4c8>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040505c:    f2c42583              lw    a1,-212(s0)                            Branch-Tgt, allGrp
20405060:    f2842503              lw    a0,-216(s0)                            allGrp
20405064:    f9842603              lw    a2,-104(s0)                            allGrp
20405068:    eca42623              sw    a0,-308(s0)                            allGrp
2040506c:    00060513              mv    a0,a2                                  allGrp
20405070:    ecb42423              sw    a1,-312(s0)                            allGrp
20405074:    0000c097              auipc    ra,0xc                              allGrp
20405078:    62c080e7              jalr    1580(ra) # 204116a0 <__floatsidf>    Call-Instr, allGrp, controlFlowGrp
2040507c:    ecc42603              lw    a2,-308(s0)                            Return-Tgt, allGrp
20405080:    eca42223              sw    a0,-316(s0)                            allGrp
20405084:    00060513              mv    a0,a2                                  allGrp
20405088:    ec842683              lw    a3,-312(s0)                            allGrp
2040508c:    ecb42023              sw    a1,-320(s0)                            allGrp
20405090:    00068593              mv    a1,a3                                  allGrp
20405094:    ec442603              lw    a2,-316(s0)                            allGrp
20405098:    ec042683              lw    a3,-320(s0)                            allGrp
2040509c:    0000b097              auipc    ra,0xb                              allGrp
204050a0:    f74080e7              jalr    -140(ra) # 20410010 <__eqdf2>        Call-Instr, allGrp, controlFlowGrp
204050a4:    00000593              li    a1,0                                   Return-Tgt, allGrp
204050a8:    00b50c63              beq    a0,a1,204050c0 <_dtoa_r+0x52c>        allGrp, Branch-Instr, controlFlowGrp
204050ac:    0040006f              j    204050b0 <_dtoa_r+0x51c>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    k--;			/* want k = floor(ds) */
204050b0:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
204050b4:    fff50513              addi    a0,a0,-1                             allGrp
204050b8:    f8a42c23              sw    a0,-104(s0)                            allGrp
204050bc:    0040006f              j    204050c0 <_dtoa_r+0x52c>                allGrp, Branch-Instr, controlFlowGrp
  k_check = 1;
204050c0:    00100513              li    a0,1                                   Branch-Tgt, allGrp
204050c4:    f8a42823              sw    a0,-112(s0)                            allGrp
  if (k >= 0 && k <= Ten_pmax)
204050c8:    f9842503              lw    a0,-104(s0)                            allGrp
204050cc:    00000593              li    a1,0                                   allGrp
204050d0:    06b54c63              blt    a0,a1,20405148 <_dtoa_r+0x5b4>        allGrp, Branch-Instr, controlFlowGrp
204050d4:    0040006f              j    204050d8 <_dtoa_r+0x544>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204050d8:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
204050dc:    01600593              li    a1,22                                  allGrp
204050e0:    06a5c463              blt    a1,a0,20405148 <_dtoa_r+0x5b4>        allGrp, Branch-Instr, controlFlowGrp
204050e4:    0040006f              j    204050e8 <_dtoa_r+0x554>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (d.d < tens[k])
204050e8:    f6c42583              lw    a1,-148(s0)                            Branch-Tgt, allGrp
204050ec:    f6842503              lw    a0,-152(s0)                            allGrp
204050f0:    f9842603              lw    a2,-104(s0)                            allGrp
204050f4:    00361613              slli    a2,a2,0x3                            allGrp
204050f8:    204126b7              lui    a3,0x20412                            allGrp
204050fc:    5e068693              addi    a3,a3,1504 # 204125e0 <__mprec_tens> allGrp
20405100:    00d60633              add    a2,a2,a3                              allGrp
20405104:    00062683              lw    a3,0(a2)                               allGrp
20405108:    00462603              lw    a2,4(a2)                               allGrp
2040510c:    eac42e23              sw    a2,-324(s0)                            allGrp
20405110:    00068613              mv    a2,a3                                  allGrp
20405114:    ebc42683              lw    a3,-324(s0)                            allGrp
20405118:    0000b097              auipc    ra,0xb                              allGrp
2040511c:    0c8080e7              jalr    200(ra) # 204101e0 <__ledf2>         Call-Instr, allGrp, controlFlowGrp
20405120:    fff00593              li    a1,-1                                  Return-Tgt, allGrp
20405124:    00a5cc63              blt    a1,a0,2040513c <_dtoa_r+0x5a8>        allGrp, Branch-Instr, controlFlowGrp
20405128:    0040006f              j    2040512c <_dtoa_r+0x598>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	k--;
2040512c:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
20405130:    fff50513              addi    a0,a0,-1                             allGrp
20405134:    f8a42c23              sw    a0,-104(s0)                            allGrp
20405138:    0040006f              j    2040513c <_dtoa_r+0x5a8>                allGrp, Branch-Instr, controlFlowGrp
      k_check = 0;
2040513c:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20405140:    f8a42823              sw    a0,-112(s0)                            allGrp
    }
20405144:    0040006f              j    20405148 <_dtoa_r+0x5b4>                allGrp, Branch-Instr, controlFlowGrp
  j = bbits - i - 1;
20405148:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
2040514c:    fb442583              lw    a1,-76(s0)                             allGrp
20405150:    40b50533              sub    a0,a0,a1                              allGrp
20405154:    fff50513              addi    a0,a0,-1                             allGrp
20405158:    faa42023              sw    a0,-96(s0)                             allGrp
  if (j >= 0)
2040515c:    fa042503              lw    a0,-96(s0)                             allGrp
20405160:    00000593              li    a1,0                                   allGrp
20405164:    00b54e63              blt    a0,a1,20405180 <_dtoa_r+0x5ec>        allGrp, Branch-Instr, controlFlowGrp
20405168:    0040006f              j    2040516c <_dtoa_r+0x5d8>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      b2 = 0;
2040516c:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20405170:    fca42223              sw    a0,-60(s0)                             allGrp
      s2 = j;
20405174:    fa042503              lw    a0,-96(s0)                             allGrp
20405178:    f8a42023              sw    a0,-128(s0)                            allGrp
    }
2040517c:    01c0006f              j    20405198 <_dtoa_r+0x604>                allGrp, Branch-Instr, controlFlowGrp
  else
    {
      b2 = -j;
20405180:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
20405184:    00000593              li    a1,0                                   allGrp
20405188:    40a58533              sub    a0,a1,a0                              allGrp
2040518c:    fca42223              sw    a0,-60(s0)                             allGrp
      s2 = 0;
20405190:    f8b42023              sw    a1,-128(s0)                            allGrp
20405194:    0040006f              j    20405198 <_dtoa_r+0x604>                allGrp, Branch-Instr, controlFlowGrp
    }
  if (k >= 0)
20405198:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
2040519c:    00000593              li    a1,0                                   allGrp
204051a0:    02b54663              blt    a0,a1,204051cc <_dtoa_r+0x638>        allGrp, Branch-Instr, controlFlowGrp
204051a4:    0040006f              j    204051a8 <_dtoa_r+0x614>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      b5 = 0;
204051a8:    00000513              li    a0,0                                   Branch-Tgt, allGrp
204051ac:    fca42023              sw    a0,-64(s0)                             allGrp
      s5 = k;
204051b0:    f9842503              lw    a0,-104(s0)                            allGrp
204051b4:    f6a42e23              sw    a0,-132(s0)                            allGrp
      s2 += k;
204051b8:    f9842503              lw    a0,-104(s0)                            allGrp
204051bc:    f8042583              lw    a1,-128(s0)                            allGrp
204051c0:    00a58533              add    a0,a1,a0                              allGrp
204051c4:    f8a42023              sw    a0,-128(s0)                            allGrp
    }
204051c8:    02c0006f              j    204051f4 <_dtoa_r+0x660>                allGrp, Branch-Instr, controlFlowGrp
  else
    {
      b2 -= k;
204051cc:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
204051d0:    fc442583              lw    a1,-60(s0)                             allGrp
204051d4:    40a58533              sub    a0,a1,a0                              allGrp
204051d8:    fca42223              sw    a0,-60(s0)                             allGrp
      b5 = -k;
204051dc:    f9842503              lw    a0,-104(s0)                            allGrp
204051e0:    00000593              li    a1,0                                   allGrp
204051e4:    40a58533              sub    a0,a1,a0                              allGrp
204051e8:    fca42023              sw    a0,-64(s0)                             allGrp
      s5 = 0;
204051ec:    f6b42e23              sw    a1,-132(s0)                            allGrp
204051f0:    0040006f              j    204051f4 <_dtoa_r+0x660>                allGrp, Branch-Instr, controlFlowGrp
    }
  if (mode < 0 || mode > 9)
204051f4:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
204051f8:    00000593              li    a1,0                                   allGrp
204051fc:    00b54c63              blt    a0,a1,20405214 <_dtoa_r+0x680>        allGrp, Branch-Instr, controlFlowGrp
20405200:    0040006f              j    20405204 <_dtoa_r+0x670>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405204:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20405208:    00a00593              li    a1,10                                  allGrp
2040520c:    00b54a63              blt    a0,a1,20405220 <_dtoa_r+0x68c>        allGrp, Branch-Instr, controlFlowGrp
20405210:    0040006f              j    20405214 <_dtoa_r+0x680>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    mode = 0;
20405214:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20405218:    fca42e23              sw    a0,-36(s0)                             allGrp
2040521c:    0040006f              j    20405220 <_dtoa_r+0x68c>                allGrp, Branch-Instr, controlFlowGrp
  try_quick = 1;
20405220:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20405224:    f6a42a23              sw    a0,-140(s0)                            allGrp
  if (mode > 5)
20405228:    fdc42503              lw    a0,-36(s0)                             allGrp
2040522c:    00600593              li    a1,6                                   allGrp
20405230:    02b54063              blt    a0,a1,20405250 <_dtoa_r+0x6bc>        allGrp, Branch-Instr, controlFlowGrp
20405234:    0040006f              j    20405238 <_dtoa_r+0x6a4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      mode -= 4;
20405238:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040523c:    ffc50513              addi    a0,a0,-4                             allGrp
20405240:    fca42e23              sw    a0,-36(s0)                             allGrp
20405244:    00000513              li    a0,0                                   allGrp
      try_quick = 0;
20405248:    f6a42a23              sw    a0,-140(s0)                            allGrp
    }
2040524c:    0040006f              j    20405250 <_dtoa_r+0x6bc>                allGrp, Branch-Instr, controlFlowGrp
  leftright = 1;
20405250:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20405254:    f8a42623              sw    a0,-116(s0)                            allGrp
20405258:    fff00513              li    a0,-1                                  allGrp
  ilim = ilim1 = -1;
2040525c:    faa42223              sw    a0,-92(s0)                             allGrp
20405260:    faa42623              sw    a0,-84(s0)                             allGrp
  switch (mode)
20405264:    fdc42503              lw    a0,-36(s0)                             allGrp
20405268:    00200593              li    a1,2                                   allGrp
2040526c:    eaa42c23              sw    a0,-328(s0)                            allGrp
20405270:    04b56463              bltu    a0,a1,204052b8 <_dtoa_r+0x724>       allGrp, Branch-Instr, controlFlowGrp
20405274:    0040006f              j    20405278 <_dtoa_r+0x6e4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405278:    00200513              li    a0,2                                   Branch-Tgt, allGrp
2040527c:    eb842583              lw    a1,-328(s0)                            allGrp
20405280:    04a58663              beq    a1,a0,204052cc <_dtoa_r+0x738>        allGrp, Branch-Instr, controlFlowGrp
20405284:    0040006f              j    20405288 <_dtoa_r+0x6f4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405288:    00300513              li    a0,3                                   Branch-Tgt, allGrp
2040528c:    eb842583              lw    a1,-328(s0)                            allGrp
20405290:    06a58c63              beq    a1,a0,20405308 <_dtoa_r+0x774>        allGrp, Branch-Instr, controlFlowGrp
20405294:    0040006f              j    20405298 <_dtoa_r+0x704>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405298:    00400513              li    a0,4                                   Branch-Tgt, allGrp
2040529c:    eb842583              lw    a1,-328(s0)                            allGrp
204052a0:    02a58c63              beq    a1,a0,204052d8 <_dtoa_r+0x744>        allGrp, Branch-Instr, controlFlowGrp
204052a4:    0040006f              j    204052a8 <_dtoa_r+0x714>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204052a8:    00500513              li    a0,5                                   Branch-Tgt, allGrp
204052ac:    eb842583              lw    a1,-328(s0)                            allGrp
204052b0:    06a58263              beq    a1,a0,20405314 <_dtoa_r+0x780>        allGrp, Branch-Instr, controlFlowGrp
204052b4:    0a80006f              j    2040535c <_dtoa_r+0x7c8>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
    case 0:
    case 1:
      i = 18;
204052b8:    01200513              li    a0,18                                  Branch-Tgt, allGrp
204052bc:    faa42a23              sw    a0,-76(s0)                             allGrp
204052c0:    00000513              li    a0,0                                   allGrp
      ndigits = 0;
204052c4:    fca42c23              sw    a0,-40(s0)                             allGrp
      break;
204052c8:    0940006f              j    2040535c <_dtoa_r+0x7c8>                allGrp, Branch-Instr, controlFlowGrp
    case 2:
      leftright = 0;
204052cc:    00000513              li    a0,0                                   Branch-Tgt, allGrp
204052d0:    f8a42623              sw    a0,-116(s0)                            allGrp
204052d4:    0040006f              j    204052d8 <_dtoa_r+0x744>                allGrp, Branch-Instr, controlFlowGrp
      /* no break */
    case 4:
      if (ndigits <= 0)
204052d8:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
204052dc:    00000593              li    a1,0                                   allGrp
204052e0:    00a5ca63              blt    a1,a0,204052f4 <_dtoa_r+0x760>        allGrp, Branch-Instr, controlFlowGrp
204052e4:    0040006f              j    204052e8 <_dtoa_r+0x754>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	ndigits = 1;
204052e8:    00100513              li    a0,1                                   Branch-Tgt, allGrp
204052ec:    fca42c23              sw    a0,-40(s0)                             allGrp
204052f0:    0040006f              j    204052f4 <_dtoa_r+0x760>                allGrp, Branch-Instr, controlFlowGrp
      ilim = ilim1 = i = ndigits;
204052f4:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
204052f8:    faa42a23              sw    a0,-76(s0)                             allGrp
204052fc:    faa42223              sw    a0,-92(s0)                             allGrp
20405300:    faa42623              sw    a0,-84(s0)                             allGrp
      break;
20405304:    0580006f              j    2040535c <_dtoa_r+0x7c8>                allGrp, Branch-Instr, controlFlowGrp
    case 3:
      leftright = 0;
20405308:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040530c:    f8a42623              sw    a0,-116(s0)                            allGrp
20405310:    0040006f              j    20405314 <_dtoa_r+0x780>                allGrp, Branch-Instr, controlFlowGrp
      /* no break */
    case 5:
      i = ndigits + k + 1;
20405314:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20405318:    f9842583              lw    a1,-104(s0)                            allGrp
2040531c:    00b50533              add    a0,a0,a1                              allGrp
20405320:    00150513              addi    a0,a0,1                              allGrp
20405324:    faa42a23              sw    a0,-76(s0)                             allGrp
      ilim = i;
20405328:    fb442503              lw    a0,-76(s0)                             allGrp
2040532c:    faa42623              sw    a0,-84(s0)                             allGrp
      ilim1 = i - 1;
20405330:    fb442503              lw    a0,-76(s0)                             allGrp
20405334:    fff50513              addi    a0,a0,-1                             allGrp
20405338:    faa42223              sw    a0,-92(s0)                             allGrp
      if (i <= 0)
2040533c:    fb442503              lw    a0,-76(s0)                             allGrp
20405340:    00000593              li    a1,0                                   allGrp
20405344:    00a5ca63              blt    a1,a0,20405358 <_dtoa_r+0x7c4>        allGrp, Branch-Instr, controlFlowGrp
20405348:    0040006f              j    2040534c <_dtoa_r+0x7b8>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	i = 1;
2040534c:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20405350:    faa42a23              sw    a0,-76(s0)                             allGrp
20405354:    0040006f              j    20405358 <_dtoa_r+0x7c4>                allGrp, Branch-Instr, controlFlowGrp
    }
20405358:    0040006f              j    2040535c <_dtoa_r+0x7c8>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  j = sizeof (__ULong);
2040535c:    00400513              li    a0,4                                   Branch-Tgt, allGrp
20405360:    faa42023              sw    a0,-96(s0)                             allGrp
  for (_REENT_MP_RESULT_K(ptr) = 0; sizeof (_Bigint) - sizeof (__ULong) + j <= i;
20405364:    fec42503              lw    a0,-20(s0)                             allGrp
20405368:    00000593              li    a1,0                                   allGrp
2040536c:    04b52223              sw    a1,68(a0)                              allGrp
20405370:    0040006f              j    20405374 <_dtoa_r+0x7e0>                allGrp, Branch-Instr, controlFlowGrp
20405374:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
20405378:    01450513              addi    a0,a0,20                             allGrp
2040537c:    fb442583              lw    a1,-76(s0)                             allGrp
20405380:    02a5e663              bltu    a1,a0,204053ac <_dtoa_r+0x818>       allGrp, Branch-Instr, controlFlowGrp
20405384:    0040006f              j    20405388 <_dtoa_r+0x7f4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
       j <<= 1)
    _REENT_MP_RESULT_K(ptr)++;
20405388:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040538c:    04452583              lw    a1,68(a0)                              allGrp
20405390:    00158593              addi    a1,a1,1 # fe100001 <_sp+0x7e0fc001>  allGrp
20405394:    04b52223              sw    a1,68(a0)                              allGrp
20405398:    0040006f              j    2040539c <_dtoa_r+0x808>                allGrp, Branch-Instr, controlFlowGrp
       j <<= 1)
2040539c:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
204053a0:    00151513              slli    a0,a0,0x1                            allGrp
204053a4:    faa42023              sw    a0,-96(s0)                             allGrp
  for (_REENT_MP_RESULT_K(ptr) = 0; sizeof (_Bigint) - sizeof (__ULong) + j <= i;
204053a8:    fcdff06f              j    20405374 <_dtoa_r+0x7e0>                allGrp, Branch-Instr, controlFlowGrp
  _REENT_MP_RESULT(ptr) = Balloc (ptr, _REENT_MP_RESULT_K(ptr));
204053ac:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204053b0:    fec42583              lw    a1,-20(s0)                             allGrp
204053b4:    0445a583              lw    a1,68(a1)                              allGrp
204053b8:    00002097              auipc    ra,0x2                              allGrp
204053bc:    4a0080e7              jalr    1184(ra) # 20407858 <_Balloc>        Call-Instr, allGrp, controlFlowGrp
204053c0:    fec42583              lw    a1,-20(s0)                             Return-Tgt, allGrp
204053c4:    04a5a023              sw    a0,64(a1)                              allGrp
  s = s0 = (char *) _REENT_MP_RESULT(ptr);
204053c8:    fec42503              lw    a0,-20(s0)                             allGrp
204053cc:    04052503              lw    a0,64(a0)                              allGrp
204053d0:    f2a42023              sw    a0,-224(s0)                            allGrp
204053d4:    f2a42223              sw    a0,-220(s0)                            allGrp

  if (ilim >= 0 && ilim <= Quick_max && try_quick)
204053d8:    fac42503              lw    a0,-84(s0)                             allGrp
204053dc:    00000593              li    a1,0                                   allGrp
204053e0:    00b54ee3              blt    a0,a1,20405bfc <_dtoa_r+0x1068>       allGrp, Branch-Instr, controlFlowGrp
204053e4:    0040006f              j    204053e8 <_dtoa_r+0x854>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204053e8:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
204053ec:    00e00593              li    a1,14                                  allGrp
204053f0:    00a5c6e3              blt    a1,a0,20405bfc <_dtoa_r+0x1068>       allGrp, Branch-Instr, controlFlowGrp
204053f4:    0040006f              j    204053f8 <_dtoa_r+0x864>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204053f8:    f7442503              lw    a0,-140(s0)                            Branch-Tgt, allGrp
204053fc:    00000593              li    a1,0                                   allGrp
20405400:    7eb50e63              beq    a0,a1,20405bfc <_dtoa_r+0x1068>       allGrp, Branch-Instr, controlFlowGrp
20405404:    0040006f              j    20405408 <_dtoa_r+0x874>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      /* Try to get by with floating-point arithmetic. */

      i = 0;
20405408:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040540c:    faa42a23              sw    a0,-76(s0)                             allGrp
      d2.d = d.d;
20405410:    f6842503              lw    a0,-152(s0)                            allGrp
20405414:    f6c42583              lw    a1,-148(s0)                            allGrp
20405418:    f6b42223              sw    a1,-156(s0)                            allGrp
2040541c:    f6a42023              sw    a0,-160(s0)                            allGrp
      k0 = k;
20405420:    f9842503              lw    a0,-104(s0)                            allGrp
20405424:    f8a42a23              sw    a0,-108(s0)                            allGrp
      ilim0 = ilim;
20405428:    fac42503              lw    a0,-84(s0)                             allGrp
2040542c:    faa42423              sw    a0,-88(s0)                             allGrp
20405430:    00200513              li    a0,2                                   allGrp
      ieps = 2;			/* conservative */
20405434:    faa42823              sw    a0,-80(s0)                             allGrp
      if (k > 0)
20405438:    f9842503              lw    a0,-104(s0)                            allGrp
2040543c:    00100593              li    a1,1                                   allGrp
20405440:    14b54263              blt    a0,a1,20405584 <_dtoa_r+0x9f0>        allGrp, Branch-Instr, controlFlowGrp
20405444:    0040006f              j    20405448 <_dtoa_r+0x8b4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  ds = tens[k & 0xf];
20405448:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
2040544c:    00f57513              andi    a0,a0,15                             allGrp
20405450:    00351513              slli    a0,a0,0x3                            allGrp
20405454:    204125b7              lui    a1,0x20412                            allGrp
20405458:    5e058593              addi    a1,a1,1504 # 204125e0 <__mprec_tens> allGrp
2040545c:    00b50533              add    a0,a0,a1                              allGrp
20405460:    00052583              lw    a1,0(a0)                               allGrp
20405464:    00452503              lw    a0,4(a0)                               allGrp
20405468:    f2a42623              sw    a0,-212(s0)                            allGrp
2040546c:    f2b42423              sw    a1,-216(s0)                            allGrp
	  j = k >> 4;
20405470:    f9842503              lw    a0,-104(s0)                            allGrp
20405474:    40455513              srai    a0,a0,0x4                            allGrp
20405478:    faa42023              sw    a0,-96(s0)                             allGrp
	  if (j & Bletch)
2040547c:    fa042503              lw    a0,-96(s0)                             allGrp
20405480:    01057513              andi    a0,a0,16                             allGrp
20405484:    00000593              li    a1,0                                   allGrp
20405488:    04b50663              beq    a0,a1,204054d4 <_dtoa_r+0x940>        allGrp, Branch-Instr, controlFlowGrp
2040548c:    0040006f              j    20405490 <_dtoa_r+0x8fc>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    {
	      /* prevent overflows */
	      j &= Bletch - 1;
20405490:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
20405494:    00f57513              andi    a0,a0,15                             allGrp
20405498:    faa42023              sw    a0,-96(s0)                             allGrp
2040549c:    20412537              lui    a0,0x20412                            allGrp
204054a0:    6a850513              addi    a0,a0,1704 # 204126a8 <__mprec_bigtens>allGrp
	      d.d /= bigtens[n_bigtens - 1];
204054a4:    02452683              lw    a3,36(a0)                              allGrp
204054a8:    02052603              lw    a2,32(a0)                              allGrp
204054ac:    f6842503              lw    a0,-152(s0)                            allGrp
204054b0:    f6c42583              lw    a1,-148(s0)                            allGrp
204054b4:    0000a097              auipc    ra,0xa                              allGrp
204054b8:    254080e7              jalr    596(ra) # 2040f708 <__divdf3>        Call-Instr, allGrp, controlFlowGrp
204054bc:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
204054c0:    f6a42423              sw    a0,-152(s0)                            allGrp
	      ieps++;
204054c4:    fb042503              lw    a0,-80(s0)                             allGrp
204054c8:    00150513              addi    a0,a0,1                              allGrp
204054cc:    faa42823              sw    a0,-80(s0)                             allGrp
	    }
204054d0:    0040006f              j    204054d4 <_dtoa_r+0x940>                allGrp, Branch-Instr, controlFlowGrp
	  for (; j; j >>= 1, i++)
204054d4:    0040006f              j    204054d8 <_dtoa_r+0x944>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204054d8:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
204054dc:    00000593              li    a1,0                                   allGrp
204054e0:    08b50063              beq    a0,a1,20405560 <_dtoa_r+0x9cc>        allGrp, Branch-Instr, controlFlowGrp
204054e4:    0040006f              j    204054e8 <_dtoa_r+0x954>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    if (j & 1)
204054e8:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
204054ec:    00157513              andi    a0,a0,1                              allGrp
204054f0:    00000593              li    a1,0                                   allGrp
204054f4:    04b50663              beq    a0,a1,20405540 <_dtoa_r+0x9ac>        allGrp, Branch-Instr, controlFlowGrp
204054f8:    0040006f              j    204054fc <_dtoa_r+0x968>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	      {
		ieps++;
204054fc:    fb042503              lw    a0,-80(s0)                             Branch-Tgt, allGrp
20405500:    00150513              addi    a0,a0,1                              allGrp
20405504:    faa42823              sw    a0,-80(s0)                             allGrp
		ds *= bigtens[i];
20405508:    fb442503              lw    a0,-76(s0)                             allGrp
2040550c:    00351513              slli    a0,a0,0x3                            allGrp
20405510:    204125b7              lui    a1,0x20412                            allGrp
20405514:    6a858593              addi    a1,a1,1704 # 204126a8 <__mprec_bigtens>allGrp
20405518:    00b50533              add    a0,a0,a1                              allGrp
2040551c:    00452683              lw    a3,4(a0)                               allGrp
20405520:    00052603              lw    a2,0(a0)                               allGrp
20405524:    f2842503              lw    a0,-216(s0)                            allGrp
20405528:    f2c42583              lw    a1,-212(s0)                            allGrp
2040552c:    0000b097              auipc    ra,0xb                              allGrp
20405530:    dac080e7              jalr    -596(ra) # 204102d8 <__muldf3>       Call-Instr, allGrp, controlFlowGrp
20405534:    f2b42623              sw    a1,-212(s0)                            Return-Tgt, allGrp
20405538:    f2a42423              sw    a0,-216(s0)                            allGrp
	      }
2040553c:    0040006f              j    20405540 <_dtoa_r+0x9ac>                allGrp, Branch-Instr, controlFlowGrp
	    if (j & 1)
20405540:    0040006f              j    20405544 <_dtoa_r+0x9b0>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  for (; j; j >>= 1, i++)
20405544:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
20405548:    40155513              srai    a0,a0,0x1                            allGrp
2040554c:    faa42023              sw    a0,-96(s0)                             allGrp
20405550:    fb442503              lw    a0,-76(s0)                             allGrp
20405554:    00150513              addi    a0,a0,1                              allGrp
20405558:    faa42a23              sw    a0,-76(s0)                             allGrp
2040555c:    f7dff06f              j    204054d8 <_dtoa_r+0x944>                allGrp, Branch-Instr, controlFlowGrp
	  d.d /= ds;
20405560:    f2c42683              lw    a3,-212(s0)                            Branch-Tgt, allGrp
20405564:    f2842603              lw    a2,-216(s0)                            allGrp
20405568:    f6842503              lw    a0,-152(s0)                            allGrp
2040556c:    f6c42583              lw    a1,-148(s0)                            allGrp
20405570:    0000a097              auipc    ra,0xa                              allGrp
20405574:    198080e7              jalr    408(ra) # 2040f708 <__divdf3>        Call-Instr, allGrp, controlFlowGrp
20405578:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
2040557c:    f6a42423              sw    a0,-152(s0)                            allGrp
	}
20405580:    0f40006f              j    20405674 <_dtoa_r+0xae0>                allGrp, Branch-Instr, controlFlowGrp
      else if ((j1 = -k) != 0)
20405584:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
20405588:    00000593              li    a1,0                                   allGrp
2040558c:    40a58533              sub    a0,a1,a0                              allGrp
20405590:    f8a42e23              sw    a0,-100(s0)                            allGrp
20405594:    0cb50e63              beq    a0,a1,20405670 <_dtoa_r+0xadc>        allGrp, Branch-Instr, controlFlowGrp
20405598:    0040006f              j    2040559c <_dtoa_r+0xa08>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  d.d *= tens[j1 & 0xf];
2040559c:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
204055a0:    00f57513              andi    a0,a0,15                             allGrp
204055a4:    00351513              slli    a0,a0,0x3                            allGrp
204055a8:    204125b7              lui    a1,0x20412                            allGrp
204055ac:    5e058593              addi    a1,a1,1504 # 204125e0 <__mprec_tens> allGrp
204055b0:    00b50533              add    a0,a0,a1                              allGrp
204055b4:    00452683              lw    a3,4(a0)                               allGrp
204055b8:    00052603              lw    a2,0(a0)                               allGrp
204055bc:    f6842503              lw    a0,-152(s0)                            allGrp
204055c0:    f6c42583              lw    a1,-148(s0)                            allGrp
204055c4:    0000b097              auipc    ra,0xb                              allGrp
204055c8:    d14080e7              jalr    -748(ra) # 204102d8 <__muldf3>       Call-Instr, allGrp, controlFlowGrp
204055cc:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
204055d0:    f6a42423              sw    a0,-152(s0)                            allGrp
	  for (j = j1 >> 4; j; j >>= 1, i++)
204055d4:    f9c42503              lw    a0,-100(s0)                            allGrp
204055d8:    40455513              srai    a0,a0,0x4                            allGrp
204055dc:    faa42023              sw    a0,-96(s0)                             allGrp
204055e0:    0040006f              j    204055e4 <_dtoa_r+0xa50>                allGrp, Branch-Instr, controlFlowGrp
204055e4:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
204055e8:    00000593              li    a1,0                                   allGrp
204055ec:    08b50063              beq    a0,a1,2040566c <_dtoa_r+0xad8>        allGrp, Branch-Instr, controlFlowGrp
204055f0:    0040006f              j    204055f4 <_dtoa_r+0xa60>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    if (j & 1)
204055f4:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
204055f8:    00157513              andi    a0,a0,1                              allGrp
204055fc:    00000593              li    a1,0                                   allGrp
20405600:    04b50663              beq    a0,a1,2040564c <_dtoa_r+0xab8>        allGrp, Branch-Instr, controlFlowGrp
20405604:    0040006f              j    20405608 <_dtoa_r+0xa74>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	      {
		ieps++;
20405608:    fb042503              lw    a0,-80(s0)                             Branch-Tgt, allGrp
2040560c:    00150513              addi    a0,a0,1                              allGrp
20405610:    faa42823              sw    a0,-80(s0)                             allGrp
		d.d *= bigtens[i];
20405614:    fb442503              lw    a0,-76(s0)                             allGrp
20405618:    00351513              slli    a0,a0,0x3                            allGrp
2040561c:    204125b7              lui    a1,0x20412                            allGrp
20405620:    6a858593              addi    a1,a1,1704 # 204126a8 <__mprec_bigtens>allGrp
20405624:    00b50533              add    a0,a0,a1                              allGrp
20405628:    00452683              lw    a3,4(a0)                               allGrp
2040562c:    00052603              lw    a2,0(a0)                               allGrp
20405630:    f6842503              lw    a0,-152(s0)                            allGrp
20405634:    f6c42583              lw    a1,-148(s0)                            allGrp
20405638:    0000b097              auipc    ra,0xb                              allGrp
2040563c:    ca0080e7              jalr    -864(ra) # 204102d8 <__muldf3>       Call-Instr, allGrp, controlFlowGrp
20405640:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
20405644:    f6a42423              sw    a0,-152(s0)                            allGrp
	      }
20405648:    0040006f              j    2040564c <_dtoa_r+0xab8>                allGrp, Branch-Instr, controlFlowGrp
	    if (j & 1)
2040564c:    0040006f              j    20405650 <_dtoa_r+0xabc>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  for (j = j1 >> 4; j; j >>= 1, i++)
20405650:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
20405654:    40155513              srai    a0,a0,0x1                            allGrp
20405658:    faa42023              sw    a0,-96(s0)                             allGrp
2040565c:    fb442503              lw    a0,-76(s0)                             allGrp
20405660:    00150513              addi    a0,a0,1                              allGrp
20405664:    faa42a23              sw    a0,-76(s0)                             allGrp
20405668:    f7dff06f              j    204055e4 <_dtoa_r+0xa50>                allGrp, Branch-Instr, controlFlowGrp
	}
2040566c:    0040006f              j    20405670 <_dtoa_r+0xadc>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405670:    0040006f              j    20405674 <_dtoa_r+0xae0>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      if (k_check && d.d < 1. && ilim > 0)
20405674:    f9042503              lw    a0,-112(s0)                            Branch-Tgt, allGrp
20405678:    00000593              li    a1,0                                   allGrp
2040567c:    08b50a63              beq    a0,a1,20405710 <_dtoa_r+0xb7c>        allGrp, Branch-Instr, controlFlowGrp
20405680:    0040006f              j    20405684 <_dtoa_r+0xaf0>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405684:    f6842503              lw    a0,-152(s0)                            Branch-Tgt, allGrp
20405688:    f6c42583              lw    a1,-148(s0)                            allGrp
2040568c:    00000613              li    a2,0                                   allGrp
20405690:    3ff006b7              lui    a3,0x3ff00                            allGrp
20405694:    0000b097              auipc    ra,0xb                              allGrp
20405698:    b4c080e7              jalr    -1204(ra) # 204101e0 <__ledf2>       Call-Instr, allGrp, controlFlowGrp
2040569c:    fff00593              li    a1,-1                                  Return-Tgt, allGrp
204056a0:    06a5c863              blt    a1,a0,20405710 <_dtoa_r+0xb7c>        allGrp, Branch-Instr, controlFlowGrp
204056a4:    0040006f              j    204056a8 <_dtoa_r+0xb14>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204056a8:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
204056ac:    00100593              li    a1,1                                   allGrp
204056b0:    06b54063              blt    a0,a1,20405710 <_dtoa_r+0xb7c>        allGrp, Branch-Instr, controlFlowGrp
204056b4:    0040006f              j    204056b8 <_dtoa_r+0xb24>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  if (ilim1 <= 0)
204056b8:    fa442503              lw    a0,-92(s0)                             Branch-Tgt, allGrp
204056bc:    00000593              li    a1,0                                   allGrp
204056c0:    00a5c663              blt    a1,a0,204056cc <_dtoa_r+0xb38>        allGrp, Branch-Instr, controlFlowGrp
204056c4:    0040006f              j    204056c8 <_dtoa_r+0xb34>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    goto fast_failed;
204056c8:    5080006f              j    20405bd0 <_dtoa_r+0x103c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  ilim = ilim1;
204056cc:    fa442503              lw    a0,-92(s0)                             Branch-Tgt, allGrp
204056d0:    faa42623              sw    a0,-84(s0)                             allGrp
	  k--;
204056d4:    f9842503              lw    a0,-104(s0)                            allGrp
204056d8:    fff50513              addi    a0,a0,-1                             allGrp
204056dc:    f8a42c23              sw    a0,-104(s0)                            allGrp
	  d.d *= 10.;
204056e0:    f6842503              lw    a0,-152(s0)                            allGrp
204056e4:    f6c42583              lw    a1,-148(s0)                            allGrp
204056e8:    00000613              li    a2,0                                   allGrp
204056ec:    402406b7              lui    a3,0x40240                            allGrp
204056f0:    0000b097              auipc    ra,0xb                              allGrp
204056f4:    be8080e7              jalr    -1048(ra) # 204102d8 <__muldf3>      Call-Instr, allGrp, controlFlowGrp
204056f8:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
204056fc:    f6a42423              sw    a0,-152(s0)                            allGrp
	  ieps++;
20405700:    fb042503              lw    a0,-80(s0)                             allGrp
20405704:    00150513              addi    a0,a0,1                              allGrp
20405708:    faa42823              sw    a0,-80(s0)                             allGrp
	}
2040570c:    0040006f              j    20405710 <_dtoa_r+0xb7c>                allGrp, Branch-Instr, controlFlowGrp
      eps.d = ieps * d.d + 7.;
20405710:    fb042503              lw    a0,-80(s0)                             Branch-Tgt, allGrp
20405714:    0000c097              auipc    ra,0xc                              allGrp
20405718:    f8c080e7              jalr    -116(ra) # 204116a0 <__floatsidf>    Call-Instr, allGrp, controlFlowGrp
2040571c:    f6842603              lw    a2,-152(s0)                            Return-Tgt, allGrp
20405720:    f6c42683              lw    a3,-148(s0)                            allGrp
20405724:    0000b097              auipc    ra,0xb                              allGrp
20405728:    bb4080e7              jalr    -1100(ra) # 204102d8 <__muldf3>      Call-Instr, allGrp, controlFlowGrp
2040572c:    00000613              li    a2,0                                   Return-Tgt, allGrp
20405730:    401c06b7              lui    a3,0x401c0                            allGrp
20405734:    eac42a23              sw    a2,-332(s0)                            allGrp
20405738:    00009097              auipc    ra,0x9                              allGrp
2040573c:    518080e7              jalr    1304(ra) # 2040ec50 <__adddf3>       Call-Instr, allGrp, controlFlowGrp
20405740:    f4b42e23              sw    a1,-164(s0)                            Return-Tgt, allGrp
20405744:    f4a42c23              sw    a0,-168(s0)                            allGrp
      word0 (eps) -= (P - 1) * Exp_msk1;
20405748:    f5c42503              lw    a0,-164(s0)                            allGrp
2040574c:    fcc005b7              lui    a1,0xfcc00                            allGrp
20405750:    00b50533              add    a0,a0,a1                              allGrp
20405754:    f4a42e23              sw    a0,-164(s0)                            allGrp
      if (ilim == 0)
20405758:    fac42503              lw    a0,-84(s0)                             allGrp
2040575c:    eb442583              lw    a1,-332(s0)                            allGrp
20405760:    0cb51a63              bne    a0,a1,20405834 <_dtoa_r+0xca0>        allGrp, Branch-Instr, controlFlowGrp
20405764:    0040006f              j    20405768 <_dtoa_r+0xbd4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  S = mhi = 0;
20405768:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040576c:    f2a42c23              sw    a0,-200(s0)                            allGrp
20405770:    f2a42a23              sw    a0,-204(s0)                            allGrp
	  d.d -= 5.;
20405774:    f6842583              lw    a1,-152(s0)                            allGrp
20405778:    f6c42603              lw    a2,-148(s0)                            allGrp
2040577c:    c01406b7              lui    a3,0xc0140                            allGrp
20405780:    eaa42823              sw    a0,-336(s0)                            allGrp
20405784:    00058513              mv    a0,a1                                  allGrp
20405788:    00060593              mv    a1,a2                                  allGrp
2040578c:    eb042603              lw    a2,-336(s0)                            allGrp
20405790:    00009097              auipc    ra,0x9                              allGrp
20405794:    4c0080e7              jalr    1216(ra) # 2040ec50 <__adddf3>       Call-Instr, allGrp, controlFlowGrp
20405798:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
2040579c:    f6a42423              sw    a0,-152(s0)                            allGrp
	  if (d.d > eps.d)
204057a0:    f6c42583              lw    a1,-148(s0)                            allGrp
204057a4:    f6842503              lw    a0,-152(s0)                            allGrp
204057a8:    f5842603              lw    a2,-168(s0)                            allGrp
204057ac:    f5c42683              lw    a3,-164(s0)                            allGrp
204057b0:    0000b097              auipc    ra,0xb                              allGrp
204057b4:    938080e7              jalr    -1736(ra) # 204100e8 <__gedf2>       Call-Instr, allGrp, controlFlowGrp
204057b8:    00100593              li    a1,1                                   Return-Tgt, allGrp
204057bc:    00b54663              blt    a0,a1,204057c8 <_dtoa_r+0xc34>        allGrp, Branch-Instr, controlFlowGrp
204057c0:    0040006f              j    204057c4 <_dtoa_r+0xc30>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    goto one_digit;
204057c4:    5450006f              j    20406508 <_dtoa_r+0x1974>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  if (d.d < -eps.d)
204057c8:    f6c42583              lw    a1,-148(s0)                            Branch-Tgt, allGrp
204057cc:    f6842503              lw    a0,-152(s0)                            allGrp
204057d0:    f5842603              lw    a2,-168(s0)                            allGrp
204057d4:    f5c42683              lw    a3,-164(s0)                            allGrp
204057d8:    00000713              li    a4,0                                   allGrp
204057dc:    800007b7              lui    a5,0x80000                            allGrp
204057e0:    eaa42623              sw    a0,-340(s0)                            allGrp
204057e4:    00070513              mv    a0,a4                                  allGrp
204057e8:    eab42423              sw    a1,-344(s0)                            allGrp
204057ec:    00078593              mv    a1,a5                                  allGrp
204057f0:    0000b097              auipc    ra,0xb                              allGrp
204057f4:    2e8080e7              jalr    744(ra) # 20410ad8 <__subdf3>        Call-Instr, allGrp, controlFlowGrp
204057f8:    eac42603              lw    a2,-340(s0)                            Return-Tgt, allGrp
204057fc:    eaa42223              sw    a0,-348(s0)                            allGrp
20405800:    00060513              mv    a0,a2                                  allGrp
20405804:    ea842683              lw    a3,-344(s0)                            allGrp
20405808:    eab42023              sw    a1,-352(s0)                            allGrp
2040580c:    00068593              mv    a1,a3                                  allGrp
20405810:    ea442603              lw    a2,-348(s0)                            allGrp
20405814:    ea042683              lw    a3,-352(s0)                            allGrp
20405818:    0000b097              auipc    ra,0xb                              allGrp
2040581c:    9c8080e7              jalr    -1592(ra) # 204101e0 <__ledf2>       Call-Instr, allGrp, controlFlowGrp
20405820:    fff00593              li    a1,-1                                  Return-Tgt, allGrp
20405824:    00a5c663              blt    a1,a0,20405830 <_dtoa_r+0xc9c>        allGrp, Branch-Instr, controlFlowGrp
20405828:    0040006f              j    2040582c <_dtoa_r+0xc98>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    goto no_digits;
2040582c:    4c90006f              j    204064f4 <_dtoa_r+0x1960>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  goto fast_failed;
20405830:    3a00006f              j    20405bd0 <_dtoa_r+0x103c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	}
#ifndef No_leftright
      if (leftright)
20405834:    f8c42503              lw    a0,-116(s0)                            Branch-Tgt, allGrp
20405838:    00000593              li    a1,0                                   allGrp
2040583c:    18b50863              beq    a0,a1,204059cc <_dtoa_r+0xe38>        allGrp, Branch-Instr, controlFlowGrp
20405840:    0040006f              j    20405844 <_dtoa_r+0xcb0>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  /* Use Steele & White method of only
	   * generating digits needed.
	   */
	  eps.d = 0.5 / tens[ilim - 1] - eps.d;
20405844:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
20405848:    00351513              slli    a0,a0,0x3                            allGrp
2040584c:    204125b7              lui    a1,0x20412                            allGrp
20405850:    5e058593              addi    a1,a1,1504 # 204125e0 <__mprec_tens> allGrp
20405854:    00b50533              add    a0,a0,a1                              allGrp
20405858:    ff852603              lw    a2,-8(a0)                              allGrp
2040585c:    ffc52683              lw    a3,-4(a0)                              allGrp
20405860:    00000513              li    a0,0                                   allGrp
20405864:    3fe005b7              lui    a1,0x3fe00                            allGrp
20405868:    e8a42e23              sw    a0,-356(s0)                            allGrp
2040586c:    0000a097              auipc    ra,0xa                              allGrp
20405870:    e9c080e7              jalr    -356(ra) # 2040f708 <__divdf3>       Call-Instr, allGrp, controlFlowGrp
20405874:    f5842603              lw    a2,-168(s0)                            Return-Tgt, allGrp
20405878:    f5c42683              lw    a3,-164(s0)                            allGrp
2040587c:    0000b097              auipc    ra,0xb                              allGrp
20405880:    25c080e7              jalr    604(ra) # 20410ad8 <__subdf3>        Call-Instr, allGrp, controlFlowGrp
20405884:    f4b42e23              sw    a1,-164(s0)                            Return-Tgt, allGrp
20405888:    f4a42c23              sw    a0,-168(s0)                            allGrp
	  for (i = 0;;)
2040588c:    e9c42503              lw    a0,-356(s0)                            allGrp
20405890:    faa42a23              sw    a0,-76(s0)                             allGrp
20405894:    0040006f              j    20405898 <_dtoa_r+0xd04>                allGrp, Branch-Instr, controlFlowGrp
	    {
	      L = d.d;
20405898:    f6842503              lw    a0,-152(s0)                            Branch-Tgt, allGrp
2040589c:    f6c42583              lw    a1,-148(s0)                            allGrp
204058a0:    0000c097              auipc    ra,0xc                              allGrp
204058a4:    d08080e7              jalr    -760(ra) # 204115a8 <__fixdfsi>      Call-Instr, allGrp, controlFlowGrp
204058a8:    f4a42a23              sw    a0,-172(s0)                            Return-Tgt, allGrp
	      d.d -= L;
204058ac:    f5442503              lw    a0,-172(s0)                            allGrp
204058b0:    0000c097              auipc    ra,0xc                              allGrp
204058b4:    df0080e7              jalr    -528(ra) # 204116a0 <__floatsidf>    Call-Instr, allGrp, controlFlowGrp
204058b8:    f6842603              lw    a2,-152(s0)                            Return-Tgt, allGrp
204058bc:    f6c42683              lw    a3,-148(s0)                            allGrp
204058c0:    e8a42c23              sw    a0,-360(s0)                            allGrp
204058c4:    00060513              mv    a0,a2                                  allGrp
204058c8:    e8b42a23              sw    a1,-364(s0)                            allGrp
204058cc:    00068593              mv    a1,a3                                  allGrp
204058d0:    e9842603              lw    a2,-360(s0)                            allGrp
204058d4:    e9442683              lw    a3,-364(s0)                            allGrp
204058d8:    0000b097              auipc    ra,0xb                              allGrp
204058dc:    200080e7              jalr    512(ra) # 20410ad8 <__subdf3>        Call-Instr, allGrp, controlFlowGrp
204058e0:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
204058e4:    f6a42423              sw    a0,-152(s0)                            allGrp
	      *s++ = '0' + (int) L;
204058e8:    f5442503              lw    a0,-172(s0)                            allGrp
204058ec:    03050513              addi    a0,a0,48                             allGrp
204058f0:    f2442583              lw    a1,-220(s0)                            allGrp
204058f4:    00158613              addi    a2,a1,1 # 3fe00001 <__fini_array_end+0x1f9ed641>allGrp
204058f8:    f2c42223              sw    a2,-220(s0)                            allGrp
204058fc:    00a58023              sb    a0,0(a1)                               allGrp
	      if (d.d < eps.d)
20405900:    f6c42583              lw    a1,-148(s0)                            allGrp
20405904:    f6842503              lw    a0,-152(s0)                            allGrp
20405908:    f5842603              lw    a2,-168(s0)                            allGrp
2040590c:    f5c42683              lw    a3,-164(s0)                            allGrp
20405910:    0000b097              auipc    ra,0xb                              allGrp
20405914:    8d0080e7              jalr    -1840(ra) # 204101e0 <__ledf2>       Call-Instr, allGrp, controlFlowGrp
20405918:    fff00593              li    a1,-1                                  Return-Tgt, allGrp
2040591c:    00a5c663              blt    a1,a0,20405928 <_dtoa_r+0xd94>        allGrp, Branch-Instr, controlFlowGrp
20405920:    0040006f              j    20405924 <_dtoa_r+0xd90>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		goto ret1;
20405924:    1f00106f              j    20406b14 <_dtoa_r+0x1f80>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	      if (1. - d.d < eps.d)
20405928:    f6842603              lw    a2,-152(s0)                            Branch-Tgt, allGrp
2040592c:    f6c42683              lw    a3,-148(s0)                            allGrp
20405930:    00000513              li    a0,0                                   allGrp
20405934:    3ff005b7              lui    a1,0x3ff00                            allGrp
20405938:    0000b097              auipc    ra,0xb                              allGrp
2040593c:    1a0080e7              jalr    416(ra) # 20410ad8 <__subdf3>        Call-Instr, allGrp, controlFlowGrp
20405940:    f5842603              lw    a2,-168(s0)                            Return-Tgt, allGrp
20405944:    f5c42683              lw    a3,-164(s0)                            allGrp
20405948:    0000b097              auipc    ra,0xb                              allGrp
2040594c:    898080e7              jalr    -1896(ra) # 204101e0 <__ledf2>       Call-Instr, allGrp, controlFlowGrp
20405950:    fff00593              li    a1,-1                                  Return-Tgt, allGrp
20405954:    00a5c663              blt    a1,a0,20405960 <_dtoa_r+0xdcc>        allGrp, Branch-Instr, controlFlowGrp
20405958:    0040006f              j    2040595c <_dtoa_r+0xdc8>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		goto bump_up;
2040595c:    4b80006f              j    20405e14 <_dtoa_r+0x1280>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	      if (++i >= ilim)
20405960:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
20405964:    00150513              addi    a0,a0,1                              allGrp
20405968:    faa42a23              sw    a0,-76(s0)                             allGrp
2040596c:    fac42583              lw    a1,-84(s0)                             allGrp
20405970:    00b54663              blt    a0,a1,2040597c <_dtoa_r+0xde8>        allGrp, Branch-Instr, controlFlowGrp
20405974:    0040006f              j    20405978 <_dtoa_r+0xde4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		break;
20405978:    0500006f              j    204059c8 <_dtoa_r+0xe34>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	      eps.d *= 10.;
2040597c:    f5842503              lw    a0,-168(s0)                            Branch-Tgt, allGrp
20405980:    f5c42583              lw    a1,-164(s0)                            allGrp
20405984:    00000613              li    a2,0                                   allGrp
20405988:    402406b7              lui    a3,0x40240                            allGrp
2040598c:    e8c42823              sw    a2,-368(s0)                            allGrp
20405990:    e8d42623              sw    a3,-372(s0)                            allGrp
20405994:    0000b097              auipc    ra,0xb                              allGrp
20405998:    944080e7              jalr    -1724(ra) # 204102d8 <__muldf3>      Call-Instr, allGrp, controlFlowGrp
2040599c:    f4b42e23              sw    a1,-164(s0)                            Return-Tgt, allGrp
204059a0:    f4a42c23              sw    a0,-168(s0)                            allGrp
	      d.d *= 10.;
204059a4:    f6842503              lw    a0,-152(s0)                            allGrp
204059a8:    f6c42583              lw    a1,-148(s0)                            allGrp
204059ac:    e9042603              lw    a2,-368(s0)                            allGrp
204059b0:    e8c42683              lw    a3,-372(s0)                            allGrp
204059b4:    0000b097              auipc    ra,0xb                              allGrp
204059b8:    924080e7              jalr    -1756(ra) # 204102d8 <__muldf3>      Call-Instr, allGrp, controlFlowGrp
204059bc:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
204059c0:    f6a42423              sw    a0,-152(s0)                            allGrp
	  for (i = 0;;)
204059c4:    ed5ff06f              j    20405898 <_dtoa_r+0xd04>                allGrp, Branch-Instr, controlFlowGrp
	    }
	}
204059c8:    2040006f              j    20405bcc <_dtoa_r+0x1038>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      else
	{
#endif
	  /* Generate ilim digits, then fix them up. */
	  eps.d *= tens[ilim - 1];
204059cc:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
204059d0:    00351513              slli    a0,a0,0x3                            allGrp
204059d4:    204125b7              lui    a1,0x20412                            allGrp
204059d8:    5e058593              addi    a1,a1,1504 # 204125e0 <__mprec_tens> allGrp
204059dc:    00b50533              add    a0,a0,a1                              allGrp
204059e0:    ffc52683              lw    a3,-4(a0)                              allGrp
204059e4:    ff852603              lw    a2,-8(a0)                              allGrp
204059e8:    f5842503              lw    a0,-168(s0)                            allGrp
204059ec:    f5c42583              lw    a1,-164(s0)                            allGrp
204059f0:    0000b097              auipc    ra,0xb                              allGrp
204059f4:    8e8080e7              jalr    -1816(ra) # 204102d8 <__muldf3>      Call-Instr, allGrp, controlFlowGrp
204059f8:    f4b42e23              sw    a1,-164(s0)                            Return-Tgt, allGrp
204059fc:    f4a42c23              sw    a0,-168(s0)                            allGrp
20405a00:    00100513              li    a0,1                                   allGrp
	  for (i = 1;; i++, d.d *= 10.)
20405a04:    faa42a23              sw    a0,-76(s0)                             allGrp
20405a08:    0040006f              j    20405a0c <_dtoa_r+0xe78>                allGrp, Branch-Instr, controlFlowGrp
	    {
	      L = d.d;
20405a0c:    f6842503              lw    a0,-152(s0)                            Branch-Tgt, allGrp
20405a10:    f6c42583              lw    a1,-148(s0)                            allGrp
20405a14:    0000c097              auipc    ra,0xc                              allGrp
20405a18:    b94080e7              jalr    -1132(ra) # 204115a8 <__fixdfsi>     Call-Instr, allGrp, controlFlowGrp
20405a1c:    f4a42a23              sw    a0,-172(s0)                            Return-Tgt, allGrp
	      d.d -= L;
20405a20:    f5442503              lw    a0,-172(s0)                            allGrp
20405a24:    0000c097              auipc    ra,0xc                              allGrp
20405a28:    c7c080e7              jalr    -900(ra) # 204116a0 <__floatsidf>    Call-Instr, allGrp, controlFlowGrp
20405a2c:    f6842603              lw    a2,-152(s0)                            Return-Tgt, allGrp
20405a30:    f6c42683              lw    a3,-148(s0)                            allGrp
20405a34:    e8a42423              sw    a0,-376(s0)                            allGrp
20405a38:    00060513              mv    a0,a2                                  allGrp
20405a3c:    e8b42223              sw    a1,-380(s0)                            allGrp
20405a40:    00068593              mv    a1,a3                                  allGrp
20405a44:    e8842603              lw    a2,-376(s0)                            allGrp
20405a48:    e8442683              lw    a3,-380(s0)                            allGrp
20405a4c:    0000b097              auipc    ra,0xb                              allGrp
20405a50:    08c080e7              jalr    140(ra) # 20410ad8 <__subdf3>        Call-Instr, allGrp, controlFlowGrp
20405a54:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
20405a58:    f6a42423              sw    a0,-152(s0)                            allGrp
	      *s++ = '0' + (int) L;
20405a5c:    f5442503              lw    a0,-172(s0)                            allGrp
20405a60:    03050513              addi    a0,a0,48                             allGrp
20405a64:    f2442583              lw    a1,-220(s0)                            allGrp
20405a68:    00158613              addi    a2,a1,1                              allGrp
20405a6c:    f2c42223              sw    a2,-220(s0)                            allGrp
20405a70:    00a58023              sb    a0,0(a1)                               allGrp
	      if (i == ilim)
20405a74:    fb442503              lw    a0,-76(s0)                             allGrp
20405a78:    fac42583              lw    a1,-84(s0)                             allGrp
20405a7c:    10b51c63              bne    a0,a1,20405b94 <_dtoa_r+0x1000>       allGrp, Branch-Instr, controlFlowGrp
20405a80:    0040006f              j    20405a84 <_dtoa_r+0xef0>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		{
		  if (d.d > 0.5 + eps.d)
20405a84:    f6c42583              lw    a1,-148(s0)                            Branch-Tgt, allGrp
20405a88:    f6842503              lw    a0,-152(s0)                            allGrp
20405a8c:    f5842603              lw    a2,-168(s0)                            allGrp
20405a90:    f5c42683              lw    a3,-164(s0)                            allGrp
20405a94:    00000713              li    a4,0                                   allGrp
20405a98:    3fe007b7              lui    a5,0x3fe00                            allGrp
20405a9c:    e8a42023              sw    a0,-384(s0)                            allGrp
20405aa0:    00060513              mv    a0,a2                                  allGrp
20405aa4:    e6b42e23              sw    a1,-388(s0)                            allGrp
20405aa8:    00068593              mv    a1,a3                                  allGrp
20405aac:    00070613              mv    a2,a4                                  allGrp
20405ab0:    00078693              mv    a3,a5                                  allGrp
20405ab4:    00009097              auipc    ra,0x9                              allGrp
20405ab8:    19c080e7              jalr    412(ra) # 2040ec50 <__adddf3>        Call-Instr, allGrp, controlFlowGrp
20405abc:    e8042603              lw    a2,-384(s0)                            Return-Tgt, allGrp
20405ac0:    e6a42c23              sw    a0,-392(s0)                            allGrp
20405ac4:    00060513              mv    a0,a2                                  allGrp
20405ac8:    e7c42683              lw    a3,-388(s0)                            allGrp
20405acc:    e6b42a23              sw    a1,-396(s0)                            allGrp
20405ad0:    00068593              mv    a1,a3                                  allGrp
20405ad4:    e7842603              lw    a2,-392(s0)                            allGrp
20405ad8:    e7442683              lw    a3,-396(s0)                            allGrp
20405adc:    0000a097              auipc    ra,0xa                              allGrp
20405ae0:    60c080e7              jalr    1548(ra) # 204100e8 <__gedf2>        Call-Instr, allGrp, controlFlowGrp
20405ae4:    00100593              li    a1,1                                   Return-Tgt, allGrp
20405ae8:    00b54663              blt    a0,a1,20405af4 <_dtoa_r+0xf60>        allGrp, Branch-Instr, controlFlowGrp
20405aec:    0040006f              j    20405af0 <_dtoa_r+0xf5c>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		    goto bump_up;
20405af0:    3240006f              j    20405e14 <_dtoa_r+0x1280>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		  else if (d.d < 0.5 - eps.d)
20405af4:    f6c42583              lw    a1,-148(s0)                            Branch-Tgt, allGrp
20405af8:    f6842503              lw    a0,-152(s0)                            allGrp
20405afc:    f5842603              lw    a2,-168(s0)                            allGrp
20405b00:    f5c42683              lw    a3,-164(s0)                            allGrp
20405b04:    00000713              li    a4,0                                   allGrp
20405b08:    3fe007b7              lui    a5,0x3fe00                            allGrp
20405b0c:    e6a42823              sw    a0,-400(s0)                            allGrp
20405b10:    00070513              mv    a0,a4                                  allGrp
20405b14:    e6b42623              sw    a1,-404(s0)                            allGrp
20405b18:    00078593              mv    a1,a5                                  allGrp
20405b1c:    0000b097              auipc    ra,0xb                              allGrp
20405b20:    fbc080e7              jalr    -68(ra) # 20410ad8 <__subdf3>        Call-Instr, allGrp, controlFlowGrp
20405b24:    e7042603              lw    a2,-400(s0)                            Return-Tgt, allGrp
20405b28:    e6a42423              sw    a0,-408(s0)                            allGrp
20405b2c:    00060513              mv    a0,a2                                  allGrp
20405b30:    e6c42683              lw    a3,-404(s0)                            allGrp
20405b34:    e6b42223              sw    a1,-412(s0)                            allGrp
20405b38:    00068593              mv    a1,a3                                  allGrp
20405b3c:    e6842603              lw    a2,-408(s0)                            allGrp
20405b40:    e6442683              lw    a3,-412(s0)                            allGrp
20405b44:    0000a097              auipc    ra,0xa                              allGrp
20405b48:    69c080e7              jalr    1692(ra) # 204101e0 <__ledf2>        Call-Instr, allGrp, controlFlowGrp
20405b4c:    fff00593              li    a1,-1                                  Return-Tgt, allGrp
20405b50:    02a5ce63              blt    a1,a0,20405b8c <_dtoa_r+0xff8>        allGrp, Branch-Instr, controlFlowGrp
20405b54:    0040006f              j    20405b58 <_dtoa_r+0xfc4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		    {
		      while (*--s == '0');
20405b58:    0040006f              j    20405b5c <_dtoa_r+0xfc8>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405b5c:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20405b60:    fff50593              addi    a1,a0,-1                             allGrp
20405b64:    f2b42223              sw    a1,-220(s0)                            allGrp
20405b68:    fff54503              lbu    a0,-1(a0)                             allGrp
20405b6c:    03000593              li    a1,48                                  allGrp
20405b70:    00b51663              bne    a0,a1,20405b7c <_dtoa_r+0xfe8>        allGrp, Branch-Instr, controlFlowGrp
20405b74:    0040006f              j    20405b78 <_dtoa_r+0xfe4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405b78:    fe5ff06f              j    20405b5c <_dtoa_r+0xfc8>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		      s++;
20405b7c:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20405b80:    00150513              addi    a0,a0,1                              allGrp
20405b84:    f2a42223              sw    a0,-220(s0)                            allGrp
		      goto ret1;
20405b88:    78d0006f              j    20406b14 <_dtoa_r+0x1f80>               allGrp, Branch-Instr, controlFlowGrp
20405b8c:    0040006f              j    20405b90 <_dtoa_r+0xffc>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		    }
		  break;
20405b90:    0380006f              j    20405bc8 <_dtoa_r+0x1034>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		}
	    }
20405b94:    0040006f              j    20405b98 <_dtoa_r+0x1004>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  for (i = 1;; i++, d.d *= 10.)
20405b98:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
20405b9c:    00150513              addi    a0,a0,1                              allGrp
20405ba0:    faa42a23              sw    a0,-76(s0)                             allGrp
20405ba4:    f6842503              lw    a0,-152(s0)                            allGrp
20405ba8:    f6c42583              lw    a1,-148(s0)                            allGrp
20405bac:    00000613              li    a2,0                                   allGrp
20405bb0:    402406b7              lui    a3,0x40240                            allGrp
20405bb4:    0000a097              auipc    ra,0xa                              allGrp
20405bb8:    724080e7              jalr    1828(ra) # 204102d8 <__muldf3>       Call-Instr, allGrp, controlFlowGrp
20405bbc:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
20405bc0:    f6a42423              sw    a0,-152(s0)                            allGrp
20405bc4:    e49ff06f              j    20405a0c <_dtoa_r+0xe78>                allGrp, Branch-Instr, controlFlowGrp
20405bc8:    0040006f              j    20405bcc <_dtoa_r+0x1038>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      if (leftright)
20405bcc:    0040006f              j    20405bd0 <_dtoa_r+0x103c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
#ifndef No_leftright
	}
#endif
    fast_failed:
      s = s0;
20405bd0:    f2042503              lw    a0,-224(s0)                            Branch-Tgt, allGrp
20405bd4:    f2a42223              sw    a0,-220(s0)                            allGrp
      d.d = d2.d;
20405bd8:    f6042503              lw    a0,-160(s0)                            allGrp
20405bdc:    f6442583              lw    a1,-156(s0)                            allGrp
20405be0:    f6b42623              sw    a1,-148(s0)                            allGrp
20405be4:    f6a42423              sw    a0,-152(s0)                            allGrp
      k = k0;
20405be8:    f9442503              lw    a0,-108(s0)                            allGrp
20405bec:    f8a42c23              sw    a0,-104(s0)                            allGrp
      ilim = ilim0;
20405bf0:    fa842503              lw    a0,-88(s0)                             allGrp
20405bf4:    faa42623              sw    a0,-84(s0)                             allGrp
    }
20405bf8:    0040006f              j    20405bfc <_dtoa_r+0x1068>               allGrp, Branch-Instr, controlFlowGrp

  /* Do we have a "small" integer? */

  if (be >= 0 && k <= Int_max)
20405bfc:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20405c00:    00000593              li    a1,0                                   allGrp
20405c04:    2cb54e63              blt    a0,a1,20405ee0 <_dtoa_r+0x134c>       allGrp, Branch-Instr, controlFlowGrp
20405c08:    0040006f              j    20405c0c <_dtoa_r+0x1078>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405c0c:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
20405c10:    00e00593              li    a1,14                                  allGrp
20405c14:    2ca5c663              blt    a1,a0,20405ee0 <_dtoa_r+0x134c>       allGrp, Branch-Instr, controlFlowGrp
20405c18:    0040006f              j    20405c1c <_dtoa_r+0x1088>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      /* Yes. */
      ds = tens[k];
20405c1c:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
20405c20:    00351513              slli    a0,a0,0x3                            allGrp
20405c24:    204125b7              lui    a1,0x20412                            allGrp
20405c28:    5e058593              addi    a1,a1,1504 # 204125e0 <__mprec_tens> allGrp
20405c2c:    00b50533              add    a0,a0,a1                              allGrp
20405c30:    00052583              lw    a1,0(a0)                               allGrp
20405c34:    00452503              lw    a0,4(a0)                               allGrp
20405c38:    f2a42623              sw    a0,-212(s0)                            allGrp
20405c3c:    f2b42423              sw    a1,-216(s0)                            allGrp
      if (ndigits < 0 && ilim <= 0)
20405c40:    fd842503              lw    a0,-40(s0)                             allGrp
20405c44:    fff00593              li    a1,-1                                  allGrp
20405c48:    0aa5c463              blt    a1,a0,20405cf0 <_dtoa_r+0x115c>       allGrp, Branch-Instr, controlFlowGrp
20405c4c:    0040006f              j    20405c50 <_dtoa_r+0x10bc>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405c50:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
20405c54:    00000593              li    a1,0                                   allGrp
20405c58:    08a5cc63              blt    a1,a0,20405cf0 <_dtoa_r+0x115c>       allGrp, Branch-Instr, controlFlowGrp
20405c5c:    0040006f              j    20405c60 <_dtoa_r+0x10cc>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  S = mhi = 0;
20405c60:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20405c64:    f2a42c23              sw    a0,-200(s0)                            allGrp
20405c68:    f2a42a23              sw    a0,-204(s0)                            allGrp
	  if (ilim < 0 || d.d <= 5 * ds)
20405c6c:    fac42583              lw    a1,-84(s0)                             allGrp
20405c70:    06a5cc63              blt    a1,a0,20405ce8 <_dtoa_r+0x1154>       allGrp, Branch-Instr, controlFlowGrp
20405c74:    0040006f              j    20405c78 <_dtoa_r+0x10e4>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405c78:    f6c42583              lw    a1,-148(s0)                            Branch-Tgt, allGrp
20405c7c:    f6842503              lw    a0,-152(s0)                            allGrp
20405c80:    f2842603              lw    a2,-216(s0)                            allGrp
20405c84:    f2c42683              lw    a3,-212(s0)                            allGrp
20405c88:    00000713              li    a4,0                                   allGrp
20405c8c:    401407b7              lui    a5,0x40140                            allGrp
20405c90:    e6a42023              sw    a0,-416(s0)                            allGrp
20405c94:    00060513              mv    a0,a2                                  allGrp
20405c98:    e4b42e23              sw    a1,-420(s0)                            allGrp
20405c9c:    00068593              mv    a1,a3                                  allGrp
20405ca0:    00070613              mv    a2,a4                                  allGrp
20405ca4:    00078693              mv    a3,a5                                  allGrp
20405ca8:    e4e42c23              sw    a4,-424(s0)                            allGrp
20405cac:    0000a097              auipc    ra,0xa                              allGrp
20405cb0:    62c080e7              jalr    1580(ra) # 204102d8 <__muldf3>       Call-Instr, allGrp, controlFlowGrp
20405cb4:    e6042603              lw    a2,-416(s0)                            Return-Tgt, allGrp
20405cb8:    e4a42a23              sw    a0,-428(s0)                            allGrp
20405cbc:    00060513              mv    a0,a2                                  allGrp
20405cc0:    e5c42683              lw    a3,-420(s0)                            allGrp
20405cc4:    e4b42823              sw    a1,-432(s0)                            allGrp
20405cc8:    00068593              mv    a1,a3                                  allGrp
20405ccc:    e5442603              lw    a2,-428(s0)                            allGrp
20405cd0:    e5042683              lw    a3,-432(s0)                            allGrp
20405cd4:    0000a097              auipc    ra,0xa                              allGrp
20405cd8:    50c080e7              jalr    1292(ra) # 204101e0 <__ledf2>        Call-Instr, allGrp, controlFlowGrp
20405cdc:    e5842583              lw    a1,-424(s0)                            Return-Tgt, allGrp
20405ce0:    00a5c663              blt    a1,a0,20405cec <_dtoa_r+0x1158>       allGrp, Branch-Instr, controlFlowGrp
20405ce4:    0040006f              j    20405ce8 <_dtoa_r+0x1154>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    goto no_digits;
20405ce8:    00d0006f              j    204064f4 <_dtoa_r+0x1960>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  goto one_digit;
20405cec:    01d0006f              j    20406508 <_dtoa_r+0x1974>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	}
      for (i = 1;; i++)
20405cf0:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20405cf4:    faa42a23              sw    a0,-76(s0)                             allGrp
20405cf8:    0040006f              j    20405cfc <_dtoa_r+0x1168>               allGrp, Branch-Instr, controlFlowGrp
	{
	  L = d.d / ds;
20405cfc:    f6c42583              lw    a1,-148(s0)                            Branch-Tgt, allGrp
20405d00:    f6842503              lw    a0,-152(s0)                            allGrp
20405d04:    f2842603              lw    a2,-216(s0)                            allGrp
20405d08:    f2c42683              lw    a3,-212(s0)                            allGrp
20405d0c:    0000a097              auipc    ra,0xa                              allGrp
20405d10:    9fc080e7              jalr    -1540(ra) # 2040f708 <__divdf3>      Call-Instr, allGrp, controlFlowGrp
20405d14:    0000c097              auipc    ra,0xc                              Return-Tgt, allGrp
20405d18:    894080e7              jalr    -1900(ra) # 204115a8 <__fixdfsi>     Call-Instr, allGrp, controlFlowGrp
20405d1c:    f4a42a23              sw    a0,-172(s0)                            Return-Tgt, allGrp
	  d.d -= L * ds;
20405d20:    f5442503              lw    a0,-172(s0)                            allGrp
20405d24:    0000c097              auipc    ra,0xc                              allGrp
20405d28:    97c080e7              jalr    -1668(ra) # 204116a0 <__floatsidf>   Call-Instr, allGrp, controlFlowGrp
20405d2c:    f2842603              lw    a2,-216(s0)                            Return-Tgt, allGrp
20405d30:    f2c42683              lw    a3,-212(s0)                            allGrp
20405d34:    0000a097              auipc    ra,0xa                              allGrp
20405d38:    5a4080e7              jalr    1444(ra) # 204102d8 <__muldf3>       Call-Instr, allGrp, controlFlowGrp
20405d3c:    f6842603              lw    a2,-152(s0)                            Return-Tgt, allGrp
20405d40:    f6c42683              lw    a3,-148(s0)                            allGrp
20405d44:    e4a42623              sw    a0,-436(s0)                            allGrp
20405d48:    00060513              mv    a0,a2                                  allGrp
20405d4c:    e4b42423              sw    a1,-440(s0)                            allGrp
20405d50:    00068593              mv    a1,a3                                  allGrp
20405d54:    e4c42603              lw    a2,-436(s0)                            allGrp
20405d58:    e4842683              lw    a3,-440(s0)                            allGrp
20405d5c:    0000b097              auipc    ra,0xb                              allGrp
20405d60:    d7c080e7              jalr    -644(ra) # 20410ad8 <__subdf3>       Call-Instr, allGrp, controlFlowGrp
20405d64:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
20405d68:    f6a42423              sw    a0,-152(s0)                            allGrp
	    {
	      L--;
	      d.d += ds;
	    }
#endif
	  *s++ = '0' + (int) L;
20405d6c:    f5442503              lw    a0,-172(s0)                            allGrp
20405d70:    03050513              addi    a0,a0,48                             allGrp
20405d74:    f2442583              lw    a1,-220(s0)                            allGrp
20405d78:    00158613              addi    a2,a1,1                              allGrp
20405d7c:    f2c42223              sw    a2,-220(s0)                            allGrp
20405d80:    00a58023              sb    a0,0(a1)                               allGrp
	  if (i == ilim)
20405d84:    fb442503              lw    a0,-76(s0)                             allGrp
20405d88:    fac42583              lw    a1,-84(s0)                             allGrp
20405d8c:    0eb51c63              bne    a0,a1,20405e84 <_dtoa_r+0x12f0>       allGrp, Branch-Instr, controlFlowGrp
20405d90:    0040006f              j    20405d94 <_dtoa_r+0x1200>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    {
	      d.d += d.d;
20405d94:    f6c42683              lw    a3,-148(s0)                            Branch-Tgt, allGrp
20405d98:    f6842603              lw    a2,-152(s0)                            allGrp
20405d9c:    f6842503              lw    a0,-152(s0)                            allGrp
20405da0:    f6c42583              lw    a1,-148(s0)                            allGrp
20405da4:    00009097              auipc    ra,0x9                              allGrp
20405da8:    eac080e7              jalr    -340(ra) # 2040ec50 <__adddf3>       Call-Instr, allGrp, controlFlowGrp
20405dac:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
20405db0:    f6a42423              sw    a0,-152(s0)                            allGrp
             if ((d.d > ds) || ((d.d == ds) && (L & 1)))
20405db4:    f6c42583              lw    a1,-148(s0)                            allGrp
20405db8:    f6842503              lw    a0,-152(s0)                            allGrp
20405dbc:    f2842603              lw    a2,-216(s0)                            allGrp
20405dc0:    f2c42683              lw    a3,-212(s0)                            allGrp
20405dc4:    0000a097              auipc    ra,0xa                              allGrp
20405dc8:    324080e7              jalr    804(ra) # 204100e8 <__gedf2>         Call-Instr, allGrp, controlFlowGrp
20405dcc:    00000593              li    a1,0                                   Return-Tgt, allGrp
20405dd0:    04a5c063              blt    a1,a0,20405e10 <_dtoa_r+0x127c>       allGrp, Branch-Instr, controlFlowGrp
20405dd4:    0040006f              j    20405dd8 <_dtoa_r+0x1244>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405dd8:    f6c42583              lw    a1,-148(s0)                            Branch-Tgt, allGrp
20405ddc:    f6842503              lw    a0,-152(s0)                            allGrp
20405de0:    f2842603              lw    a2,-216(s0)                            allGrp
20405de4:    f2c42683              lw    a3,-212(s0)                            allGrp
20405de8:    0000a097              auipc    ra,0xa                              allGrp
20405dec:    228080e7              jalr    552(ra) # 20410010 <__eqdf2>         Call-Instr, allGrp, controlFlowGrp
20405df0:    00000593              li    a1,0                                   Return-Tgt, allGrp
20405df4:    08b51663              bne    a0,a1,20405e80 <_dtoa_r+0x12ec>       allGrp, Branch-Instr, controlFlowGrp
20405df8:    0040006f              j    20405dfc <_dtoa_r+0x1268>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405dfc:    f5442503              lw    a0,-172(s0)                            Branch-Tgt, allGrp
20405e00:    00157513              andi    a0,a0,1                              allGrp
20405e04:    00000593              li    a1,0                                   allGrp
20405e08:    06b50c63              beq    a0,a1,20405e80 <_dtoa_r+0x12ec>       allGrp, Branch-Instr, controlFlowGrp
20405e0c:    0040006f              j    20405e10 <_dtoa_r+0x127c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		{
20405e10:    0040006f              j    20405e14 <_dtoa_r+0x1280>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		bump_up:
		  while (*--s == '9')
20405e14:    0040006f              j    20405e18 <_dtoa_r+0x1284>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405e18:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20405e1c:    fff50593              addi    a1,a0,-1                             allGrp
20405e20:    f2b42223              sw    a1,-220(s0)                            allGrp
20405e24:    fff54503              lbu    a0,-1(a0)                             allGrp
20405e28:    03900593              li    a1,57                                  allGrp
20405e2c:    02b51c63              bne    a0,a1,20405e64 <_dtoa_r+0x12d0>       allGrp, Branch-Instr, controlFlowGrp
20405e30:    0040006f              j    20405e34 <_dtoa_r+0x12a0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		    if (s == s0)
20405e34:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20405e38:    f2042583              lw    a1,-224(s0)                            allGrp
20405e3c:    02b51263              bne    a0,a1,20405e60 <_dtoa_r+0x12cc>       allGrp, Branch-Instr, controlFlowGrp
20405e40:    0040006f              j    20405e44 <_dtoa_r+0x12b0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		      {
			k++;
20405e44:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
20405e48:    00150513              addi    a0,a0,1                              allGrp
20405e4c:    f8a42c23              sw    a0,-104(s0)                            allGrp
			*s = '0';
20405e50:    f2442503              lw    a0,-220(s0)                            allGrp
20405e54:    03000593              li    a1,48                                  allGrp
20405e58:    00b50023              sb    a1,0(a0)                               allGrp
			break;
20405e5c:    0080006f              j    20405e64 <_dtoa_r+0x12d0>               allGrp, Branch-Instr, controlFlowGrp
		  while (*--s == '9')
20405e60:    fb9ff06f              j    20405e18 <_dtoa_r+0x1284>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		      }
		  ++*s++;
20405e64:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20405e68:    00150593              addi    a1,a0,1                              allGrp
20405e6c:    f2b42223              sw    a1,-220(s0)                            allGrp
20405e70:    00050583              lb    a1,0(a0)                               allGrp
20405e74:    00158593              addi    a1,a1,1                              allGrp
20405e78:    00b50023              sb    a1,0(a0)                               allGrp
		}
20405e7c:    0040006f              j    20405e80 <_dtoa_r+0x12ec>               allGrp, Branch-Instr, controlFlowGrp
	      break;
20405e80:    05c0006f              j    20405edc <_dtoa_r+0x1348>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    }
	  if (!(d.d *= 10.))
20405e84:    f6842503              lw    a0,-152(s0)                            Branch-Tgt, allGrp
20405e88:    f6c42583              lw    a1,-148(s0)                            allGrp
20405e8c:    00000613              li    a2,0                                   allGrp
20405e90:    402406b7              lui    a3,0x40240                            allGrp
20405e94:    e4c42223              sw    a2,-444(s0)                            allGrp
20405e98:    0000a097              auipc    ra,0xa                              allGrp
20405e9c:    440080e7              jalr    1088(ra) # 204102d8 <__muldf3>       Call-Instr, allGrp, controlFlowGrp
20405ea0:    f6b42623              sw    a1,-148(s0)                            Return-Tgt, allGrp
20405ea4:    f6a42423              sw    a0,-152(s0)                            allGrp
20405ea8:    e4442603              lw    a2,-444(s0)                            allGrp
20405eac:    e4442683              lw    a3,-444(s0)                            allGrp
20405eb0:    0000a097              auipc    ra,0xa                              allGrp
20405eb4:    160080e7              jalr    352(ra) # 20410010 <__eqdf2>         Call-Instr, allGrp, controlFlowGrp
20405eb8:    e4442583              lw    a1,-444(s0)                            Return-Tgt, allGrp
20405ebc:    00b51663              bne    a0,a1,20405ec8 <_dtoa_r+0x1334>       allGrp, Branch-Instr, controlFlowGrp
20405ec0:    0040006f              j    20405ec4 <_dtoa_r+0x1330>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    break;
20405ec4:    0180006f              j    20405edc <_dtoa_r+0x1348>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	}
20405ec8:    0040006f              j    20405ecc <_dtoa_r+0x1338>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      for (i = 1;; i++)
20405ecc:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
20405ed0:    00150513              addi    a0,a0,1                              allGrp
20405ed4:    faa42a23              sw    a0,-76(s0)                             allGrp
20405ed8:    e25ff06f              j    20405cfc <_dtoa_r+0x1168>               allGrp, Branch-Instr, controlFlowGrp
      goto ret1;
20405edc:    4390006f              j    20406b14 <_dtoa_r+0x1f80>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    }

  m2 = b2;
20405ee0:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
20405ee4:    f8a42423              sw    a0,-120(s0)                            allGrp
  m5 = b5;
20405ee8:    fc042503              lw    a0,-64(s0)                             allGrp
20405eec:    f8a42223              sw    a0,-124(s0)                            allGrp
20405ef0:    00000513              li    a0,0                                   allGrp
  mhi = mlo = 0;
20405ef4:    f2a42e23              sw    a0,-196(s0)                            allGrp
20405ef8:    f2a42c23              sw    a0,-200(s0)                            allGrp
  if (leftright)
20405efc:    f8c42583              lw    a1,-116(s0)                            allGrp
20405f00:    12a58663              beq    a1,a0,2040602c <_dtoa_r+0x1498>       allGrp, Branch-Instr, controlFlowGrp
20405f04:    0040006f              j    20405f08 <_dtoa_r+0x1374>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (mode < 2)
20405f08:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20405f0c:    00100593              li    a1,1                                   allGrp
20405f10:    04a5c463              blt    a1,a0,20405f58 <_dtoa_r+0x13c4>       allGrp, Branch-Instr, controlFlowGrp
20405f14:    0040006f              j    20405f18 <_dtoa_r+0x1384>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  i =
#ifndef Sudden_Underflow
	    denorm ? be + (Bias + (P - 1) - 1 + 1) :
20405f18:    f5042503              lw    a0,-176(s0)                            Branch-Tgt, allGrp
20405f1c:    00000593              li    a1,0                                   allGrp
20405f20:    00b50c63              beq    a0,a1,20405f38 <_dtoa_r+0x13a4>       allGrp, Branch-Instr, controlFlowGrp
20405f24:    0040006f              j    20405f28 <_dtoa_r+0x1394>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20405f28:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20405f2c:    43350513              addi    a0,a0,1075                           allGrp
20405f30:    e4a42023              sw    a0,-448(s0)                            allGrp
20405f34:    0180006f              j    20405f4c <_dtoa_r+0x13b8>               allGrp, Branch-Instr, controlFlowGrp
#endif
#ifdef IBM
	    1 + 4 * P - 3 - bbits + ((bbits + be - 1) & 3);
#else
	    1 + P - bbits;
20405f38:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
20405f3c:    03600593              li    a1,54                                  allGrp
20405f40:    40a58533              sub    a0,a1,a0                              allGrp
	    denorm ? be + (Bias + (P - 1) - 1 + 1) :
20405f44:    e4a42023              sw    a0,-448(s0)                            allGrp
20405f48:    0040006f              j    20405f4c <_dtoa_r+0x13b8>               allGrp, Branch-Instr, controlFlowGrp
20405f4c:    e4042503              lw    a0,-448(s0)                            Branch-Tgt, allGrp
	  i =
20405f50:    faa42a23              sw    a0,-76(s0)                             allGrp
#endif
	}
20405f54:    0a00006f              j    20405ff4 <_dtoa_r+0x1460>               allGrp, Branch-Instr, controlFlowGrp
      else
	{
	  j = ilim - 1;
20405f58:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
20405f5c:    fff50513              addi    a0,a0,-1                             allGrp
20405f60:    faa42023              sw    a0,-96(s0)                             allGrp
	  if (m5 >= j)
20405f64:    f8442503              lw    a0,-124(s0)                            allGrp
20405f68:    fa042583              lw    a1,-96(s0)                             allGrp
20405f6c:    00b54e63              blt    a0,a1,20405f88 <_dtoa_r+0x13f4>       allGrp, Branch-Instr, controlFlowGrp
20405f70:    0040006f              j    20405f74 <_dtoa_r+0x13e0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    m5 -= j;
20405f74:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
20405f78:    f8442583              lw    a1,-124(s0)                            allGrp
20405f7c:    40a58533              sub    a0,a1,a0                              allGrp
20405f80:    f8a42223              sw    a0,-124(s0)                            allGrp
20405f84:    03c0006f              j    20405fc0 <_dtoa_r+0x142c>               allGrp, Branch-Instr, controlFlowGrp
	  else
	    {
	      s5 += j -= m5;
20405f88:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
20405f8c:    fa042583              lw    a1,-96(s0)                             allGrp
20405f90:    40a58533              sub    a0,a1,a0                              allGrp
20405f94:    faa42023              sw    a0,-96(s0)                             allGrp
20405f98:    f7c42583              lw    a1,-132(s0)                            allGrp
20405f9c:    00a58533              add    a0,a1,a0                              allGrp
20405fa0:    f6a42e23              sw    a0,-132(s0)                            allGrp
	      b5 += j;
20405fa4:    fa042503              lw    a0,-96(s0)                             allGrp
20405fa8:    fc042583              lw    a1,-64(s0)                             allGrp
20405fac:    00a58533              add    a0,a1,a0                              allGrp
20405fb0:    fca42023              sw    a0,-64(s0)                             allGrp
20405fb4:    00000513              li    a0,0                                   allGrp
	      m5 = 0;
20405fb8:    f8a42223              sw    a0,-124(s0)                            allGrp
20405fbc:    0040006f              j    20405fc0 <_dtoa_r+0x142c>               allGrp, Branch-Instr, controlFlowGrp
	    }
	  if ((i = ilim) < 0)
20405fc0:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
20405fc4:    faa42a23              sw    a0,-76(s0)                             allGrp
20405fc8:    fff00593              li    a1,-1                                  allGrp
20405fcc:    02a5c263              blt    a1,a0,20405ff0 <_dtoa_r+0x145c>       allGrp, Branch-Instr, controlFlowGrp
20405fd0:    0040006f              j    20405fd4 <_dtoa_r+0x1440>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    {
	      m2 -= i;
20405fd4:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
20405fd8:    f8842583              lw    a1,-120(s0)                            allGrp
20405fdc:    40a58533              sub    a0,a1,a0                              allGrp
20405fe0:    f8a42423              sw    a0,-120(s0)                            allGrp
20405fe4:    00000513              li    a0,0                                   allGrp
	      i = 0;
20405fe8:    faa42a23              sw    a0,-76(s0)                             allGrp
	    }
20405fec:    0040006f              j    20405ff0 <_dtoa_r+0x145c>               allGrp, Branch-Instr, controlFlowGrp
20405ff0:    0040006f              j    20405ff4 <_dtoa_r+0x1460>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	}
      b2 += i;
20405ff4:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
20405ff8:    fc442583              lw    a1,-60(s0)                             allGrp
20405ffc:    00a58533              add    a0,a1,a0                              allGrp
20406000:    fca42223              sw    a0,-60(s0)                             allGrp
      s2 += i;
20406004:    fb442503              lw    a0,-76(s0)                             allGrp
20406008:    f8042583              lw    a1,-128(s0)                            allGrp
2040600c:    00a58533              add    a0,a1,a0                              allGrp
20406010:    f8a42023              sw    a0,-128(s0)                            allGrp
      mhi = i2b (ptr, 1);
20406014:    fec42503              lw    a0,-20(s0)                             allGrp
20406018:    00100593              li    a1,1                                   allGrp
2040601c:    00002097              auipc    ra,0x2                              allGrp
20406020:    108080e7              jalr    264(ra) # 20408124 <__i2b>           Call-Instr, allGrp, controlFlowGrp
20406024:    f2a42c23              sw    a0,-200(s0)                            Return-Tgt, allGrp
    }
20406028:    0040006f              j    2040602c <_dtoa_r+0x1498>               allGrp, Branch-Instr, controlFlowGrp
  if (m2 > 0 && s2 > 0)
2040602c:    f8842503              lw    a0,-120(s0)                            Branch-Tgt, allGrp
20406030:    00100593              li    a1,1                                   allGrp
20406034:    06b54e63              blt    a0,a1,204060b0 <_dtoa_r+0x151c>       allGrp, Branch-Instr, controlFlowGrp
20406038:    0040006f              j    2040603c <_dtoa_r+0x14a8>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040603c:    f8042503              lw    a0,-128(s0)                            Branch-Tgt, allGrp
20406040:    00100593              li    a1,1                                   allGrp
20406044:    06b54663              blt    a0,a1,204060b0 <_dtoa_r+0x151c>       allGrp, Branch-Instr, controlFlowGrp
20406048:    0040006f              j    2040604c <_dtoa_r+0x14b8>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      i = m2 < s2 ? m2 : s2;
2040604c:    f8842503              lw    a0,-120(s0)                            Branch-Tgt, allGrp
20406050:    f8042583              lw    a1,-128(s0)                            allGrp
20406054:    00b55a63              ble    a1,a0,20406068 <_dtoa_r+0x14d4>       allGrp, Branch-Instr, controlFlowGrp
20406058:    0040006f              j    2040605c <_dtoa_r+0x14c8>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040605c:    f8842503              lw    a0,-120(s0)                            Branch-Tgt, allGrp
20406060:    e2a42e23              sw    a0,-452(s0)                            allGrp
20406064:    0100006f              j    20406074 <_dtoa_r+0x14e0>               allGrp, Branch-Instr, controlFlowGrp
20406068:    f8042503              lw    a0,-128(s0)                            Branch-Tgt, allGrp
2040606c:    e2a42e23              sw    a0,-452(s0)                            allGrp
20406070:    0040006f              j    20406074 <_dtoa_r+0x14e0>               allGrp, Branch-Instr, controlFlowGrp
20406074:    e3c42503              lw    a0,-452(s0)                            Branch-Tgt, allGrp
20406078:    faa42a23              sw    a0,-76(s0)                             allGrp
      b2 -= i;
2040607c:    fb442503              lw    a0,-76(s0)                             allGrp
20406080:    fc442583              lw    a1,-60(s0)                             allGrp
20406084:    40a58533              sub    a0,a1,a0                              allGrp
20406088:    fca42223              sw    a0,-60(s0)                             allGrp
      m2 -= i;
2040608c:    fb442503              lw    a0,-76(s0)                             allGrp
20406090:    f8842583              lw    a1,-120(s0)                            allGrp
20406094:    40a58533              sub    a0,a1,a0                              allGrp
20406098:    f8a42423              sw    a0,-120(s0)                            allGrp
      s2 -= i;
2040609c:    fb442503              lw    a0,-76(s0)                             allGrp
204060a0:    f8042583              lw    a1,-128(s0)                            allGrp
204060a4:    40a58533              sub    a0,a1,a0                              allGrp
204060a8:    f8a42023              sw    a0,-128(s0)                            allGrp
    }
204060ac:    0040006f              j    204060b0 <_dtoa_r+0x151c>               allGrp, Branch-Instr, controlFlowGrp
  if (b5 > 0)
204060b0:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
204060b4:    00100593              li    a1,1                                   allGrp
204060b8:    0cb54863              blt    a0,a1,20406188 <_dtoa_r+0x15f4>       allGrp, Branch-Instr, controlFlowGrp
204060bc:    0040006f              j    204060c0 <_dtoa_r+0x152c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (leftright)
204060c0:    f8c42503              lw    a0,-116(s0)                            Branch-Tgt, allGrp
204060c4:    00000593              li    a1,0                                   allGrp
204060c8:    0ab50063              beq    a0,a1,20406168 <_dtoa_r+0x15d4>       allGrp, Branch-Instr, controlFlowGrp
204060cc:    0040006f              j    204060d0 <_dtoa_r+0x153c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  if (m5 > 0)
204060d0:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
204060d4:    00100593              li    a1,1                                   allGrp
204060d8:    04b54a63              blt    a0,a1,2040612c <_dtoa_r+0x1598>       allGrp, Branch-Instr, controlFlowGrp
204060dc:    0040006f              j    204060e0 <_dtoa_r+0x154c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    {
	      mhi = pow5mult (ptr, mhi, m5);
204060e0:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204060e4:    f3842583              lw    a1,-200(s0)                            allGrp
204060e8:    f8442603              lw    a2,-124(s0)                            allGrp
204060ec:    00002097              auipc    ra,0x2                              allGrp
204060f0:    4e4080e7              jalr    1252(ra) # 204085d0 <__pow5mult>     Call-Instr, allGrp, controlFlowGrp
204060f4:    f2a42c23              sw    a0,-200(s0)                            Return-Tgt, allGrp
	      b1 = mult (ptr, mhi, b);
204060f8:    fec42503              lw    a0,-20(s0)                             allGrp
204060fc:    f3842583              lw    a1,-200(s0)                            allGrp
20406100:    f4842603              lw    a2,-184(s0)                            allGrp
20406104:    00002097              auipc    ra,0x2                              allGrp
20406108:    094080e7              jalr    148(ra) # 20408198 <__multiply>      Call-Instr, allGrp, controlFlowGrp
2040610c:    f4a42223              sw    a0,-188(s0)                            Return-Tgt, allGrp
	      Bfree (ptr, b);
20406110:    fec42503              lw    a0,-20(s0)                             allGrp
20406114:    f4842583              lw    a1,-184(s0)                            allGrp
20406118:    00002097              auipc    ra,0x2                              allGrp
2040611c:    8a8080e7              jalr    -1880(ra) # 204079c0 <_Bfree>        Call-Instr, allGrp, controlFlowGrp
	      b = b1;
20406120:    f4442503              lw    a0,-188(s0)                            Return-Tgt, allGrp
20406124:    f4a42423              sw    a0,-184(s0)                            allGrp
	    }
20406128:    0040006f              j    2040612c <_dtoa_r+0x1598>               allGrp, Branch-Instr, controlFlowGrp
         if ((j = b5 - m5) != 0)
2040612c:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
20406130:    f8442583              lw    a1,-124(s0)                            allGrp
20406134:    40b50533              sub    a0,a0,a1                              allGrp
20406138:    faa42023              sw    a0,-96(s0)                             allGrp
2040613c:    00000593              li    a1,0                                   allGrp
20406140:    02b50263              beq    a0,a1,20406164 <_dtoa_r+0x15d0>       allGrp, Branch-Instr, controlFlowGrp
20406144:    0040006f              j    20406148 <_dtoa_r+0x15b4>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    b = pow5mult (ptr, b, j);
20406148:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040614c:    f4842583              lw    a1,-184(s0)                            allGrp
20406150:    fa042603              lw    a2,-96(s0)                             allGrp
20406154:    00002097              auipc    ra,0x2                              allGrp
20406158:    47c080e7              jalr    1148(ra) # 204085d0 <__pow5mult>     Call-Instr, allGrp, controlFlowGrp
2040615c:    f4a42423              sw    a0,-184(s0)                            Return-Tgt, allGrp
20406160:    0040006f              j    20406164 <_dtoa_r+0x15d0>               allGrp, Branch-Instr, controlFlowGrp
	}
20406164:    0200006f              j    20406184 <_dtoa_r+0x15f0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      else
	b = pow5mult (ptr, b, b5);
20406168:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040616c:    f4842583              lw    a1,-184(s0)                            allGrp
20406170:    fc042603              lw    a2,-64(s0)                             allGrp
20406174:    00002097              auipc    ra,0x2                              allGrp
20406178:    45c080e7              jalr    1116(ra) # 204085d0 <__pow5mult>     Call-Instr, allGrp, controlFlowGrp
2040617c:    f4a42423              sw    a0,-184(s0)                            Return-Tgt, allGrp
20406180:    0040006f              j    20406184 <_dtoa_r+0x15f0>               allGrp, Branch-Instr, controlFlowGrp
    }
20406184:    0040006f              j    20406188 <_dtoa_r+0x15f4>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  S = i2b (ptr, 1);
20406188:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040618c:    00100593              li    a1,1                                   allGrp
20406190:    e2b42c23              sw    a1,-456(s0)                            allGrp
20406194:    00002097              auipc    ra,0x2                              allGrp
20406198:    f90080e7              jalr    -112(ra) # 20408124 <__i2b>          Call-Instr, allGrp, controlFlowGrp
2040619c:    f2a42a23              sw    a0,-204(s0)                            Return-Tgt, allGrp
  if (s5 > 0)
204061a0:    f7c42503              lw    a0,-132(s0)                            allGrp
204061a4:    e3842583              lw    a1,-456(s0)                            allGrp
204061a8:    02b54263              blt    a0,a1,204061cc <_dtoa_r+0x1638>       allGrp, Branch-Instr, controlFlowGrp
204061ac:    0040006f              j    204061b0 <_dtoa_r+0x161c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    S = pow5mult (ptr, S, s5);
204061b0:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204061b4:    f3442583              lw    a1,-204(s0)                            allGrp
204061b8:    f7c42603              lw    a2,-132(s0)                            allGrp
204061bc:    00002097              auipc    ra,0x2                              allGrp
204061c0:    414080e7              jalr    1044(ra) # 204085d0 <__pow5mult>     Call-Instr, allGrp, controlFlowGrp
204061c4:    f2a42a23              sw    a0,-204(s0)                            Return-Tgt, allGrp
204061c8:    0040006f              j    204061cc <_dtoa_r+0x1638>               allGrp, Branch-Instr, controlFlowGrp

  /* Check for special case that d is a normalized power of 2. */

  spec_case = 0;
204061cc:    00000513              li    a0,0                                   Branch-Tgt, allGrp
204061d0:    f6a42c23              sw    a0,-136(s0)                            allGrp
  if (mode < 2)
204061d4:    fdc42503              lw    a0,-36(s0)                             allGrp
204061d8:    00100593              li    a1,1                                   allGrp
204061dc:    06a5ca63              blt    a1,a0,20406250 <_dtoa_r+0x16bc>       allGrp, Branch-Instr, controlFlowGrp
204061e0:    0040006f              j    204061e4 <_dtoa_r+0x1650>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (!word1 (d) && !(word0 (d) & Bndry_mask)
204061e4:    f6842503              lw    a0,-152(s0)                            Branch-Tgt, allGrp
204061e8:    00000593              li    a1,0                                   allGrp
204061ec:    06b51063              bne    a0,a1,2040624c <_dtoa_r+0x16b8>       allGrp, Branch-Instr, controlFlowGrp
204061f0:    0040006f              j    204061f4 <_dtoa_r+0x1660>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204061f4:    f6c42503              lw    a0,-148(s0)                            Branch-Tgt, allGrp
204061f8:    001005b7              lui    a1,0x100                              allGrp
204061fc:    fff58593              addi    a1,a1,-1 # fffff <__stack_size+0xff7ff>allGrp
20406200:    00b57533              and    a0,a0,a1                              allGrp
20406204:    00000593              li    a1,0                                   allGrp
#ifndef Sudden_Underflow
	  && word0 (d) & Exp_mask
20406208:    04b51263              bne    a0,a1,2040624c <_dtoa_r+0x16b8>       allGrp, Branch-Instr, controlFlowGrp
2040620c:    0040006f              j    20406210 <_dtoa_r+0x167c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406210:    f6c42503              lw    a0,-148(s0)                            Branch-Tgt, allGrp
20406214:    7ff005b7              lui    a1,0x7ff00                            allGrp
20406218:    00b57533              and    a0,a0,a1                              allGrp
2040621c:    00000593              li    a1,0                                   allGrp
      if (!word1 (d) && !(word0 (d) & Bndry_mask)
20406220:    02b50663              beq    a0,a1,2040624c <_dtoa_r+0x16b8>       allGrp, Branch-Instr, controlFlowGrp
20406224:    0040006f              j    20406228 <_dtoa_r+0x1694>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
#endif
	)
	{
	  /* The special case */
	  b2 += Log2P;
20406228:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040622c:    00150513              addi    a0,a0,1                              allGrp
20406230:    fca42223              sw    a0,-60(s0)                             allGrp
	  s2 += Log2P;
20406234:    f8042503              lw    a0,-128(s0)                            allGrp
20406238:    00150513              addi    a0,a0,1                              allGrp
2040623c:    f8a42023              sw    a0,-128(s0)                            allGrp
20406240:    00100513              li    a0,1                                   allGrp
	  spec_case = 1;
20406244:    f6a42c23              sw    a0,-136(s0)                            allGrp
	}
20406248:    0040006f              j    2040624c <_dtoa_r+0x16b8>               allGrp, Branch-Instr, controlFlowGrp
    }
2040624c:    0040006f              j    20406250 <_dtoa_r+0x16bc>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
   * and for all and pass them and a shift to quorem, so it
   * can do shifts and ors to compute the numerator for q.
   */

#ifdef Pack_32
  if ((i = ((s5 ? 32 - hi0bits (S->_x[S->_wds - 1]) : 1) + s2) & 0x1f) != 0)
20406250:    f7c42503              lw    a0,-132(s0)                            Branch-Tgt, allGrp
20406254:    00000593              li    a1,0                                   allGrp
20406258:    02b50c63              beq    a0,a1,20406290 <_dtoa_r+0x16fc>       allGrp, Branch-Instr, controlFlowGrp
2040625c:    0040006f              j    20406260 <_dtoa_r+0x16cc>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406260:    f3442503              lw    a0,-204(s0)                            Branch-Tgt, allGrp
20406264:    f3442583              lw    a1,-204(s0)                            allGrp
20406268:    0105a583              lw    a1,16(a1) # 7ff00010 <__fini_array_end+0x5faed650>allGrp
2040626c:    00259593              slli    a1,a1,0x2                            allGrp
20406270:    00b50533              add    a0,a0,a1                              allGrp
20406274:    01052503              lw    a0,16(a0)                              allGrp
20406278:    00002097              auipc    ra,0x2                              allGrp
2040627c:    b7c080e7              jalr    -1156(ra) # 20407df4 <__hi0bits>     Call-Instr, allGrp, controlFlowGrp
20406280:    02000593              li    a1,32                                  Return-Tgt, allGrp
20406284:    40a58533              sub    a0,a1,a0                              allGrp
20406288:    e2a42a23              sw    a0,-460(s0)                            allGrp
2040628c:    0100006f              j    2040629c <_dtoa_r+0x1708>               allGrp, Branch-Instr, controlFlowGrp
20406290:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20406294:    e2a42a23              sw    a0,-460(s0)                            allGrp
20406298:    0040006f              j    2040629c <_dtoa_r+0x1708>               allGrp, Branch-Instr, controlFlowGrp
2040629c:    e3442503              lw    a0,-460(s0)                            Branch-Tgt, allGrp
204062a0:    f8042583              lw    a1,-128(s0)                            allGrp
204062a4:    00b50533              add    a0,a0,a1                              allGrp
204062a8:    01f57513              andi    a0,a0,31                             allGrp
204062ac:    faa42a23              sw    a0,-76(s0)                             allGrp
204062b0:    00000593              li    a1,0                                   allGrp
204062b4:    00b50e63              beq    a0,a1,204062d0 <_dtoa_r+0x173c>       allGrp, Branch-Instr, controlFlowGrp
204062b8:    0040006f              j    204062bc <_dtoa_r+0x1728>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    i = 32 - i;
204062bc:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
204062c0:    02000593              li    a1,32                                  allGrp
204062c4:    40a58533              sub    a0,a1,a0                              allGrp
204062c8:    faa42a23              sw    a0,-76(s0)                             allGrp
204062cc:    0040006f              j    204062d0 <_dtoa_r+0x173c>               allGrp, Branch-Instr, controlFlowGrp
#else
  if ((i = ((s5 ? 32 - hi0bits (S->_x[S->_wds - 1]) : 1) + s2) & 0xf) != 0)
    i = 16 - i;
#endif
  if (i > 4)
204062d0:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
204062d4:    00500593              li    a1,5                                   allGrp
204062d8:    04b54463              blt    a0,a1,20406320 <_dtoa_r+0x178c>       allGrp, Branch-Instr, controlFlowGrp
204062dc:    0040006f              j    204062e0 <_dtoa_r+0x174c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      i -= 4;
204062e0:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
204062e4:    ffc50513              addi    a0,a0,-4                             allGrp
204062e8:    faa42a23              sw    a0,-76(s0)                             allGrp
      b2 += i;
204062ec:    fb442503              lw    a0,-76(s0)                             allGrp
204062f0:    fc442583              lw    a1,-60(s0)                             allGrp
204062f4:    00a58533              add    a0,a1,a0                              allGrp
204062f8:    fca42223              sw    a0,-60(s0)                             allGrp
      m2 += i;
204062fc:    fb442503              lw    a0,-76(s0)                             allGrp
20406300:    f8842583              lw    a1,-120(s0)                            allGrp
20406304:    00a58533              add    a0,a1,a0                              allGrp
20406308:    f8a42423              sw    a0,-120(s0)                            allGrp
      s2 += i;
2040630c:    fb442503              lw    a0,-76(s0)                             allGrp
20406310:    f8042583              lw    a1,-128(s0)                            allGrp
20406314:    00a58533              add    a0,a1,a0                              allGrp
20406318:    f8a42023              sw    a0,-128(s0)                            allGrp
    }
2040631c:    0580006f              j    20406374 <_dtoa_r+0x17e0>               allGrp, Branch-Instr, controlFlowGrp
  else if (i < 4)
20406320:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
20406324:    00300593              li    a1,3                                   allGrp
20406328:    04a5c463              blt    a1,a0,20406370 <_dtoa_r+0x17dc>       allGrp, Branch-Instr, controlFlowGrp
2040632c:    0040006f              j    20406330 <_dtoa_r+0x179c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      i += 28;
20406330:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
20406334:    01c50513              addi    a0,a0,28                             allGrp
20406338:    faa42a23              sw    a0,-76(s0)                             allGrp
      b2 += i;
2040633c:    fb442503              lw    a0,-76(s0)                             allGrp
20406340:    fc442583              lw    a1,-60(s0)                             allGrp
20406344:    00a58533              add    a0,a1,a0                              allGrp
20406348:    fca42223              sw    a0,-60(s0)                             allGrp
      m2 += i;
2040634c:    fb442503              lw    a0,-76(s0)                             allGrp
20406350:    f8842583              lw    a1,-120(s0)                            allGrp
20406354:    00a58533              add    a0,a1,a0                              allGrp
20406358:    f8a42423              sw    a0,-120(s0)                            allGrp
      s2 += i;
2040635c:    fb442503              lw    a0,-76(s0)                             allGrp
20406360:    f8042583              lw    a1,-128(s0)                            allGrp
20406364:    00a58533              add    a0,a1,a0                              allGrp
20406368:    f8a42023              sw    a0,-128(s0)                            allGrp
    }
2040636c:    0040006f              j    20406370 <_dtoa_r+0x17dc>               allGrp, Branch-Instr, controlFlowGrp
20406370:    0040006f              j    20406374 <_dtoa_r+0x17e0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  if (b2 > 0)
20406374:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
20406378:    00100593              li    a1,1                                   allGrp
2040637c:    02b54263              blt    a0,a1,204063a0 <_dtoa_r+0x180c>       allGrp, Branch-Instr, controlFlowGrp
20406380:    0040006f              j    20406384 <_dtoa_r+0x17f0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    b = lshift (ptr, b, b2);
20406384:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20406388:    f4842583              lw    a1,-184(s0)                            allGrp
2040638c:    fc442603              lw    a2,-60(s0)                             allGrp
20406390:    00002097              auipc    ra,0x2                              allGrp
20406394:    40c080e7              jalr    1036(ra) # 2040879c <__lshift>       Call-Instr, allGrp, controlFlowGrp
20406398:    f4a42423              sw    a0,-184(s0)                            Return-Tgt, allGrp
2040639c:    0040006f              j    204063a0 <_dtoa_r+0x180c>               allGrp, Branch-Instr, controlFlowGrp
  if (s2 > 0)
204063a0:    f8042503              lw    a0,-128(s0)                            Branch-Tgt, allGrp
204063a4:    00100593              li    a1,1                                   allGrp
204063a8:    02b54263              blt    a0,a1,204063cc <_dtoa_r+0x1838>       allGrp, Branch-Instr, controlFlowGrp
204063ac:    0040006f              j    204063b0 <_dtoa_r+0x181c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    S = lshift (ptr, S, s2);
204063b0:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204063b4:    f3442583              lw    a1,-204(s0)                            allGrp
204063b8:    f8042603              lw    a2,-128(s0)                            allGrp
204063bc:    00002097              auipc    ra,0x2                              allGrp
204063c0:    3e0080e7              jalr    992(ra) # 2040879c <__lshift>        Call-Instr, allGrp, controlFlowGrp
204063c4:    f2a42a23              sw    a0,-204(s0)                            Return-Tgt, allGrp
204063c8:    0040006f              j    204063cc <_dtoa_r+0x1838>               allGrp, Branch-Instr, controlFlowGrp
  if (k_check)
204063cc:    f9042503              lw    a0,-112(s0)                            Branch-Tgt, allGrp
204063d0:    00000593              li    a1,0                                   allGrp
204063d4:    08b50863              beq    a0,a1,20406464 <_dtoa_r+0x18d0>       allGrp, Branch-Instr, controlFlowGrp
204063d8:    0040006f              j    204063dc <_dtoa_r+0x1848>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (cmp (b, S) < 0)
204063dc:    f4842503              lw    a0,-184(s0)                            Branch-Tgt, allGrp
204063e0:    f3442583              lw    a1,-204(s0)                            allGrp
204063e4:    00002097              auipc    ra,0x2                              allGrp
204063e8:    614080e7              jalr    1556(ra) # 204089f8 <__mcmp>         Call-Instr, allGrp, controlFlowGrp
204063ec:    fff00593              li    a1,-1                                  Return-Tgt, allGrp
204063f0:    06a5c863              blt    a1,a0,20406460 <_dtoa_r+0x18cc>       allGrp, Branch-Instr, controlFlowGrp
204063f4:    0040006f              j    204063f8 <_dtoa_r+0x1864>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  k--;
204063f8:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
204063fc:    fff50513              addi    a0,a0,-1                             allGrp
20406400:    f8a42c23              sw    a0,-104(s0)                            allGrp
	  b = multadd (ptr, b, 10, 0);	/* we botched the k estimate */
20406404:    fec42503              lw    a0,-20(s0)                             allGrp
20406408:    f4842583              lw    a1,-184(s0)                            allGrp
2040640c:    00a00613              li    a2,10                                  allGrp
20406410:    00000693              li    a3,0                                   allGrp
20406414:    e2d42823              sw    a3,-464(s0)                            allGrp
20406418:    00001097              auipc    ra,0x1                              allGrp
2040641c:    640080e7              jalr    1600(ra) # 20407a58 <__multadd>      Call-Instr, allGrp, controlFlowGrp
20406420:    f4a42423              sw    a0,-184(s0)                            Return-Tgt, allGrp
	  if (leftright)
20406424:    f8c42503              lw    a0,-116(s0)                            allGrp
20406428:    e3042583              lw    a1,-464(s0)                            allGrp
2040642c:    02b50463              beq    a0,a1,20406454 <_dtoa_r+0x18c0>       allGrp, Branch-Instr, controlFlowGrp
20406430:    0040006f              j    20406434 <_dtoa_r+0x18a0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    mhi = multadd (ptr, mhi, 10, 0);
20406434:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20406438:    f3842583              lw    a1,-200(s0)                            allGrp
2040643c:    00a00613              li    a2,10                                  allGrp
20406440:    00000693              li    a3,0                                   allGrp
20406444:    00001097              auipc    ra,0x1                              allGrp
20406448:    614080e7              jalr    1556(ra) # 20407a58 <__multadd>      Call-Instr, allGrp, controlFlowGrp
2040644c:    f2a42c23              sw    a0,-200(s0)                            Return-Tgt, allGrp
20406450:    0040006f              j    20406454 <_dtoa_r+0x18c0>               allGrp, Branch-Instr, controlFlowGrp
	  ilim = ilim1;
20406454:    fa442503              lw    a0,-92(s0)                             Branch-Tgt, allGrp
20406458:    faa42623              sw    a0,-84(s0)                             allGrp
	}
2040645c:    0040006f              j    20406460 <_dtoa_r+0x18cc>               allGrp, Branch-Instr, controlFlowGrp
    }
20406460:    0040006f              j    20406464 <_dtoa_r+0x18d0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  if (ilim <= 0 && mode > 2)
20406464:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
20406468:    00000593              li    a1,0                                   allGrp
2040646c:    0ca5c063              blt    a1,a0,2040652c <_dtoa_r+0x1998>       allGrp, Branch-Instr, controlFlowGrp
20406470:    0040006f              j    20406474 <_dtoa_r+0x18e0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406474:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20406478:    00300593              li    a1,3                                   allGrp
2040647c:    0ab54863              blt    a0,a1,2040652c <_dtoa_r+0x1998>       allGrp, Branch-Instr, controlFlowGrp
20406480:    0040006f              j    20406484 <_dtoa_r+0x18f0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (ilim < 0 || cmp (b, S = multadd (ptr, S, 5, 0)) <= 0)
20406484:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
20406488:    00000593              li    a1,0                                   allGrp
2040648c:    06b54263              blt    a0,a1,204064f0 <_dtoa_r+0x195c>       allGrp, Branch-Instr, controlFlowGrp
20406490:    0040006f              j    20406494 <_dtoa_r+0x1900>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406494:    f4842503              lw    a0,-184(s0)                            Branch-Tgt, allGrp
20406498:    fec42583              lw    a1,-20(s0)                             allGrp
2040649c:    f3442603              lw    a2,-204(s0)                            allGrp
204064a0:    00500693              li    a3,5                                   allGrp
204064a4:    00000713              li    a4,0                                   allGrp
204064a8:    e2a42623              sw    a0,-468(s0)                            allGrp
204064ac:    00058513              mv    a0,a1                                  allGrp
204064b0:    00060593              mv    a1,a2                                  allGrp
204064b4:    00068613              mv    a2,a3                                  allGrp
204064b8:    00070693              mv    a3,a4                                  allGrp
204064bc:    e2e42423              sw    a4,-472(s0)                            allGrp
204064c0:    00001097              auipc    ra,0x1                              allGrp
204064c4:    598080e7              jalr    1432(ra) # 20407a58 <__multadd>      Call-Instr, allGrp, controlFlowGrp
204064c8:    f2a42a23              sw    a0,-204(s0)                            Return-Tgt, allGrp
204064cc:    e2c42583              lw    a1,-468(s0)                            allGrp
204064d0:    e2a42223              sw    a0,-476(s0)                            allGrp
204064d4:    00058513              mv    a0,a1                                  allGrp
204064d8:    e2442583              lw    a1,-476(s0)                            allGrp
204064dc:    00002097              auipc    ra,0x2                              allGrp
204064e0:    51c080e7              jalr    1308(ra) # 204089f8 <__mcmp>         Call-Instr, allGrp, controlFlowGrp
204064e4:    e2842583              lw    a1,-472(s0)                            Return-Tgt, allGrp
204064e8:    00a5ce63              blt    a1,a0,20406504 <_dtoa_r+0x1970>       allGrp, Branch-Instr, controlFlowGrp
204064ec:    0040006f              j    204064f0 <_dtoa_r+0x195c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
204064f0:    0040006f              j    204064f4 <_dtoa_r+0x1960>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  /* no digits, fcvt style */
	no_digits:
	  k = -1 - ndigits;
204064f4:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
204064f8:    fff54513              not    a0,a0                                 allGrp
204064fc:    f8a42c23              sw    a0,-104(s0)                            allGrp
	  goto ret;
20406500:    5a80006f              j    20406aa8 <_dtoa_r+0x1f14>               allGrp, Branch-Instr, controlFlowGrp
      if (ilim < 0 || cmp (b, S = multadd (ptr, S, 5, 0)) <= 0)
20406504:    0040006f              j    20406508 <_dtoa_r+0x1974>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	}
    one_digit:
      *s++ = '1';
20406508:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
2040650c:    00150593              addi    a1,a0,1                              allGrp
20406510:    f2b42223              sw    a1,-220(s0)                            allGrp
20406514:    03100593              li    a1,49                                  allGrp
20406518:    00b50023              sb    a1,0(a0)                               allGrp
      k++;
2040651c:    f9842503              lw    a0,-104(s0)                            allGrp
20406520:    00150513              addi    a0,a0,1                              allGrp
20406524:    f8a42c23              sw    a0,-104(s0)                            allGrp
      goto ret;
20406528:    5800006f              j    20406aa8 <_dtoa_r+0x1f14>               allGrp, Branch-Instr, controlFlowGrp
    }
  if (leftright)
2040652c:    f8c42503              lw    a0,-116(s0)                            Branch-Tgt, allGrp
20406530:    00000593              li    a1,0                                   allGrp
20406534:    3eb50463              beq    a0,a1,2040691c <_dtoa_r+0x1d88>       allGrp, Branch-Instr, controlFlowGrp
20406538:    0040006f              j    2040653c <_dtoa_r+0x19a8>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (m2 > 0)
2040653c:    f8842503              lw    a0,-120(s0)                            Branch-Tgt, allGrp
20406540:    00100593              li    a1,1                                   allGrp
20406544:    02b54263              blt    a0,a1,20406568 <_dtoa_r+0x19d4>       allGrp, Branch-Instr, controlFlowGrp
20406548:    0040006f              j    2040654c <_dtoa_r+0x19b8>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	mhi = lshift (ptr, mhi, m2);
2040654c:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20406550:    f3842583              lw    a1,-200(s0)                            allGrp
20406554:    f8842603              lw    a2,-120(s0)                            allGrp
20406558:    00002097              auipc    ra,0x2                              allGrp
2040655c:    244080e7              jalr    580(ra) # 2040879c <__lshift>        Call-Instr, allGrp, controlFlowGrp
20406560:    f2a42c23              sw    a0,-200(s0)                            Return-Tgt, allGrp
20406564:    0040006f              j    20406568 <_dtoa_r+0x19d4>               allGrp, Branch-Instr, controlFlowGrp

      /* Compute mlo -- check for special case
       * that d is a normalized power of 2.
       */

      mlo = mhi;
20406568:    f3842503              lw    a0,-200(s0)                            Branch-Tgt, allGrp
2040656c:    f2a42e23              sw    a0,-196(s0)                            allGrp
      if (spec_case)
20406570:    f7842503              lw    a0,-136(s0)                            allGrp
20406574:    00000593              li    a1,0                                   allGrp
20406578:    06b50a63              beq    a0,a1,204065ec <_dtoa_r+0x1a58>       allGrp, Branch-Instr, controlFlowGrp
2040657c:    0040006f              j    20406580 <_dtoa_r+0x19ec>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  mhi = Balloc (ptr, mhi->_k);
20406580:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20406584:    f3842583              lw    a1,-200(s0)                            allGrp
20406588:    0045a583              lw    a1,4(a1)                               allGrp
2040658c:    00001097              auipc    ra,0x1                              allGrp
20406590:    2cc080e7              jalr    716(ra) # 20407858 <_Balloc>         Call-Instr, allGrp, controlFlowGrp
20406594:    f2a42c23              sw    a0,-200(s0)                            Return-Tgt, allGrp
	  Bcopy (mhi, mlo);
20406598:    f3842503              lw    a0,-200(s0)                            allGrp
2040659c:    00c50513              addi    a0,a0,12                             allGrp
204065a0:    f3c42583              lw    a1,-196(s0)                            allGrp
204065a4:    00c58593              addi    a1,a1,12                             allGrp
204065a8:    f3c42603              lw    a2,-196(s0)                            allGrp
204065ac:    01062603              lw    a2,16(a2)                              allGrp
204065b0:    00261613              slli    a2,a2,0x2                            allGrp
204065b4:    00860613              addi    a2,a2,8                              allGrp
204065b8:    ffffb097              auipc    ra,0xffffb                          allGrp
204065bc:    bb4080e7              jalr    -1100(ra) # 2040116c <memcpy>        Call-Instr, allGrp, controlFlowGrp
	  mhi = lshift (ptr, mhi, Log2P);
204065c0:    fec42583              lw    a1,-20(s0)                             Return-Tgt, allGrp
204065c4:    f3842603              lw    a2,-200(s0)                            allGrp
204065c8:    00100693              li    a3,1                                   allGrp
204065cc:    e2a42023              sw    a0,-480(s0)                            allGrp
204065d0:    00058513              mv    a0,a1                                  allGrp
204065d4:    00060593              mv    a1,a2                                  allGrp
204065d8:    00068613              mv    a2,a3                                  allGrp
204065dc:    00002097              auipc    ra,0x2                              allGrp
204065e0:    1c0080e7              jalr    448(ra) # 2040879c <__lshift>        Call-Instr, allGrp, controlFlowGrp
204065e4:    f2a42c23              sw    a0,-200(s0)                            Return-Tgt, allGrp
	}
204065e8:    0040006f              j    204065ec <_dtoa_r+0x1a58>               allGrp, Branch-Instr, controlFlowGrp

      for (i = 1;; i++)
204065ec:    00100513              li    a0,1                                   Branch-Tgt, allGrp
204065f0:    faa42a23              sw    a0,-76(s0)                             allGrp
204065f4:    0040006f              j    204065f8 <_dtoa_r+0x1a64>               allGrp, Branch-Instr, controlFlowGrp
	{
	  dig = quorem (b, S) + '0';
204065f8:    f4842503              lw    a0,-184(s0)                            Branch-Tgt, allGrp
204065fc:    f3442583              lw    a1,-204(s0)                            allGrp
20406600:    00000097              auipc    ra,0x0                              allGrp
20406604:    58c080e7              jalr    1420(ra) # 20406b8c <quorem>         Call-Instr, allGrp, controlFlowGrp
20406608:    03050513              addi    a0,a0,48                             Return-Tgt, allGrp
2040660c:    faa42c23              sw    a0,-72(s0)                             allGrp
	  /* Do we yet have the shortest decimal string
	   * that will round to d?
	   */
	  j = cmp (b, mlo);
20406610:    f4842503              lw    a0,-184(s0)                            allGrp
20406614:    f3c42583              lw    a1,-196(s0)                            allGrp
20406618:    00002097              auipc    ra,0x2                              allGrp
2040661c:    3e0080e7              jalr    992(ra) # 204089f8 <__mcmp>          Call-Instr, allGrp, controlFlowGrp
20406620:    faa42023              sw    a0,-96(s0)                             Return-Tgt, allGrp
	  delta = diff (ptr, S, mhi);
20406624:    fec42503              lw    a0,-20(s0)                             allGrp
20406628:    f3442583              lw    a1,-204(s0)                            allGrp
2040662c:    f3842603              lw    a2,-200(s0)                            allGrp
20406630:    00002097              auipc    ra,0x2                              allGrp
20406634:    514080e7              jalr    1300(ra) # 20408b44 <__mdiff>        Call-Instr, allGrp, controlFlowGrp
20406638:    f4a42023              sw    a0,-192(s0)                            Return-Tgt, allGrp
	  j1 = delta->_sign ? 1 : cmp (b, delta);
2040663c:    f4042503              lw    a0,-192(s0)                            allGrp
20406640:    00c52503              lw    a0,12(a0)                              allGrp
20406644:    00000593              li    a1,0                                   allGrp
20406648:    00b50a63              beq    a0,a1,2040665c <_dtoa_r+0x1ac8>       allGrp, Branch-Instr, controlFlowGrp
2040664c:    0040006f              j    20406650 <_dtoa_r+0x1abc>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406650:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20406654:    e0a42e23              sw    a0,-484(s0)                            allGrp
20406658:    01c0006f              j    20406674 <_dtoa_r+0x1ae0>               allGrp, Branch-Instr, controlFlowGrp
2040665c:    f4842503              lw    a0,-184(s0)                            Branch-Tgt, allGrp
20406660:    f4042583              lw    a1,-192(s0)                            allGrp
20406664:    00002097              auipc    ra,0x2                              allGrp
20406668:    394080e7              jalr    916(ra) # 204089f8 <__mcmp>          Call-Instr, allGrp, controlFlowGrp
2040666c:    e0a42e23              sw    a0,-484(s0)                            Return-Tgt, allGrp
20406670:    0040006f              j    20406674 <_dtoa_r+0x1ae0>               allGrp, Branch-Instr, controlFlowGrp
20406674:    e1c42503              lw    a0,-484(s0)                            Branch-Tgt, allGrp
20406678:    f8a42e23              sw    a0,-100(s0)                            allGrp
	  Bfree (ptr, delta);
2040667c:    fec42503              lw    a0,-20(s0)                             allGrp
20406680:    f4042583              lw    a1,-192(s0)                            allGrp
20406684:    00001097              auipc    ra,0x1                              allGrp
20406688:    33c080e7              jalr    828(ra) # 204079c0 <_Bfree>          Call-Instr, allGrp, controlFlowGrp
#ifndef ROUND_BIASED
	  if (j1 == 0 && !mode && !(word1 (d) & 1))
2040668c:    f9c42503              lw    a0,-100(s0)                            Return-Tgt, allGrp
20406690:    00000593              li    a1,0                                   allGrp
20406694:    06b51a63              bne    a0,a1,20406708 <_dtoa_r+0x1b74>       allGrp, Branch-Instr, controlFlowGrp
20406698:    0040006f              j    2040669c <_dtoa_r+0x1b08>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040669c:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
204066a0:    00000593              li    a1,0                                   allGrp
204066a4:    06b51263              bne    a0,a1,20406708 <_dtoa_r+0x1b74>       allGrp, Branch-Instr, controlFlowGrp
204066a8:    0040006f              j    204066ac <_dtoa_r+0x1b18>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204066ac:    f6842503              lw    a0,-152(s0)                            Branch-Tgt, allGrp
204066b0:    00157513              andi    a0,a0,1                              allGrp
204066b4:    04051a63              bnez    a0,20406708 <_dtoa_r+0x1b74>         allGrp, Branch-Instr, controlFlowGrp
204066b8:    0040006f              j    204066bc <_dtoa_r+0x1b28>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    {
	      if (dig == '9')
204066bc:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
204066c0:    03900593              li    a1,57                                  allGrp
204066c4:    00b51663              bne    a0,a1,204066d0 <_dtoa_r+0x1b3c>       allGrp, Branch-Instr, controlFlowGrp
204066c8:    0040006f              j    204066cc <_dtoa_r+0x1b38>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		goto round_9_up;
204066cc:    1480006f              j    20406814 <_dtoa_r+0x1c80>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	      if (j > 0)
204066d0:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
204066d4:    00100593              li    a1,1                                   allGrp
204066d8:    00b54c63              blt    a0,a1,204066f0 <_dtoa_r+0x1b5c>       allGrp, Branch-Instr, controlFlowGrp
204066dc:    0040006f              j    204066e0 <_dtoa_r+0x1b4c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		dig++;
204066e0:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
204066e4:    00150513              addi    a0,a0,1                              allGrp
204066e8:    faa42c23              sw    a0,-72(s0)                             allGrp
204066ec:    0040006f              j    204066f0 <_dtoa_r+0x1b5c>               allGrp, Branch-Instr, controlFlowGrp
	      *s++ = dig;
204066f0:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
204066f4:    f2442583              lw    a1,-220(s0)                            allGrp
204066f8:    00158613              addi    a2,a1,1                              allGrp
204066fc:    f2c42223              sw    a2,-220(s0)                            allGrp
20406700:    00a58023              sb    a0,0(a1)                               allGrp
	      goto ret;
20406704:    3a40006f              j    20406aa8 <_dtoa_r+0x1f14>               allGrp, Branch-Instr, controlFlowGrp
	    }
#endif
         if ((j < 0) || ((j == 0) && !mode
20406708:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
2040670c:    00000593              li    a1,0                                   allGrp
20406710:    02b54c63              blt    a0,a1,20406748 <_dtoa_r+0x1bb4>       allGrp, Branch-Instr, controlFlowGrp
20406714:    0040006f              j    20406718 <_dtoa_r+0x1b84>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406718:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
2040671c:    00000593              li    a1,0                                   allGrp
20406720:    0cb51863              bne    a0,a1,204067f0 <_dtoa_r+0x1c5c>       allGrp, Branch-Instr, controlFlowGrp
20406724:    0040006f              j    20406728 <_dtoa_r+0x1b94>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406728:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040672c:    00000593              li    a1,0                                   allGrp
#ifndef ROUND_BIASED
	      && !(word1 (d) & 1)
20406730:    0cb51063              bne    a0,a1,204067f0 <_dtoa_r+0x1c5c>       allGrp, Branch-Instr, controlFlowGrp
20406734:    0040006f              j    20406738 <_dtoa_r+0x1ba4>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406738:    f6842503              lw    a0,-152(s0)                            Branch-Tgt, allGrp
2040673c:    00157513              andi    a0,a0,1                              allGrp
         if ((j < 0) || ((j == 0) && !mode
20406740:    0a051863              bnez    a0,204067f0 <_dtoa_r+0x1c5c>         allGrp, Branch-Instr, controlFlowGrp
20406744:    0040006f              j    20406748 <_dtoa_r+0x1bb4>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
#endif
           ))
	    {
	      if (j1 > 0)
20406748:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
2040674c:    00100593              li    a1,1                                   allGrp
20406750:    08b54463              blt    a0,a1,204067d8 <_dtoa_r+0x1c44>       allGrp, Branch-Instr, controlFlowGrp
20406754:    0040006f              j    20406758 <_dtoa_r+0x1bc4>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		{
		  b = lshift (ptr, b, 1);
20406758:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040675c:    f4842583              lw    a1,-184(s0)                            allGrp
20406760:    00100613              li    a2,1                                   allGrp
20406764:    00002097              auipc    ra,0x2                              allGrp
20406768:    038080e7              jalr    56(ra) # 2040879c <__lshift>         Call-Instr, allGrp, controlFlowGrp
2040676c:    f4a42423              sw    a0,-184(s0)                            Return-Tgt, allGrp
		  j1 = cmp (b, S);
20406770:    f4842503              lw    a0,-184(s0)                            allGrp
20406774:    f3442583              lw    a1,-204(s0)                            allGrp
20406778:    00002097              auipc    ra,0x2                              allGrp
2040677c:    280080e7              jalr    640(ra) # 204089f8 <__mcmp>          Call-Instr, allGrp, controlFlowGrp
20406780:    f8a42e23              sw    a0,-100(s0)                            Return-Tgt, allGrp
                 if (((j1 > 0) || ((j1 == 0) && (dig & 1)))
20406784:    f9c42503              lw    a0,-100(s0)                            allGrp
20406788:    00000593              li    a1,0                                   allGrp
2040678c:    02a5c663              blt    a1,a0,204067b8 <_dtoa_r+0x1c24>       allGrp, Branch-Instr, controlFlowGrp
20406790:    0040006f              j    20406794 <_dtoa_r+0x1c00>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406794:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
20406798:    00000593              li    a1,0                                   allGrp
2040679c:    02b51c63              bne    a0,a1,204067d4 <_dtoa_r+0x1c40>       allGrp, Branch-Instr, controlFlowGrp
204067a0:    0040006f              j    204067a4 <_dtoa_r+0x1c10>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204067a4:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
204067a8:    00157513              andi    a0,a0,1                              allGrp
204067ac:    00000593              li    a1,0                                   allGrp
		      && dig++ == '9')
204067b0:    02b50263              beq    a0,a1,204067d4 <_dtoa_r+0x1c40>       allGrp, Branch-Instr, controlFlowGrp
204067b4:    0040006f              j    204067b8 <_dtoa_r+0x1c24>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204067b8:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
204067bc:    00150593              addi    a1,a0,1                              allGrp
204067c0:    fab42c23              sw    a1,-72(s0)                             allGrp
204067c4:    03900593              li    a1,57                                  allGrp
                 if (((j1 > 0) || ((j1 == 0) && (dig & 1)))
204067c8:    00b51663              bne    a0,a1,204067d4 <_dtoa_r+0x1c40>       allGrp, Branch-Instr, controlFlowGrp
204067cc:    0040006f              j    204067d0 <_dtoa_r+0x1c3c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		    goto round_9_up;
204067d0:    0440006f              j    20406814 <_dtoa_r+0x1c80>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		}
204067d4:    0040006f              j    204067d8 <_dtoa_r+0x1c44>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	      *s++ = dig;
204067d8:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
204067dc:    f2442583              lw    a1,-220(s0)                            allGrp
204067e0:    00158613              addi    a2,a1,1                              allGrp
204067e4:    f2c42223              sw    a2,-220(s0)                            allGrp
204067e8:    00a58023              sb    a0,0(a1)                               allGrp
	      goto ret;
204067ec:    2bc0006f              j    20406aa8 <_dtoa_r+0x1f14>               allGrp, Branch-Instr, controlFlowGrp
	    }
	  if (j1 > 0)
204067f0:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
204067f4:    00100593              li    a1,1                                   allGrp
204067f8:    04b54863              blt    a0,a1,20406848 <_dtoa_r+0x1cb4>       allGrp, Branch-Instr, controlFlowGrp
204067fc:    0040006f              j    20406800 <_dtoa_r+0x1c6c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    {
	      if (dig == '9')
20406800:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
20406804:    03900593              li    a1,57                                  allGrp
20406808:    02b51263              bne    a0,a1,2040682c <_dtoa_r+0x1c98>       allGrp, Branch-Instr, controlFlowGrp
2040680c:    0040006f              j    20406810 <_dtoa_r+0x1c7c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		{		/* possible if i == 1 */
20406810:    0040006f              j    20406814 <_dtoa_r+0x1c80>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		round_9_up:
		  *s++ = '9';
20406814:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20406818:    00150593              addi    a1,a0,1                              allGrp
2040681c:    f2b42223              sw    a1,-220(s0)                            allGrp
20406820:    03900593              li    a1,57                                  allGrp
20406824:    00b50023              sb    a1,0(a0)                               allGrp
		  goto roundoff;
20406828:    1d40006f              j    204069fc <_dtoa_r+0x1e68>               allGrp, Branch-Instr, controlFlowGrp
		}
	      *s++ = dig + 1;
2040682c:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
20406830:    00150513              addi    a0,a0,1                              allGrp
20406834:    f2442583              lw    a1,-220(s0)                            allGrp
20406838:    00158613              addi    a2,a1,1                              allGrp
2040683c:    f2c42223              sw    a2,-220(s0)                            allGrp
20406840:    00a58023              sb    a0,0(a1)                               allGrp
	      goto ret;
20406844:    2640006f              j    20406aa8 <_dtoa_r+0x1f14>               allGrp, Branch-Instr, controlFlowGrp
	    }
	  *s++ = dig;
20406848:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040684c:    f2442583              lw    a1,-220(s0)                            allGrp
20406850:    00158613              addi    a2,a1,1                              allGrp
20406854:    f2c42223              sw    a2,-220(s0)                            allGrp
20406858:    00a58023              sb    a0,0(a1)                               allGrp
	  if (i == ilim)
2040685c:    fb442503              lw    a0,-76(s0)                             allGrp
20406860:    fac42583              lw    a1,-84(s0)                             allGrp
20406864:    00b51663              bne    a0,a1,20406870 <_dtoa_r+0x1cdc>       allGrp, Branch-Instr, controlFlowGrp
20406868:    0040006f              j    2040686c <_dtoa_r+0x1cd8>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    break;
2040686c:    0ac0006f              j    20406918 <_dtoa_r+0x1d84>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  b = multadd (ptr, b, 10, 0);
20406870:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20406874:    f4842583              lw    a1,-184(s0)                            allGrp
20406878:    00a00613              li    a2,10                                  allGrp
2040687c:    00000693              li    a3,0                                   allGrp
20406880:    00001097              auipc    ra,0x1                              allGrp
20406884:    1d8080e7              jalr    472(ra) # 20407a58 <__multadd>       Call-Instr, allGrp, controlFlowGrp
20406888:    f4a42423              sw    a0,-184(s0)                            Return-Tgt, allGrp
	  if (mlo == mhi)
2040688c:    f3c42503              lw    a0,-196(s0)                            allGrp
20406890:    f3842583              lw    a1,-200(s0)                            allGrp
20406894:    02b51663              bne    a0,a1,204068c0 <_dtoa_r+0x1d2c>       allGrp, Branch-Instr, controlFlowGrp
20406898:    0040006f              j    2040689c <_dtoa_r+0x1d08>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    mlo = mhi = multadd (ptr, mhi, 10, 0);
2040689c:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204068a0:    f3842583              lw    a1,-200(s0)                            allGrp
204068a4:    00a00613              li    a2,10                                  allGrp
204068a8:    00000693              li    a3,0                                   allGrp
204068ac:    00001097              auipc    ra,0x1                              allGrp
204068b0:    1ac080e7              jalr    428(ra) # 20407a58 <__multadd>       Call-Instr, allGrp, controlFlowGrp
204068b4:    f2a42c23              sw    a0,-200(s0)                            Return-Tgt, allGrp
204068b8:    f2a42e23              sw    a0,-196(s0)                            allGrp
204068bc:    0480006f              j    20406904 <_dtoa_r+0x1d70>               allGrp, Branch-Instr, controlFlowGrp
	  else
	    {
	      mlo = multadd (ptr, mlo, 10, 0);
204068c0:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204068c4:    f3c42583              lw    a1,-196(s0)                            allGrp
204068c8:    00a00613              li    a2,10                                  allGrp
204068cc:    00000693              li    a3,0                                   allGrp
204068d0:    e0c42c23              sw    a2,-488(s0)                            allGrp
204068d4:    e0d42a23              sw    a3,-492(s0)                            allGrp
204068d8:    00001097              auipc    ra,0x1                              allGrp
204068dc:    180080e7              jalr    384(ra) # 20407a58 <__multadd>       Call-Instr, allGrp, controlFlowGrp
204068e0:    f2a42e23              sw    a0,-196(s0)                            Return-Tgt, allGrp
	      mhi = multadd (ptr, mhi, 10, 0);
204068e4:    fec42503              lw    a0,-20(s0)                             allGrp
204068e8:    f3842583              lw    a1,-200(s0)                            allGrp
204068ec:    e1842603              lw    a2,-488(s0)                            allGrp
204068f0:    e1442683              lw    a3,-492(s0)                            allGrp
204068f4:    00001097              auipc    ra,0x1                              allGrp
204068f8:    164080e7              jalr    356(ra) # 20407a58 <__multadd>       Call-Instr, allGrp, controlFlowGrp
204068fc:    f2a42c23              sw    a0,-200(s0)                            Return-Tgt, allGrp
20406900:    0040006f              j    20406904 <_dtoa_r+0x1d70>               allGrp, Branch-Instr, controlFlowGrp
	    }
	}
20406904:    0040006f              j    20406908 <_dtoa_r+0x1d74>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      for (i = 1;; i++)
20406908:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
2040690c:    00150513              addi    a0,a0,1                              allGrp
20406910:    faa42a23              sw    a0,-76(s0)                             allGrp
20406914:    ce5ff06f              j    204065f8 <_dtoa_r+0x1a64>               allGrp, Branch-Instr, controlFlowGrp
    }
20406918:    0800006f              j    20406998 <_dtoa_r+0x1e04>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  else
    for (i = 1;; i++)
2040691c:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20406920:    faa42a23              sw    a0,-76(s0)                             allGrp
20406924:    0040006f              j    20406928 <_dtoa_r+0x1d94>               allGrp, Branch-Instr, controlFlowGrp
      {
	*s++ = dig = quorem (b, S) + '0';
20406928:    f4842503              lw    a0,-184(s0)                            Branch-Tgt, allGrp
2040692c:    f3442583              lw    a1,-204(s0)                            allGrp
20406930:    00000097              auipc    ra,0x0                              allGrp
20406934:    25c080e7              jalr    604(ra) # 20406b8c <quorem>          Call-Instr, allGrp, controlFlowGrp
20406938:    03050513              addi    a0,a0,48                             Return-Tgt, allGrp
2040693c:    faa42c23              sw    a0,-72(s0)                             allGrp
20406940:    f2442583              lw    a1,-220(s0)                            allGrp
20406944:    00158613              addi    a2,a1,1                              allGrp
20406948:    f2c42223              sw    a2,-220(s0)                            allGrp
2040694c:    00a58023              sb    a0,0(a1)                               allGrp
	if (i >= ilim)
20406950:    fb442503              lw    a0,-76(s0)                             allGrp
20406954:    fac42583              lw    a1,-84(s0)                             allGrp
20406958:    00b54663              blt    a0,a1,20406964 <_dtoa_r+0x1dd0>       allGrp, Branch-Instr, controlFlowGrp
2040695c:    0040006f              j    20406960 <_dtoa_r+0x1dcc>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  break;
20406960:    0340006f              j    20406994 <_dtoa_r+0x1e00>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	b = multadd (ptr, b, 10, 0);
20406964:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20406968:    f4842583              lw    a1,-184(s0)                            allGrp
2040696c:    00a00613              li    a2,10                                  allGrp
20406970:    00000693              li    a3,0                                   allGrp
20406974:    00001097              auipc    ra,0x1                              allGrp
20406978:    0e4080e7              jalr    228(ra) # 20407a58 <__multadd>       Call-Instr, allGrp, controlFlowGrp
2040697c:    f4a42423              sw    a0,-184(s0)                            Return-Tgt, allGrp
      }
20406980:    0040006f              j    20406984 <_dtoa_r+0x1df0>               allGrp, Branch-Instr, controlFlowGrp
    for (i = 1;; i++)
20406984:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
20406988:    00150513              addi    a0,a0,1                              allGrp
2040698c:    faa42a23              sw    a0,-76(s0)                             allGrp
20406990:    f99ff06f              j    20406928 <_dtoa_r+0x1d94>               allGrp, Branch-Instr, controlFlowGrp
20406994:    0040006f              j    20406998 <_dtoa_r+0x1e04>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

  /* Round off last digit */

  b = lshift (ptr, b, 1);
20406998:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040699c:    f4842583              lw    a1,-184(s0)                            allGrp
204069a0:    00100613              li    a2,1                                   allGrp
204069a4:    00002097              auipc    ra,0x2                              allGrp
204069a8:    df8080e7              jalr    -520(ra) # 2040879c <__lshift>       Call-Instr, allGrp, controlFlowGrp
204069ac:    f4a42423              sw    a0,-184(s0)                            Return-Tgt, allGrp
  j = cmp (b, S);
204069b0:    f4842503              lw    a0,-184(s0)                            allGrp
204069b4:    f3442583              lw    a1,-204(s0)                            allGrp
204069b8:    00002097              auipc    ra,0x2                              allGrp
204069bc:    040080e7              jalr    64(ra) # 204089f8 <__mcmp>           Call-Instr, allGrp, controlFlowGrp
204069c0:    faa42023              sw    a0,-96(s0)                             Return-Tgt, allGrp
  if ((j > 0) || ((j == 0) && (dig & 1)))
204069c4:    fa042503              lw    a0,-96(s0)                             allGrp
204069c8:    00000593              li    a1,0                                   allGrp
204069cc:    02a5c663              blt    a1,a0,204069f8 <_dtoa_r+0x1e64>       allGrp, Branch-Instr, controlFlowGrp
204069d0:    0040006f              j    204069d4 <_dtoa_r+0x1e40>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204069d4:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
204069d8:    00000593              li    a1,0                                   allGrp
204069dc:    08b51a63              bne    a0,a1,20406a70 <_dtoa_r+0x1edc>       allGrp, Branch-Instr, controlFlowGrp
204069e0:    0040006f              j    204069e4 <_dtoa_r+0x1e50>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204069e4:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
204069e8:    00157513              andi    a0,a0,1                              allGrp
204069ec:    00000593              li    a1,0                                   allGrp
204069f0:    08b50063              beq    a0,a1,20406a70 <_dtoa_r+0x1edc>       allGrp, Branch-Instr, controlFlowGrp
204069f4:    0040006f              j    204069f8 <_dtoa_r+0x1e64>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
204069f8:    0040006f              j    204069fc <_dtoa_r+0x1e68>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    roundoff:
      while (*--s == '9')
204069fc:    0040006f              j    20406a00 <_dtoa_r+0x1e6c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406a00:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20406a04:    fff50593              addi    a1,a0,-1                             allGrp
20406a08:    f2b42223              sw    a1,-220(s0)                            allGrp
20406a0c:    fff54503              lbu    a0,-1(a0)                             allGrp
20406a10:    03900593              li    a1,57                                  allGrp
20406a14:    04b51063              bne    a0,a1,20406a54 <_dtoa_r+0x1ec0>       allGrp, Branch-Instr, controlFlowGrp
20406a18:    0040006f              j    20406a1c <_dtoa_r+0x1e88>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	if (s == s0)
20406a1c:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20406a20:    f2042583              lw    a1,-224(s0)                            allGrp
20406a24:    02b51663              bne    a0,a1,20406a50 <_dtoa_r+0x1ebc>       allGrp, Branch-Instr, controlFlowGrp
20406a28:    0040006f              j    20406a2c <_dtoa_r+0x1e98>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  {
	    k++;
20406a2c:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
20406a30:    00150513              addi    a0,a0,1                              allGrp
20406a34:    f8a42c23              sw    a0,-104(s0)                            allGrp
	    *s++ = '1';
20406a38:    f2442503              lw    a0,-220(s0)                            allGrp
20406a3c:    00150593              addi    a1,a0,1                              allGrp
20406a40:    f2b42223              sw    a1,-220(s0)                            allGrp
20406a44:    03100593              li    a1,49                                  allGrp
20406a48:    00b50023              sb    a1,0(a0)                               allGrp
	    goto ret;
20406a4c:    05c0006f              j    20406aa8 <_dtoa_r+0x1f14>               allGrp, Branch-Instr, controlFlowGrp
      while (*--s == '9')
20406a50:    fb1ff06f              j    20406a00 <_dtoa_r+0x1e6c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  }
      ++*s++;
20406a54:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20406a58:    00150593              addi    a1,a0,1                              allGrp
20406a5c:    f2b42223              sw    a1,-220(s0)                            allGrp
20406a60:    00050583              lb    a1,0(a0)                               allGrp
20406a64:    00158593              addi    a1,a1,1                              allGrp
20406a68:    00b50023              sb    a1,0(a0)                               allGrp
    }
20406a6c:    0380006f              j    20406aa4 <_dtoa_r+0x1f10>               allGrp, Branch-Instr, controlFlowGrp
  else
    {
      while (*--s == '0');
20406a70:    0040006f              j    20406a74 <_dtoa_r+0x1ee0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406a74:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20406a78:    fff50593              addi    a1,a0,-1                             allGrp
20406a7c:    f2b42223              sw    a1,-220(s0)                            allGrp
20406a80:    fff54503              lbu    a0,-1(a0)                             allGrp
20406a84:    03000593              li    a1,48                                  allGrp
20406a88:    00b51663              bne    a0,a1,20406a94 <_dtoa_r+0x1f00>       allGrp, Branch-Instr, controlFlowGrp
20406a8c:    0040006f              j    20406a90 <_dtoa_r+0x1efc>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406a90:    fe5ff06f              j    20406a74 <_dtoa_r+0x1ee0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      s++;
20406a94:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20406a98:    00150513              addi    a0,a0,1                              allGrp
20406a9c:    f2a42223              sw    a0,-220(s0)                            allGrp
20406aa0:    0040006f              j    20406aa4 <_dtoa_r+0x1f10>               allGrp, Branch-Instr, controlFlowGrp
  if ((j > 0) || ((j == 0) && (dig & 1)))
20406aa4:    0040006f              j    20406aa8 <_dtoa_r+0x1f14>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    }
ret:
  Bfree (ptr, S);
20406aa8:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20406aac:    f3442583              lw    a1,-204(s0)                            allGrp
20406ab0:    00001097              auipc    ra,0x1                              allGrp
20406ab4:    f10080e7              jalr    -240(ra) # 204079c0 <_Bfree>         Call-Instr, allGrp, controlFlowGrp
  if (mhi)
20406ab8:    f3842503              lw    a0,-200(s0)                            Return-Tgt, allGrp
20406abc:    00000593              li    a1,0                                   allGrp
20406ac0:    04b50863              beq    a0,a1,20406b10 <_dtoa_r+0x1f7c>       allGrp, Branch-Instr, controlFlowGrp
20406ac4:    0040006f              j    20406ac8 <_dtoa_r+0x1f34>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (mlo && mlo != mhi)
20406ac8:    f3c42503              lw    a0,-196(s0)                            Branch-Tgt, allGrp
20406acc:    00000593              li    a1,0                                   allGrp
20406ad0:    02b50663              beq    a0,a1,20406afc <_dtoa_r+0x1f68>       allGrp, Branch-Instr, controlFlowGrp
20406ad4:    0040006f              j    20406ad8 <_dtoa_r+0x1f44>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406ad8:    f3c42503              lw    a0,-196(s0)                            Branch-Tgt, allGrp
20406adc:    f3842583              lw    a1,-200(s0)                            allGrp
20406ae0:    00b50e63              beq    a0,a1,20406afc <_dtoa_r+0x1f68>       allGrp, Branch-Instr, controlFlowGrp
20406ae4:    0040006f              j    20406ae8 <_dtoa_r+0x1f54>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	Bfree (ptr, mlo);
20406ae8:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20406aec:    f3c42583              lw    a1,-196(s0)                            allGrp
20406af0:    00001097              auipc    ra,0x1                              allGrp
20406af4:    ed0080e7              jalr    -304(ra) # 204079c0 <_Bfree>         Call-Instr, allGrp, controlFlowGrp
20406af8:    0040006f              j    20406afc <_dtoa_r+0x1f68>               Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
      Bfree (ptr, mhi);
20406afc:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20406b00:    f3842583              lw    a1,-200(s0)                            allGrp
20406b04:    00001097              auipc    ra,0x1                              allGrp
20406b08:    ebc080e7              jalr    -324(ra) # 204079c0 <_Bfree>         Call-Instr, allGrp, controlFlowGrp
    }
20406b0c:    0040006f              j    20406b10 <_dtoa_r+0x1f7c>               Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
  if (mhi)
20406b10:    0040006f              j    20406b14 <_dtoa_r+0x1f80>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
ret1:
  Bfree (ptr, b);
20406b14:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20406b18:    f4842583              lw    a1,-184(s0)                            allGrp
20406b1c:    00001097              auipc    ra,0x1                              allGrp
20406b20:    ea4080e7              jalr    -348(ra) # 204079c0 <_Bfree>         Call-Instr, allGrp, controlFlowGrp
  *s = 0;
20406b24:    f2442503              lw    a0,-220(s0)                            Return-Tgt, allGrp
20406b28:    00000593              li    a1,0                                   allGrp
20406b2c:    00b50023              sb    a1,0(a0)                               allGrp
  *decpt = k + 1;
20406b30:    f9842503              lw    a0,-104(s0)                            allGrp
20406b34:    00150513              addi    a0,a0,1                              allGrp
20406b38:    fd442603              lw    a2,-44(s0)                             allGrp
20406b3c:    00a62023              sw    a0,0(a2)                               allGrp
  if (rve)
20406b40:    fcc42503              lw    a0,-52(s0)                             allGrp
20406b44:    00b50c63              beq    a0,a1,20406b5c <_dtoa_r+0x1fc8>       allGrp, Branch-Instr, controlFlowGrp
20406b48:    0040006f              j    20406b4c <_dtoa_r+0x1fb8>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    *rve = s;
20406b4c:    f2442503              lw    a0,-220(s0)                            Branch-Tgt, allGrp
20406b50:    fcc42583              lw    a1,-52(s0)                             allGrp
20406b54:    00a5a023              sw    a0,0(a1)                               allGrp
20406b58:    0040006f              j    20406b5c <_dtoa_r+0x1fc8>               allGrp, Branch-Instr, controlFlowGrp
  return s0;
20406b5c:    f2042503              lw    a0,-224(s0)                            Branch-Tgt, allGrp
20406b60:    fea42823              sw    a0,-16(s0)                             allGrp
20406b64:    0040006f              j    20406b68 <_dtoa_r+0x1fd4>               allGrp, Branch-Instr, controlFlowGrp
}
20406b68:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20406b6c:    1e412483              lw    s1,484(sp)                             allGrp
20406b70:    1e012223              sw    zero,484(sp)                           allGrp
20406b74:    1e812403              lw    s0,488(sp)                             allGrp
20406b78:    1e012423              sw    zero,488(sp)                           allGrp
20406b7c:    1ec12083              lw    ra,492(sp)                             allGrp
20406b80:    1e012623              sw    zero,492(sp)                           allGrp
20406b84:    1f010113              addi    sp,sp,496                            allGrp
20406b88:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20406b8c <quorem>:
20406b8c:    fa010113              addi    sp,sp,-96                            Call-Tgt, allGrp, Branch-Tgt
20406b90:    04112e23              sw    ra,92(sp)                              allGrp
20406b94:    04812c23              sw    s0,88(sp)                              allGrp
20406b98:    06010413              addi    s0,sp,96                             allGrp
20406b9c:    00058613              mv    a2,a1                                  allGrp
20406ba0:    00050693              mv    a3,a0                                  allGrp
20406ba4:    fea42823              sw    a0,-16(s0)                             allGrp
20406ba8:    feb42623              sw    a1,-20(s0)                             allGrp
  n = S->_wds;
20406bac:    fec42503              lw    a0,-20(s0)                             allGrp
20406bb0:    01052503              lw    a0,16(a0)                              allGrp
20406bb4:    fea42423              sw    a0,-24(s0)                             allGrp
  if (b->_wds < n)
20406bb8:    ff042503              lw    a0,-16(s0)                             allGrp
20406bbc:    01052503              lw    a0,16(a0)                              allGrp
20406bc0:    fe842583              lw    a1,-24(s0)                             allGrp
20406bc4:    fac42a23              sw    a2,-76(s0)                             allGrp
20406bc8:    fad42823              sw    a3,-80(s0)                             allGrp
20406bcc:    00b55a63              ble    a1,a0,20406be0 <quorem+0x54>          allGrp, Branch-Instr, controlFlowGrp
20406bd0:    0040006f              j    20406bd4 <quorem+0x48>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return 0;
20406bd4:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20406bd8:    fea42a23              sw    a0,-12(s0)                             allGrp
20406bdc:    3c40006f              j    20406fa0 <quorem+0x414>                 allGrp, Branch-Instr, controlFlowGrp
  sx = S->_x;
20406be0:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20406be4:    01450513              addi    a0,a0,20                             allGrp
20406be8:    fca42423              sw    a0,-56(s0)                             allGrp
  sxe = sx + --n;
20406bec:    fc842503              lw    a0,-56(s0)                             allGrp
20406bf0:    fe842583              lw    a1,-24(s0)                             allGrp
20406bf4:    fff58593              addi    a1,a1,-1                             allGrp
20406bf8:    feb42423              sw    a1,-24(s0)                             allGrp
20406bfc:    00259593              slli    a1,a1,0x2                            allGrp
20406c00:    00b50533              add    a0,a0,a1                              allGrp
20406c04:    fca42223              sw    a0,-60(s0)                             allGrp
  bx = b->_x;
20406c08:    ff042503              lw    a0,-16(s0)                             allGrp
20406c0c:    01450513              addi    a0,a0,20                             allGrp
20406c10:    fca42823              sw    a0,-48(s0)                             allGrp
  bxe = bx + n;
20406c14:    fd042503              lw    a0,-48(s0)                             allGrp
20406c18:    fe842583              lw    a1,-24(s0)                             allGrp
20406c1c:    00259593              slli    a1,a1,0x2                            allGrp
20406c20:    00b50533              add    a0,a0,a1                              allGrp
20406c24:    fca42623              sw    a0,-52(s0)                             allGrp
  q = *bxe / (*sxe + 1);	/* ensure q <= true quotient */
20406c28:    fcc42503              lw    a0,-52(s0)                             allGrp
20406c2c:    00052503              lw    a0,0(a0)                               allGrp
20406c30:    fc442583              lw    a1,-60(s0)                             allGrp
20406c34:    0005a583              lw    a1,0(a1)                               allGrp
20406c38:    00158593              addi    a1,a1,1                              allGrp
20406c3c:    0000b097              auipc    ra,0xb                              allGrp
20406c40:    644080e7              jalr    1604(ra) # 20412280 <__udivsi3>      Call-Instr, allGrp, controlFlowGrp
20406c44:    fca42c23              sw    a0,-40(s0)                             Return-Tgt, allGrp
  if (q)
20406c48:    fd842503              lw    a0,-40(s0)                             allGrp
20406c4c:    00000593              li    a1,0                                   allGrp
20406c50:    18b50463              beq    a0,a1,20406dd8 <quorem+0x24c>         allGrp, Branch-Instr, controlFlowGrp
20406c54:    0040006f              j    20406c58 <quorem+0xcc>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      borrow = 0;
20406c58:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20406c5c:    fea42223              sw    a0,-28(s0)                             allGrp
      carry = 0;
20406c60:    fca42e23              sw    a0,-36(s0)                             allGrp
      do
20406c64:    0040006f              j    20406c68 <quorem+0xdc>                  allGrp, Branch-Instr, controlFlowGrp
	  si = *sx++;
20406c68:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
20406c6c:    00450593              addi    a1,a0,4                              allGrp
20406c70:    fcb42423              sw    a1,-56(s0)                             allGrp
20406c74:    00052503              lw    a0,0(a0)                               allGrp
20406c78:    faa42e23              sw    a0,-68(s0)                             allGrp
	  ys = (si & 0xffff) * q + carry;
20406c7c:    fbc45503              lhu    a0,-68(s0)                            allGrp
20406c80:    fd842583              lw    a1,-40(s0)                             allGrp
20406c84:    0000b097              auipc    ra,0xb                              allGrp
20406c88:    5d0080e7              jalr    1488(ra) # 20412254 <__mulsi3>       Call-Instr, allGrp, controlFlowGrp
20406c8c:    fdc42583              lw    a1,-36(s0)                             Return-Tgt, allGrp
20406c90:    00b50533              add    a0,a0,a1                              allGrp
20406c94:    fca42a23              sw    a0,-44(s0)                             allGrp
	  zs = (si >> 16) * q + (ys >> 16);
20406c98:    fbe45503              lhu    a0,-66(s0)                            allGrp
20406c9c:    fd842583              lw    a1,-40(s0)                             allGrp
20406ca0:    0000b097              auipc    ra,0xb                              allGrp
20406ca4:    5b4080e7              jalr    1460(ra) # 20412254 <__mulsi3>       Call-Instr, allGrp, controlFlowGrp
20406ca8:    fd645583              lhu    a1,-42(s0)                            Return-Tgt, allGrp
20406cac:    00b50533              add    a0,a0,a1                              allGrp
20406cb0:    faa42c23              sw    a0,-72(s0)                             allGrp
	  carry = zs >> 16;
20406cb4:    fba45503              lhu    a0,-70(s0)                            allGrp
20406cb8:    fca42e23              sw    a0,-36(s0)                             allGrp
	  y = (*bx & 0xffff) - (ys & 0xffff) + borrow;
20406cbc:    fd042503              lw    a0,-48(s0)                             allGrp
20406cc0:    00055503              lhu    a0,0(a0)                              allGrp
20406cc4:    fd445583              lhu    a1,-44(s0)                            allGrp
20406cc8:    40b50533              sub    a0,a0,a1                              allGrp
20406ccc:    fe442583              lw    a1,-28(s0)                             allGrp
20406cd0:    00b50533              add    a0,a0,a1                              allGrp
20406cd4:    fea42023              sw    a0,-32(s0)                             allGrp
	  borrow = y >> 16;
20406cd8:    fe042503              lw    a0,-32(s0)                             allGrp
20406cdc:    41055513              srai    a0,a0,0x10                           allGrp
20406ce0:    fea42223              sw    a0,-28(s0)                             allGrp
	  z = (*bx >> 16) - (zs & 0xffff) + borrow;
20406ce4:    fd042503              lw    a0,-48(s0)                             allGrp
20406ce8:    00255503              lhu    a0,2(a0)                              allGrp
20406cec:    fb845583              lhu    a1,-72(s0)                            allGrp
20406cf0:    40b50533              sub    a0,a0,a1                              allGrp
20406cf4:    fe442583              lw    a1,-28(s0)                             allGrp
20406cf8:    00b50533              add    a0,a0,a1                              allGrp
20406cfc:    fca42023              sw    a0,-64(s0)                             allGrp
	  borrow = z >> 16;
20406d00:    fc042503              lw    a0,-64(s0)                             allGrp
20406d04:    41055513              srai    a0,a0,0x10                           allGrp
20406d08:    fea42223              sw    a0,-28(s0)                             allGrp
	  Storeinc (bx, z, y);
20406d0c:    fc042503              lw    a0,-64(s0)                             allGrp
20406d10:    01051513              slli    a0,a0,0x10                           allGrp
20406d14:    fe045583              lhu    a1,-32(s0)                            allGrp
20406d18:    00b56533              or    a0,a0,a1                               allGrp
20406d1c:    fd042583              lw    a1,-48(s0)                             allGrp
20406d20:    00458613              addi    a2,a1,4                              allGrp
20406d24:    fcc42823              sw    a2,-48(s0)                             allGrp
20406d28:    00a5a023              sw    a0,0(a1)                               allGrp
	}
20406d2c:    0040006f              j    20406d30 <quorem+0x1a4>                 allGrp, Branch-Instr, controlFlowGrp
      while (sx <= sxe);
20406d30:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
20406d34:    fc442583              lw    a1,-60(s0)                             allGrp
	}
20406d38:    f2a5f8e3              bleu    a0,a1,20406c68 <quorem+0xdc>         allGrp, Branch-Instr, controlFlowGrp
20406d3c:    0040006f              j    20406d40 <quorem+0x1b4>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      if (!*bxe)
20406d40:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20406d44:    00052503              lw    a0,0(a0)                               allGrp
20406d48:    00000593              li    a1,0                                   allGrp
20406d4c:    08b51463              bne    a0,a1,20406dd4 <quorem+0x248>         allGrp, Branch-Instr, controlFlowGrp
20406d50:    0040006f              j    20406d54 <quorem+0x1c8>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  bx = b->_x;
20406d54:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20406d58:    01450513              addi    a0,a0,20                             allGrp
20406d5c:    fca42823              sw    a0,-48(s0)                             allGrp
	  while (--bxe > bx && !*bxe)
20406d60:    0040006f              j    20406d64 <quorem+0x1d8>                 allGrp, Branch-Instr, controlFlowGrp
20406d64:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20406d68:    ffc50513              addi    a0,a0,-4                             allGrp
20406d6c:    fca42623              sw    a0,-52(s0)                             allGrp
20406d70:    fd042583              lw    a1,-48(s0)                             allGrp
20406d74:    00000613              li    a2,0                                   allGrp
20406d78:    fac42623              sw    a2,-84(s0)                             allGrp
20406d7c:    02a5f263              bleu    a0,a1,20406da0 <quorem+0x214>        allGrp, Branch-Instr, controlFlowGrp
20406d80:    0040006f              j    20406d84 <quorem+0x1f8>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406d84:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20406d88:    00052503              lw    a0,0(a0)                               allGrp
20406d8c:    00000593              li    a1,0                                   allGrp
20406d90:    00b54533              xor    a0,a0,a1                              allGrp
20406d94:    00153513              seqz    a0,a0                                allGrp
20406d98:    faa42623              sw    a0,-84(s0)                             allGrp
20406d9c:    0040006f              j    20406da0 <quorem+0x214>                 allGrp, Branch-Instr, controlFlowGrp
20406da0:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
20406da4:    00157513              andi    a0,a0,1                              allGrp
20406da8:    00000593              li    a1,0                                   allGrp
20406dac:    00b50c63              beq    a0,a1,20406dc4 <quorem+0x238>         allGrp, Branch-Instr, controlFlowGrp
20406db0:    0040006f              j    20406db4 <quorem+0x228>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    --n;
20406db4:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20406db8:    fff50513              addi    a0,a0,-1                             allGrp
20406dbc:    fea42423              sw    a0,-24(s0)                             allGrp
	  while (--bxe > bx && !*bxe)
20406dc0:    fa5ff06f              j    20406d64 <quorem+0x1d8>                 allGrp, Branch-Instr, controlFlowGrp
	  b->_wds = n;
20406dc4:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20406dc8:    ff042583              lw    a1,-16(s0)                             allGrp
20406dcc:    00a5a823              sw    a0,16(a1)                              allGrp
	}
20406dd0:    0040006f              j    20406dd4 <quorem+0x248>                 allGrp, Branch-Instr, controlFlowGrp
    }
20406dd4:    0040006f              j    20406dd8 <quorem+0x24c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  if (cmp (b, S) >= 0)
20406dd8:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20406ddc:    fec42583              lw    a1,-20(s0)                             allGrp
20406de0:    00002097              auipc    ra,0x2                              allGrp
20406de4:    c18080e7              jalr    -1000(ra) # 204089f8 <__mcmp>        Call-Instr, allGrp, controlFlowGrp
20406de8:    00000593              li    a1,0                                   Return-Tgt, allGrp
20406dec:    1ab54463              blt    a0,a1,20406f94 <quorem+0x408>         allGrp, Branch-Instr, controlFlowGrp
20406df0:    0040006f              j    20406df4 <quorem+0x268>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      q++;
20406df4:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20406df8:    00150513              addi    a0,a0,1                              allGrp
20406dfc:    fca42c23              sw    a0,-40(s0)                             allGrp
20406e00:    00000513              li    a0,0                                   allGrp
      borrow = 0;
20406e04:    fea42223              sw    a0,-28(s0)                             allGrp
      carry = 0;
20406e08:    fca42e23              sw    a0,-36(s0)                             allGrp
      bx = b->_x;
20406e0c:    ff042503              lw    a0,-16(s0)                             allGrp
20406e10:    01450513              addi    a0,a0,20                             allGrp
20406e14:    fca42823              sw    a0,-48(s0)                             allGrp
      sx = S->_x;
20406e18:    fec42503              lw    a0,-20(s0)                             allGrp
20406e1c:    01450513              addi    a0,a0,20                             allGrp
20406e20:    fca42423              sw    a0,-56(s0)                             allGrp
      do
20406e24:    0040006f              j    20406e28 <quorem+0x29c>                 allGrp, Branch-Instr, controlFlowGrp
	  si = *sx++;
20406e28:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
20406e2c:    00450593              addi    a1,a0,4                              allGrp
20406e30:    fcb42423              sw    a1,-56(s0)                             allGrp
20406e34:    00052503              lw    a0,0(a0)                               allGrp
20406e38:    faa42e23              sw    a0,-68(s0)                             allGrp
	  ys = (si & 0xffff) + carry;
20406e3c:    fbc45503              lhu    a0,-68(s0)                            allGrp
20406e40:    fdc42583              lw    a1,-36(s0)                             allGrp
20406e44:    00b50533              add    a0,a0,a1                              allGrp
20406e48:    fca42a23              sw    a0,-44(s0)                             allGrp
	  zs = (si >> 16) + (ys >> 16);
20406e4c:    fbe45503              lhu    a0,-66(s0)                            allGrp
20406e50:    fd645583              lhu    a1,-42(s0)                            allGrp
20406e54:    00b50533              add    a0,a0,a1                              allGrp
20406e58:    faa42c23              sw    a0,-72(s0)                             allGrp
	  carry = zs >> 16;
20406e5c:    fba45503              lhu    a0,-70(s0)                            allGrp
20406e60:    fca42e23              sw    a0,-36(s0)                             allGrp
	  y = (*bx & 0xffff) - (ys & 0xffff) + borrow;
20406e64:    fd042503              lw    a0,-48(s0)                             allGrp
20406e68:    00055503              lhu    a0,0(a0)                              allGrp
20406e6c:    fd445583              lhu    a1,-44(s0)                            allGrp
20406e70:    40b50533              sub    a0,a0,a1                              allGrp
20406e74:    fe442583              lw    a1,-28(s0)                             allGrp
20406e78:    00b50533              add    a0,a0,a1                              allGrp
20406e7c:    fea42023              sw    a0,-32(s0)                             allGrp
	  borrow = y >> 16;
20406e80:    fe042503              lw    a0,-32(s0)                             allGrp
20406e84:    41055513              srai    a0,a0,0x10                           allGrp
20406e88:    fea42223              sw    a0,-28(s0)                             allGrp
	  z = (*bx >> 16) - (zs & 0xffff) + borrow;
20406e8c:    fd042503              lw    a0,-48(s0)                             allGrp
20406e90:    00255503              lhu    a0,2(a0)                              allGrp
20406e94:    fb845583              lhu    a1,-72(s0)                            allGrp
20406e98:    40b50533              sub    a0,a0,a1                              allGrp
20406e9c:    fe442583              lw    a1,-28(s0)                             allGrp
20406ea0:    00b50533              add    a0,a0,a1                              allGrp
20406ea4:    fca42023              sw    a0,-64(s0)                             allGrp
	  borrow = z >> 16;
20406ea8:    fc042503              lw    a0,-64(s0)                             allGrp
20406eac:    41055513              srai    a0,a0,0x10                           allGrp
20406eb0:    fea42223              sw    a0,-28(s0)                             allGrp
	  Storeinc (bx, z, y);
20406eb4:    fc042503              lw    a0,-64(s0)                             allGrp
20406eb8:    01051513              slli    a0,a0,0x10                           allGrp
20406ebc:    fe045583              lhu    a1,-32(s0)                            allGrp
20406ec0:    00b56533              or    a0,a0,a1                               allGrp
20406ec4:    fd042583              lw    a1,-48(s0)                             allGrp
20406ec8:    00458613              addi    a2,a1,4                              allGrp
20406ecc:    fcc42823              sw    a2,-48(s0)                             allGrp
20406ed0:    00a5a023              sw    a0,0(a1)                               allGrp
	}
20406ed4:    0040006f              j    20406ed8 <quorem+0x34c>                 allGrp, Branch-Instr, controlFlowGrp
      while (sx <= sxe);
20406ed8:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
20406edc:    fc442583              lw    a1,-60(s0)                             allGrp
	}
20406ee0:    f4a5f4e3              bleu    a0,a1,20406e28 <quorem+0x29c>        allGrp, Branch-Instr, controlFlowGrp
20406ee4:    0040006f              j    20406ee8 <quorem+0x35c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      bx = b->_x;
20406ee8:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20406eec:    01450513              addi    a0,a0,20                             allGrp
20406ef0:    fca42823              sw    a0,-48(s0)                             allGrp
      bxe = bx + n;
20406ef4:    fd042503              lw    a0,-48(s0)                             allGrp
20406ef8:    fe842583              lw    a1,-24(s0)                             allGrp
20406efc:    00259593              slli    a1,a1,0x2                            allGrp
20406f00:    00b50533              add    a0,a0,a1                              allGrp
20406f04:    fca42623              sw    a0,-52(s0)                             allGrp
      if (!*bxe)
20406f08:    fcc42503              lw    a0,-52(s0)                             allGrp
20406f0c:    00052503              lw    a0,0(a0)                               allGrp
20406f10:    00000593              li    a1,0                                   allGrp
20406f14:    06b51e63              bne    a0,a1,20406f90 <quorem+0x404>         allGrp, Branch-Instr, controlFlowGrp
20406f18:    0040006f              j    20406f1c <quorem+0x390>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  while (--bxe > bx && !*bxe)
20406f1c:    0040006f              j    20406f20 <quorem+0x394>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406f20:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20406f24:    ffc50513              addi    a0,a0,-4                             allGrp
20406f28:    fca42623              sw    a0,-52(s0)                             allGrp
20406f2c:    fd042583              lw    a1,-48(s0)                             allGrp
20406f30:    00000613              li    a2,0                                   allGrp
20406f34:    fac42423              sw    a2,-88(s0)                             allGrp
20406f38:    02a5f263              bleu    a0,a1,20406f5c <quorem+0x3d0>        allGrp, Branch-Instr, controlFlowGrp
20406f3c:    0040006f              j    20406f40 <quorem+0x3b4>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20406f40:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20406f44:    00052503              lw    a0,0(a0)                               allGrp
20406f48:    00000593              li    a1,0                                   allGrp
20406f4c:    00b54533              xor    a0,a0,a1                              allGrp
20406f50:    00153513              seqz    a0,a0                                allGrp
20406f54:    faa42423              sw    a0,-88(s0)                             allGrp
20406f58:    0040006f              j    20406f5c <quorem+0x3d0>                 allGrp, Branch-Instr, controlFlowGrp
20406f5c:    fa842503              lw    a0,-88(s0)                             Branch-Tgt, allGrp
20406f60:    00157513              andi    a0,a0,1                              allGrp
20406f64:    00000593              li    a1,0                                   allGrp
20406f68:    00b50c63              beq    a0,a1,20406f80 <quorem+0x3f4>         allGrp, Branch-Instr, controlFlowGrp
20406f6c:    0040006f              j    20406f70 <quorem+0x3e4>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    --n;
20406f70:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20406f74:    fff50513              addi    a0,a0,-1                             allGrp
20406f78:    fea42423              sw    a0,-24(s0)                             allGrp
	  while (--bxe > bx && !*bxe)
20406f7c:    fa5ff06f              j    20406f20 <quorem+0x394>                 allGrp, Branch-Instr, controlFlowGrp
	  b->_wds = n;
20406f80:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20406f84:    ff042583              lw    a1,-16(s0)                             allGrp
20406f88:    00a5a823              sw    a0,16(a1)                              allGrp
	}
20406f8c:    0040006f              j    20406f90 <quorem+0x404>                 allGrp, Branch-Instr, controlFlowGrp
    }
20406f90:    0040006f              j    20406f94 <quorem+0x408>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  return q;
20406f94:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20406f98:    fea42a23              sw    a0,-12(s0)                             allGrp
20406f9c:    0040006f              j    20406fa0 <quorem+0x414>                 allGrp, Branch-Instr, controlFlowGrp
}
20406fa0:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20406fa4:    05812403              lw    s0,88(sp)                              allGrp
20406fa8:    04012c23              sw    zero,88(sp)                            allGrp
20406fac:    05c12083              lw    ra,92(sp)                              allGrp
20406fb0:    04012e23              sw    zero,92(sp)                            allGrp
20406fb4:    06010113              addi    sp,sp,96                             allGrp
20406fb8:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20406fbc <__localeconv_l>:
20406fbc:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
20406fc0:    00112e23              sw    ra,28(sp)                              allGrp
20406fc4:    00812c23              sw    s0,24(sp)                              allGrp
20406fc8:    02010413              addi    s0,sp,32                             allGrp
20406fcc:    00050593              mv    a1,a0                                  allGrp
20406fd0:    fea42823              sw    a0,-16(s0)                             allGrp
#include "setlocale.h"

struct lconv *
__localeconv_l (struct __locale_t *locale)
{
  struct lconv *lconv = &locale->lconv;
20406fd4:    ff042503              lw    a0,-16(s0)                             allGrp
20406fd8:    0f050513              addi    a0,a0,240                            allGrp
20406fdc:    fea42623              sw    a0,-20(s0)                             allGrp
  if (locale == __get_C_locale ())
20406fe0:    ff042503              lw    a0,-16(s0)                             allGrp
20406fe4:    feb42423              sw    a1,-24(s0)                             allGrp
20406fe8:    fea42223              sw    a0,-28(s0)                             allGrp
20406fec:    00000097              auipc    ra,0x0                              allGrp
20406ff0:    048080e7              jalr    72(ra) # 20407034 <__get_C_locale>   Call-Instr, allGrp, controlFlowGrp
20406ff4:    fe442583              lw    a1,-28(s0)                             Return-Tgt, allGrp
20406ff8:    00a59a63              bne    a1,a0,2040700c <__localeconv_l+0x50>  allGrp, Branch-Instr, controlFlowGrp
20406ffc:    0040006f              j    20407000 <__localeconv_l+0x44>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return lconv;
20407000:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20407004:    fea42a23              sw    a0,-12(s0)                             allGrp
20407008:    0100006f              j    20407018 <__localeconv_l+0x5c>          allGrp, Branch-Instr, controlFlowGrp
  lconv->int_n_sep_by_space = m->n_sep_by_space[0];
  lconv->int_n_sign_posn = m->n_sign_posn[0];
  lconv->int_p_sign_posn = m->p_sign_posn[0];
#endif /* !__HAVE_LOCALE_INFO_EXTENDED__ */
#endif /* __HAVE_LOCALE_INFO__ */
  return lconv;
2040700c:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20407010:    fea42a23              sw    a0,-12(s0)                             allGrp
20407014:    0040006f              j    20407018 <__localeconv_l+0x5c>          allGrp, Branch-Instr, controlFlowGrp
}
20407018:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040701c:    01812403              lw    s0,24(sp)                              allGrp
20407020:    00012c23              sw    zero,24(sp)                            allGrp
20407024:    01c12083              lw    ra,28(sp)                              allGrp
20407028:    00012e23              sw    zero,28(sp)                            allGrp
2040702c:    02010113              addi    sp,sp,32                             allGrp
20407030:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407034 <__get_C_locale>:
20407034:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
   targets by returning ptr to globale locale. */
_ELIDABLE_INLINE struct __locale_t *
__get_C_locale (void)
{
#ifndef _MB_CAPABLE
  return __get_global_locale ();
20407038:    00112623              sw    ra,12(sp)                              allGrp
2040703c:    00812423              sw    s0,8(sp)                               allGrp
20407040:    01010413              addi    s0,sp,16                             allGrp
20407044:    00000097              auipc    ra,0x0                              allGrp
20407048:    100080e7              jalr    256(ra) # 20407144 <__get_global_locale>Call-Instr, allGrp, controlFlowGrp
2040704c:    00812403              lw    s0,8(sp)                               Return-Tgt, allGrp
20407050:    00012423              sw    zero,8(sp)                             allGrp
20407054:    00c12083              lw    ra,12(sp)                              allGrp
20407058:    00012623              sw    zero,12(sp)                            allGrp
2040705c:    01010113              addi    sp,sp,16                             allGrp
20407060:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407064 <_localeconv_r>:
20407064:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
20407068:    00112623              sw    ra,12(sp)                              allGrp
2040706c:    00812423              sw    s0,8(sp)                               allGrp
20407070:    01010413              addi    s0,sp,16                             allGrp
20407074:    00050593              mv    a1,a0                                  allGrp
20407078:    fea42a23              sw    a0,-12(s0)                             allGrp
	struct _reent *data)
{
  /* Note that we always fall back to the global locale, even in case
     of specifying a reent.  Otherwise a call to _localeconv_r would just
     crash if the reent locale pointer is NULL. */
  return __localeconv_l (__get_current_locale ());
2040707c:    feb42823              sw    a1,-16(s0)                             allGrp
20407080:    00000097              auipc    ra,0x0                              allGrp
20407084:    028080e7              jalr    40(ra) # 204070a8 <__get_current_locale>Call-Instr, allGrp, controlFlowGrp
20407088:    00000097              auipc    ra,0x0                              Return-Tgt, allGrp
2040708c:    f34080e7              jalr    -204(ra) # 20406fbc <__localeconv_l> Call-Instr, allGrp, controlFlowGrp
20407090:    00812403              lw    s0,8(sp)                               Return-Tgt, allGrp
20407094:    00012423              sw    zero,8(sp)                             allGrp
20407098:    00c12083              lw    ra,12(sp)                              allGrp
2040709c:    00012623              sw    zero,12(sp)                            allGrp
204070a0:    01010113              addi    sp,sp,16                             allGrp
204070a4:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204070a8 <__get_current_locale>:
204070a8:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
  return _REENT->_locale ?: __get_global_locale ();
204070ac:    00112623              sw    ra,12(sp)                              allGrp
204070b0:    00812423              sw    s0,8(sp)                               allGrp
204070b4:    01010413              addi    s0,sp,16                             allGrp
204070b8:    80000537              lui    a0,0x80000                            allGrp
204070bc:    43052503              lw    a0,1072(a0) # 80000430 <_sp+0xffffc430>allGrp
204070c0:    03452503              lw    a0,52(a0)                              allGrp
204070c4:    00000593              li    a1,0                                   allGrp
204070c8:    fea42a23              sw    a0,-12(s0)                             allGrp
204070cc:    00b50a63              beq    a0,a1,204070e0 <__get_current_locale+0x38>allGrp, Branch-Instr, controlFlowGrp
204070d0:    0040006f              j    204070d4 <__get_current_locale+0x2c>    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204070d4:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
204070d8:    fea42823              sw    a0,-16(s0)                             allGrp
204070dc:    0140006f              j    204070f0 <__get_current_locale+0x48>    allGrp, Branch-Instr, controlFlowGrp
204070e0:    00000097              auipc    ra,0x0                              Branch-Tgt, allGrp
204070e4:    064080e7              jalr    100(ra) # 20407144 <__get_global_locale>Call-Instr, allGrp, controlFlowGrp
204070e8:    fea42823              sw    a0,-16(s0)                             Return-Tgt, allGrp
204070ec:    0040006f              j    204070f0 <__get_current_locale+0x48>    allGrp, Branch-Instr, controlFlowGrp
204070f0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204070f4:    00812403              lw    s0,8(sp)                               allGrp
204070f8:    00012423              sw    zero,8(sp)                             allGrp
204070fc:    00c12083              lw    ra,12(sp)                              allGrp
20407100:    00012623              sw    zero,12(sp)                            allGrp
20407104:    01010113              addi    sp,sp,16                             allGrp
20407108:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040710c <localeconv>:
2040710c:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt

#ifndef _REENT_ONLY
struct lconv *
_DEFUN_VOID (localeconv)
{
  return __localeconv_l (__get_current_locale ());
20407110:    00112623              sw    ra,12(sp)                              allGrp
20407114:    00812423              sw    s0,8(sp)                               allGrp
20407118:    01010413              addi    s0,sp,16                             allGrp
2040711c:    00000097              auipc    ra,0x0                              allGrp
20407120:    f8c080e7              jalr    -116(ra) # 204070a8 <__get_current_locale>Call-Instr, allGrp, controlFlowGrp
20407124:    00000097              auipc    ra,0x0                              Return-Tgt, allGrp
20407128:    e98080e7              jalr    -360(ra) # 20406fbc <__localeconv_l> Call-Instr, allGrp, controlFlowGrp
2040712c:    00812403              lw    s0,8(sp)                               Return-Tgt, allGrp
20407130:    00012423              sw    zero,8(sp)                             allGrp
20407134:    00c12083              lw    ra,12(sp)                              allGrp
20407138:    00012623              sw    zero,12(sp)                            allGrp
2040713c:    01010113              addi    sp,sp,16                             allGrp
20407140:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407144 <__get_global_locale>:
20407144:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
  return &__global_locale;
20407148:    00112623              sw    ra,12(sp)                              allGrp
2040714c:    00812423              sw    s0,8(sp)                               allGrp
20407150:    01010413              addi    s0,sp,16                             allGrp
20407154:    80000537              lui    a0,0x80000                            allGrp
20407158:    43450513              addi    a0,a0,1076 # 80000434 <_sp+0xffffc434>allGrp
2040715c:    00812403              lw    s0,8(sp)                               allGrp
20407160:    00012423              sw    zero,8(sp)                             allGrp
20407164:    00c12083              lw    ra,12(sp)                              allGrp
20407168:    00012623              sw    zero,12(sp)                            allGrp
2040716c:    01010113              addi    sp,sp,16                             allGrp
20407170:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407174 <_setlocale_r>:
20407174:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
20407178:    02112623              sw    ra,44(sp)                              allGrp
2040717c:    02812423              sw    s0,40(sp)                              allGrp
20407180:    03010413              addi    s0,sp,48                             allGrp
20407184:    00060693              mv    a3,a2                                  allGrp
20407188:    00058713              mv    a4,a1                                  allGrp
2040718c:    00050793              mv    a5,a0                                  allGrp
20407190:    fea42823              sw    a0,-16(s0)                             allGrp
20407194:    feb42623              sw    a1,-20(s0)                             allGrp
20407198:    fec42423              sw    a2,-24(s0)                             allGrp
       struct _reent *p _AND
       int category _AND
       _CONST char *locale)
{
#ifndef _MB_CAPABLE
  if (locale)
2040719c:    fe842503              lw    a0,-24(s0)                             allGrp
204071a0:    00000593              li    a1,0                                   allGrp
204071a4:    fed42223              sw    a3,-28(s0)                             allGrp
204071a8:    fee42023              sw    a4,-32(s0)                             allGrp
204071ac:    fcf42e23              sw    a5,-36(s0)                             allGrp
204071b0:    06b50c63              beq    a0,a1,20407228 <_setlocale_r+0xb4>    allGrp, Branch-Instr, controlFlowGrp
204071b4:    0040006f              j    204071b8 <_setlocale_r+0x44>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    { 
      if (strcmp (locale, "POSIX") && strcmp (locale, "C")
204071b8:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
204071bc:    204125b7              lui    a1,0x20412                            allGrp
204071c0:    5c458593              addi    a1,a1,1476 # 204125c4 <_svfprintf_r.zeroes+0x74>allGrp
204071c4:    00003097              auipc    ra,0x3                              allGrp
204071c8:    874080e7              jalr    -1932(ra) # 20409a38 <strcmp>        Call-Instr, allGrp, controlFlowGrp
204071cc:    00000593              li    a1,0                                   Return-Tgt, allGrp
204071d0:    04b50a63              beq    a0,a1,20407224 <_setlocale_r+0xb0>    allGrp, Branch-Instr, controlFlowGrp
204071d4:    0040006f              j    204071d8 <_setlocale_r+0x64>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204071d8:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
204071dc:    204125b7              lui    a1,0x20412                            allGrp
204071e0:    5ca58593              addi    a1,a1,1482 # 204125ca <_svfprintf_r.zeroes+0x7a>allGrp
204071e4:    00003097              auipc    ra,0x3                              allGrp
204071e8:    854080e7              jalr    -1964(ra) # 20409a38 <strcmp>        Call-Instr, allGrp, controlFlowGrp
204071ec:    00000593              li    a1,0                                   Return-Tgt, allGrp
	  && strcmp (locale, ""))
204071f0:    02b50a63              beq    a0,a1,20407224 <_setlocale_r+0xb0>    allGrp, Branch-Instr, controlFlowGrp
204071f4:    0040006f              j    204071f8 <_setlocale_r+0x84>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204071f8:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
204071fc:    204125b7              lui    a1,0x20412                            allGrp
20407200:    4ff58593              addi    a1,a1,1279 # 204124ff <_free_r+0x12b>allGrp
20407204:    00003097              auipc    ra,0x3                              allGrp
20407208:    834080e7              jalr    -1996(ra) # 20409a38 <strcmp>        Call-Instr, allGrp, controlFlowGrp
2040720c:    00000593              li    a1,0                                   Return-Tgt, allGrp
      if (strcmp (locale, "POSIX") && strcmp (locale, "C")
20407210:    00b50a63              beq    a0,a1,20407224 <_setlocale_r+0xb0>    allGrp, Branch-Instr, controlFlowGrp
20407214:    0040006f              j    20407218 <_setlocale_r+0xa4>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        return NULL;
20407218:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040721c:    fea42a23              sw    a0,-12(s0)                             allGrp
20407220:    0180006f              j    20407238 <_setlocale_r+0xc4>            allGrp, Branch-Instr, controlFlowGrp
    }
20407224:    0040006f              j    20407228 <_setlocale_r+0xb4>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  return "C";
20407228:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
2040722c:    5ca50513              addi    a0,a0,1482 # 204125ca <_svfprintf_r.zeroes+0x7a>allGrp
20407230:    fea42a23              sw    a0,-12(s0)                             allGrp
20407234:    0040006f              j    20407238 <_setlocale_r+0xc4>            allGrp, Branch-Instr, controlFlowGrp
	  return NULL;
	}
    }
  return currentlocale ();
#endif /* _MB_CAPABLE */
}
20407238:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040723c:    02812403              lw    s0,40(sp)                              allGrp
20407240:    02012423              sw    zero,40(sp)                            allGrp
20407244:    02c12083              lw    ra,44(sp)                              allGrp
20407248:    02012623              sw    zero,44(sp)                            allGrp
2040724c:    03010113              addi    sp,sp,48                             allGrp
20407250:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407254 <__locale_mb_cur_max>:
20407254:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
_DEFUN_VOID (__locale_mb_cur_max)
{
#ifdef __HAVE_LOCALE_INFO__
  return __get_current_ctype_locale ()->mb_cur_max[0];
#else
  return __get_current_locale ()->mb_cur_max[0];
20407258:    00112623              sw    ra,12(sp)                              allGrp
2040725c:    00812423              sw    s0,8(sp)                               allGrp
20407260:    01010413              addi    s0,sp,16                             allGrp
20407264:    00000097              auipc    ra,0x0                              allGrp
20407268:    024080e7              jalr    36(ra) # 20407288 <__get_current_locale>Call-Instr, allGrp, controlFlowGrp
2040726c:    12854503              lbu    a0,296(a0)                            Return-Tgt, allGrp
20407270:    00812403              lw    s0,8(sp)                               allGrp
20407274:    00012423              sw    zero,8(sp)                             allGrp
20407278:    00c12083              lw    ra,12(sp)                              allGrp
2040727c:    00012623              sw    zero,12(sp)                            allGrp
20407280:    01010113              addi    sp,sp,16                             allGrp
20407284:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407288 <__get_current_locale>:
20407288:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
   The current locale is either the locale of the current thread, if the
   thread called uselocale, or the global locale if not. */
_ELIDABLE_INLINE struct __locale_t *
__get_current_locale (void)
{
  return _REENT->_locale ?: __get_global_locale ();
2040728c:    00112623              sw    ra,12(sp)                              allGrp
20407290:    00812423              sw    s0,8(sp)                               allGrp
20407294:    01010413              addi    s0,sp,16                             allGrp
20407298:    80000537              lui    a0,0x80000                            allGrp
2040729c:    43052503              lw    a0,1072(a0) # 80000430 <_sp+0xffffc430>allGrp
204072a0:    03452503              lw    a0,52(a0)                              allGrp
204072a4:    00000593              li    a1,0                                   allGrp
204072a8:    fea42a23              sw    a0,-12(s0)                             allGrp
204072ac:    00b50a63              beq    a0,a1,204072c0 <__get_current_locale+0x38>allGrp, Branch-Instr, controlFlowGrp
204072b0:    0040006f              j    204072b4 <__get_current_locale+0x2c>    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204072b4:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
204072b8:    fea42823              sw    a0,-16(s0)                             allGrp
204072bc:    0140006f              j    204072d0 <__get_current_locale+0x48>    allGrp, Branch-Instr, controlFlowGrp
204072c0:    00000097              auipc    ra,0x0                              Branch-Tgt, allGrp
204072c4:    0f8080e7              jalr    248(ra) # 204073b8 <__get_global_locale>Call-Instr, allGrp, controlFlowGrp
204072c8:    fea42823              sw    a0,-16(s0)                             Return-Tgt, allGrp
204072cc:    0040006f              j    204072d0 <__get_current_locale+0x48>    allGrp, Branch-Instr, controlFlowGrp
204072d0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204072d4:    00812403              lw    s0,8(sp)                               allGrp
204072d8:    00012423              sw    zero,8(sp)                             allGrp
204072dc:    00c12083              lw    ra,12(sp)                              allGrp
204072e0:    00012623              sw    zero,12(sp)                            allGrp
204072e4:    01010113              addi    sp,sp,16                             allGrp
204072e8:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204072ec <__locale_ctype_ptr_l>:
204072ec:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
204072f0:    00112623              sw    ra,12(sp)                              allGrp
204072f4:    00812423              sw    s0,8(sp)                               allGrp
204072f8:    01010413              addi    s0,sp,16                             allGrp
204072fc:    00050593              mv    a1,a0                                  allGrp
20407300:    fea42a23              sw    a0,-12(s0)                             allGrp
}

const char *
__locale_ctype_ptr_l (struct __locale_t *locale)
{
  return locale->ctype_ptr;
20407304:    ff442503              lw    a0,-12(s0)                             allGrp
20407308:    0ec52503              lw    a0,236(a0)                             allGrp
2040730c:    feb42823              sw    a1,-16(s0)                             allGrp
20407310:    00812403              lw    s0,8(sp)                               allGrp
20407314:    00012423              sw    zero,8(sp)                             allGrp
20407318:    00c12083              lw    ra,12(sp)                              allGrp
2040731c:    00012623              sw    zero,12(sp)                            allGrp
20407320:    01010113              addi    sp,sp,16                             allGrp
20407324:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407328 <__locale_ctype_ptr>:
20407328:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
}

const char *
__locale_ctype_ptr (void)
{
  return __get_current_locale ()->ctype_ptr;
2040732c:    00112623              sw    ra,12(sp)                              allGrp
20407330:    00812423              sw    s0,8(sp)                               allGrp
20407334:    01010413              addi    s0,sp,16                             allGrp
20407338:    00000097              auipc    ra,0x0                              allGrp
2040733c:    f50080e7              jalr    -176(ra) # 20407288 <__get_current_locale>Call-Instr, allGrp, controlFlowGrp
20407340:    0ec52503              lw    a0,236(a0)                             Return-Tgt, allGrp
20407344:    00812403              lw    s0,8(sp)                               allGrp
20407348:    00012423              sw    zero,8(sp)                             allGrp
2040734c:    00c12083              lw    ra,12(sp)                              allGrp
20407350:    00012623              sw    zero,12(sp)                            allGrp
20407354:    01010113              addi    sp,sp,16                             allGrp
20407358:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040735c <setlocale>:
2040735c:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
20407360:    00112e23              sw    ra,28(sp)                              allGrp
20407364:    00812c23              sw    s0,24(sp)                              allGrp
20407368:    02010413              addi    s0,sp,32                             allGrp
2040736c:    00058613              mv    a2,a1                                  allGrp
20407370:    00050693              mv    a3,a0                                  allGrp
20407374:    fea42a23              sw    a0,-12(s0)                             allGrp
20407378:    feb42823              sw    a1,-16(s0)                             allGrp
char *
_DEFUN (setlocale, (category, locale),
	int category _AND
	_CONST char *locale)
{
  return _setlocale_r (_REENT, category, locale);
2040737c:    80000537              lui    a0,0x80000                            allGrp
20407380:    43052503              lw    a0,1072(a0) # 80000430 <_sp+0xffffc430>allGrp
20407384:    ff442583              lw    a1,-12(s0)                             allGrp
20407388:    ff042703              lw    a4,-16(s0)                             allGrp
2040738c:    fec42623              sw    a2,-20(s0)                             allGrp
20407390:    00070613              mv    a2,a4                                  allGrp
20407394:    fed42423              sw    a3,-24(s0)                             allGrp
20407398:    00000097              auipc    ra,0x0                              allGrp
2040739c:    ddc080e7              jalr    -548(ra) # 20407174 <_setlocale_r>   Call-Instr, allGrp, controlFlowGrp
204073a0:    01812403              lw    s0,24(sp)                              Return-Tgt, allGrp
204073a4:    00012c23              sw    zero,24(sp)                            allGrp
204073a8:    01c12083              lw    ra,28(sp)                              allGrp
204073ac:    00012e23              sw    zero,28(sp)                            allGrp
204073b0:    02010113              addi    sp,sp,32                             allGrp
204073b4:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204073b8 <__get_global_locale>:
204073b8:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
  return &__global_locale;
204073bc:    00112623              sw    ra,12(sp)                              allGrp
204073c0:    00812423              sw    s0,8(sp)                               allGrp
204073c4:    01010413              addi    s0,sp,16                             allGrp
204073c8:    80000537              lui    a0,0x80000                            allGrp
204073cc:    43450513              addi    a0,a0,1076 # 80000434 <_sp+0xffffc434>allGrp
204073d0:    00812403              lw    s0,8(sp)                               allGrp
204073d4:    00012423              sw    zero,8(sp)                             allGrp
204073d8:    00c12083              lw    ra,12(sp)                              allGrp
204073dc:    00012623              sw    zero,12(sp)                            allGrp
204073e0:    01010113              addi    sp,sp,16                             allGrp
204073e4:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204073e8 <_mbtowc_r>:
204073e8:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp, Branch-Tgt
204073ec:    02112e23              sw    ra,60(sp)                              allGrp
204073f0:    02812c23              sw    s0,56(sp)                              allGrp
204073f4:    04010413              addi    s0,sp,64                             allGrp
204073f8:    00070793              mv    a5,a4                                  allGrp
204073fc:    00068813              mv    a6,a3                                  allGrp
20407400:    00060893              mv    a7,a2                                  allGrp
20407404:    00058293              mv    t0,a1                                  allGrp
20407408:    00050313              mv    t1,a0                                  allGrp
2040740c:    fea42a23              sw    a0,-12(s0)                             allGrp
20407410:    feb42823              sw    a1,-16(s0)                             allGrp
20407414:    fec42623              sw    a2,-20(s0)                             allGrp
20407418:    fed42423              sw    a3,-24(s0)                             allGrp
2040741c:    fee42223              sw    a4,-28(s0)                             allGrp
        wchar_t       *__restrict pwc _AND 
        const char    *__restrict s   _AND        
        size_t         n   _AND
        mbstate_t      *state)
{
  return __MBTOWC (r, pwc, s, n, state);
20407420:    fef42023              sw    a5,-32(s0)                             allGrp
20407424:    fd042e23              sw    a6,-36(s0)                             allGrp
20407428:    fd142c23              sw    a7,-40(s0)                             allGrp
2040742c:    fc542a23              sw    t0,-44(s0)                             allGrp
20407430:    fc642823              sw    t1,-48(s0)                             allGrp
20407434:    00000097              auipc    ra,0x0                              allGrp
20407438:    058080e7              jalr    88(ra) # 2040748c <__get_current_locale>Call-Instr, allGrp, controlFlowGrp
2040743c:    0e452503              lw    a0,228(a0)                             Return-Tgt, allGrp
20407440:    ff442583              lw    a1,-12(s0)                             allGrp
20407444:    ff042603              lw    a2,-16(s0)                             allGrp
20407448:    fec42683              lw    a3,-20(s0)                             allGrp
2040744c:    fe842703              lw    a4,-24(s0)                             allGrp
20407450:    fe442783              lw    a5,-28(s0)                             allGrp
20407454:    fca42623              sw    a0,-52(s0)                             allGrp
20407458:    00058513              mv    a0,a1                                  allGrp
2040745c:    00060593              mv    a1,a2                                  allGrp
20407460:    00068613              mv    a2,a3                                  allGrp
20407464:    00070693              mv    a3,a4                                  allGrp
20407468:    00078713              mv    a4,a5                                  allGrp
2040746c:    fcc42783              lw    a5,-52(s0)                             allGrp
20407470:    000780e7              jalr    a5 # 40140000 <__fini_array_end+0x1fd2d640>Call-Instr, allGrp, controlFlowGrp
20407474:    03812403              lw    s0,56(sp)                              Return-Tgt, allGrp
20407478:    02012c23              sw    zero,56(sp)                            allGrp
2040747c:    03c12083              lw    ra,60(sp)                              allGrp
20407480:    02012e23              sw    zero,60(sp)                            allGrp
20407484:    04010113              addi    sp,sp,64                             allGrp
20407488:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040748c <__get_current_locale>:
2040748c:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
   The current locale is either the locale of the current thread, if the
   thread called uselocale, or the global locale if not. */
_ELIDABLE_INLINE struct __locale_t *
__get_current_locale (void)
{
  return _REENT->_locale ?: __get_global_locale ();
20407490:    00112623              sw    ra,12(sp)                              allGrp
20407494:    00812423              sw    s0,8(sp)                               allGrp
20407498:    01010413              addi    s0,sp,16                             allGrp
2040749c:    80000537              lui    a0,0x80000                            allGrp
204074a0:    43052503              lw    a0,1072(a0) # 80000430 <_sp+0xffffc430>allGrp
204074a4:    03452503              lw    a0,52(a0)                              allGrp
204074a8:    00000593              li    a1,0                                   allGrp
204074ac:    fea42a23              sw    a0,-12(s0)                             allGrp
204074b0:    00b50a63              beq    a0,a1,204074c4 <__get_current_locale+0x38>allGrp, Branch-Instr, controlFlowGrp
204074b4:    0040006f              j    204074b8 <__get_current_locale+0x2c>    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204074b8:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
204074bc:    fea42823              sw    a0,-16(s0)                             allGrp
204074c0:    0140006f              j    204074d4 <__get_current_locale+0x48>    allGrp, Branch-Instr, controlFlowGrp
204074c4:    00000097              auipc    ra,0x0                              Branch-Tgt, allGrp
204074c8:    12c080e7              jalr    300(ra) # 204075f0 <__get_global_locale>Call-Instr, allGrp, controlFlowGrp
204074cc:    fea42823              sw    a0,-16(s0)                             Return-Tgt, allGrp
204074d0:    0040006f              j    204074d4 <__get_current_locale+0x48>    allGrp, Branch-Instr, controlFlowGrp
204074d4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204074d8:    00812403              lw    s0,8(sp)                               allGrp
204074dc:    00012423              sw    zero,8(sp)                             allGrp
204074e0:    00c12083              lw    ra,12(sp)                              allGrp
204074e4:    00012623              sw    zero,12(sp)                            allGrp
204074e8:    01010113              addi    sp,sp,16                             allGrp
204074ec:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204074f0 <__ascii_mbtowc>:
204074f0:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp, Branch-Tgt
204074f4:    02112e23              sw    ra,60(sp)                              allGrp
204074f8:    02812c23              sw    s0,56(sp)                              allGrp
204074fc:    04010413              addi    s0,sp,64                             allGrp
20407500:    00070793              mv    a5,a4                                  allGrp
20407504:    00068813              mv    a6,a3                                  allGrp
20407508:    00060893              mv    a7,a2                                  allGrp
2040750c:    00058293              mv    t0,a1                                  allGrp
20407510:    00050313              mv    t1,a0                                  allGrp
20407514:    fea42823              sw    a0,-16(s0)                             allGrp
20407518:    feb42623              sw    a1,-20(s0)                             allGrp
2040751c:    fec42423              sw    a2,-24(s0)                             allGrp
20407520:    fed42223              sw    a3,-28(s0)                             allGrp
20407524:    fee42023              sw    a4,-32(s0)                             allGrp
        const char    *s       _AND        
        size_t         n       _AND
        mbstate_t      *state)
{
  wchar_t dummy;
  unsigned char *t = (unsigned char *)s;
20407528:    fe842503              lw    a0,-24(s0)                             allGrp
2040752c:    fca42c23              sw    a0,-40(s0)                             allGrp

  if (pwc == NULL)
20407530:    fec42503              lw    a0,-20(s0)                             allGrp
20407534:    00000593              li    a1,0                                   allGrp
20407538:    fcf42a23              sw    a5,-44(s0)                             allGrp
2040753c:    fd042823              sw    a6,-48(s0)                             allGrp
20407540:    fd142623              sw    a7,-52(s0)                             allGrp
20407544:    fc542423              sw    t0,-56(s0)                             allGrp
20407548:    fc642223              sw    t1,-60(s0)                             allGrp
2040754c:    00b51a63              bne    a0,a1,20407560 <__ascii_mbtowc+0x70>  allGrp, Branch-Instr, controlFlowGrp
20407550:    0040006f              j    20407554 <__ascii_mbtowc+0x64>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    pwc = &dummy;
20407554:    fdc40513              addi    a0,s0,-36                            Branch-Tgt, allGrp
20407558:    fea42623              sw    a0,-20(s0)                             allGrp
2040755c:    0040006f              j    20407560 <__ascii_mbtowc+0x70>          allGrp, Branch-Instr, controlFlowGrp

  if (s == NULL)
20407560:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20407564:    00000593              li    a1,0                                   allGrp
20407568:    00b51a63              bne    a0,a1,2040757c <__ascii_mbtowc+0x8c>  allGrp, Branch-Instr, controlFlowGrp
2040756c:    0040006f              j    20407570 <__ascii_mbtowc+0x80>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return 0;
20407570:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20407574:    fea42a23              sw    a0,-12(s0)                             allGrp
20407578:    05c0006f              j    204075d4 <__ascii_mbtowc+0xe4>          allGrp, Branch-Instr, controlFlowGrp

  if (n == 0)
2040757c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20407580:    00000593              li    a1,0                                   allGrp
20407584:    00b51a63              bne    a0,a1,20407598 <__ascii_mbtowc+0xa8>  allGrp, Branch-Instr, controlFlowGrp
20407588:    0040006f              j    2040758c <__ascii_mbtowc+0x9c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return -2;
2040758c:    ffe00513              li    a0,-2                                  Branch-Tgt, allGrp
20407590:    fea42a23              sw    a0,-12(s0)                             allGrp
20407594:    0400006f              j    204075d4 <__ascii_mbtowc+0xe4>          allGrp, Branch-Instr, controlFlowGrp
      r->_errno = EILSEQ;
      return -1;
    }
#endif

  *pwc = (wchar_t)*t;
20407598:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040759c:    00054503              lbu    a0,0(a0)                              allGrp
204075a0:    fec42583              lw    a1,-20(s0)                             allGrp
204075a4:    00a5a023              sw    a0,0(a1)                               allGrp
  
  if (*t == '\0')
204075a8:    fd842503              lw    a0,-40(s0)                             allGrp
204075ac:    00054503              lbu    a0,0(a0)                              allGrp
204075b0:    00000593              li    a1,0                                   allGrp
204075b4:    00b51a63              bne    a0,a1,204075c8 <__ascii_mbtowc+0xd8>  allGrp, Branch-Instr, controlFlowGrp
204075b8:    0040006f              j    204075bc <__ascii_mbtowc+0xcc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return 0;
204075bc:    00000513              li    a0,0                                   Branch-Tgt, allGrp
204075c0:    fea42a23              sw    a0,-12(s0)                             allGrp
204075c4:    0100006f              j    204075d4 <__ascii_mbtowc+0xe4>          allGrp, Branch-Instr, controlFlowGrp

  return 1;
204075c8:    00100513              li    a0,1                                   Branch-Tgt, allGrp
204075cc:    fea42a23              sw    a0,-12(s0)                             allGrp
204075d0:    0040006f              j    204075d4 <__ascii_mbtowc+0xe4>          allGrp, Branch-Instr, controlFlowGrp
}
204075d4:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
204075d8:    03812403              lw    s0,56(sp)                              allGrp
204075dc:    02012c23              sw    zero,56(sp)                            allGrp
204075e0:    03c12083              lw    ra,60(sp)                              allGrp
204075e4:    02012e23              sw    zero,60(sp)                            allGrp
204075e8:    04010113              addi    sp,sp,64                             allGrp
204075ec:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204075f0 <__get_global_locale>:
204075f0:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
  return &__global_locale;
204075f4:    00112623              sw    ra,12(sp)                              allGrp
204075f8:    00812423              sw    s0,8(sp)                               allGrp
204075fc:    01010413              addi    s0,sp,16                             allGrp
20407600:    80000537              lui    a0,0x80000                            allGrp
20407604:    43450513              addi    a0,a0,1076 # 80000434 <_sp+0xffffc434>allGrp
20407608:    00812403              lw    s0,8(sp)                               allGrp
2040760c:    00012423              sw    zero,8(sp)                             allGrp
20407610:    00c12083              lw    ra,12(sp)                              allGrp
20407614:    00012623              sw    zero,12(sp)                            allGrp
20407618:    01010113              addi    sp,sp,16                             allGrp
2040761c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407620 <memchr>:
20407620:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp, Branch-Tgt
20407624:    02112e23              sw    ra,60(sp)                              allGrp
20407628:    02812c23              sw    s0,56(sp)                              allGrp
2040762c:    04010413              addi    s0,sp,64                             allGrp
20407630:    00060693              mv    a3,a2                                  allGrp
20407634:    00058713              mv    a4,a1                                  allGrp
20407638:    00050793              mv    a5,a0                                  allGrp
2040763c:    fea42823              sw    a0,-16(s0)                             allGrp
20407640:    feb42623              sw    a1,-20(s0)                             allGrp
20407644:    fec42423              sw    a2,-24(s0)                             allGrp
_DEFUN (memchr, (src_void, c, length),
	_CONST _PTR src_void _AND
	int c _AND
	size_t length)
{
  _CONST unsigned char *src = (_CONST unsigned char *) src_void;
20407648:    ff042503              lw    a0,-16(s0)                             allGrp
2040764c:    fea42223              sw    a0,-28(s0)                             allGrp
  unsigned char d = c;
20407650:    fec42503              lw    a0,-20(s0)                             allGrp
20407654:    fea401a3              sb    a0,-29(s0)                             allGrp
#if !defined(PREFER_SIZE_OVER_SPEED) && !defined(__OPTIMIZE_SIZE__)
  unsigned long *asrc;
  unsigned long  mask;
  unsigned int i;

  while (UNALIGNED (src))
20407658:    fcd42823              sw    a3,-48(s0)                             allGrp
2040765c:    fce42623              sw    a4,-52(s0)                             allGrp
20407660:    fcf42423              sw    a5,-56(s0)                             allGrp
20407664:    0040006f              j    20407668 <memchr+0x48>                  allGrp, Branch-Instr, controlFlowGrp
20407668:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040766c:    00357513              andi    a0,a0,3                              allGrp
20407670:    00000593              li    a1,0                                   allGrp
20407674:    04b50e63              beq    a0,a1,204076d0 <memchr+0xb0>          allGrp, Branch-Instr, controlFlowGrp
20407678:    0040006f              j    2040767c <memchr+0x5c>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (!length--)
2040767c:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20407680:    fff50593              addi    a1,a0,-1                             allGrp
20407684:    feb42423              sw    a1,-24(s0)                             allGrp
20407688:    00000593              li    a1,0                                   allGrp
2040768c:    00b51a63              bne    a0,a1,204076a0 <memchr+0x80>          allGrp, Branch-Instr, controlFlowGrp
20407690:    0040006f              j    20407694 <memchr+0x74>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        return NULL;
20407694:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20407698:    fea42a23              sw    a0,-12(s0)                             allGrp
2040769c:    1a00006f              j    2040783c <memchr+0x21c>                 allGrp, Branch-Instr, controlFlowGrp
      if (*src == d)
204076a0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204076a4:    00054503              lbu    a0,0(a0)                              allGrp
204076a8:    fe344583              lbu    a1,-29(s0)                            allGrp
204076ac:    00b51a63              bne    a0,a1,204076c0 <memchr+0xa0>          allGrp, Branch-Instr, controlFlowGrp
204076b0:    0040006f              j    204076b4 <memchr+0x94>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        return (void *) src;
204076b4:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204076b8:    fea42a23              sw    a0,-12(s0)                             allGrp
204076bc:    1800006f              j    2040783c <memchr+0x21c>                 allGrp, Branch-Instr, controlFlowGrp
      src++;
204076c0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204076c4:    00150513              addi    a0,a0,1                              allGrp
204076c8:    fea42223              sw    a0,-28(s0)                             allGrp
  while (UNALIGNED (src))
204076cc:    f9dff06f              j    20407668 <memchr+0x48>                  allGrp, Branch-Instr, controlFlowGrp
    }

  if (!TOO_SMALL (length))
204076d0:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
204076d4:    00400593              li    a1,4                                   allGrp
204076d8:    10b56663              bltu    a0,a1,204077e4 <memchr+0x1c4>        allGrp, Branch-Instr, controlFlowGrp
204076dc:    0040006f              j    204076e0 <memchr+0xc0>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
         performs the bytewise search on word-sized segments if they
         contain the search character, which is detected by XORing
         the word-sized segment with a word-sized block of the search
         character and then detecting for the presence of NUL in the
         result.  */
      asrc = (unsigned long *) src;
204076e0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204076e4:    fca42e23              sw    a0,-36(s0)                             allGrp
      mask = d << 8 | d;
204076e8:    fe344503              lbu    a0,-29(s0)                            allGrp
204076ec:    00851513              slli    a0,a0,0x8                            allGrp
204076f0:    fe344583              lbu    a1,-29(s0)                            allGrp
204076f4:    00b56533              or    a0,a0,a1                               allGrp
204076f8:    fca42c23              sw    a0,-40(s0)                             allGrp
      mask = mask << 16 | mask;
204076fc:    fd842503              lw    a0,-40(s0)                             allGrp
20407700:    01051513              slli    a0,a0,0x10                           allGrp
20407704:    fd842583              lw    a1,-40(s0)                             allGrp
20407708:    00b56533              or    a0,a0,a1                               allGrp
2040770c:    fca42c23              sw    a0,-40(s0)                             allGrp
20407710:    02000513              li    a0,32                                  allGrp
      for (i = 32; i < LBLOCKSIZE * 8; i <<= 1)
20407714:    fca42a23              sw    a0,-44(s0)                             allGrp
20407718:    0040006f              j    2040771c <memchr+0xfc>                  allGrp, Branch-Instr, controlFlowGrp
2040771c:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
20407720:    01f00593              li    a1,31                                  allGrp
20407724:    02a5ea63              bltu    a1,a0,20407758 <memchr+0x138>        allGrp, Branch-Instr, controlFlowGrp
20407728:    0040006f              j    2040772c <memchr+0x10c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        mask = (mask << i) | mask;
2040772c:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20407730:    fd442583              lw    a1,-44(s0)                             allGrp
20407734:    00b51533              sll    a0,a0,a1                              allGrp
20407738:    fd842583              lw    a1,-40(s0)                             allGrp
2040773c:    00b56533              or    a0,a0,a1                               allGrp
20407740:    fca42c23              sw    a0,-40(s0)                             allGrp
20407744:    0040006f              j    20407748 <memchr+0x128>                 allGrp, Branch-Instr, controlFlowGrp
      for (i = 32; i < LBLOCKSIZE * 8; i <<= 1)
20407748:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
2040774c:    00151513              slli    a0,a0,0x1                            allGrp
20407750:    fca42a23              sw    a0,-44(s0)                             allGrp
20407754:    fc9ff06f              j    2040771c <memchr+0xfc>                  allGrp, Branch-Instr, controlFlowGrp

      while (length >= LBLOCKSIZE)
20407758:    0040006f              j    2040775c <memchr+0x13c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040775c:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20407760:    00400593              li    a1,4                                   allGrp
20407764:    06b56a63              bltu    a0,a1,204077d8 <memchr+0x1b8>        allGrp, Branch-Instr, controlFlowGrp
20407768:    0040006f              j    2040776c <memchr+0x14c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        {
          if (DETECTCHAR (*asrc, mask))
2040776c:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20407770:    00052503              lw    a0,0(a0)                               allGrp
20407774:    fd842583              lw    a1,-40(s0)                             allGrp
20407778:    00b54533              xor    a0,a0,a1                              allGrp
2040777c:    feff05b7              lui    a1,0xfeff0                            allGrp
20407780:    eff58593              addi    a1,a1,-257 # fefefeff <_sp+0x7efebeff>allGrp
20407784:    00b50533              add    a0,a0,a1                              allGrp
20407788:    fdc42583              lw    a1,-36(s0)                             allGrp
2040778c:    0005a583              lw    a1,0(a1)                               allGrp
20407790:    fd842603              lw    a2,-40(s0)                             allGrp
20407794:    00c5c5b3              xor    a1,a1,a2                              allGrp
20407798:    fff5c593              not    a1,a1                                 allGrp
2040779c:    00b57533              and    a0,a0,a1                              allGrp
204077a0:    808085b7              lui    a1,0x80808                            allGrp
204077a4:    08058593              addi    a1,a1,128 # 80808080 <_sp+0x804080>  allGrp
204077a8:    00b57533              and    a0,a0,a1                              allGrp
204077ac:    00000593              li    a1,0                                   allGrp
204077b0:    00b50663              beq    a0,a1,204077bc <memchr+0x19c>         allGrp, Branch-Instr, controlFlowGrp
204077b4:    0040006f              j    204077b8 <memchr+0x198>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
            break;
204077b8:    0200006f              j    204077d8 <memchr+0x1b8>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
          length -= LBLOCKSIZE;
204077bc:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
204077c0:    ffc50513              addi    a0,a0,-4                             allGrp
204077c4:    fea42423              sw    a0,-24(s0)                             allGrp
          asrc++;
204077c8:    fdc42503              lw    a0,-36(s0)                             allGrp
204077cc:    00450513              addi    a0,a0,4                              allGrp
204077d0:    fca42e23              sw    a0,-36(s0)                             allGrp
      while (length >= LBLOCKSIZE)
204077d4:    f89ff06f              j    2040775c <memchr+0x13c>                 allGrp, Branch-Instr, controlFlowGrp
        }

      /* If there are fewer than LBLOCKSIZE characters left,
         then we resort to the bytewise loop.  */

      src = (unsigned char *) asrc;
204077d8:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
204077dc:    fea42223              sw    a0,-28(s0)                             allGrp
    }
204077e0:    0040006f              j    204077e4 <memchr+0x1c4>                 allGrp, Branch-Instr, controlFlowGrp

#endif /* not PREFER_SIZE_OVER_SPEED */

  while (length--)
204077e4:    0040006f              j    204077e8 <memchr+0x1c8>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204077e8:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
204077ec:    fff50593              addi    a1,a0,-1                             allGrp
204077f0:    feb42423              sw    a1,-24(s0)                             allGrp
204077f4:    00000593              li    a1,0                                   allGrp
204077f8:    02b50c63              beq    a0,a1,20407830 <memchr+0x210>         allGrp, Branch-Instr, controlFlowGrp
204077fc:    0040006f              j    20407800 <memchr+0x1e0>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (*src == d)
20407800:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20407804:    00054503              lbu    a0,0(a0)                              allGrp
20407808:    fe344583              lbu    a1,-29(s0)                            allGrp
2040780c:    00b51a63              bne    a0,a1,20407820 <memchr+0x200>         allGrp, Branch-Instr, controlFlowGrp
20407810:    0040006f              j    20407814 <memchr+0x1f4>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        return (void *) src;
20407814:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20407818:    fea42a23              sw    a0,-12(s0)                             allGrp
2040781c:    0200006f              j    2040783c <memchr+0x21c>                 allGrp, Branch-Instr, controlFlowGrp
      src++;
20407820:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20407824:    00150513              addi    a0,a0,1                              allGrp
20407828:    fea42223              sw    a0,-28(s0)                             allGrp
  while (length--)
2040782c:    fbdff06f              j    204077e8 <memchr+0x1c8>                 allGrp, Branch-Instr, controlFlowGrp
    }

  return NULL;
20407830:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20407834:    fea42a23              sw    a0,-12(s0)                             allGrp
20407838:    0040006f              j    2040783c <memchr+0x21c>                 allGrp, Branch-Instr, controlFlowGrp
}
2040783c:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20407840:    03812403              lw    s0,56(sp)                              allGrp
20407844:    02012c23              sw    zero,56(sp)                            allGrp
20407848:    03c12083              lw    ra,60(sp)                              allGrp
2040784c:    02012e23              sw    zero,60(sp)                            allGrp
20407850:    04010113              addi    sp,sp,64                             allGrp
20407854:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407858 <_Balloc>:
20407858:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
2040785c:    02112623              sw    ra,44(sp)                              allGrp
20407860:    02812423              sw    s0,40(sp)                              allGrp
20407864:    03010413              addi    s0,sp,48                             allGrp
20407868:    00058613              mv    a2,a1                                  allGrp
2040786c:    00050693              mv    a3,a0                                  allGrp
20407870:    fea42823              sw    a0,-16(s0)                             allGrp
20407874:    feb42623              sw    a1,-20(s0)                             allGrp
{
  int x;
  _Bigint *rv ;

  _REENT_CHECK_MP(ptr);
  if (_REENT_MP_FREELIST(ptr) == NULL)
20407878:    ff042503              lw    a0,-16(s0)                             allGrp
2040787c:    04c52503              lw    a0,76(a0)                              allGrp
20407880:    00000593              li    a1,0                                   allGrp
20407884:    fec42023              sw    a2,-32(s0)                             allGrp
20407888:    fcd42e23              sw    a3,-36(s0)                             allGrp
2040788c:    04b51463              bne    a0,a1,204078d4 <_Balloc+0x7c>         allGrp, Branch-Instr, controlFlowGrp
20407890:    0040006f              j    20407894 <_Balloc+0x3c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      /* Allocate a list of pointers to the mprec objects */
      _REENT_MP_FREELIST(ptr) = (struct _Bigint **) _calloc_r (ptr, 
20407894:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20407898:    00400593              li    a1,4                                   allGrp
2040789c:    02100613              li    a2,33                                  allGrp
204078a0:    00004097              auipc    ra,0x4                              allGrp
204078a4:    31c080e7              jalr    796(ra) # 2040bbbc <_calloc_r>       Call-Instr, allGrp, controlFlowGrp
204078a8:    ff042583              lw    a1,-16(s0)                             Return-Tgt, allGrp
204078ac:    04a5a623              sw    a0,76(a1)                              allGrp
						      sizeof (struct _Bigint *),
						      _Kmax + 1);
      if (_REENT_MP_FREELIST(ptr) == NULL)
204078b0:    ff042503              lw    a0,-16(s0)                             allGrp
204078b4:    04c52503              lw    a0,76(a0)                              allGrp
204078b8:    00000593              li    a1,0                                   allGrp
204078bc:    00b51a63              bne    a0,a1,204078d0 <_Balloc+0x78>         allGrp, Branch-Instr, controlFlowGrp
204078c0:    0040006f              j    204078c4 <_Balloc+0x6c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  return NULL;
204078c4:    00000513              li    a0,0                                   Branch-Tgt, allGrp
204078c8:    fea42a23              sw    a0,-12(s0)                             allGrp
204078cc:    0d80006f              j    204079a4 <_Balloc+0x14c>                allGrp, Branch-Instr, controlFlowGrp
	}
    }
204078d0:    0040006f              j    204078d4 <_Balloc+0x7c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

  if ((rv = _REENT_MP_FREELIST(ptr)[k]) != 0)
204078d4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204078d8:    04c52503              lw    a0,76(a0)                              allGrp
204078dc:    fec42583              lw    a1,-20(s0)                             allGrp
204078e0:    00259593              slli    a1,a1,0x2                            allGrp
204078e4:    00b50533              add    a0,a0,a1                              allGrp
204078e8:    00052503              lw    a0,0(a0)                               allGrp
204078ec:    fea42223              sw    a0,-28(s0)                             allGrp
204078f0:    00000593              li    a1,0                                   allGrp
204078f4:    02b50663              beq    a0,a1,20407920 <_Balloc+0xc8>         allGrp, Branch-Instr, controlFlowGrp
204078f8:    0040006f              j    204078fc <_Balloc+0xa4>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      _REENT_MP_FREELIST(ptr)[k] = rv->_next;
204078fc:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20407900:    00052503              lw    a0,0(a0)                               allGrp
20407904:    ff042583              lw    a1,-16(s0)                             allGrp
20407908:    04c5a583              lw    a1,76(a1)                              allGrp
2040790c:    fec42603              lw    a2,-20(s0)                             allGrp
20407910:    00261613              slli    a2,a2,0x2                            allGrp
20407914:    00c585b3              add    a1,a1,a2                              allGrp
20407918:    00a5a023              sw    a0,0(a1)                               allGrp
    }
2040791c:    0680006f              j    20407984 <_Balloc+0x12c>                allGrp, Branch-Instr, controlFlowGrp
  else
    {
      x = 1 << k;
20407920:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20407924:    00100593              li    a1,1                                   allGrp
20407928:    00a59533              sll    a0,a1,a0                              allGrp
2040792c:    fea42423              sw    a0,-24(s0)                             allGrp
      /* Allocate an mprec Bigint and stick in in the freelist */
      rv = (_Bigint *) _calloc_r (ptr,
20407930:    ff042503              lw    a0,-16(s0)                             allGrp
				  1,
				  sizeof (_Bigint) +
				  (x-1) * sizeof(rv->_x));
20407934:    fe842603              lw    a2,-24(s0)                             allGrp
20407938:    00261613              slli    a2,a2,0x2                            allGrp
				  sizeof (_Bigint) +
2040793c:    01460613              addi    a2,a2,20                             allGrp
      rv = (_Bigint *) _calloc_r (ptr,
20407940:    00004097              auipc    ra,0x4                              allGrp
20407944:    27c080e7              jalr    636(ra) # 2040bbbc <_calloc_r>       Call-Instr, allGrp, controlFlowGrp
20407948:    fea42223              sw    a0,-28(s0)                             Return-Tgt, allGrp
      if (rv == NULL) return NULL;
2040794c:    fe442503              lw    a0,-28(s0)                             allGrp
20407950:    00000593              li    a1,0                                   allGrp
20407954:    00b51a63              bne    a0,a1,20407968 <_Balloc+0x110>        allGrp, Branch-Instr, controlFlowGrp
20407958:    0040006f              j    2040795c <_Balloc+0x104>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040795c:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20407960:    fea42a23              sw    a0,-12(s0)                             allGrp
20407964:    0400006f              j    204079a4 <_Balloc+0x14c>                allGrp, Branch-Instr, controlFlowGrp
      rv->_k = k;
20407968:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040796c:    fe442583              lw    a1,-28(s0)                             allGrp
20407970:    00a5a223              sw    a0,4(a1)                               allGrp
      rv->_maxwds = x;
20407974:    fe842503              lw    a0,-24(s0)                             allGrp
20407978:    fe442583              lw    a1,-28(s0)                             allGrp
2040797c:    00a5a423              sw    a0,8(a1)                               allGrp
20407980:    0040006f              j    20407984 <_Balloc+0x12c>                allGrp, Branch-Instr, controlFlowGrp
    }
  rv->_sign = rv->_wds = 0;
20407984:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20407988:    00000593              li    a1,0                                   allGrp
2040798c:    00b52823              sw    a1,16(a0)                              allGrp
20407990:    fe442503              lw    a0,-28(s0)                             allGrp
20407994:    00b52623              sw    a1,12(a0)                              allGrp
  return rv;
20407998:    fe442503              lw    a0,-28(s0)                             allGrp
2040799c:    fea42a23              sw    a0,-12(s0)                             allGrp
204079a0:    0040006f              j    204079a4 <_Balloc+0x14c>                allGrp, Branch-Instr, controlFlowGrp
}
204079a4:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
204079a8:    02812403              lw    s0,40(sp)                              allGrp
204079ac:    02012423              sw    zero,40(sp)                            allGrp
204079b0:    02c12083              lw    ra,44(sp)                              allGrp
204079b4:    02012623              sw    zero,44(sp)                            allGrp
204079b8:    03010113              addi    sp,sp,48                             allGrp
204079bc:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204079c0 <_Bfree>:
204079c0:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
204079c4:    00112e23              sw    ra,28(sp)                              allGrp
204079c8:    00812c23              sw    s0,24(sp)                              allGrp
204079cc:    02010413              addi    s0,sp,32                             allGrp
204079d0:    00058613              mv    a2,a1                                  allGrp
204079d4:    00050693              mv    a3,a0                                  allGrp
204079d8:    fea42a23              sw    a0,-12(s0)                             allGrp
204079dc:    feb42823              sw    a1,-16(s0)                             allGrp

void
_DEFUN (Bfree, (ptr, v), struct _reent *ptr _AND _Bigint * v)
{
  _REENT_CHECK_MP(ptr);
  if (v)
204079e0:    ff042503              lw    a0,-16(s0)                             allGrp
204079e4:    00000593              li    a1,0                                   allGrp
204079e8:    fec42623              sw    a2,-20(s0)                             allGrp
204079ec:    fed42423              sw    a3,-24(s0)                             allGrp
204079f0:    04b50863              beq    a0,a1,20407a40 <_Bfree+0x80>          allGrp, Branch-Instr, controlFlowGrp
204079f4:    0040006f              j    204079f8 <_Bfree+0x38>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      v->_next = _REENT_MP_FREELIST(ptr)[v->_k];
204079f8:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
204079fc:    04c52503              lw    a0,76(a0)                              allGrp
20407a00:    ff042583              lw    a1,-16(s0)                             allGrp
20407a04:    0045a583              lw    a1,4(a1)                               allGrp
20407a08:    00259593              slli    a1,a1,0x2                            allGrp
20407a0c:    00b50533              add    a0,a0,a1                              allGrp
20407a10:    00052503              lw    a0,0(a0)                               allGrp
20407a14:    ff042583              lw    a1,-16(s0)                             allGrp
20407a18:    00a5a023              sw    a0,0(a1)                               allGrp
      _REENT_MP_FREELIST(ptr)[v->_k] = v;
20407a1c:    ff042503              lw    a0,-16(s0)                             allGrp
20407a20:    ff442583              lw    a1,-12(s0)                             allGrp
20407a24:    04c5a583              lw    a1,76(a1)                              allGrp
20407a28:    ff042603              lw    a2,-16(s0)                             allGrp
20407a2c:    00462603              lw    a2,4(a2)                               allGrp
20407a30:    00261613              slli    a2,a2,0x2                            allGrp
20407a34:    00c585b3              add    a1,a1,a2                              allGrp
20407a38:    00a5a023              sw    a0,0(a1)                               allGrp
    }
20407a3c:    0040006f              j    20407a40 <_Bfree+0x80>                  allGrp, Branch-Instr, controlFlowGrp
}
20407a40:    01812403              lw    s0,24(sp)                              Branch-Tgt, allGrp
20407a44:    00012c23              sw    zero,24(sp)                            allGrp
20407a48:    01c12083              lw    ra,28(sp)                              allGrp
20407a4c:    00012e23              sw    zero,28(sp)                            allGrp
20407a50:    02010113              addi    sp,sp,32                             allGrp
20407a54:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407a58 <__multadd>:
20407a58:    fb010113              addi    sp,sp,-80                            Call-Tgt, allGrp, Branch-Tgt
20407a5c:    04112623              sw    ra,76(sp)                              allGrp
20407a60:    04812423              sw    s0,72(sp)                              allGrp
20407a64:    05010413              addi    s0,sp,80                             allGrp
20407a68:    00068713              mv    a4,a3                                  allGrp
20407a6c:    00060793              mv    a5,a2                                  allGrp
20407a70:    00058813              mv    a6,a1                                  allGrp
20407a74:    00050893              mv    a7,a0                                  allGrp
20407a78:    fea42a23              sw    a0,-12(s0)                             allGrp
20407a7c:    feb42823              sw    a1,-16(s0)                             allGrp
20407a80:    fec42623              sw    a2,-20(s0)                             allGrp
20407a84:    fed42423              sw    a3,-24(s0)                             allGrp
#ifdef Pack_32
  __ULong xi, z;
#endif
  _Bigint *b1;

  wds = b->_wds;
20407a88:    ff042503              lw    a0,-16(s0)                             allGrp
20407a8c:    01052503              lw    a0,16(a0)                              allGrp
20407a90:    fea42023              sw    a0,-32(s0)                             allGrp
  x = b->_x;
20407a94:    ff042503              lw    a0,-16(s0)                             allGrp
20407a98:    01450513              addi    a0,a0,20                             allGrp
20407a9c:    fca42e23              sw    a0,-36(s0)                             allGrp
20407aa0:    00000513              li    a0,0                                   allGrp
  i = 0;
20407aa4:    fea42223              sw    a0,-28(s0)                             allGrp
  do
20407aa8:    fce42423              sw    a4,-56(s0)                             allGrp
20407aac:    fcf42223              sw    a5,-60(s0)                             allGrp
20407ab0:    fd042023              sw    a6,-64(s0)                             allGrp
20407ab4:    fb142e23              sw    a7,-68(s0)                             allGrp
20407ab8:    0040006f              j    20407abc <__multadd+0x64>               allGrp, Branch-Instr, controlFlowGrp
    {
#ifdef Pack_32
      xi = *x;
20407abc:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20407ac0:    00052503              lw    a0,0(a0)                               allGrp
20407ac4:    fca42a23              sw    a0,-44(s0)                             allGrp
      y = (xi & 0xffff) * m + a;
20407ac8:    fd445503              lhu    a0,-44(s0)                            allGrp
20407acc:    fec42583              lw    a1,-20(s0)                             allGrp
20407ad0:    0000a097              auipc    ra,0xa                              allGrp
20407ad4:    784080e7              jalr    1924(ra) # 20412254 <__mulsi3>       Call-Instr, allGrp, controlFlowGrp
20407ad8:    fe842583              lw    a1,-24(s0)                             Return-Tgt, allGrp
20407adc:    00b50533              add    a0,a0,a1                              allGrp
20407ae0:    fca42c23              sw    a0,-40(s0)                             allGrp
      z = (xi >> 16) * m + (y >> 16);
20407ae4:    fd645503              lhu    a0,-42(s0)                            allGrp
20407ae8:    fec42583              lw    a1,-20(s0)                             allGrp
20407aec:    0000a097              auipc    ra,0xa                              allGrp
20407af0:    768080e7              jalr    1896(ra) # 20412254 <__mulsi3>       Call-Instr, allGrp, controlFlowGrp
20407af4:    fda45583              lhu    a1,-38(s0)                            Return-Tgt, allGrp
20407af8:    00b50533              add    a0,a0,a1                              allGrp
20407afc:    fca42823              sw    a0,-48(s0)                             allGrp
      a = (int) (z >> 16);
20407b00:    fd245503              lhu    a0,-46(s0)                            allGrp
20407b04:    fea42423              sw    a0,-24(s0)                             allGrp
      *x++ = (z << 16) + (y & 0xffff);
20407b08:    fd042503              lw    a0,-48(s0)                             allGrp
20407b0c:    01051513              slli    a0,a0,0x10                           allGrp
20407b10:    fd845583              lhu    a1,-40(s0)                            allGrp
20407b14:    00b56533              or    a0,a0,a1                               allGrp
20407b18:    fdc42583              lw    a1,-36(s0)                             allGrp
20407b1c:    00458613              addi    a2,a1,4                              allGrp
20407b20:    fcc42e23              sw    a2,-36(s0)                             allGrp
20407b24:    00a5a023              sw    a0,0(a1)                               allGrp
#else
      y = *x * m + a;
      a = (int) (y >> 16);
      *x++ = y & 0xffff;
#endif
    }
20407b28:    0040006f              j    20407b2c <__multadd+0xd4>               allGrp, Branch-Instr, controlFlowGrp
  while (++i < wds);
20407b2c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20407b30:    00150513              addi    a0,a0,1                              allGrp
20407b34:    fea42223              sw    a0,-28(s0)                             allGrp
20407b38:    fe042583              lw    a1,-32(s0)                             allGrp
    }
20407b3c:    f8b540e3              blt    a0,a1,20407abc <__multadd+0x64>       allGrp, Branch-Instr, controlFlowGrp
20407b40:    0040006f              j    20407b44 <__multadd+0xec>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  if (a)
20407b44:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20407b48:    00000593              li    a1,0                                   allGrp
20407b4c:    0ab50c63              beq    a0,a1,20407c04 <__multadd+0x1ac>      allGrp, Branch-Instr, controlFlowGrp
20407b50:    0040006f              j    20407b54 <__multadd+0xfc>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (wds >= b->_maxwds)
20407b54:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20407b58:    ff042583              lw    a1,-16(s0)                             allGrp
20407b5c:    0085a583              lw    a1,8(a1)                               allGrp
20407b60:    06b54a63              blt    a0,a1,20407bd4 <__multadd+0x17c>      allGrp, Branch-Instr, controlFlowGrp
20407b64:    0040006f              j    20407b68 <__multadd+0x110>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  b1 = Balloc (ptr, b->_k + 1);
20407b68:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20407b6c:    ff042583              lw    a1,-16(s0)                             allGrp
20407b70:    0045a583              lw    a1,4(a1)                               allGrp
20407b74:    00158593              addi    a1,a1,1                              allGrp
20407b78:    00000097              auipc    ra,0x0                              allGrp
20407b7c:    ce0080e7              jalr    -800(ra) # 20407858 <_Balloc>        Call-Instr, allGrp, controlFlowGrp
20407b80:    fca42623              sw    a0,-52(s0)                             Return-Tgt, allGrp
	  Bcopy (b1, b);
20407b84:    fcc42503              lw    a0,-52(s0)                             allGrp
20407b88:    00c50513              addi    a0,a0,12                             allGrp
20407b8c:    ff042583              lw    a1,-16(s0)                             allGrp
20407b90:    00c58593              addi    a1,a1,12                             allGrp
20407b94:    ff042603              lw    a2,-16(s0)                             allGrp
20407b98:    01062603              lw    a2,16(a2)                              allGrp
20407b9c:    00261613              slli    a2,a2,0x2                            allGrp
20407ba0:    00860613              addi    a2,a2,8                              allGrp
20407ba4:    ffff9097              auipc    ra,0xffff9                          allGrp
20407ba8:    5c8080e7              jalr    1480(ra) # 2040116c <memcpy>         Call-Instr, allGrp, controlFlowGrp
	  Bfree (ptr, b);
20407bac:    ff442583              lw    a1,-12(s0)                             Return-Tgt, allGrp
20407bb0:    ff042603              lw    a2,-16(s0)                             allGrp
20407bb4:    faa42c23              sw    a0,-72(s0)                             allGrp
20407bb8:    00058513              mv    a0,a1                                  allGrp
20407bbc:    00060593              mv    a1,a2                                  allGrp
20407bc0:    00000097              auipc    ra,0x0                              allGrp
20407bc4:    e00080e7              jalr    -512(ra) # 204079c0 <_Bfree>         Call-Instr, allGrp, controlFlowGrp
	  b = b1;
20407bc8:    fcc42503              lw    a0,-52(s0)                             Return-Tgt, allGrp
20407bcc:    fea42823              sw    a0,-16(s0)                             allGrp
	}
20407bd0:    0040006f              j    20407bd4 <__multadd+0x17c>              allGrp, Branch-Instr, controlFlowGrp
      b->_x[wds++] = a;
20407bd4:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20407bd8:    ff042583              lw    a1,-16(s0)                             allGrp
20407bdc:    fe042603              lw    a2,-32(s0)                             allGrp
20407be0:    00261693              slli    a3,a2,0x2                            allGrp
20407be4:    00d585b3              add    a1,a1,a3                              allGrp
20407be8:    00160613              addi    a2,a2,1                              allGrp
20407bec:    fec42023              sw    a2,-32(s0)                             allGrp
20407bf0:    00a5aa23              sw    a0,20(a1)                              allGrp
      b->_wds = wds;
20407bf4:    fe042503              lw    a0,-32(s0)                             allGrp
20407bf8:    ff042583              lw    a1,-16(s0)                             allGrp
20407bfc:    00a5a823              sw    a0,16(a1)                              allGrp
    }
20407c00:    0040006f              j    20407c04 <__multadd+0x1ac>              allGrp, Branch-Instr, controlFlowGrp
  return b;
20407c04:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20407c08:    04812403              lw    s0,72(sp)                              allGrp
20407c0c:    04012423              sw    zero,72(sp)                            allGrp
20407c10:    04c12083              lw    ra,76(sp)                              allGrp
20407c14:    04012623              sw    zero,76(sp)                            allGrp
20407c18:    05010113              addi    sp,sp,80                             allGrp
20407c1c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407c20 <__s2b>:
20407c20:    fb010113              addi    sp,sp,-80                            Call-Tgt, allGrp, Branch-Tgt
20407c24:    04112623              sw    ra,76(sp)                              allGrp
20407c28:    04812423              sw    s0,72(sp)                              allGrp
20407c2c:    05010413              addi    s0,sp,80                             allGrp
20407c30:    00070793              mv    a5,a4                                  allGrp
20407c34:    00068813              mv    a6,a3                                  allGrp
20407c38:    00060893              mv    a7,a2                                  allGrp
20407c3c:    00058293              mv    t0,a1                                  allGrp
20407c40:    00050313              mv    t1,a0                                  allGrp
20407c44:    fea42a23              sw    a0,-12(s0)                             allGrp
20407c48:    feb42823              sw    a1,-16(s0)                             allGrp
20407c4c:    fec42623              sw    a2,-20(s0)                             allGrp
20407c50:    fed42423              sw    a3,-24(s0)                             allGrp
20407c54:    fee42223              sw    a4,-28(s0)                             allGrp
{
  _Bigint *b;
  int i, k;
  __Long x, y;

  x = (nd + 8) / 9;
20407c58:    fe842503              lw    a0,-24(s0)                             allGrp
20407c5c:    00850513              addi    a0,a0,8                              allGrp
20407c60:    00900593              li    a1,9                                   allGrp
20407c64:    fcf42623              sw    a5,-52(s0)                             allGrp
20407c68:    fd042423              sw    a6,-56(s0)                             allGrp
20407c6c:    fd142223              sw    a7,-60(s0)                             allGrp
20407c70:    fc542023              sw    t0,-64(s0)                             allGrp
20407c74:    fa642e23              sw    t1,-68(s0)                             allGrp
20407c78:    0000a097              auipc    ra,0xa                              allGrp
20407c7c:    600080e7              jalr    1536(ra) # 20412278 <__divsi3>       Call-Instr, allGrp, controlFlowGrp
20407c80:    fca42a23              sw    a0,-44(s0)                             Return-Tgt, allGrp
20407c84:    00000513              li    a0,0                                   allGrp
  for (k = 0, y = 1; x > y; y <<= 1, k++);
20407c88:    fca42c23              sw    a0,-40(s0)                             allGrp
20407c8c:    00100513              li    a0,1                                   allGrp
20407c90:    fca42823              sw    a0,-48(s0)                             allGrp
20407c94:    0040006f              j    20407c98 <__s2b+0x78>                   allGrp, Branch-Instr, controlFlowGrp
20407c98:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
20407c9c:    fd042583              lw    a1,-48(s0)                             allGrp
20407ca0:    02a5d463              ble    a0,a1,20407cc8 <__s2b+0xa8>           allGrp, Branch-Instr, controlFlowGrp
20407ca4:    0040006f              j    20407ca8 <__s2b+0x88>                   Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20407ca8:    0040006f              j    20407cac <__s2b+0x8c>                   Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20407cac:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20407cb0:    00151513              slli    a0,a0,0x1                            allGrp
20407cb4:    fca42823              sw    a0,-48(s0)                             allGrp
20407cb8:    fd842503              lw    a0,-40(s0)                             allGrp
20407cbc:    00150513              addi    a0,a0,1                              allGrp
20407cc0:    fca42c23              sw    a0,-40(s0)                             allGrp
20407cc4:    fd5ff06f              j    20407c98 <__s2b+0x78>                   allGrp, Branch-Instr, controlFlowGrp
#ifdef Pack_32
  b = Balloc (ptr, k);
20407cc8:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20407ccc:    fd842583              lw    a1,-40(s0)                             allGrp
20407cd0:    00000097              auipc    ra,0x0                              allGrp
20407cd4:    b88080e7              jalr    -1144(ra) # 20407858 <_Balloc>       Call-Instr, allGrp, controlFlowGrp
20407cd8:    fea42023              sw    a0,-32(s0)                             Return-Tgt, allGrp
  b->_x[0] = y9;
20407cdc:    fe442503              lw    a0,-28(s0)                             allGrp
20407ce0:    fe042583              lw    a1,-32(s0)                             allGrp
20407ce4:    00a5aa23              sw    a0,20(a1)                              allGrp
  b->_wds = 1;
20407ce8:    fe042503              lw    a0,-32(s0)                             allGrp
20407cec:    00100593              li    a1,1                                   allGrp
20407cf0:    00b52823              sw    a1,16(a0)                              allGrp
20407cf4:    00900513              li    a0,9                                   allGrp
  b = Balloc (ptr, k + 1);
  b->_x[0] = y9 & 0xffff;
  b->_wds = (b->_x[1] = y9 >> 16) ? 2 : 1;
#endif

  i = 9;
20407cf8:    fca42e23              sw    a0,-36(s0)                             allGrp
  if (9 < nd0)
20407cfc:    fec42503              lw    a0,-20(s0)                             allGrp
20407d00:    00a00593              li    a1,10                                  allGrp
20407d04:    06b54863              blt    a0,a1,20407d74 <__s2b+0x154>          allGrp, Branch-Instr, controlFlowGrp
20407d08:    0040006f              j    20407d0c <__s2b+0xec>                   Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      s += 9;
20407d0c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20407d10:    00950513              addi    a0,a0,9                              allGrp
20407d14:    fea42823              sw    a0,-16(s0)                             allGrp
      do
20407d18:    0040006f              j    20407d1c <__s2b+0xfc>                   allGrp, Branch-Instr, controlFlowGrp
	b = multadd (ptr, b, 10, *s++ - '0');
20407d1c:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20407d20:    fe042583              lw    a1,-32(s0)                             allGrp
20407d24:    ff042603              lw    a2,-16(s0)                             allGrp
20407d28:    00160693              addi    a3,a2,1                              allGrp
20407d2c:    fed42823              sw    a3,-16(s0)                             allGrp
20407d30:    00064603              lbu    a2,0(a2)                              allGrp
20407d34:    fd060693              addi    a3,a2,-48                            allGrp
20407d38:    00a00613              li    a2,10                                  allGrp
20407d3c:    00000097              auipc    ra,0x0                              allGrp
20407d40:    d1c080e7              jalr    -740(ra) # 20407a58 <__multadd>      Call-Instr, allGrp, controlFlowGrp
20407d44:    fea42023              sw    a0,-32(s0)                             Return-Tgt, allGrp
20407d48:    0040006f              j    20407d4c <__s2b+0x12c>                  allGrp, Branch-Instr, controlFlowGrp
      while (++i < nd0);
20407d4c:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20407d50:    00150513              addi    a0,a0,1                              allGrp
20407d54:    fca42e23              sw    a0,-36(s0)                             allGrp
20407d58:    fec42583              lw    a1,-20(s0)                             allGrp
	b = multadd (ptr, b, 10, *s++ - '0');
20407d5c:    fcb540e3              blt    a0,a1,20407d1c <__s2b+0xfc>           allGrp, Branch-Instr, controlFlowGrp
20407d60:    0040006f              j    20407d64 <__s2b+0x144>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      s++;
20407d64:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20407d68:    00150513              addi    a0,a0,1                              allGrp
20407d6c:    fea42823              sw    a0,-16(s0)                             allGrp
    }
20407d70:    0140006f              j    20407d84 <__s2b+0x164>                  allGrp, Branch-Instr, controlFlowGrp
  else
    s += 10;
20407d74:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20407d78:    00a50513              addi    a0,a0,10                             allGrp
20407d7c:    fea42823              sw    a0,-16(s0)                             allGrp
20407d80:    0040006f              j    20407d84 <__s2b+0x164>                  allGrp, Branch-Instr, controlFlowGrp
  for (; i < nd; i++)
20407d84:    0040006f              j    20407d88 <__s2b+0x168>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20407d88:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20407d8c:    fe842583              lw    a1,-24(s0)                             allGrp
20407d90:    04b55463              ble    a1,a0,20407dd8 <__s2b+0x1b8>          allGrp, Branch-Instr, controlFlowGrp
20407d94:    0040006f              j    20407d98 <__s2b+0x178>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    b = multadd (ptr, b, 10, *s++ - '0');
20407d98:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20407d9c:    fe042583              lw    a1,-32(s0)                             allGrp
20407da0:    ff042603              lw    a2,-16(s0)                             allGrp
20407da4:    00160693              addi    a3,a2,1                              allGrp
20407da8:    fed42823              sw    a3,-16(s0)                             allGrp
20407dac:    00064603              lbu    a2,0(a2)                              allGrp
20407db0:    fd060693              addi    a3,a2,-48                            allGrp
20407db4:    00a00613              li    a2,10                                  allGrp
20407db8:    00000097              auipc    ra,0x0                              allGrp
20407dbc:    ca0080e7              jalr    -864(ra) # 20407a58 <__multadd>      Call-Instr, allGrp, controlFlowGrp
20407dc0:    fea42023              sw    a0,-32(s0)                             Return-Tgt, allGrp
20407dc4:    0040006f              j    20407dc8 <__s2b+0x1a8>                  allGrp, Branch-Instr, controlFlowGrp
  for (; i < nd; i++)
20407dc8:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20407dcc:    00150513              addi    a0,a0,1                              allGrp
20407dd0:    fca42e23              sw    a0,-36(s0)                             allGrp
20407dd4:    fb5ff06f              j    20407d88 <__s2b+0x168>                  allGrp, Branch-Instr, controlFlowGrp
  return b;
20407dd8:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20407ddc:    04812403              lw    s0,72(sp)                              allGrp
20407de0:    04012423              sw    zero,72(sp)                            allGrp
20407de4:    04c12083              lw    ra,76(sp)                              allGrp
20407de8:    04012623              sw    zero,76(sp)                            allGrp
20407dec:    05010113              addi    sp,sp,80                             allGrp
20407df0:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407df4 <__hi0bits>:
20407df4:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
20407df8:    00112e23              sw    ra,28(sp)                              allGrp
20407dfc:    00812c23              sw    s0,24(sp)                              allGrp
20407e00:    02010413              addi    s0,sp,32                             allGrp
20407e04:    00050593              mv    a1,a0                                  allGrp
20407e08:    fea42823              sw    a0,-16(s0)                             allGrp
20407e0c:    00000513              li    a0,0                                   allGrp

int
_DEFUN (hi0bits,
	(x), register __ULong x)
{
  register int k = 0;
20407e10:    fea42623              sw    a0,-20(s0)                             allGrp

  if (!(x & 0xffff0000))
20407e14:    ff245603              lhu    a2,-14(s0)                            allGrp
20407e18:    01061613              slli    a2,a2,0x10                           allGrp
20407e1c:    feb42423              sw    a1,-24(s0)                             allGrp
20407e20:    02a61063              bne    a2,a0,20407e40 <__hi0bits+0x4c>       allGrp, Branch-Instr, controlFlowGrp
20407e24:    0040006f              j    20407e28 <__hi0bits+0x34>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      k = 16;
20407e28:    01000513              li    a0,16                                  Branch-Tgt, allGrp
20407e2c:    fea42623              sw    a0,-20(s0)                             allGrp
      x <<= 16;
20407e30:    ff042503              lw    a0,-16(s0)                             allGrp
20407e34:    01051513              slli    a0,a0,0x10                           allGrp
20407e38:    fea42823              sw    a0,-16(s0)                             allGrp
    }
20407e3c:    0040006f              j    20407e40 <__hi0bits+0x4c>               allGrp, Branch-Instr, controlFlowGrp
  if (!(x & 0xff000000))
20407e40:    ff344503              lbu    a0,-13(s0)                            Branch-Tgt, allGrp
20407e44:    01851513              slli    a0,a0,0x18                           allGrp
20407e48:    00000593              li    a1,0                                   allGrp
20407e4c:    02b51263              bne    a0,a1,20407e70 <__hi0bits+0x7c>       allGrp, Branch-Instr, controlFlowGrp
20407e50:    0040006f              j    20407e54 <__hi0bits+0x60>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      k += 8;
20407e54:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20407e58:    00850513              addi    a0,a0,8                              allGrp
20407e5c:    fea42623              sw    a0,-20(s0)                             allGrp
      x <<= 8;
20407e60:    ff042503              lw    a0,-16(s0)                             allGrp
20407e64:    00851513              slli    a0,a0,0x8                            allGrp
20407e68:    fea42823              sw    a0,-16(s0)                             allGrp
    }
20407e6c:    0040006f              j    20407e70 <__hi0bits+0x7c>               allGrp, Branch-Instr, controlFlowGrp
  if (!(x & 0xf0000000))
20407e70:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20407e74:    f00005b7              lui    a1,0xf0000                            allGrp
20407e78:    00b57533              and    a0,a0,a1                              allGrp
20407e7c:    00000593              li    a1,0                                   allGrp
20407e80:    02b51263              bne    a0,a1,20407ea4 <__hi0bits+0xb0>       allGrp, Branch-Instr, controlFlowGrp
20407e84:    0040006f              j    20407e88 <__hi0bits+0x94>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      k += 4;
20407e88:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20407e8c:    00450513              addi    a0,a0,4                              allGrp
20407e90:    fea42623              sw    a0,-20(s0)                             allGrp
      x <<= 4;
20407e94:    ff042503              lw    a0,-16(s0)                             allGrp
20407e98:    00451513              slli    a0,a0,0x4                            allGrp
20407e9c:    fea42823              sw    a0,-16(s0)                             allGrp
    }
20407ea0:    0040006f              j    20407ea4 <__hi0bits+0xb0>               allGrp, Branch-Instr, controlFlowGrp
  if (!(x & 0xc0000000))
20407ea4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20407ea8:    c00005b7              lui    a1,0xc0000                            allGrp
20407eac:    00b57533              and    a0,a0,a1                              allGrp
20407eb0:    00000593              li    a1,0                                   allGrp
20407eb4:    02b51263              bne    a0,a1,20407ed8 <__hi0bits+0xe4>       allGrp, Branch-Instr, controlFlowGrp
20407eb8:    0040006f              j    20407ebc <__hi0bits+0xc8>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      k += 2;
20407ebc:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20407ec0:    00250513              addi    a0,a0,2                              allGrp
20407ec4:    fea42623              sw    a0,-20(s0)                             allGrp
      x <<= 2;
20407ec8:    ff042503              lw    a0,-16(s0)                             allGrp
20407ecc:    00251513              slli    a0,a0,0x2                            allGrp
20407ed0:    fea42823              sw    a0,-16(s0)                             allGrp
    }
20407ed4:    0040006f              j    20407ed8 <__hi0bits+0xe4>               allGrp, Branch-Instr, controlFlowGrp
  if (!(x & 0x80000000))
20407ed8:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20407edc:    800005b7              lui    a1,0x80000                            allGrp
20407ee0:    00b57533              and    a0,a0,a1                              allGrp
20407ee4:    00000593              li    a1,0                                   allGrp
20407ee8:    02b51e63              bne    a0,a1,20407f24 <__hi0bits+0x130>      allGrp, Branch-Instr, controlFlowGrp
20407eec:    0040006f              j    20407ef0 <__hi0bits+0xfc>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      k++;
20407ef0:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20407ef4:    00150513              addi    a0,a0,1                              allGrp
20407ef8:    fea42623              sw    a0,-20(s0)                             allGrp
      if (!(x & 0x40000000))
20407efc:    ff042503              lw    a0,-16(s0)                             allGrp
20407f00:    400005b7              lui    a1,0x40000                            allGrp
20407f04:    00b57533              and    a0,a0,a1                              allGrp
20407f08:    00000593              li    a1,0                                   allGrp
20407f0c:    00b51a63              bne    a0,a1,20407f20 <__hi0bits+0x12c>      allGrp, Branch-Instr, controlFlowGrp
20407f10:    0040006f              j    20407f14 <__hi0bits+0x120>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	return 32;
20407f14:    02000513              li    a0,32                                  Branch-Tgt, allGrp
20407f18:    fea42a23              sw    a0,-12(s0)                             allGrp
20407f1c:    0140006f              j    20407f30 <__hi0bits+0x13c>              allGrp, Branch-Instr, controlFlowGrp
    }
20407f20:    0040006f              j    20407f24 <__hi0bits+0x130>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  return k;
20407f24:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20407f28:    fea42a23              sw    a0,-12(s0)                             allGrp
20407f2c:    0040006f              j    20407f30 <__hi0bits+0x13c>              allGrp, Branch-Instr, controlFlowGrp
}
20407f30:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20407f34:    01812403              lw    s0,24(sp)                              allGrp
20407f38:    00012c23              sw    zero,24(sp)                            allGrp
20407f3c:    01c12083              lw    ra,28(sp)                              allGrp
20407f40:    00012e23              sw    zero,28(sp)                            allGrp
20407f44:    02010113              addi    sp,sp,32                             allGrp
20407f48:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20407f4c <__lo0bits>:
20407f4c:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
20407f50:    00112e23              sw    ra,28(sp)                              allGrp
20407f54:    00812c23              sw    s0,24(sp)                              allGrp
20407f58:    02010413              addi    s0,sp,32                             allGrp
20407f5c:    00050593              mv    a1,a0                                  allGrp
20407f60:    fea42823              sw    a0,-16(s0)                             allGrp

int
_DEFUN (lo0bits, (y), __ULong *y)
{
  register int k;
  register __ULong x = *y;
20407f64:    ff042503              lw    a0,-16(s0)                             allGrp
20407f68:    00052503              lw    a0,0(a0)                               allGrp
20407f6c:    fea42423              sw    a0,-24(s0)                             allGrp

  if (x & 7)
20407f70:    fe842503              lw    a0,-24(s0)                             allGrp
20407f74:    00757513              andi    a0,a0,7                              allGrp
20407f78:    00000613              li    a2,0                                   allGrp
20407f7c:    feb42223              sw    a1,-28(s0)                             allGrp
20407f80:    06c50a63              beq    a0,a2,20407ff4 <__lo0bits+0xa8>       allGrp, Branch-Instr, controlFlowGrp
20407f84:    0040006f              j    20407f88 <__lo0bits+0x3c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (x & 1)
20407f88:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20407f8c:    00157513              andi    a0,a0,1                              allGrp
20407f90:    00000593              li    a1,0                                   allGrp
20407f94:    00b50a63              beq    a0,a1,20407fa8 <__lo0bits+0x5c>       allGrp, Branch-Instr, controlFlowGrp
20407f98:    0040006f              j    20407f9c <__lo0bits+0x50>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	return 0;
20407f9c:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20407fa0:    fea42a23              sw    a0,-12(s0)                             allGrp
20407fa4:    1640006f              j    20408108 <__lo0bits+0x1bc>              allGrp, Branch-Instr, controlFlowGrp
      if (x & 2)
20407fa8:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20407fac:    00257513              andi    a0,a0,2                              allGrp
20407fb0:    00000593              li    a1,0                                   allGrp
20407fb4:    02b50263              beq    a0,a1,20407fd8 <__lo0bits+0x8c>       allGrp, Branch-Instr, controlFlowGrp
20407fb8:    0040006f              j    20407fbc <__lo0bits+0x70>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  *y = x >> 1;
20407fbc:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20407fc0:    00155513              srli    a0,a0,0x1                            allGrp
20407fc4:    ff042583              lw    a1,-16(s0)                             allGrp
20407fc8:    00a5a023              sw    a0,0(a1) # 40000000 <__fini_array_end+0x1fbed640>allGrp
20407fcc:    00100513              li    a0,1                                   allGrp
	  return 1;
20407fd0:    fea42a23              sw    a0,-12(s0)                             allGrp
20407fd4:    1340006f              j    20408108 <__lo0bits+0x1bc>              allGrp, Branch-Instr, controlFlowGrp
	}
      *y = x >> 2;
20407fd8:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20407fdc:    00255513              srli    a0,a0,0x2                            allGrp
20407fe0:    ff042583              lw    a1,-16(s0)                             allGrp
20407fe4:    00a5a023              sw    a0,0(a1)                               allGrp
20407fe8:    00200513              li    a0,2                                   allGrp
      return 2;
20407fec:    fea42a23              sw    a0,-12(s0)                             allGrp
20407ff0:    1180006f              j    20408108 <__lo0bits+0x1bc>              allGrp, Branch-Instr, controlFlowGrp
    }
  k = 0;
20407ff4:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20407ff8:    fea42623              sw    a0,-20(s0)                             allGrp
  if (!(x & 0xffff))
20407ffc:    fe845583              lhu    a1,-24(s0)                            allGrp
20408000:    00a59e63              bne    a1,a0,2040801c <__lo0bits+0xd0>       allGrp, Branch-Instr, controlFlowGrp
20408004:    0040006f              j    20408008 <__lo0bits+0xbc>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      k = 16;
20408008:    01000513              li    a0,16                                  Branch-Tgt, allGrp
2040800c:    fea42623              sw    a0,-20(s0)                             allGrp
      x >>= 16;
20408010:    fea45503              lhu    a0,-22(s0)                            allGrp
20408014:    fea42423              sw    a0,-24(s0)                             allGrp
    }
20408018:    0040006f              j    2040801c <__lo0bits+0xd0>               allGrp, Branch-Instr, controlFlowGrp
  if (!(x & 0xff))
2040801c:    fe844503              lbu    a0,-24(s0)                            Branch-Tgt, allGrp
20408020:    00000593              li    a1,0                                   allGrp
20408024:    02b51263              bne    a0,a1,20408048 <__lo0bits+0xfc>       allGrp, Branch-Instr, controlFlowGrp
20408028:    0040006f              j    2040802c <__lo0bits+0xe0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      k += 8;
2040802c:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20408030:    00850513              addi    a0,a0,8                              allGrp
20408034:    fea42623              sw    a0,-20(s0)                             allGrp
      x >>= 8;
20408038:    fe842503              lw    a0,-24(s0)                             allGrp
2040803c:    00855513              srli    a0,a0,0x8                            allGrp
20408040:    fea42423              sw    a0,-24(s0)                             allGrp
    }
20408044:    0040006f              j    20408048 <__lo0bits+0xfc>               allGrp, Branch-Instr, controlFlowGrp
  if (!(x & 0xf))
20408048:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040804c:    00f57513              andi    a0,a0,15                             allGrp
20408050:    00000593              li    a1,0                                   allGrp
20408054:    02b51263              bne    a0,a1,20408078 <__lo0bits+0x12c>      allGrp, Branch-Instr, controlFlowGrp
20408058:    0040006f              j    2040805c <__lo0bits+0x110>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      k += 4;
2040805c:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20408060:    00450513              addi    a0,a0,4                              allGrp
20408064:    fea42623              sw    a0,-20(s0)                             allGrp
      x >>= 4;
20408068:    fe842503              lw    a0,-24(s0)                             allGrp
2040806c:    00455513              srli    a0,a0,0x4                            allGrp
20408070:    fea42423              sw    a0,-24(s0)                             allGrp
    }
20408074:    0040006f              j    20408078 <__lo0bits+0x12c>              allGrp, Branch-Instr, controlFlowGrp
  if (!(x & 0x3))
20408078:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040807c:    00357513              andi    a0,a0,3                              allGrp
20408080:    00000593              li    a1,0                                   allGrp
20408084:    02b51263              bne    a0,a1,204080a8 <__lo0bits+0x15c>      allGrp, Branch-Instr, controlFlowGrp
20408088:    0040006f              j    2040808c <__lo0bits+0x140>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      k += 2;
2040808c:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20408090:    00250513              addi    a0,a0,2                              allGrp
20408094:    fea42623              sw    a0,-20(s0)                             allGrp
      x >>= 2;
20408098:    fe842503              lw    a0,-24(s0)                             allGrp
2040809c:    00255513              srli    a0,a0,0x2                            allGrp
204080a0:    fea42423              sw    a0,-24(s0)                             allGrp
    }
204080a4:    0040006f              j    204080a8 <__lo0bits+0x15c>              allGrp, Branch-Instr, controlFlowGrp
  if (!(x & 1))
204080a8:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
204080ac:    00157513              andi    a0,a0,1                              allGrp
204080b0:    04051063              bnez    a0,204080f0 <__lo0bits+0x1a4>        allGrp, Branch-Instr, controlFlowGrp
204080b4:    0040006f              j    204080b8 <__lo0bits+0x16c>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      k++;
204080b8:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204080bc:    00150513              addi    a0,a0,1                              allGrp
204080c0:    fea42623              sw    a0,-20(s0)                             allGrp
      x >>= 1;
204080c4:    fe842503              lw    a0,-24(s0)                             allGrp
204080c8:    00155513              srli    a0,a0,0x1                            allGrp
204080cc:    fea42423              sw    a0,-24(s0)                             allGrp
      if (!x & 1)
204080d0:    fe842503              lw    a0,-24(s0)                             allGrp
204080d4:    00000593              li    a1,0                                   allGrp
204080d8:    00b51a63              bne    a0,a1,204080ec <__lo0bits+0x1a0>      allGrp, Branch-Instr, controlFlowGrp
204080dc:    0040006f              j    204080e0 <__lo0bits+0x194>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	return 32;
204080e0:    02000513              li    a0,32                                  Branch-Tgt, allGrp
204080e4:    fea42a23              sw    a0,-12(s0)                             allGrp
204080e8:    0200006f              j    20408108 <__lo0bits+0x1bc>              allGrp, Branch-Instr, controlFlowGrp
    }
204080ec:    0040006f              j    204080f0 <__lo0bits+0x1a4>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  *y = x;
204080f0:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
204080f4:    ff042583              lw    a1,-16(s0)                             allGrp
204080f8:    00a5a023              sw    a0,0(a1)                               allGrp
  return k;
204080fc:    fec42503              lw    a0,-20(s0)                             allGrp
20408100:    fea42a23              sw    a0,-12(s0)                             allGrp
20408104:    0040006f              j    20408108 <__lo0bits+0x1bc>              allGrp, Branch-Instr, controlFlowGrp
}
20408108:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040810c:    01812403              lw    s0,24(sp)                              allGrp
20408110:    00012c23              sw    zero,24(sp)                            allGrp
20408114:    01c12083              lw    ra,28(sp)                              allGrp
20408118:    00012e23              sw    zero,28(sp)                            allGrp
2040811c:    02010113              addi    sp,sp,32                             allGrp
20408120:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20408124 <__i2b>:
20408124:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
20408128:    00112e23              sw    ra,28(sp)                              allGrp
2040812c:    00812c23              sw    s0,24(sp)                              allGrp
20408130:    02010413              addi    s0,sp,32                             allGrp
20408134:    00058613              mv    a2,a1                                  allGrp
20408138:    00050693              mv    a3,a0                                  allGrp
2040813c:    fea42a23              sw    a0,-12(s0)                             allGrp
20408140:    feb42823              sw    a1,-16(s0)                             allGrp
_Bigint *
_DEFUN (i2b, (ptr, i), struct _reent * ptr _AND int i)
{
  _Bigint *b;

  b = Balloc (ptr, 1);
20408144:    ff442503              lw    a0,-12(s0)                             allGrp
20408148:    00100593              li    a1,1                                   allGrp
2040814c:    feb42423              sw    a1,-24(s0)                             allGrp
20408150:    fec42223              sw    a2,-28(s0)                             allGrp
20408154:    fed42023              sw    a3,-32(s0)                             allGrp
20408158:    fffff097              auipc    ra,0xfffff                          allGrp
2040815c:    700080e7              jalr    1792(ra) # 20407858 <_Balloc>        Call-Instr, allGrp, controlFlowGrp
20408160:    fea42623              sw    a0,-20(s0)                             Return-Tgt, allGrp
  b->_x[0] = i;
20408164:    ff042503              lw    a0,-16(s0)                             allGrp
20408168:    fec42583              lw    a1,-20(s0)                             allGrp
2040816c:    00a5aa23              sw    a0,20(a1)                              allGrp
  b->_wds = 1;
20408170:    fec42503              lw    a0,-20(s0)                             allGrp
20408174:    fe842583              lw    a1,-24(s0)                             allGrp
20408178:    00b52823              sw    a1,16(a0)                              allGrp
  return b;
2040817c:    fec42503              lw    a0,-20(s0)                             allGrp
20408180:    01812403              lw    s0,24(sp)                              allGrp
20408184:    00012c23              sw    zero,24(sp)                            allGrp
20408188:    01c12083              lw    ra,28(sp)                              allGrp
2040818c:    00012e23              sw    zero,28(sp)                            allGrp
20408190:    02010113              addi    sp,sp,32                             allGrp
20408194:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20408198 <__multiply>:
20408198:    f9010113              addi    sp,sp,-112                           Call-Tgt, allGrp, Branch-Tgt
2040819c:    06112623              sw    ra,108(sp)                             allGrp
204081a0:    06812423              sw    s0,104(sp)                             allGrp
204081a4:    07010413              addi    s0,sp,112                            allGrp
204081a8:    00060693              mv    a3,a2                                  allGrp
204081ac:    00058713              mv    a4,a1                                  allGrp
204081b0:    00050793              mv    a5,a0                                  allGrp
204081b4:    fea42a23              sw    a0,-12(s0)                             allGrp
204081b8:    feb42823              sw    a1,-16(s0)                             allGrp
204081bc:    fec42623              sw    a2,-20(s0)                             allGrp
  __ULong *x, *xa, *xae, *xb, *xbe, *xc, *xc0;
#ifdef Pack_32
  __ULong z2;
#endif

  if (a->_wds < b->_wds)
204081c0:    ff042503              lw    a0,-16(s0)                             allGrp
204081c4:    01052503              lw    a0,16(a0)                              allGrp
204081c8:    fec42583              lw    a1,-20(s0)                             allGrp
204081cc:    0105a583              lw    a1,16(a1)                              allGrp
204081d0:    fad42423              sw    a3,-88(s0)                             allGrp
204081d4:    fae42223              sw    a4,-92(s0)                             allGrp
204081d8:    faf42023              sw    a5,-96(s0)                             allGrp
204081dc:    02b55263              ble    a1,a0,20408200 <__multiply+0x68>      allGrp, Branch-Instr, controlFlowGrp
204081e0:    0040006f              j    204081e4 <__multiply+0x4c>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      c = a;
204081e4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204081e8:    fea42423              sw    a0,-24(s0)                             allGrp
      a = b;
204081ec:    fec42503              lw    a0,-20(s0)                             allGrp
204081f0:    fea42823              sw    a0,-16(s0)                             allGrp
      b = c;
204081f4:    fe842503              lw    a0,-24(s0)                             allGrp
204081f8:    fea42623              sw    a0,-20(s0)                             allGrp
    }
204081fc:    0040006f              j    20408200 <__multiply+0x68>              allGrp, Branch-Instr, controlFlowGrp
  k = a->_k;
20408200:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20408204:    00452503              lw    a0,4(a0)                               allGrp
20408208:    fea42223              sw    a0,-28(s0)                             allGrp
  wa = a->_wds;
2040820c:    ff042503              lw    a0,-16(s0)                             allGrp
20408210:    01052503              lw    a0,16(a0)                              allGrp
20408214:    fea42023              sw    a0,-32(s0)                             allGrp
  wb = b->_wds;
20408218:    fec42503              lw    a0,-20(s0)                             allGrp
2040821c:    01052503              lw    a0,16(a0)                              allGrp
20408220:    fca42e23              sw    a0,-36(s0)                             allGrp
  wc = wa + wb;
20408224:    fe042503              lw    a0,-32(s0)                             allGrp
20408228:    fdc42583              lw    a1,-36(s0)                             allGrp
2040822c:    00b50533              add    a0,a0,a1                              allGrp
20408230:    fca42c23              sw    a0,-40(s0)                             allGrp
  if (wc > a->_maxwds)
20408234:    fd842503              lw    a0,-40(s0)                             allGrp
20408238:    ff042583              lw    a1,-16(s0)                             allGrp
2040823c:    0085a583              lw    a1,8(a1)                               allGrp
20408240:    00a5dc63              ble    a0,a1,20408258 <__multiply+0xc0>      allGrp, Branch-Instr, controlFlowGrp
20408244:    0040006f              j    20408248 <__multiply+0xb0>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    k++;
20408248:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040824c:    00150513              addi    a0,a0,1                              allGrp
20408250:    fea42223              sw    a0,-28(s0)                             allGrp
20408254:    0040006f              j    20408258 <__multiply+0xc0>              allGrp, Branch-Instr, controlFlowGrp
  c = Balloc (ptr, k);
20408258:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040825c:    fe442583              lw    a1,-28(s0)                             allGrp
20408260:    fffff097              auipc    ra,0xfffff                          allGrp
20408264:    5f8080e7              jalr    1528(ra) # 20407858 <_Balloc>        Call-Instr, allGrp, controlFlowGrp
20408268:    fea42423              sw    a0,-24(s0)                             Return-Tgt, allGrp
  for (x = c->_x, xa = x + wc; x < xa; x++)
2040826c:    fe842503              lw    a0,-24(s0)                             allGrp
20408270:    01450513              addi    a0,a0,20                             allGrp
20408274:    fca42423              sw    a0,-56(s0)                             allGrp
20408278:    fc842503              lw    a0,-56(s0)                             allGrp
2040827c:    fd842583              lw    a1,-40(s0)                             allGrp
20408280:    00259593              slli    a1,a1,0x2                            allGrp
20408284:    00b50533              add    a0,a0,a1                              allGrp
20408288:    fca42223              sw    a0,-60(s0)                             allGrp
2040828c:    0040006f              j    20408290 <__multiply+0xf8>              allGrp, Branch-Instr, controlFlowGrp
20408290:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
20408294:    fc442583              lw    a1,-60(s0)                             allGrp
20408298:    02b57463              bleu    a1,a0,204082c0 <__multiply+0x128>    allGrp, Branch-Instr, controlFlowGrp
2040829c:    0040006f              j    204082a0 <__multiply+0x108>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    *x = 0;
204082a0:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
204082a4:    00000593              li    a1,0                                   allGrp
204082a8:    00b52023              sw    a1,0(a0)                               allGrp
204082ac:    0040006f              j    204082b0 <__multiply+0x118>             allGrp, Branch-Instr, controlFlowGrp
  for (x = c->_x, xa = x + wc; x < xa; x++)
204082b0:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
204082b4:    00450513              addi    a0,a0,4                              allGrp
204082b8:    fca42423              sw    a0,-56(s0)                             allGrp
204082bc:    fd5ff06f              j    20408290 <__multiply+0xf8>              allGrp, Branch-Instr, controlFlowGrp
  xa = a->_x;
204082c0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204082c4:    01450513              addi    a0,a0,20                             allGrp
204082c8:    fca42223              sw    a0,-60(s0)                             allGrp
  xae = xa + wa;
204082cc:    fc442503              lw    a0,-60(s0)                             allGrp
204082d0:    fe042583              lw    a1,-32(s0)                             allGrp
204082d4:    00259593              slli    a1,a1,0x2                            allGrp
204082d8:    00b50533              add    a0,a0,a1                              allGrp
204082dc:    fca42023              sw    a0,-64(s0)                             allGrp
  xb = b->_x;
204082e0:    fec42503              lw    a0,-20(s0)                             allGrp
204082e4:    01450513              addi    a0,a0,20                             allGrp
204082e8:    faa42e23              sw    a0,-68(s0)                             allGrp
  xbe = xb + wb;
204082ec:    fbc42503              lw    a0,-68(s0)                             allGrp
204082f0:    fdc42583              lw    a1,-36(s0)                             allGrp
204082f4:    00259593              slli    a1,a1,0x2                            allGrp
204082f8:    00b50533              add    a0,a0,a1                              allGrp
204082fc:    faa42c23              sw    a0,-72(s0)                             allGrp
  xc0 = c->_x;
20408300:    fe842503              lw    a0,-24(s0)                             allGrp
20408304:    01450513              addi    a0,a0,20                             allGrp
20408308:    faa42823              sw    a0,-80(s0)                             allGrp
#ifdef Pack_32
  for (; xb < xbe; xb++, xc0++)
2040830c:    0040006f              j    20408310 <__multiply+0x178>             allGrp, Branch-Instr, controlFlowGrp
20408310:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20408314:    fb842583              lw    a1,-72(s0)                             allGrp
20408318:    20b57463              bleu    a1,a0,20408520 <__multiply+0x388>    allGrp, Branch-Instr, controlFlowGrp
2040831c:    0040006f              j    20408320 <__multiply+0x188>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if ((y = *xb & 0xffff) != 0)
20408320:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20408324:    00055503              lhu    a0,0(a0)                              allGrp
20408328:    fca42823              sw    a0,-48(s0)                             allGrp
2040832c:    00000593              li    a1,0                                   allGrp
20408330:    0cb50c63              beq    a0,a1,20408408 <__multiply+0x270>     allGrp, Branch-Instr, controlFlowGrp
20408334:    0040006f              j    20408338 <__multiply+0x1a0>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  x = xa;
20408338:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040833c:    fca42423              sw    a0,-56(s0)                             allGrp
	  xc = xc0;
20408340:    fb042503              lw    a0,-80(s0)                             allGrp
20408344:    faa42a23              sw    a0,-76(s0)                             allGrp
20408348:    00000513              li    a0,0                                   allGrp
	  carry = 0;
2040834c:    fca42a23              sw    a0,-44(s0)                             allGrp
	  do
20408350:    0040006f              j    20408354 <__multiply+0x1bc>             allGrp, Branch-Instr, controlFlowGrp
	    {
	      z = (*x & 0xffff) * y + (*xc & 0xffff) + carry;
20408354:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
20408358:    00055503              lhu    a0,0(a0)                              allGrp
2040835c:    fd042583              lw    a1,-48(s0)                             allGrp
20408360:    0000a097              auipc    ra,0xa                              allGrp
20408364:    ef4080e7              jalr    -268(ra) # 20412254 <__mulsi3>       Call-Instr, allGrp, controlFlowGrp
20408368:    fb442583              lw    a1,-76(s0)                             Return-Tgt, allGrp
2040836c:    0005d583              lhu    a1,0(a1)                              allGrp
20408370:    00b50533              add    a0,a0,a1                              allGrp
20408374:    fd442583              lw    a1,-44(s0)                             allGrp
20408378:    00b50533              add    a0,a0,a1                              allGrp
2040837c:    fca42623              sw    a0,-52(s0)                             allGrp
	      carry = z >> 16;
20408380:    fce45503              lhu    a0,-50(s0)                            allGrp
20408384:    fca42a23              sw    a0,-44(s0)                             allGrp
	      z2 = (*x++ >> 16) * y + (*xc >> 16) + carry;
20408388:    fc842503              lw    a0,-56(s0)                             allGrp
2040838c:    00450593              addi    a1,a0,4                              allGrp
20408390:    fcb42423              sw    a1,-56(s0)                             allGrp
20408394:    00255503              lhu    a0,2(a0)                              allGrp
20408398:    fd042583              lw    a1,-48(s0)                             allGrp
2040839c:    0000a097              auipc    ra,0xa                              allGrp
204083a0:    eb8080e7              jalr    -328(ra) # 20412254 <__mulsi3>       Call-Instr, allGrp, controlFlowGrp
204083a4:    fb442583              lw    a1,-76(s0)                             Return-Tgt, allGrp
204083a8:    0025d583              lhu    a1,2(a1)                              allGrp
204083ac:    00b50533              add    a0,a0,a1                              allGrp
204083b0:    fd442583              lw    a1,-44(s0)                             allGrp
204083b4:    00b50533              add    a0,a0,a1                              allGrp
204083b8:    faa42623              sw    a0,-84(s0)                             allGrp
	      carry = z2 >> 16;
204083bc:    fae45503              lhu    a0,-82(s0)                            allGrp
204083c0:    fca42a23              sw    a0,-44(s0)                             allGrp
	      Storeinc (xc, z2, z);
204083c4:    fac42503              lw    a0,-84(s0)                             allGrp
204083c8:    01051513              slli    a0,a0,0x10                           allGrp
204083cc:    fcc45583              lhu    a1,-52(s0)                            allGrp
204083d0:    00b56533              or    a0,a0,a1                               allGrp
204083d4:    fb442583              lw    a1,-76(s0)                             allGrp
204083d8:    00458613              addi    a2,a1,4                              allGrp
204083dc:    fac42a23              sw    a2,-76(s0)                             allGrp
204083e0:    00a5a023              sw    a0,0(a1)                               allGrp
	    }
204083e4:    0040006f              j    204083e8 <__multiply+0x250>             allGrp, Branch-Instr, controlFlowGrp
	  while (x < xae);
204083e8:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
204083ec:    fc042583              lw    a1,-64(s0)                             allGrp
	    }
204083f0:    f6b562e3              bltu    a0,a1,20408354 <__multiply+0x1bc>    allGrp, Branch-Instr, controlFlowGrp
204083f4:    0040006f              j    204083f8 <__multiply+0x260>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  *xc = carry;
204083f8:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
204083fc:    fb442583              lw    a1,-76(s0)                             allGrp
20408400:    00a5a023              sw    a0,0(a1)                               allGrp
	}
20408404:    0040006f              j    20408408 <__multiply+0x270>             allGrp, Branch-Instr, controlFlowGrp
      if ((y = *xb >> 16) != 0)
20408408:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
2040840c:    00052503              lw    a0,0(a0)                               allGrp
20408410:    01055513              srli    a0,a0,0x10                           allGrp
20408414:    fca42823              sw    a0,-48(s0)                             allGrp
20408418:    00000593              li    a1,0                                   allGrp
2040841c:    0eb50263              beq    a0,a1,20408500 <__multiply+0x368>     allGrp, Branch-Instr, controlFlowGrp
20408420:    0040006f              j    20408424 <__multiply+0x28c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  x = xa;
20408424:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
20408428:    fca42423              sw    a0,-56(s0)                             allGrp
	  xc = xc0;
2040842c:    fb042503              lw    a0,-80(s0)                             allGrp
20408430:    faa42a23              sw    a0,-76(s0)                             allGrp
20408434:    00000513              li    a0,0                                   allGrp
	  carry = 0;
20408438:    fca42a23              sw    a0,-44(s0)                             allGrp
	  z2 = *xc;
2040843c:    fb442503              lw    a0,-76(s0)                             allGrp
20408440:    00052503              lw    a0,0(a0)                               allGrp
20408444:    faa42623              sw    a0,-84(s0)                             allGrp
	  do
20408448:    0040006f              j    2040844c <__multiply+0x2b4>             allGrp, Branch-Instr, controlFlowGrp
	    {
	      z = (*x & 0xffff) * y + (*xc >> 16) + carry;
2040844c:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
20408450:    00055503              lhu    a0,0(a0)                              allGrp
20408454:    fd042583              lw    a1,-48(s0)                             allGrp
20408458:    0000a097              auipc    ra,0xa                              allGrp
2040845c:    dfc080e7              jalr    -516(ra) # 20412254 <__mulsi3>       Call-Instr, allGrp, controlFlowGrp
20408460:    fb442583              lw    a1,-76(s0)                             Return-Tgt, allGrp
20408464:    0025d583              lhu    a1,2(a1)                              allGrp
20408468:    00b50533              add    a0,a0,a1                              allGrp
2040846c:    fd442583              lw    a1,-44(s0)                             allGrp
20408470:    00b50533              add    a0,a0,a1                              allGrp
20408474:    fca42623              sw    a0,-52(s0)                             allGrp
	      carry = z >> 16;
20408478:    fce45503              lhu    a0,-50(s0)                            allGrp
2040847c:    fca42a23              sw    a0,-44(s0)                             allGrp
	      Storeinc (xc, z, z2);
20408480:    fcc42503              lw    a0,-52(s0)                             allGrp
20408484:    01051513              slli    a0,a0,0x10                           allGrp
20408488:    fac45583              lhu    a1,-84(s0)                            allGrp
2040848c:    00b56533              or    a0,a0,a1                               allGrp
20408490:    fb442583              lw    a1,-76(s0)                             allGrp
20408494:    00458613              addi    a2,a1,4                              allGrp
20408498:    fac42a23              sw    a2,-76(s0)                             allGrp
2040849c:    00a5a023              sw    a0,0(a1)                               allGrp
	      z2 = (*x++ >> 16) * y + (*xc & 0xffff) + carry;
204084a0:    fc842503              lw    a0,-56(s0)                             allGrp
204084a4:    00450593              addi    a1,a0,4                              allGrp
204084a8:    fcb42423              sw    a1,-56(s0)                             allGrp
204084ac:    00255503              lhu    a0,2(a0)                              allGrp
204084b0:    fd042583              lw    a1,-48(s0)                             allGrp
204084b4:    0000a097              auipc    ra,0xa                              allGrp
204084b8:    da0080e7              jalr    -608(ra) # 20412254 <__mulsi3>       Call-Instr, allGrp, controlFlowGrp
204084bc:    fb442583              lw    a1,-76(s0)                             Return-Tgt, allGrp
204084c0:    0005d583              lhu    a1,0(a1)                              allGrp
204084c4:    00b50533              add    a0,a0,a1                              allGrp
204084c8:    fd442583              lw    a1,-44(s0)                             allGrp
204084cc:    00b50533              add    a0,a0,a1                              allGrp
204084d0:    faa42623              sw    a0,-84(s0)                             allGrp
	      carry = z2 >> 16;
204084d4:    fae45503              lhu    a0,-82(s0)                            allGrp
204084d8:    fca42a23              sw    a0,-44(s0)                             allGrp
	    }
204084dc:    0040006f              j    204084e0 <__multiply+0x348>             allGrp, Branch-Instr, controlFlowGrp
	  while (x < xae);
204084e0:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
204084e4:    fc042583              lw    a1,-64(s0)                             allGrp
	    }
204084e8:    f6b562e3              bltu    a0,a1,2040844c <__multiply+0x2b4>    allGrp, Branch-Instr, controlFlowGrp
204084ec:    0040006f              j    204084f0 <__multiply+0x358>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  *xc = z2;
204084f0:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
204084f4:    fb442583              lw    a1,-76(s0)                             allGrp
204084f8:    00a5a023              sw    a0,0(a1)                               allGrp
	}
204084fc:    0040006f              j    20408500 <__multiply+0x368>             allGrp, Branch-Instr, controlFlowGrp
    }
20408500:    0040006f              j    20408504 <__multiply+0x36c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  for (; xb < xbe; xb++, xc0++)
20408504:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20408508:    00450513              addi    a0,a0,4                              allGrp
2040850c:    faa42e23              sw    a0,-68(s0)                             allGrp
20408510:    fb042503              lw    a0,-80(s0)                             allGrp
20408514:    00450513              addi    a0,a0,4                              allGrp
20408518:    faa42823              sw    a0,-80(s0)                             allGrp
2040851c:    df5ff06f              j    20408310 <__multiply+0x178>             allGrp, Branch-Instr, controlFlowGrp
	  while (x < xae);
	  *xc = carry;
	}
    }
#endif
  for (xc0 = c->_x, xc = xc0 + wc; wc > 0 && !*--xc; --wc);
20408520:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20408524:    01450513              addi    a0,a0,20                             allGrp
20408528:    faa42823              sw    a0,-80(s0)                             allGrp
2040852c:    fb042503              lw    a0,-80(s0)                             allGrp
20408530:    fd842583              lw    a1,-40(s0)                             allGrp
20408534:    00259593              slli    a1,a1,0x2                            allGrp
20408538:    00b50533              add    a0,a0,a1                              allGrp
2040853c:    faa42a23              sw    a0,-76(s0)                             allGrp
20408540:    0040006f              j    20408544 <__multiply+0x3ac>             allGrp, Branch-Instr, controlFlowGrp
20408544:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20408548:    00000593              li    a1,0                                   allGrp
2040854c:    00100613              li    a2,1                                   allGrp
20408550:    f8b42e23              sw    a1,-100(s0)                            allGrp
20408554:    02c54663              blt    a0,a2,20408580 <__multiply+0x3e8>     allGrp, Branch-Instr, controlFlowGrp
20408558:    0040006f              j    2040855c <__multiply+0x3c4>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040855c:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
20408560:    ffc50593              addi    a1,a0,-4                             allGrp
20408564:    fab42a23              sw    a1,-76(s0)                             allGrp
20408568:    ffc52503              lw    a0,-4(a0)                              allGrp
2040856c:    00000593              li    a1,0                                   allGrp
20408570:    00b54533              xor    a0,a0,a1                              allGrp
20408574:    00153513              seqz    a0,a0                                allGrp
20408578:    f8a42e23              sw    a0,-100(s0)                            allGrp
2040857c:    0040006f              j    20408580 <__multiply+0x3e8>             allGrp, Branch-Instr, controlFlowGrp
20408580:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
20408584:    00157513              andi    a0,a0,1                              allGrp
20408588:    00000593              li    a1,0                                   allGrp
2040858c:    00b50e63              beq    a0,a1,204085a8 <__multiply+0x410>     allGrp, Branch-Instr, controlFlowGrp
20408590:    0040006f              j    20408594 <__multiply+0x3fc>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20408594:    0040006f              j    20408598 <__multiply+0x400>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20408598:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040859c:    fff50513              addi    a0,a0,-1                             allGrp
204085a0:    fca42c23              sw    a0,-40(s0)                             allGrp
204085a4:    fa1ff06f              j    20408544 <__multiply+0x3ac>             allGrp, Branch-Instr, controlFlowGrp
  c->_wds = wc;
204085a8:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
204085ac:    fe842583              lw    a1,-24(s0)                             allGrp
204085b0:    00a5a823              sw    a0,16(a1)                              allGrp
  return c;
204085b4:    fe842503              lw    a0,-24(s0)                             allGrp
204085b8:    06812403              lw    s0,104(sp)                             allGrp
204085bc:    06012423              sw    zero,104(sp)                           allGrp
204085c0:    06c12083              lw    ra,108(sp)                             allGrp
204085c4:    06012623              sw    zero,108(sp)                           allGrp
204085c8:    07010113              addi    sp,sp,112                            allGrp
204085cc:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204085d0 <__pow5mult>:
204085d0:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp, Branch-Tgt
204085d4:    02112e23              sw    ra,60(sp)                              allGrp
204085d8:    02812c23              sw    s0,56(sp)                              allGrp
204085dc:    04010413              addi    s0,sp,64                             allGrp
204085e0:    00060693              mv    a3,a2                                  allGrp
204085e4:    00058713              mv    a4,a1                                  allGrp
204085e8:    00050793              mv    a5,a0                                  allGrp
204085ec:    fea42823              sw    a0,-16(s0)                             allGrp
204085f0:    feb42623              sw    a1,-20(s0)                             allGrp
204085f4:    fec42423              sw    a2,-24(s0)                             allGrp
{
  _Bigint *b1, *p5, *p51;
  int i;
  static _CONST int p05[3] = {5, 25, 125};

  if ((i = k & 3) != 0)
204085f8:    fe842503              lw    a0,-24(s0)                             allGrp
204085fc:    00357513              andi    a0,a0,3                              allGrp
20408600:    fca42c23              sw    a0,-40(s0)                             allGrp
20408604:    00000593              li    a1,0                                   allGrp
20408608:    fcd42a23              sw    a3,-44(s0)                             allGrp
2040860c:    fce42823              sw    a4,-48(s0)                             allGrp
20408610:    fcf42623              sw    a5,-52(s0)                             allGrp
20408614:    02b50e63              beq    a0,a1,20408650 <__pow5mult+0x80>      allGrp, Branch-Instr, controlFlowGrp
20408618:    0040006f              j    2040861c <__pow5mult+0x4c>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    b = multadd (ptr, b, p05[i - 1], 0);
2040861c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20408620:    fec42583              lw    a1,-20(s0)                             allGrp
20408624:    fd842603              lw    a2,-40(s0)                             allGrp
20408628:    00261613              slli    a2,a2,0x2                            allGrp
2040862c:    204126b7              lui    a3,0x20412                            allGrp
20408630:    5d068693              addi    a3,a3,1488 # 204125d0 <__pow5mult.p05>allGrp
20408634:    00d60633              add    a2,a2,a3                              allGrp
20408638:    ffc62603              lw    a2,-4(a2)                              allGrp
2040863c:    00000693              li    a3,0                                   allGrp
20408640:    fffff097              auipc    ra,0xfffff                          allGrp
20408644:    418080e7              jalr    1048(ra) # 20407a58 <__multadd>      Call-Instr, allGrp, controlFlowGrp
20408648:    fea42623              sw    a0,-20(s0)                             Return-Tgt, allGrp
2040864c:    0040006f              j    20408650 <__pow5mult+0x80>              allGrp, Branch-Instr, controlFlowGrp

  if (!(k >>= 2))
20408650:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20408654:    40255513              srai    a0,a0,0x2                            allGrp
20408658:    fea42423              sw    a0,-24(s0)                             allGrp
2040865c:    00000593              li    a1,0                                   allGrp
20408660:    00b51a63              bne    a0,a1,20408674 <__pow5mult+0xa4>      allGrp, Branch-Instr, controlFlowGrp
20408664:    0040006f              j    20408668 <__pow5mult+0x98>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return b;
20408668:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040866c:    fea42a23              sw    a0,-12(s0)                             allGrp
20408670:    1100006f              j    20408780 <__pow5mult+0x1b0>             allGrp, Branch-Instr, controlFlowGrp
  _REENT_CHECK_MP(ptr);
  if (!(p5 = _REENT_MP_P5S(ptr)))
20408674:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20408678:    04852503              lw    a0,72(a0)                              allGrp
2040867c:    fea42023              sw    a0,-32(s0)                             allGrp
20408680:    00000593              li    a1,0                                   allGrp
20408684:    02b51a63              bne    a0,a1,204086b8 <__pow5mult+0xe8>      allGrp, Branch-Instr, controlFlowGrp
20408688:    0040006f              j    2040868c <__pow5mult+0xbc>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      /* first time */
      p5 = _REENT_MP_P5S(ptr) = i2b (ptr, 625);
2040868c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20408690:    27100593              li    a1,625                                 allGrp
20408694:    00000097              auipc    ra,0x0                              allGrp
20408698:    a90080e7              jalr    -1392(ra) # 20408124 <__i2b>         Call-Instr, allGrp, controlFlowGrp
2040869c:    ff042583              lw    a1,-16(s0)                             Return-Tgt, allGrp
204086a0:    04a5a423              sw    a0,72(a1)                              allGrp
204086a4:    fea42023              sw    a0,-32(s0)                             allGrp
      p5->_next = 0;
204086a8:    fe042503              lw    a0,-32(s0)                             allGrp
204086ac:    00000593              li    a1,0                                   allGrp
204086b0:    00b52023              sw    a1,0(a0)                               allGrp
    }
204086b4:    0040006f              j    204086b8 <__pow5mult+0xe8>              allGrp, Branch-Instr, controlFlowGrp
  for (;;)
204086b8:    0040006f              j    204086bc <__pow5mult+0xec>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (k & 1)
204086bc:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
204086c0:    00157513              andi    a0,a0,1                              allGrp
204086c4:    00000593              li    a1,0                                   allGrp
204086c8:    02b50e63              beq    a0,a1,20408704 <__pow5mult+0x134>     allGrp, Branch-Instr, controlFlowGrp
204086cc:    0040006f              j    204086d0 <__pow5mult+0x100>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  b1 = mult (ptr, b, p5);
204086d0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204086d4:    fec42583              lw    a1,-20(s0)                             allGrp
204086d8:    fe042603              lw    a2,-32(s0)                             allGrp
204086dc:    00000097              auipc    ra,0x0                              allGrp
204086e0:    abc080e7              jalr    -1348(ra) # 20408198 <__multiply>    Call-Instr, allGrp, controlFlowGrp
204086e4:    fea42223              sw    a0,-28(s0)                             Return-Tgt, allGrp
	  Bfree (ptr, b);
204086e8:    ff042503              lw    a0,-16(s0)                             allGrp
204086ec:    fec42583              lw    a1,-20(s0)                             allGrp
204086f0:    fffff097              auipc    ra,0xfffff                          allGrp
204086f4:    2d0080e7              jalr    720(ra) # 204079c0 <_Bfree>          Call-Instr, allGrp, controlFlowGrp
	  b = b1;
204086f8:    fe442503              lw    a0,-28(s0)                             Return-Tgt, allGrp
204086fc:    fea42623              sw    a0,-20(s0)                             allGrp
	}
20408700:    0040006f              j    20408704 <__pow5mult+0x134>             allGrp, Branch-Instr, controlFlowGrp
      if (!(k >>= 1))
20408704:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20408708:    40155513              srai    a0,a0,0x1                            allGrp
2040870c:    fea42423              sw    a0,-24(s0)                             allGrp
20408710:    00000593              li    a1,0                                   allGrp
20408714:    00b51663              bne    a0,a1,20408720 <__pow5mult+0x150>     allGrp, Branch-Instr, controlFlowGrp
20408718:    0040006f              j    2040871c <__pow5mult+0x14c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	break;
2040871c:    0580006f              j    20408774 <__pow5mult+0x1a4>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      if (!(p51 = p5->_next))
20408720:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20408724:    00052503              lw    a0,0(a0)                               allGrp
20408728:    fca42e23              sw    a0,-36(s0)                             allGrp
2040872c:    00000593              li    a1,0                                   allGrp
20408730:    02b51c63              bne    a0,a1,20408768 <__pow5mult+0x198>     allGrp, Branch-Instr, controlFlowGrp
20408734:    0040006f              j    20408738 <__pow5mult+0x168>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  p51 = p5->_next = mult (ptr, p5, p5);
20408738:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040873c:    fe042583              lw    a1,-32(s0)                             allGrp
20408740:    fe042603              lw    a2,-32(s0)                             allGrp
20408744:    00000097              auipc    ra,0x0                              allGrp
20408748:    a54080e7              jalr    -1452(ra) # 20408198 <__multiply>    Call-Instr, allGrp, controlFlowGrp
2040874c:    fe042583              lw    a1,-32(s0)                             Return-Tgt, allGrp
20408750:    00a5a023              sw    a0,0(a1)                               allGrp
20408754:    fca42e23              sw    a0,-36(s0)                             allGrp
	  p51->_next = 0;
20408758:    fdc42503              lw    a0,-36(s0)                             allGrp
2040875c:    00000593              li    a1,0                                   allGrp
20408760:    00b52023              sw    a1,0(a0)                               allGrp
	}
20408764:    0040006f              j    20408768 <__pow5mult+0x198>             allGrp, Branch-Instr, controlFlowGrp
      p5 = p51;
20408768:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040876c:    fea42023              sw    a0,-32(s0)                             allGrp
  for (;;)
20408770:    f4dff06f              j    204086bc <__pow5mult+0xec>              allGrp, Branch-Instr, controlFlowGrp
    }
  return b;
20408774:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20408778:    fea42a23              sw    a0,-12(s0)                             allGrp
2040877c:    0040006f              j    20408780 <__pow5mult+0x1b0>             allGrp, Branch-Instr, controlFlowGrp
}
20408780:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20408784:    03812403              lw    s0,56(sp)                              allGrp
20408788:    02012c23              sw    zero,56(sp)                            allGrp
2040878c:    03c12083              lw    ra,60(sp)                              allGrp
20408790:    02012e23              sw    zero,60(sp)                            allGrp
20408794:    04010113              addi    sp,sp,64                             allGrp
20408798:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040879c <__lshift>:
2040879c:    fb010113              addi    sp,sp,-80                            Call-Tgt, allGrp, Branch-Tgt
204087a0:    04112623              sw    ra,76(sp)                              allGrp
204087a4:    04812423              sw    s0,72(sp)                              allGrp
204087a8:    05010413              addi    s0,sp,80                             allGrp
204087ac:    00060693              mv    a3,a2                                  allGrp
204087b0:    00058713              mv    a4,a1                                  allGrp
204087b4:    00050793              mv    a5,a0                                  allGrp
204087b8:    fea42a23              sw    a0,-12(s0)                             allGrp
204087bc:    feb42823              sw    a1,-16(s0)                             allGrp
204087c0:    fec42623              sw    a2,-20(s0)                             allGrp
  int i, k1, n, n1;
  _Bigint *b1;
  __ULong *x, *x1, *xe, z;

#ifdef Pack_32
  n = k >> 5;
204087c4:    fec42503              lw    a0,-20(s0)                             allGrp
204087c8:    40555513              srai    a0,a0,0x5                            allGrp
204087cc:    fea42023              sw    a0,-32(s0)                             allGrp
#else
  n = k >> 4;
#endif
  k1 = b->_k;
204087d0:    ff042503              lw    a0,-16(s0)                             allGrp
204087d4:    00452503              lw    a0,4(a0)                               allGrp
204087d8:    fea42223              sw    a0,-28(s0)                             allGrp
  n1 = n + b->_wds + 1;
204087dc:    fe042503              lw    a0,-32(s0)                             allGrp
204087e0:    ff042583              lw    a1,-16(s0)                             allGrp
204087e4:    0105a583              lw    a1,16(a1)                              allGrp
204087e8:    00b50533              add    a0,a0,a1                              allGrp
204087ec:    00150513              addi    a0,a0,1                              allGrp
204087f0:    fca42e23              sw    a0,-36(s0)                             allGrp
  for (i = b->_maxwds; n1 > i; i <<= 1)
204087f4:    ff042503              lw    a0,-16(s0)                             allGrp
204087f8:    00852503              lw    a0,8(a0)                               allGrp
204087fc:    fea42423              sw    a0,-24(s0)                             allGrp
20408800:    fcd42223              sw    a3,-60(s0)                             allGrp
20408804:    fce42023              sw    a4,-64(s0)                             allGrp
20408808:    faf42e23              sw    a5,-68(s0)                             allGrp
2040880c:    0040006f              j    20408810 <__lshift+0x74>                allGrp, Branch-Instr, controlFlowGrp
20408810:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20408814:    fe842583              lw    a1,-24(s0)                             allGrp
20408818:    02a5d463              ble    a0,a1,20408840 <__lshift+0xa4>        allGrp, Branch-Instr, controlFlowGrp
2040881c:    0040006f              j    20408820 <__lshift+0x84>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    k1++;
20408820:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20408824:    00150513              addi    a0,a0,1                              allGrp
20408828:    fea42223              sw    a0,-28(s0)                             allGrp
2040882c:    0040006f              j    20408830 <__lshift+0x94>                allGrp, Branch-Instr, controlFlowGrp
  for (i = b->_maxwds; n1 > i; i <<= 1)
20408830:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20408834:    00151513              slli    a0,a0,0x1                            allGrp
20408838:    fea42423              sw    a0,-24(s0)                             allGrp
2040883c:    fd5ff06f              j    20408810 <__lshift+0x74>                allGrp, Branch-Instr, controlFlowGrp
  b1 = Balloc (ptr, k1);
20408840:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20408844:    fe442583              lw    a1,-28(s0)                             allGrp
20408848:    fffff097              auipc    ra,0xfffff                          allGrp
2040884c:    010080e7              jalr    16(ra) # 20407858 <_Balloc>          Call-Instr, allGrp, controlFlowGrp
20408850:    fca42c23              sw    a0,-40(s0)                             Return-Tgt, allGrp
  x1 = b1->_x;
20408854:    fd842503              lw    a0,-40(s0)                             allGrp
20408858:    01450513              addi    a0,a0,20                             allGrp
2040885c:    fca42823              sw    a0,-48(s0)                             allGrp
20408860:    00000513              li    a0,0                                   allGrp
  for (i = 0; i < n; i++)
20408864:    fea42423              sw    a0,-24(s0)                             allGrp
20408868:    0040006f              j    2040886c <__lshift+0xd0>                allGrp, Branch-Instr, controlFlowGrp
2040886c:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20408870:    fe042583              lw    a1,-32(s0)                             allGrp
20408874:    02b55863              ble    a1,a0,204088a4 <__lshift+0x108>       allGrp, Branch-Instr, controlFlowGrp
20408878:    0040006f              j    2040887c <__lshift+0xe0>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    *x1++ = 0;
2040887c:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20408880:    00450593              addi    a1,a0,4                              allGrp
20408884:    fcb42823              sw    a1,-48(s0)                             allGrp
20408888:    00000593              li    a1,0                                   allGrp
2040888c:    00b52023              sw    a1,0(a0)                               allGrp
20408890:    0040006f              j    20408894 <__lshift+0xf8>                allGrp, Branch-Instr, controlFlowGrp
  for (i = 0; i < n; i++)
20408894:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20408898:    00150513              addi    a0,a0,1                              allGrp
2040889c:    fea42423              sw    a0,-24(s0)                             allGrp
204088a0:    fcdff06f              j    2040886c <__lshift+0xd0>                allGrp, Branch-Instr, controlFlowGrp
  x = b->_x;
204088a4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
204088a8:    01450513              addi    a0,a0,20                             allGrp
204088ac:    fca42a23              sw    a0,-44(s0)                             allGrp
  xe = x + b->_wds;
204088b0:    fd442503              lw    a0,-44(s0)                             allGrp
204088b4:    ff042583              lw    a1,-16(s0)                             allGrp
204088b8:    0105a583              lw    a1,16(a1)                              allGrp
204088bc:    00259593              slli    a1,a1,0x2                            allGrp
204088c0:    00b50533              add    a0,a0,a1                              allGrp
204088c4:    fca42623              sw    a0,-52(s0)                             allGrp
#ifdef Pack_32
  if (k &= 0x1f)
204088c8:    fec42503              lw    a0,-20(s0)                             allGrp
204088cc:    01f57513              andi    a0,a0,31                             allGrp
204088d0:    fea42623              sw    a0,-20(s0)                             allGrp
204088d4:    00000593              li    a1,0                                   allGrp
204088d8:    0ab50463              beq    a0,a1,20408980 <__lshift+0x1e4>       allGrp, Branch-Instr, controlFlowGrp
204088dc:    0040006f              j    204088e0 <__lshift+0x144>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      k1 = 32 - k;
204088e0:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204088e4:    02000593              li    a1,32                                  allGrp
204088e8:    40a58533              sub    a0,a1,a0                              allGrp
204088ec:    fea42223              sw    a0,-28(s0)                             allGrp
204088f0:    00000513              li    a0,0                                   allGrp
      z = 0;
204088f4:    fca42423              sw    a0,-56(s0)                             allGrp
      do
204088f8:    0040006f              j    204088fc <__lshift+0x160>               allGrp, Branch-Instr, controlFlowGrp
	{
	  *x1++ = *x << k | z;
204088fc:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
20408900:    00052503              lw    a0,0(a0)                               allGrp
20408904:    fec42583              lw    a1,-20(s0)                             allGrp
20408908:    00b51533              sll    a0,a0,a1                              allGrp
2040890c:    fc842583              lw    a1,-56(s0)                             allGrp
20408910:    00b56533              or    a0,a0,a1                               allGrp
20408914:    fd042583              lw    a1,-48(s0)                             allGrp
20408918:    00458613              addi    a2,a1,4                              allGrp
2040891c:    fcc42823              sw    a2,-48(s0)                             allGrp
20408920:    00a5a023              sw    a0,0(a1)                               allGrp
	  z = *x++ >> k1;
20408924:    fd442503              lw    a0,-44(s0)                             allGrp
20408928:    00450593              addi    a1,a0,4                              allGrp
2040892c:    fcb42a23              sw    a1,-44(s0)                             allGrp
20408930:    00052503              lw    a0,0(a0)                               allGrp
20408934:    fe442583              lw    a1,-28(s0)                             allGrp
20408938:    00b55533              srl    a0,a0,a1                              allGrp
2040893c:    fca42423              sw    a0,-56(s0)                             allGrp
	}
20408940:    0040006f              j    20408944 <__lshift+0x1a8>               allGrp, Branch-Instr, controlFlowGrp
      while (x < xe);
20408944:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
20408948:    fcc42583              lw    a1,-52(s0)                             allGrp
	}
2040894c:    fab568e3              bltu    a0,a1,204088fc <__lshift+0x160>      allGrp, Branch-Instr, controlFlowGrp
20408950:    0040006f              j    20408954 <__lshift+0x1b8>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      if ((*x1 = z) != 0)
20408954:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
20408958:    fd042583              lw    a1,-48(s0)                             allGrp
2040895c:    00a5a023              sw    a0,0(a1)                               allGrp
20408960:    00000593              li    a1,0                                   allGrp
20408964:    00b50c63              beq    a0,a1,2040897c <__lshift+0x1e0>       allGrp, Branch-Instr, controlFlowGrp
20408968:    0040006f              j    2040896c <__lshift+0x1d0>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	++n1;
2040896c:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20408970:    00150513              addi    a0,a0,1                              allGrp
20408974:    fca42e23              sw    a0,-36(s0)                             allGrp
20408978:    0040006f              j    2040897c <__lshift+0x1e0>               allGrp, Branch-Instr, controlFlowGrp
    }
2040897c:    0400006f              j    204089bc <__lshift+0x220>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      if (*x1 = z)
	++n1;
    }
#endif
  else
    do
20408980:    0040006f              j    20408984 <__lshift+0x1e8>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      *x1++ = *x++;
20408984:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
20408988:    00450593              addi    a1,a0,4                              allGrp
2040898c:    fcb42a23              sw    a1,-44(s0)                             allGrp
20408990:    00052503              lw    a0,0(a0)                               allGrp
20408994:    fd042583              lw    a1,-48(s0)                             allGrp
20408998:    00458613              addi    a2,a1,4                              allGrp
2040899c:    fcc42823              sw    a2,-48(s0)                             allGrp
204089a0:    00a5a023              sw    a0,0(a1)                               allGrp
204089a4:    0040006f              j    204089a8 <__lshift+0x20c>               allGrp, Branch-Instr, controlFlowGrp
    while (x < xe);
204089a8:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
204089ac:    fcc42583              lw    a1,-52(s0)                             allGrp
      *x1++ = *x++;
204089b0:    fcb56ae3              bltu    a0,a1,20408984 <__lshift+0x1e8>      allGrp, Branch-Instr, controlFlowGrp
204089b4:    0040006f              j    204089b8 <__lshift+0x21c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204089b8:    0040006f              j    204089bc <__lshift+0x220>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  b1->_wds = n1 - 1;
204089bc:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
204089c0:    fff50513              addi    a0,a0,-1                             allGrp
204089c4:    fd842583              lw    a1,-40(s0)                             allGrp
204089c8:    00a5a823              sw    a0,16(a1)                              allGrp
  Bfree (ptr, b);
204089cc:    ff442503              lw    a0,-12(s0)                             allGrp
204089d0:    ff042583              lw    a1,-16(s0)                             allGrp
204089d4:    fffff097              auipc    ra,0xfffff                          allGrp
204089d8:    fec080e7              jalr    -20(ra) # 204079c0 <_Bfree>          Call-Instr, allGrp, controlFlowGrp
  return b1;
204089dc:    fd842503              lw    a0,-40(s0)                             Return-Tgt, allGrp
204089e0:    04812403              lw    s0,72(sp)                              allGrp
204089e4:    04012423              sw    zero,72(sp)                            allGrp
204089e8:    04c12083              lw    ra,76(sp)                              allGrp
204089ec:    04012623              sw    zero,76(sp)                            allGrp
204089f0:    05010113              addi    sp,sp,80                             allGrp
204089f4:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204089f8 <__mcmp>:
204089f8:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp, Branch-Tgt
204089fc:    02112e23              sw    ra,60(sp)                              allGrp
20408a00:    02812c23              sw    s0,56(sp)                              allGrp
20408a04:    04010413              addi    s0,sp,64                             allGrp
20408a08:    00058613              mv    a2,a1                                  allGrp
20408a0c:    00050693              mv    a3,a0                                  allGrp
20408a10:    fea42823              sw    a0,-16(s0)                             allGrp
20408a14:    feb42623              sw    a1,-20(s0)                             allGrp
_DEFUN (cmp, (a, b), _Bigint * a _AND _Bigint * b)
{
  __ULong *xa, *xa0, *xb, *xb0;
  int i, j;

  i = a->_wds;
20408a18:    ff042503              lw    a0,-16(s0)                             allGrp
20408a1c:    01052503              lw    a0,16(a0)                              allGrp
20408a20:    fca42c23              sw    a0,-40(s0)                             allGrp
  j = b->_wds;
20408a24:    fec42503              lw    a0,-20(s0)                             allGrp
20408a28:    01052503              lw    a0,16(a0)                              allGrp
20408a2c:    fca42a23              sw    a0,-44(s0)                             allGrp
  if (i > 1 && !a->_x[i - 1])
    Bug ("cmp called with a->_x[a->_wds-1] == 0");
  if (j > 1 && !b->_x[j - 1])
    Bug ("cmp called with b->_x[b->_wds-1] == 0");
#endif
  if (i -= j)
20408a30:    fd442503              lw    a0,-44(s0)                             allGrp
20408a34:    fd842583              lw    a1,-40(s0)                             allGrp
20408a38:    40a58533              sub    a0,a1,a0                              allGrp
20408a3c:    fca42c23              sw    a0,-40(s0)                             allGrp
20408a40:    00000593              li    a1,0                                   allGrp
20408a44:    fcc42823              sw    a2,-48(s0)                             allGrp
20408a48:    fcd42623              sw    a3,-52(s0)                             allGrp
20408a4c:    00b50a63              beq    a0,a1,20408a60 <__mcmp+0x68>          allGrp, Branch-Instr, controlFlowGrp
20408a50:    0040006f              j    20408a54 <__mcmp+0x5c>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return i;
20408a54:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
20408a58:    fea42a23              sw    a0,-12(s0)                             allGrp
20408a5c:    0cc0006f              j    20408b28 <__mcmp+0x130>                 allGrp, Branch-Instr, controlFlowGrp
  xa0 = a->_x;
20408a60:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20408a64:    01450513              addi    a0,a0,20                             allGrp
20408a68:    fea42223              sw    a0,-28(s0)                             allGrp
  xa = xa0 + j;
20408a6c:    fe442503              lw    a0,-28(s0)                             allGrp
20408a70:    fd442583              lw    a1,-44(s0)                             allGrp
20408a74:    00259593              slli    a1,a1,0x2                            allGrp
20408a78:    00b50533              add    a0,a0,a1                              allGrp
20408a7c:    fea42423              sw    a0,-24(s0)                             allGrp
  xb0 = b->_x;
20408a80:    fec42503              lw    a0,-20(s0)                             allGrp
20408a84:    01450513              addi    a0,a0,20                             allGrp
20408a88:    fca42e23              sw    a0,-36(s0)                             allGrp
  xb = xb0 + j;
20408a8c:    fdc42503              lw    a0,-36(s0)                             allGrp
20408a90:    fd442583              lw    a1,-44(s0)                             allGrp
20408a94:    00259593              slli    a1,a1,0x2                            allGrp
20408a98:    00b50533              add    a0,a0,a1                              allGrp
20408a9c:    fea42023              sw    a0,-32(s0)                             allGrp
  for (;;)
20408aa0:    0040006f              j    20408aa4 <__mcmp+0xac>                  allGrp, Branch-Instr, controlFlowGrp
    {
      if (*--xa != *--xb)
20408aa4:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20408aa8:    ffc50593              addi    a1,a0,-4                             allGrp
20408aac:    feb42423              sw    a1,-24(s0)                             allGrp
20408ab0:    ffc52503              lw    a0,-4(a0)                              allGrp
20408ab4:    fe042583              lw    a1,-32(s0)                             allGrp
20408ab8:    ffc58613              addi    a2,a1,-4                             allGrp
20408abc:    fec42023              sw    a2,-32(s0)                             allGrp
20408ac0:    ffc5a583              lw    a1,-4(a1)                              allGrp
20408ac4:    04b50063              beq    a0,a1,20408b04 <__mcmp+0x10c>         allGrp, Branch-Instr, controlFlowGrp
20408ac8:    0040006f              j    20408acc <__mcmp+0xd4>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	return *xa < *xb ? -1 : 1;
20408acc:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20408ad0:    00052503              lw    a0,0(a0)                               allGrp
20408ad4:    fe042583              lw    a1,-32(s0)                             allGrp
20408ad8:    0005a583              lw    a1,0(a1)                               allGrp
20408adc:    00100613              li    a2,1                                   allGrp
20408ae0:    fff00693              li    a3,-1                                  allGrp
20408ae4:    fcd42423              sw    a3,-56(s0)                             allGrp
20408ae8:    fcc42223              sw    a2,-60(s0)                             allGrp
20408aec:    00b56663              bltu    a0,a1,20408af8 <__mcmp+0x100>        allGrp, Branch-Instr, controlFlowGrp
20408af0:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
20408af4:    fca42423              sw    a0,-56(s0)                             allGrp
20408af8:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
20408afc:    fea42a23              sw    a0,-12(s0)                             allGrp
20408b00:    0280006f              j    20408b28 <__mcmp+0x130>                 allGrp, Branch-Instr, controlFlowGrp
      if (xa <= xa0)
20408b04:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20408b08:    fe442583              lw    a1,-28(s0)                             allGrp
20408b0c:    00a5e663              bltu    a1,a0,20408b18 <__mcmp+0x120>        allGrp, Branch-Instr, controlFlowGrp
20408b10:    0040006f              j    20408b14 <__mcmp+0x11c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	break;
20408b14:    0080006f              j    20408b1c <__mcmp+0x124>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  for (;;)
20408b18:    f8dff06f              j    20408aa4 <__mcmp+0xac>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    }
  return 0;
20408b1c:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20408b20:    fea42a23              sw    a0,-12(s0)                             allGrp
20408b24:    0040006f              j    20408b28 <__mcmp+0x130>                 allGrp, Branch-Instr, controlFlowGrp
}
20408b28:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20408b2c:    03812403              lw    s0,56(sp)                              allGrp
20408b30:    02012c23              sw    zero,56(sp)                            allGrp
20408b34:    03c12083              lw    ra,60(sp)                              allGrp
20408b38:    02012e23              sw    zero,60(sp)                            allGrp
20408b3c:    04010113              addi    sp,sp,64                             allGrp
20408b40:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20408b44 <__mdiff>:
20408b44:    fa010113              addi    sp,sp,-96                            Call-Tgt, allGrp, Branch-Tgt
20408b48:    04112e23              sw    ra,92(sp)                              allGrp
20408b4c:    04812c23              sw    s0,88(sp)                              allGrp
20408b50:    06010413              addi    s0,sp,96                             allGrp
20408b54:    00060693              mv    a3,a2                                  allGrp
20408b58:    00058713              mv    a4,a1                                  allGrp
20408b5c:    00050793              mv    a5,a0                                  allGrp
20408b60:    fea42823              sw    a0,-16(s0)                             allGrp
20408b64:    feb42623              sw    a1,-20(s0)                             allGrp
20408b68:    fec42423              sw    a2,-24(s0)                             allGrp
  __ULong *xa, *xae, *xb, *xbe, *xc;
#ifdef Pack_32
  __Long z;
#endif

  i = cmp (a, b);
20408b6c:    fec42503              lw    a0,-20(s0)                             allGrp
20408b70:    fe842583              lw    a1,-24(s0)                             allGrp
20408b74:    fad42a23              sw    a3,-76(s0)                             allGrp
20408b78:    fae42823              sw    a4,-80(s0)                             allGrp
20408b7c:    faf42623              sw    a5,-84(s0)                             allGrp
20408b80:    00000097              auipc    ra,0x0                              allGrp
20408b84:    e78080e7              jalr    -392(ra) # 204089f8 <__mcmp>         Call-Instr, allGrp, controlFlowGrp
20408b88:    fea42023              sw    a0,-32(s0)                             Return-Tgt, allGrp
  if (!i)
20408b8c:    fe042503              lw    a0,-32(s0)                             allGrp
20408b90:    00000593              li    a1,0                                   allGrp
20408b94:    04b51263              bne    a0,a1,20408bd8 <__mdiff+0x94>         allGrp, Branch-Instr, controlFlowGrp
20408b98:    0040006f              j    20408b9c <__mdiff+0x58>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      c = Balloc (ptr, 0);
20408b9c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20408ba0:    00000593              li    a1,0                                   allGrp
20408ba4:    fab42423              sw    a1,-88(s0)                             allGrp
20408ba8:    fffff097              auipc    ra,0xfffff                          allGrp
20408bac:    cb0080e7              jalr    -848(ra) # 20407858 <_Balloc>        Call-Instr, allGrp, controlFlowGrp
20408bb0:    fea42223              sw    a0,-28(s0)                             Return-Tgt, allGrp
      c->_wds = 1;
20408bb4:    fe442503              lw    a0,-28(s0)                             allGrp
20408bb8:    00100593              li    a1,1                                   allGrp
20408bbc:    00b52823              sw    a1,16(a0)                              allGrp
      c->_x[0] = 0;
20408bc0:    fe442503              lw    a0,-28(s0)                             allGrp
20408bc4:    fa842583              lw    a1,-88(s0)                             allGrp
20408bc8:    00b52a23              sw    a1,20(a0)                              allGrp
      return c;
20408bcc:    fe442503              lw    a0,-28(s0)                             allGrp
20408bd0:    fea42a23              sw    a0,-12(s0)                             allGrp
20408bd4:    23c0006f              j    20408e10 <__mdiff+0x2cc>                allGrp, Branch-Instr, controlFlowGrp
    }
  if (i < 0)
20408bd8:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20408bdc:    fff00593              li    a1,-1                                  allGrp
20408be0:    02a5c663              blt    a1,a0,20408c0c <__mdiff+0xc8>         allGrp, Branch-Instr, controlFlowGrp
20408be4:    0040006f              j    20408be8 <__mdiff+0xa4>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      c = a;
20408be8:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20408bec:    fea42223              sw    a0,-28(s0)                             allGrp
      a = b;
20408bf0:    fe842503              lw    a0,-24(s0)                             allGrp
20408bf4:    fea42623              sw    a0,-20(s0)                             allGrp
      b = c;
20408bf8:    fe442503              lw    a0,-28(s0)                             allGrp
20408bfc:    fea42423              sw    a0,-24(s0)                             allGrp
20408c00:    00100513              li    a0,1                                   allGrp
      i = 1;
20408c04:    fea42023              sw    a0,-32(s0)                             allGrp
    }
20408c08:    0100006f              j    20408c18 <__mdiff+0xd4>                 allGrp, Branch-Instr, controlFlowGrp
  else
    i = 0;
20408c0c:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20408c10:    fea42023              sw    a0,-32(s0)                             allGrp
20408c14:    0040006f              j    20408c18 <__mdiff+0xd4>                 allGrp, Branch-Instr, controlFlowGrp
  c = Balloc (ptr, a->_k);
20408c18:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20408c1c:    fec42583              lw    a1,-20(s0)                             allGrp
20408c20:    0045a583              lw    a1,4(a1)                               allGrp
20408c24:    fffff097              auipc    ra,0xfffff                          allGrp
20408c28:    c34080e7              jalr    -972(ra) # 20407858 <_Balloc>        Call-Instr, allGrp, controlFlowGrp
20408c2c:    fea42223              sw    a0,-28(s0)                             Return-Tgt, allGrp
  c->_sign = i;
20408c30:    fe042503              lw    a0,-32(s0)                             allGrp
20408c34:    fe442583              lw    a1,-28(s0)                             allGrp
20408c38:    00a5a623              sw    a0,12(a1)                              allGrp
  wa = a->_wds;
20408c3c:    fec42503              lw    a0,-20(s0)                             allGrp
20408c40:    01052503              lw    a0,16(a0)                              allGrp
20408c44:    fca42e23              sw    a0,-36(s0)                             allGrp
  xa = a->_x;
20408c48:    fec42503              lw    a0,-20(s0)                             allGrp
20408c4c:    01450513              addi    a0,a0,20                             allGrp
20408c50:    fca42623              sw    a0,-52(s0)                             allGrp
  xae = xa + wa;
20408c54:    fcc42503              lw    a0,-52(s0)                             allGrp
20408c58:    fdc42583              lw    a1,-36(s0)                             allGrp
20408c5c:    00259593              slli    a1,a1,0x2                            allGrp
20408c60:    00b50533              add    a0,a0,a1                              allGrp
20408c64:    fca42423              sw    a0,-56(s0)                             allGrp
  wb = b->_wds;
20408c68:    fe842503              lw    a0,-24(s0)                             allGrp
20408c6c:    01052503              lw    a0,16(a0)                              allGrp
20408c70:    fca42c23              sw    a0,-40(s0)                             allGrp
  xb = b->_x;
20408c74:    fe842503              lw    a0,-24(s0)                             allGrp
20408c78:    01450513              addi    a0,a0,20                             allGrp
20408c7c:    fca42223              sw    a0,-60(s0)                             allGrp
  xbe = xb + wb;
20408c80:    fc442503              lw    a0,-60(s0)                             allGrp
20408c84:    fd842583              lw    a1,-40(s0)                             allGrp
20408c88:    00259593              slli    a1,a1,0x2                            allGrp
20408c8c:    00b50533              add    a0,a0,a1                              allGrp
20408c90:    fca42023              sw    a0,-64(s0)                             allGrp
  xc = c->_x;
20408c94:    fe442503              lw    a0,-28(s0)                             allGrp
20408c98:    01450513              addi    a0,a0,20                             allGrp
20408c9c:    faa42e23              sw    a0,-68(s0)                             allGrp
20408ca0:    00000513              li    a0,0                                   allGrp
  borrow = 0;
20408ca4:    fca42a23              sw    a0,-44(s0)                             allGrp
#ifdef Pack_32
  do
20408ca8:    0040006f              j    20408cac <__mdiff+0x168>                allGrp, Branch-Instr, controlFlowGrp
    {
      y = (*xa & 0xffff) - (*xb & 0xffff) + borrow;
20408cac:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20408cb0:    00055503              lhu    a0,0(a0)                              allGrp
20408cb4:    fc442583              lw    a1,-60(s0)                             allGrp
20408cb8:    0005d583              lhu    a1,0(a1)                              allGrp
20408cbc:    40b50533              sub    a0,a0,a1                              allGrp
20408cc0:    fd442583              lw    a1,-44(s0)                             allGrp
20408cc4:    00b50533              add    a0,a0,a1                              allGrp
20408cc8:    fca42823              sw    a0,-48(s0)                             allGrp
      borrow = y >> 16;
20408ccc:    fd042503              lw    a0,-48(s0)                             allGrp
20408cd0:    41055513              srai    a0,a0,0x10                           allGrp
20408cd4:    fca42a23              sw    a0,-44(s0)                             allGrp
      Sign_Extend (borrow, y);
      z = (*xa++ >> 16) - (*xb++ >> 16) + borrow;
20408cd8:    fcc42503              lw    a0,-52(s0)                             allGrp
20408cdc:    00450593              addi    a1,a0,4                              allGrp
20408ce0:    fcb42623              sw    a1,-52(s0)                             allGrp
20408ce4:    00255503              lhu    a0,2(a0)                              allGrp
20408ce8:    fc442583              lw    a1,-60(s0)                             allGrp
20408cec:    00458613              addi    a2,a1,4                              allGrp
20408cf0:    fcc42223              sw    a2,-60(s0)                             allGrp
20408cf4:    0025d583              lhu    a1,2(a1)                              allGrp
20408cf8:    40b50533              sub    a0,a0,a1                              allGrp
20408cfc:    fd442583              lw    a1,-44(s0)                             allGrp
20408d00:    00b50533              add    a0,a0,a1                              allGrp
20408d04:    faa42c23              sw    a0,-72(s0)                             allGrp
      borrow = z >> 16;
20408d08:    fb842503              lw    a0,-72(s0)                             allGrp
20408d0c:    41055513              srai    a0,a0,0x10                           allGrp
20408d10:    fca42a23              sw    a0,-44(s0)                             allGrp
      Sign_Extend (borrow, z);
      Storeinc (xc, z, y);
20408d14:    fb842503              lw    a0,-72(s0)                             allGrp
20408d18:    01051513              slli    a0,a0,0x10                           allGrp
20408d1c:    fd045583              lhu    a1,-48(s0)                            allGrp
20408d20:    00b56533              or    a0,a0,a1                               allGrp
20408d24:    fbc42583              lw    a1,-68(s0)                             allGrp
20408d28:    00458613              addi    a2,a1,4                              allGrp
20408d2c:    fac42e23              sw    a2,-68(s0)                             allGrp
20408d30:    00a5a023              sw    a0,0(a1)                               allGrp
    }
20408d34:    0040006f              j    20408d38 <__mdiff+0x1f4>                allGrp, Branch-Instr, controlFlowGrp
  while (xb < xbe);
20408d38:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
20408d3c:    fc042583              lw    a1,-64(s0)                             allGrp
    }
20408d40:    f6b566e3              bltu    a0,a1,20408cac <__mdiff+0x168>       allGrp, Branch-Instr, controlFlowGrp
20408d44:    0040006f              j    20408d48 <__mdiff+0x204>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  while (xa < xae)
20408d48:    0040006f              j    20408d4c <__mdiff+0x208>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20408d4c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20408d50:    fc842583              lw    a1,-56(s0)                             allGrp
20408d54:    06b57a63              bleu    a1,a0,20408dc8 <__mdiff+0x284>       allGrp, Branch-Instr, controlFlowGrp
20408d58:    0040006f              j    20408d5c <__mdiff+0x218>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      y = (*xa & 0xffff) + borrow;
20408d5c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
20408d60:    00055503              lhu    a0,0(a0)                              allGrp
20408d64:    fd442583              lw    a1,-44(s0)                             allGrp
20408d68:    00b50533              add    a0,a0,a1                              allGrp
20408d6c:    fca42823              sw    a0,-48(s0)                             allGrp
      borrow = y >> 16;
20408d70:    fd042503              lw    a0,-48(s0)                             allGrp
20408d74:    41055513              srai    a0,a0,0x10                           allGrp
20408d78:    fca42a23              sw    a0,-44(s0)                             allGrp
      Sign_Extend (borrow, y);
      z = (*xa++ >> 16) + borrow;
20408d7c:    fcc42503              lw    a0,-52(s0)                             allGrp
20408d80:    00450593              addi    a1,a0,4                              allGrp
20408d84:    fcb42623              sw    a1,-52(s0)                             allGrp
20408d88:    00255503              lhu    a0,2(a0)                              allGrp
20408d8c:    fd442583              lw    a1,-44(s0)                             allGrp
20408d90:    00b50533              add    a0,a0,a1                              allGrp
20408d94:    faa42c23              sw    a0,-72(s0)                             allGrp
      borrow = z >> 16;
20408d98:    fb842503              lw    a0,-72(s0)                             allGrp
20408d9c:    41055513              srai    a0,a0,0x10                           allGrp
20408da0:    fca42a23              sw    a0,-44(s0)                             allGrp
      Sign_Extend (borrow, z);
      Storeinc (xc, z, y);
20408da4:    fb842503              lw    a0,-72(s0)                             allGrp
20408da8:    01051513              slli    a0,a0,0x10                           allGrp
20408dac:    fd045583              lhu    a1,-48(s0)                            allGrp
20408db0:    00b56533              or    a0,a0,a1                               allGrp
20408db4:    fbc42583              lw    a1,-68(s0)                             allGrp
20408db8:    00458613              addi    a2,a1,4                              allGrp
20408dbc:    fac42e23              sw    a2,-68(s0)                             allGrp
20408dc0:    00a5a023              sw    a0,0(a1)                               allGrp
  while (xa < xae)
20408dc4:    f89ff06f              j    20408d4c <__mdiff+0x208>                allGrp, Branch-Instr, controlFlowGrp
      borrow = y >> 16;
      Sign_Extend (borrow, y);
      *xc++ = y & 0xffff;
    }
#endif
  while (!*--xc)
20408dc8:    0040006f              j    20408dcc <__mdiff+0x288>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20408dcc:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20408dd0:    ffc50593              addi    a1,a0,-4                             allGrp
20408dd4:    fab42e23              sw    a1,-68(s0)                             allGrp
20408dd8:    ffc52503              lw    a0,-4(a0)                              allGrp
20408ddc:    00000593              li    a1,0                                   allGrp
20408de0:    00b51c63              bne    a0,a1,20408df8 <__mdiff+0x2b4>        allGrp, Branch-Instr, controlFlowGrp
20408de4:    0040006f              j    20408de8 <__mdiff+0x2a4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    wa--;
20408de8:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20408dec:    fff50513              addi    a0,a0,-1                             allGrp
20408df0:    fca42e23              sw    a0,-36(s0)                             allGrp
  while (!*--xc)
20408df4:    fd9ff06f              j    20408dcc <__mdiff+0x288>                allGrp, Branch-Instr, controlFlowGrp
  c->_wds = wa;
20408df8:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20408dfc:    fe442583              lw    a1,-28(s0)                             allGrp
20408e00:    00a5a823              sw    a0,16(a1)                              allGrp
  return c;
20408e04:    fe442503              lw    a0,-28(s0)                             allGrp
20408e08:    fea42a23              sw    a0,-12(s0)                             allGrp
20408e0c:    0040006f              j    20408e10 <__mdiff+0x2cc>                allGrp, Branch-Instr, controlFlowGrp
}
20408e10:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20408e14:    05812403              lw    s0,88(sp)                              allGrp
20408e18:    04012c23              sw    zero,88(sp)                            allGrp
20408e1c:    05c12083              lw    ra,92(sp)                              allGrp
20408e20:    04012e23              sw    zero,92(sp)                            allGrp
20408e24:    06010113              addi    sp,sp,96                             allGrp
20408e28:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20408e2c <__ulp>:
20408e2c:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
20408e30:    02112623              sw    ra,44(sp)                              allGrp
20408e34:    02812423              sw    s0,40(sp)                              allGrp
20408e38:    03010413              addi    s0,sp,48                             allGrp
20408e3c:    00058613              mv    a2,a1                                  allGrp
20408e40:    00050693              mv    a3,a0                                  allGrp
20408e44:    feb42a23              sw    a1,-12(s0)                             allGrp
20408e48:    fea42823              sw    a0,-16(s0)                             allGrp
_DEFUN (ulp, (_x), double _x)
{
  union double_union x, a;
  register __Long L;

  x.d = _x;
20408e4c:    ff042503              lw    a0,-16(s0)                             allGrp
20408e50:    ff442583              lw    a1,-12(s0)                             allGrp
20408e54:    feb42623              sw    a1,-20(s0)                             allGrp
20408e58:    fea42423              sw    a0,-24(s0)                             allGrp

  L = (word0 (x) & Exp_mask) - (P - 1) * Exp_msk1;
20408e5c:    fec42503              lw    a0,-20(s0)                             allGrp
20408e60:    7ff005b7              lui    a1,0x7ff00                            allGrp
20408e64:    00b57533              and    a0,a0,a1                              allGrp
20408e68:    fcc005b7              lui    a1,0xfcc00                            allGrp
20408e6c:    00b50533              add    a0,a0,a1                              allGrp
20408e70:    fca42e23              sw    a0,-36(s0)                             allGrp
#ifndef Sudden_Underflow
  if (L > 0)
20408e74:    fdc42503              lw    a0,-36(s0)                             allGrp
20408e78:    00100593              li    a1,1                                   allGrp
20408e7c:    fcd42c23              sw    a3,-40(s0)                             allGrp
20408e80:    fcc42a23              sw    a2,-44(s0)                             allGrp
20408e84:    00b54e63              blt    a0,a1,20408ea0 <__ulp+0x74>           allGrp, Branch-Instr, controlFlowGrp
20408e88:    0040006f              j    20408e8c <__ulp+0x60>                   Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
#endif
#ifdef IBM
      L |= Exp_msk1 >> 4;
#endif
      word0 (a) = L;
20408e8c:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20408e90:    fea42223              sw    a0,-28(s0)                             allGrp
20408e94:    00000513              li    a0,0                                   allGrp
#ifndef _DOUBLE_IS_32BITS
      word1 (a) = 0;
20408e98:    fea42023              sw    a0,-32(s0)                             allGrp
#endif

#ifndef Sudden_Underflow
    }
20408e9c:    0a00006f              j    20408f3c <__ulp+0x110>                  allGrp, Branch-Instr, controlFlowGrp
  else
    {
      L = -L >> Exp_shift;
20408ea0:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20408ea4:    00000593              li    a1,0                                   allGrp
20408ea8:    40a58533              sub    a0,a1,a0                              allGrp
20408eac:    41455513              srai    a0,a0,0x14                           allGrp
20408eb0:    fca42e23              sw    a0,-36(s0)                             allGrp
      if (L < Exp_shift)
20408eb4:    fdc42503              lw    a0,-36(s0)                             allGrp
20408eb8:    01300593              li    a1,19                                  allGrp
20408ebc:    02a5c263              blt    a1,a0,20408ee0 <__ulp+0xb4>           allGrp, Branch-Instr, controlFlowGrp
20408ec0:    0040006f              j    20408ec4 <__ulp+0x98>                   Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  word0 (a) = 0x80000 >> L;
20408ec4:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20408ec8:    000805b7              lui    a1,0x80                               allGrp
20408ecc:    00a5d533              srl    a0,a1,a0                              allGrp
20408ed0:    fea42223              sw    a0,-28(s0)                             allGrp
20408ed4:    00000513              li    a0,0                                   allGrp
#ifndef _DOUBLE_IS_32BITS
	  word1 (a) = 0;
20408ed8:    fea42023              sw    a0,-32(s0)                             allGrp
#endif
	}
20408edc:    05c0006f              j    20408f38 <__ulp+0x10c>                  allGrp, Branch-Instr, controlFlowGrp
      else
	{
	  word0 (a) = 0;
20408ee0:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20408ee4:    fea42223              sw    a0,-28(s0)                             allGrp
	  L -= Exp_shift;
20408ee8:    fdc42503              lw    a0,-36(s0)                             allGrp
20408eec:    fec50513              addi    a0,a0,-20                            allGrp
20408ef0:    fca42e23              sw    a0,-36(s0)                             allGrp
#ifndef _DOUBLE_IS_32BITS
         word1 (a) = L >= 31 ? 1 : 1 << (31 - L);
20408ef4:    fdc42503              lw    a0,-36(s0)                             allGrp
20408ef8:    01f00593              li    a1,31                                  allGrp
20408efc:    00b54a63              blt    a0,a1,20408f10 <__ulp+0xe4>           allGrp, Branch-Instr, controlFlowGrp
20408f00:    0040006f              j    20408f04 <__ulp+0xd8>                   Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20408f04:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20408f08:    fca42823              sw    a0,-48(s0)                             allGrp
20408f0c:    0200006f              j    20408f2c <__ulp+0x100>                  allGrp, Branch-Instr, controlFlowGrp
20408f10:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20408f14:    01f00593              li    a1,31                                  allGrp
20408f18:    40a58533              sub    a0,a1,a0                              allGrp
20408f1c:    00100593              li    a1,1                                   allGrp
20408f20:    00a59533              sll    a0,a1,a0                              allGrp
20408f24:    fca42823              sw    a0,-48(s0)                             allGrp
20408f28:    0040006f              j    20408f2c <__ulp+0x100>                  allGrp, Branch-Instr, controlFlowGrp
20408f2c:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20408f30:    fea42023              sw    a0,-32(s0)                             allGrp
20408f34:    0040006f              j    20408f38 <__ulp+0x10c>                  allGrp, Branch-Instr, controlFlowGrp
20408f38:    0040006f              j    20408f3c <__ulp+0x110>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
#endif
	}
    }
#endif
  return a.d;
20408f3c:    fe442583              lw    a1,-28(s0)                             Branch-Tgt, allGrp
20408f40:    fe042503              lw    a0,-32(s0)                             allGrp
20408f44:    02812403              lw    s0,40(sp)                              allGrp
20408f48:    02012423              sw    zero,40(sp)                            allGrp
20408f4c:    02c12083              lw    ra,44(sp)                              allGrp
20408f50:    02012623              sw    zero,44(sp)                            allGrp
20408f54:    03010113              addi    sp,sp,48                             allGrp
20408f58:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20408f5c <__b2d>:
20408f5c:    fb010113              addi    sp,sp,-80                            Call-Tgt, allGrp, Branch-Tgt
20408f60:    04112623              sw    ra,76(sp)                              allGrp
20408f64:    04812423              sw    s0,72(sp)                              allGrp
20408f68:    05010413              addi    s0,sp,80                             allGrp
20408f6c:    00058613              mv    a2,a1                                  allGrp
20408f70:    00050693              mv    a3,a0                                  allGrp
20408f74:    fea42a23              sw    a0,-12(s0)                             allGrp
20408f78:    feb42823              sw    a1,-16(s0)                             allGrp
#else
#define d0 word0(d)
#define d1 word1(d)
#endif

  xa0 = a->_x;
20408f7c:    ff442503              lw    a0,-12(s0)                             allGrp
20408f80:    01450513              addi    a0,a0,20                             allGrp
20408f84:    fea42423              sw    a0,-24(s0)                             allGrp
  xa = xa0 + a->_wds;
20408f88:    fe842503              lw    a0,-24(s0)                             allGrp
20408f8c:    ff442583              lw    a1,-12(s0)                             allGrp
20408f90:    0105a583              lw    a1,16(a1) # 80010 <__stack_size+0x7f810>allGrp
20408f94:    00259593              slli    a1,a1,0x2                            allGrp
20408f98:    00b50533              add    a0,a0,a1                              allGrp
20408f9c:    fea42623              sw    a0,-20(s0)                             allGrp
  y = *--xa;
20408fa0:    fec42503              lw    a0,-20(s0)                             allGrp
20408fa4:    ffc50593              addi    a1,a0,-4                             allGrp
20408fa8:    feb42623              sw    a1,-20(s0)                             allGrp
20408fac:    ffc52503              lw    a0,-4(a0)                              allGrp
20408fb0:    fea42023              sw    a0,-32(s0)                             allGrp
#ifdef DEBUG
  if (!y)
    Bug ("zero y in b2d");
#endif
  k = hi0bits (y);
20408fb4:    fe042503              lw    a0,-32(s0)                             allGrp
20408fb8:    fcc42623              sw    a2,-52(s0)                             allGrp
20408fbc:    fcd42423              sw    a3,-56(s0)                             allGrp
20408fc0:    fffff097              auipc    ra,0xfffff                          allGrp
20408fc4:    e34080e7              jalr    -460(ra) # 20407df4 <__hi0bits>      Call-Instr, allGrp, controlFlowGrp
20408fc8:    fca42c23              sw    a0,-40(s0)                             Return-Tgt, allGrp
  *e = 32 - k;
20408fcc:    fd842503              lw    a0,-40(s0)                             allGrp
20408fd0:    02000593              li    a1,32                                  allGrp
20408fd4:    40a58533              sub    a0,a1,a0                              allGrp
20408fd8:    ff042583              lw    a1,-16(s0)                             allGrp
20408fdc:    00a5a023              sw    a0,0(a1)                               allGrp
#ifdef Pack_32
  if (k < Ebits)
20408fe0:    fd842503              lw    a0,-40(s0)                             allGrp
20408fe4:    00a00593              li    a1,10                                  allGrp
20408fe8:    08a5ca63              blt    a1,a0,2040907c <__b2d+0x120>          allGrp, Branch-Instr, controlFlowGrp
20408fec:    0040006f              j    20408ff0 <__b2d+0x94>                   Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      d0 = Exp_1 | y >> (Ebits - k);
20408ff0:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20408ff4:    fd842583              lw    a1,-40(s0)                             allGrp
20408ff8:    00b00613              li    a2,11                                  allGrp
20408ffc:    40b605b3              sub    a1,a2,a1                              allGrp
20409000:    00b55533              srl    a0,a0,a1                              allGrp
20409004:    3ff005b7              lui    a1,0x3ff00                            allGrp
20409008:    00b56533              or    a0,a0,a1                               allGrp
2040900c:    fca42a23              sw    a0,-44(s0)                             allGrp
      w = xa > xa0 ? *--xa : 0;
20409010:    fec42503              lw    a0,-20(s0)                             allGrp
20409014:    fe842583              lw    a1,-24(s0)                             allGrp
20409018:    02a5f063              bleu    a0,a1,20409038 <__b2d+0xdc>          allGrp, Branch-Instr, controlFlowGrp
2040901c:    0040006f              j    20409020 <__b2d+0xc4>                   Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409020:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20409024:    ffc50593              addi    a1,a0,-4                             allGrp
20409028:    feb42623              sw    a1,-20(s0)                             allGrp
2040902c:    ffc52503              lw    a0,-4(a0)                              allGrp
20409030:    fca42223              sw    a0,-60(s0)                             allGrp
20409034:    0100006f              j    20409044 <__b2d+0xe8>                   allGrp, Branch-Instr, controlFlowGrp
20409038:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040903c:    fca42223              sw    a0,-60(s0)                             allGrp
20409040:    0040006f              j    20409044 <__b2d+0xe8>                   allGrp, Branch-Instr, controlFlowGrp
20409044:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
20409048:    fea42223              sw    a0,-28(s0)                             allGrp
#ifndef _DOUBLE_IS_32BITS
      d1 = y << ((32 - Ebits) + k) | w >> (Ebits - k);
2040904c:    fe042503              lw    a0,-32(s0)                             allGrp
20409050:    fd842583              lw    a1,-40(s0)                             allGrp
20409054:    01558593              addi    a1,a1,21 # 3ff00015 <__fini_array_end+0x1faed655>allGrp
20409058:    00b51533              sll    a0,a0,a1                              allGrp
2040905c:    fe442583              lw    a1,-28(s0)                             allGrp
20409060:    fd842603              lw    a2,-40(s0)                             allGrp
20409064:    00b00693              li    a3,11                                  allGrp
20409068:    40c68633              sub    a2,a3,a2                              allGrp
2040906c:    00c5d5b3              srl    a1,a1,a2                              allGrp
20409070:    00b56533              or    a0,a0,a1                               allGrp
20409074:    fca42823              sw    a0,-48(s0)                             allGrp
#endif
      goto ret_d;
20409078:    1100006f              j    20409188 <__b2d+0x22c>                  allGrp, Branch-Instr, controlFlowGrp
    }
  z = xa > xa0 ? *--xa : 0;
2040907c:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20409080:    fe842583              lw    a1,-24(s0)                             allGrp
20409084:    02a5f063              bleu    a0,a1,204090a4 <__b2d+0x148>         allGrp, Branch-Instr, controlFlowGrp
20409088:    0040006f              j    2040908c <__b2d+0x130>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040908c:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20409090:    ffc50593              addi    a1,a0,-4                             allGrp
20409094:    feb42623              sw    a1,-20(s0)                             allGrp
20409098:    ffc52503              lw    a0,-4(a0)                              allGrp
2040909c:    fca42023              sw    a0,-64(s0)                             allGrp
204090a0:    0100006f              j    204090b0 <__b2d+0x154>                  allGrp, Branch-Instr, controlFlowGrp
204090a4:    00000513              li    a0,0                                   Branch-Tgt, allGrp
204090a8:    fca42023              sw    a0,-64(s0)                             allGrp
204090ac:    0040006f              j    204090b0 <__b2d+0x154>                  allGrp, Branch-Instr, controlFlowGrp
204090b0:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
204090b4:    fca42e23              sw    a0,-36(s0)                             allGrp
  if (k -= Ebits)
204090b8:    fd842503              lw    a0,-40(s0)                             allGrp
204090bc:    ff550513              addi    a0,a0,-11                            allGrp
204090c0:    fca42c23              sw    a0,-40(s0)                             allGrp
204090c4:    00000593              li    a1,0                                   allGrp
204090c8:    0ab50063              beq    a0,a1,20409168 <__b2d+0x20c>          allGrp, Branch-Instr, controlFlowGrp
204090cc:    0040006f              j    204090d0 <__b2d+0x174>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      d0 = Exp_1 | y << k | z >> (32 - k);
204090d0:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
204090d4:    fd842583              lw    a1,-40(s0)                             allGrp
204090d8:    00b51533              sll    a0,a0,a1                              allGrp
204090dc:    fdc42583              lw    a1,-36(s0)                             allGrp
204090e0:    fd842603              lw    a2,-40(s0)                             allGrp
204090e4:    02000693              li    a3,32                                  allGrp
204090e8:    40c68633              sub    a2,a3,a2                              allGrp
204090ec:    00c5d5b3              srl    a1,a1,a2                              allGrp
204090f0:    00b56533              or    a0,a0,a1                               allGrp
204090f4:    3ff005b7              lui    a1,0x3ff00                            allGrp
204090f8:    00b56533              or    a0,a0,a1                               allGrp
204090fc:    fca42a23              sw    a0,-44(s0)                             allGrp
      y = xa > xa0 ? *--xa : 0;
20409100:    fec42503              lw    a0,-20(s0)                             allGrp
20409104:    fe842583              lw    a1,-24(s0)                             allGrp
20409108:    02a5f063              bleu    a0,a1,20409128 <__b2d+0x1cc>         allGrp, Branch-Instr, controlFlowGrp
2040910c:    0040006f              j    20409110 <__b2d+0x1b4>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409110:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20409114:    ffc50593              addi    a1,a0,-4                             allGrp
20409118:    feb42623              sw    a1,-20(s0)                             allGrp
2040911c:    ffc52503              lw    a0,-4(a0)                              allGrp
20409120:    faa42e23              sw    a0,-68(s0)                             allGrp
20409124:    0100006f              j    20409134 <__b2d+0x1d8>                  allGrp, Branch-Instr, controlFlowGrp
20409128:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040912c:    faa42e23              sw    a0,-68(s0)                             allGrp
20409130:    0040006f              j    20409134 <__b2d+0x1d8>                  allGrp, Branch-Instr, controlFlowGrp
20409134:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20409138:    fea42023              sw    a0,-32(s0)                             allGrp
#ifndef _DOUBLE_IS_32BITS
      d1 = z << k | y >> (32 - k);
2040913c:    fdc42503              lw    a0,-36(s0)                             allGrp
20409140:    fd842583              lw    a1,-40(s0)                             allGrp
20409144:    00b51533              sll    a0,a0,a1                              allGrp
20409148:    fe042583              lw    a1,-32(s0)                             allGrp
2040914c:    fd842603              lw    a2,-40(s0)                             allGrp
20409150:    02000693              li    a3,32                                  allGrp
20409154:    40c68633              sub    a2,a3,a2                              allGrp
20409158:    00c5d5b3              srl    a1,a1,a2                              allGrp
2040915c:    00b56533              or    a0,a0,a1                               allGrp
20409160:    fca42823              sw    a0,-48(s0)                             allGrp
#endif
    }
20409164:    0200006f              j    20409184 <__b2d+0x228>                  allGrp, Branch-Instr, controlFlowGrp
  else
    {
      d0 = Exp_1 | y;
20409168:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040916c:    3ff005b7              lui    a1,0x3ff00                            allGrp
20409170:    00b56533              or    a0,a0,a1                               allGrp
20409174:    fca42a23              sw    a0,-44(s0)                             allGrp
#ifndef _DOUBLE_IS_32BITS
      d1 = z;
20409178:    fdc42503              lw    a0,-36(s0)                             allGrp
2040917c:    fca42823              sw    a0,-48(s0)                             allGrp
20409180:    0040006f              j    20409184 <__b2d+0x228>                  allGrp, Branch-Instr, controlFlowGrp
  if (k -= Ebits)
20409184:    0040006f              j    20409188 <__b2d+0x22c>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  word1 (d) = d1 >> 16 | d1 << 16;
#else
#undef d0
#undef d1
#endif
  return d.d;
20409188:    fd442583              lw    a1,-44(s0)                             Branch-Tgt, allGrp
2040918c:    fd042503              lw    a0,-48(s0)                             allGrp
20409190:    04812403              lw    s0,72(sp)                              allGrp
20409194:    04012423              sw    zero,72(sp)                            allGrp
20409198:    04c12083              lw    ra,76(sp)                              allGrp
2040919c:    04012623              sw    zero,76(sp)                            allGrp
204091a0:    05010113              addi    sp,sp,80                             allGrp
204091a4:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204091a8 <__d2b>:
204091a8:    f9010113              addi    sp,sp,-112                           Call-Tgt, allGrp, Branch-Tgt
204091ac:    06112623              sw    ra,108(sp)                             allGrp
204091b0:    06812423              sw    s0,104(sp)                             allGrp
204091b4:    07010413              addi    s0,sp,112                            allGrp
204091b8:    00060793              mv    a5,a2                                  allGrp
204091bc:    00058813              mv    a6,a1                                  allGrp
204091c0:    00070893              mv    a7,a4                                  allGrp
204091c4:    00068293              mv    t0,a3                                  allGrp
204091c8:    00050313              mv    t1,a0                                  allGrp
204091cc:    fea42a23              sw    a0,-12(s0)                             allGrp
204091d0:    fec42623              sw    a2,-20(s0)                             allGrp
204091d4:    feb42423              sw    a1,-24(s0)                             allGrp
204091d8:    fed42223              sw    a3,-28(s0)                             allGrp
204091dc:    fee42023              sw    a4,-32(s0)                             allGrp
  int de, i, k;
  __ULong *x, y, z;
#ifdef VAX
  __ULong d0, d1;
#endif
  d.d = _d;
204091e0:    fe842503              lw    a0,-24(s0)                             allGrp
204091e4:    fec42583              lw    a1,-20(s0)                             allGrp
204091e8:    fcb42e23              sw    a1,-36(s0)                             allGrp
204091ec:    fca42c23              sw    a0,-40(s0)                             allGrp
  d0 = word0 (d) >> 16 | word0 (d) << 16;
  d1 = word1 (d) >> 16 | word1 (d) << 16;
#else
#define d0 word0(d)
#define d1 word1(d)
  d.d = _d;
204091f0:    fe842503              lw    a0,-24(s0)                             allGrp
204091f4:    fec42583              lw    a1,-20(s0)                             allGrp
204091f8:    fcb42e23              sw    a1,-36(s0)                             allGrp
204091fc:    fca42c23              sw    a0,-40(s0)                             allGrp
#endif

#ifdef Pack_32
  b = Balloc (ptr, 1);
20409200:    ff442503              lw    a0,-12(s0)                             allGrp
20409204:    00100593              li    a1,1                                   allGrp
20409208:    faf42c23              sw    a5,-72(s0)                             allGrp
2040920c:    fb042a23              sw    a6,-76(s0)                             allGrp
20409210:    fa542823              sw    t0,-80(s0)                             allGrp
20409214:    fb142623              sw    a7,-84(s0)                             allGrp
20409218:    fa642423              sw    t1,-88(s0)                             allGrp
2040921c:    ffffe097              auipc    ra,0xffffe                          allGrp
20409220:    63c080e7              jalr    1596(ra) # 20407858 <_Balloc>        Call-Instr, allGrp, controlFlowGrp
20409224:    fca42a23              sw    a0,-44(s0)                             Return-Tgt, allGrp
#else
  b = Balloc (ptr, 2);
#endif
  x = b->_x;
20409228:    fd442503              lw    a0,-44(s0)                             allGrp
2040922c:    01450513              addi    a0,a0,20                             allGrp
20409230:    fca42223              sw    a0,-60(s0)                             allGrp

  z = d0 & Frac_mask;
20409234:    fdc42503              lw    a0,-36(s0)                             allGrp
20409238:    001005b7              lui    a1,0x100                              allGrp
2040923c:    fff58593              addi    a1,a1,-1 # fffff <__stack_size+0xff7ff>allGrp
20409240:    00b57533              and    a0,a0,a1                              allGrp
20409244:    faa42e23              sw    a0,-68(s0)                             allGrp
  d0 &= 0x7fffffff;		/* clear sign bit, which we ignore */
20409248:    fdc42503              lw    a0,-36(s0)                             allGrp
2040924c:    800005b7              lui    a1,0x80000                            allGrp
20409250:    fff58593              addi    a1,a1,-1 # 7fffffff <_sp+0xffffbfff> allGrp
20409254:    00b57533              and    a0,a0,a1                              allGrp
20409258:    fca42e23              sw    a0,-36(s0)                             allGrp
  de = (int) (d0 >> Exp_shift);
#ifndef IBM
  z |= Exp_msk11;
#endif
#else
  if ((de = (int) (d0 >> Exp_shift)) != 0)
2040925c:    fdc42503              lw    a0,-36(s0)                             allGrp
20409260:    01455513              srli    a0,a0,0x14                           allGrp
20409264:    fca42823              sw    a0,-48(s0)                             allGrp
20409268:    00000593              li    a1,0                                   allGrp
2040926c:    00b50e63              beq    a0,a1,20409288 <__d2b+0xe0>           allGrp, Branch-Instr, controlFlowGrp
20409270:    0040006f              j    20409274 <__d2b+0xcc>                   Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    z |= Exp_msk1;
20409274:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
20409278:    001005b7              lui    a1,0x100                              allGrp
2040927c:    00b56533              or    a0,a0,a1                               allGrp
20409280:    faa42e23              sw    a0,-68(s0)                             allGrp
20409284:    0040006f              j    20409288 <__d2b+0xe0>                   allGrp, Branch-Instr, controlFlowGrp
#endif
#ifdef Pack_32
#ifndef _DOUBLE_IS_32BITS
  if (d1)
20409288:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040928c:    00000593              li    a1,0                                   allGrp
20409290:    0ab50c63              beq    a0,a1,20409348 <__d2b+0x1a0>          allGrp, Branch-Instr, controlFlowGrp
20409294:    0040006f              j    20409298 <__d2b+0xf0>                   Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      y = d1;
20409298:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040929c:    fca42023              sw    a0,-64(s0)                             allGrp
204092a0:    fc040513              addi    a0,s0,-64                            allGrp
      k = lo0bits (&y);
204092a4:    fffff097              auipc    ra,0xfffff                          allGrp
204092a8:    ca8080e7              jalr    -856(ra) # 20407f4c <__lo0bits>      Call-Instr, allGrp, controlFlowGrp
204092ac:    fca42423              sw    a0,-56(s0)                             Return-Tgt, allGrp
      if (k)
204092b0:    fc842503              lw    a0,-56(s0)                             allGrp
204092b4:    00000593              li    a1,0                                   allGrp
204092b8:    04b50063              beq    a0,a1,204092f8 <__d2b+0x150>          allGrp, Branch-Instr, controlFlowGrp
204092bc:    0040006f              j    204092c0 <__d2b+0x118>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
         x[0] = y | z << (32 - k);
204092c0:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
204092c4:    fbc42583              lw    a1,-68(s0)                             allGrp
204092c8:    fc842603              lw    a2,-56(s0)                             allGrp
204092cc:    02000693              li    a3,32                                  allGrp
204092d0:    40c68633              sub    a2,a3,a2                              allGrp
204092d4:    00c595b3              sll    a1,a1,a2                              allGrp
204092d8:    00b56533              or    a0,a0,a1                               allGrp
204092dc:    fc442583              lw    a1,-60(s0)                             allGrp
204092e0:    00a5a023              sw    a0,0(a1) # 100000 <__stack_size+0xff800>allGrp
	  z >>= k;
204092e4:    fc842503              lw    a0,-56(s0)                             allGrp
204092e8:    fbc42583              lw    a1,-68(s0)                             allGrp
204092ec:    00a5d533              srl    a0,a1,a0                              allGrp
204092f0:    faa42e23              sw    a0,-68(s0)                             allGrp
	}
204092f4:    0140006f              j    20409308 <__d2b+0x160>                  allGrp, Branch-Instr, controlFlowGrp
      else
	x[0] = y;
204092f8:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
204092fc:    fc442583              lw    a1,-60(s0)                             allGrp
20409300:    00a5a023              sw    a0,0(a1)                               allGrp
20409304:    0040006f              j    20409308 <__d2b+0x160>                  allGrp, Branch-Instr, controlFlowGrp
      i = b->_wds = (x[1] = z) ? 2 : 1;
20409308:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
2040930c:    fc442583              lw    a1,-60(s0)                             allGrp
20409310:    00a5a223              sw    a0,4(a1)                               allGrp
20409314:    00100593              li    a1,1                                   allGrp
20409318:    00200613              li    a2,2                                   allGrp
2040931c:    00000693              li    a3,0                                   allGrp
20409320:    fac42223              sw    a2,-92(s0)                             allGrp
20409324:    fab42023              sw    a1,-96(s0)                             allGrp
20409328:    00d51663              bne    a0,a3,20409334 <__d2b+0x18c>          allGrp, Branch-Instr, controlFlowGrp
2040932c:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
20409330:    faa42223              sw    a0,-92(s0)                             allGrp
20409334:    fa442503              lw    a0,-92(s0)                             Branch-Tgt, allGrp
20409338:    fd442583              lw    a1,-44(s0)                             allGrp
2040933c:    00a5a823              sw    a0,16(a1)                              allGrp
20409340:    fca42623              sw    a0,-52(s0)                             allGrp
    }
20409344:    0400006f              j    20409384 <__d2b+0x1dc>                  allGrp, Branch-Instr, controlFlowGrp
    {
#ifdef DEBUG
      if (!z)
	Bug ("Zero passed to d2b");
#endif
      k = lo0bits (&z);
20409348:    fbc40513              addi    a0,s0,-68                            Branch-Tgt, allGrp
2040934c:    fffff097              auipc    ra,0xfffff                          allGrp
20409350:    c00080e7              jalr    -1024(ra) # 20407f4c <__lo0bits>     Call-Instr, allGrp, controlFlowGrp
20409354:    fca42423              sw    a0,-56(s0)                             Return-Tgt, allGrp
      x[0] = z;
20409358:    fbc42503              lw    a0,-68(s0)                             allGrp
2040935c:    fc442583              lw    a1,-60(s0)                             allGrp
20409360:    00a5a023              sw    a0,0(a1)                               allGrp
      i = b->_wds = 1;
20409364:    fd442503              lw    a0,-44(s0)                             allGrp
20409368:    00100593              li    a1,1                                   allGrp
2040936c:    00b52823              sw    a1,16(a0)                              allGrp
20409370:    fcb42623              sw    a1,-52(s0)                             allGrp
#ifndef _DOUBLE_IS_32BITS
      k += 32;
20409374:    fc842503              lw    a0,-56(s0)                             allGrp
20409378:    02050513              addi    a0,a0,32                             allGrp
2040937c:    fca42423              sw    a0,-56(s0)                             allGrp
20409380:    0040006f              j    20409384 <__d2b+0x1dc>                  allGrp, Branch-Instr, controlFlowGrp
  while (!x[i])
    --i;
  b->_wds = i + 1;
#endif
#ifndef Sudden_Underflow
  if (de)
20409384:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20409388:    00000593              li    a1,0                                   allGrp
2040938c:    02b50c63              beq    a0,a1,204093c4 <__d2b+0x21c>          allGrp, Branch-Instr, controlFlowGrp
20409390:    0040006f              j    20409394 <__d2b+0x1ec>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
#endif
#ifdef IBM
      *e = (de - Bias - (P - 1) << 2) + k;
      *bits = 4 * P + 8 - k - hi0bits (word0 (d) & Frac_mask);
#else
      *e = de - Bias - (P - 1) + k;
20409394:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
20409398:    fc842583              lw    a1,-56(s0)                             allGrp
2040939c:    00b50533              add    a0,a0,a1                              allGrp
204093a0:    bcd50513              addi    a0,a0,-1075                          allGrp
204093a4:    fe442583              lw    a1,-28(s0)                             allGrp
204093a8:    00a5a023              sw    a0,0(a1)                               allGrp
      *bits = P - k;
204093ac:    fc842503              lw    a0,-56(s0)                             allGrp
204093b0:    03500593              li    a1,53                                  allGrp
204093b4:    40a58533              sub    a0,a1,a0                              allGrp
204093b8:    fe042583              lw    a1,-32(s0)                             allGrp
204093bc:    00a5a023              sw    a0,0(a1)                               allGrp
#endif
#ifndef Sudden_Underflow
    }
204093c0:    05c0006f              j    2040941c <__d2b+0x274>                  allGrp, Branch-Instr, controlFlowGrp
  else
    {
      *e = de - Bias - (P - 1) + 1 + k;
204093c4:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
204093c8:    fc842583              lw    a1,-56(s0)                             allGrp
204093cc:    00b50533              add    a0,a0,a1                              allGrp
204093d0:    bce50513              addi    a0,a0,-1074                          allGrp
204093d4:    fe442583              lw    a1,-28(s0)                             allGrp
204093d8:    00a5a023              sw    a0,0(a1)                               allGrp
#ifdef Pack_32
      *bits = 32 * i - hi0bits (x[i - 1]);
204093dc:    fcc42503              lw    a0,-52(s0)                             allGrp
204093e0:    00551513              slli    a0,a0,0x5                            allGrp
204093e4:    fc442583              lw    a1,-60(s0)                             allGrp
204093e8:    fcc42603              lw    a2,-52(s0)                             allGrp
204093ec:    00261613              slli    a2,a2,0x2                            allGrp
204093f0:    00c585b3              add    a1,a1,a2                              allGrp
204093f4:    ffc5a583              lw    a1,-4(a1)                              allGrp
204093f8:    f8a42e23              sw    a0,-100(s0)                            allGrp
204093fc:    00058513              mv    a0,a1                                  allGrp
20409400:    fffff097              auipc    ra,0xfffff                          allGrp
20409404:    9f4080e7              jalr    -1548(ra) # 20407df4 <__hi0bits>     Call-Instr, allGrp, controlFlowGrp
20409408:    f9c42583              lw    a1,-100(s0)                            Return-Tgt, allGrp
2040940c:    40a58533              sub    a0,a1,a0                              allGrp
20409410:    fe042583              lw    a1,-32(s0)                             allGrp
20409414:    00a5a023              sw    a0,0(a1)                               allGrp
20409418:    0040006f              j    2040941c <__d2b+0x274>                  allGrp, Branch-Instr, controlFlowGrp
#else
      *bits = (i + 2) * 16 - hi0bits (x[i]);
#endif
    }
#endif
  return b;
2040941c:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
20409420:    06812403              lw    s0,104(sp)                             allGrp
20409424:    06012423              sw    zero,104(sp)                           allGrp
20409428:    06c12083              lw    ra,108(sp)                             allGrp
2040942c:    06012623              sw    zero,108(sp)                           allGrp
20409430:    07010113              addi    sp,sp,112                            allGrp
20409434:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20409438 <__ratio>:
20409438:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp, Branch-Tgt
2040943c:    02112e23              sw    ra,60(sp)                              allGrp
20409440:    02812c23              sw    s0,56(sp)                              allGrp
20409444:    04010413              addi    s0,sp,64                             allGrp
20409448:    00058613              mv    a2,a1                                  allGrp
2040944c:    00050693              mv    a3,a0                                  allGrp
20409450:    fea42a23              sw    a0,-12(s0)                             allGrp
20409454:    feb42823              sw    a1,-16(s0)                             allGrp

{
  union double_union da, db;
  int k, ka, kb;

  da.d = b2d (a, &ka);
20409458:    ff442503              lw    a0,-12(s0)                             allGrp
2040945c:    fd840593              addi    a1,s0,-40                            allGrp
20409460:    fcc42823              sw    a2,-48(s0)                             allGrp
20409464:    fcd42623              sw    a3,-52(s0)                             allGrp
20409468:    00000097              auipc    ra,0x0                              allGrp
2040946c:    af4080e7              jalr    -1292(ra) # 20408f5c <__b2d>         Call-Instr, allGrp, controlFlowGrp
20409470:    feb42623              sw    a1,-20(s0)                             Return-Tgt, allGrp
20409474:    fea42423              sw    a0,-24(s0)                             allGrp
  db.d = b2d (b, &kb);
20409478:    ff042503              lw    a0,-16(s0)                             allGrp
2040947c:    fd440593              addi    a1,s0,-44                            allGrp
20409480:    00000097              auipc    ra,0x0                              allGrp
20409484:    adc080e7              jalr    -1316(ra) # 20408f5c <__b2d>         Call-Instr, allGrp, controlFlowGrp
20409488:    feb42223              sw    a1,-28(s0)                             Return-Tgt, allGrp
2040948c:    fea42023              sw    a0,-32(s0)                             allGrp
#ifdef Pack_32
  k = ka - kb + 32 * (a->_wds - b->_wds);
20409490:    fd842503              lw    a0,-40(s0)                             allGrp
20409494:    fd442583              lw    a1,-44(s0)                             allGrp
20409498:    40b50533              sub    a0,a0,a1                              allGrp
2040949c:    ff442583              lw    a1,-12(s0)                             allGrp
204094a0:    0105a583              lw    a1,16(a1)                              allGrp
204094a4:    ff042603              lw    a2,-16(s0)                             allGrp
204094a8:    01062603              lw    a2,16(a2)                              allGrp
204094ac:    40c585b3              sub    a1,a1,a2                              allGrp
204094b0:    00559593              slli    a1,a1,0x5                            allGrp
204094b4:    00b50533              add    a0,a0,a1                              allGrp
204094b8:    fca42e23              sw    a0,-36(s0)                             allGrp
      word0 (db) += (k >> 2) * Exp_msk1;
      if (k &= 3)
	db.d *= 1 << k;
    }
#else
  if (k > 0)
204094bc:    fdc42503              lw    a0,-36(s0)                             allGrp
204094c0:    00100593              li    a1,1                                   allGrp
204094c4:    02b54063              blt    a0,a1,204094e4 <__ratio+0xac>         allGrp, Branch-Instr, controlFlowGrp
204094c8:    0040006f              j    204094cc <__ratio+0x94>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    word0 (da) += k * Exp_msk1;
204094cc:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
204094d0:    01451513              slli    a0,a0,0x14                           allGrp
204094d4:    fec42583              lw    a1,-20(s0)                             allGrp
204094d8:    00a58533              add    a0,a1,a0                              allGrp
204094dc:    fea42623              sw    a0,-20(s0)                             allGrp
204094e0:    02c0006f              j    2040950c <__ratio+0xd4>                 allGrp, Branch-Instr, controlFlowGrp
  else
    {
      k = -k;
204094e4:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
204094e8:    00000593              li    a1,0                                   allGrp
204094ec:    40a58533              sub    a0,a1,a0                              allGrp
204094f0:    fca42e23              sw    a0,-36(s0)                             allGrp
      word0 (db) += k * Exp_msk1;
204094f4:    fdc42503              lw    a0,-36(s0)                             allGrp
204094f8:    01451513              slli    a0,a0,0x14                           allGrp
204094fc:    fe442583              lw    a1,-28(s0)                             allGrp
20409500:    00a58533              add    a0,a1,a0                              allGrp
20409504:    fea42223              sw    a0,-28(s0)                             allGrp
20409508:    0040006f              j    2040950c <__ratio+0xd4>                 allGrp, Branch-Instr, controlFlowGrp
    }
#endif
  return da.d / db.d;
2040950c:    fec42583              lw    a1,-20(s0)                             Branch-Tgt, allGrp
20409510:    fe842503              lw    a0,-24(s0)                             allGrp
20409514:    fe042603              lw    a2,-32(s0)                             allGrp
20409518:    fe442683              lw    a3,-28(s0)                             allGrp
2040951c:    00006097              auipc    ra,0x6                              allGrp
20409520:    1ec080e7              jalr    492(ra) # 2040f708 <__divdf3>        Call-Instr, allGrp, controlFlowGrp
20409524:    03812403              lw    s0,56(sp)                              Return-Tgt, allGrp
20409528:    02012c23              sw    zero,56(sp)                            allGrp
2040952c:    03c12083              lw    ra,60(sp)                              allGrp
20409530:    02012e23              sw    zero,60(sp)                            allGrp
20409534:    04010113              addi    sp,sp,64                             allGrp
20409538:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040953c <_mprec_log10>:
2040953c:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
20409540:    02112623              sw    ra,44(sp)                              allGrp
20409544:    02812423              sw    s0,40(sp)                              allGrp
20409548:    03010413              addi    s0,sp,48                             allGrp
2040954c:    00050593              mv    a1,a0                                  allGrp
20409550:    fea42623              sw    a0,-20(s0)                             allGrp
20409554:    3ff00537              lui    a0,0x3ff00                            allGrp

double
_DEFUN (_mprec_log10, (dig),
	int dig)
{
  double v = 1.0;
20409558:    fea42223              sw    a0,-28(s0)                             allGrp
2040955c:    00000513              li    a0,0                                   allGrp
20409560:    fea42023              sw    a0,-32(s0)                             allGrp
  if (dig < 24)
20409564:    fec42503              lw    a0,-20(s0)                             allGrp
20409568:    01700613              li    a2,23                                  allGrp
2040956c:    fcb42e23              sw    a1,-36(s0)                             allGrp
20409570:    02a64863              blt    a2,a0,204095a0 <_mprec_log10+0x64>    allGrp, Branch-Instr, controlFlowGrp
20409574:    0040006f              j    20409578 <_mprec_log10+0x3c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return tens[dig];
20409578:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040957c:    00351513              slli    a0,a0,0x3                            allGrp
20409580:    204125b7              lui    a1,0x20412                            allGrp
20409584:    5e058593              addi    a1,a1,1504 # 204125e0 <__mprec_tens> allGrp
20409588:    00b50533              add    a0,a0,a1                              allGrp
2040958c:    00052583              lw    a1,0(a0) # 3ff00000 <__fini_array_end+0x1faed640>allGrp
20409590:    00452503              lw    a0,4(a0)                               allGrp
20409594:    fea42a23              sw    a0,-12(s0)                             allGrp
20409598:    feb42823              sw    a1,-16(s0)                             allGrp
2040959c:    05c0006f              j    204095f8 <_mprec_log10+0xbc>            allGrp, Branch-Instr, controlFlowGrp
  while (dig > 0)
204095a0:    0040006f              j    204095a4 <_mprec_log10+0x68>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204095a4:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
204095a8:    00100593              li    a1,1                                   allGrp
204095ac:    02b54c63              blt    a0,a1,204095e4 <_mprec_log10+0xa8>    allGrp, Branch-Instr, controlFlowGrp
204095b0:    0040006f              j    204095b4 <_mprec_log10+0x78>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      v *= 10;
204095b4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
204095b8:    fe442583              lw    a1,-28(s0)                             allGrp
204095bc:    00000613              li    a2,0                                   allGrp
204095c0:    402406b7              lui    a3,0x40240                            allGrp
204095c4:    00007097              auipc    ra,0x7                              allGrp
204095c8:    d14080e7              jalr    -748(ra) # 204102d8 <__muldf3>       Call-Instr, allGrp, controlFlowGrp
204095cc:    feb42223              sw    a1,-28(s0)                             Return-Tgt, allGrp
204095d0:    fea42023              sw    a0,-32(s0)                             allGrp
      dig--;
204095d4:    fec42503              lw    a0,-20(s0)                             allGrp
204095d8:    fff50513              addi    a0,a0,-1                             allGrp
204095dc:    fea42623              sw    a0,-20(s0)                             allGrp
  while (dig > 0)
204095e0:    fc5ff06f              j    204095a4 <_mprec_log10+0x68>            allGrp, Branch-Instr, controlFlowGrp
    }
  return v;
204095e4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
204095e8:    fe442583              lw    a1,-28(s0)                             allGrp
204095ec:    feb42a23              sw    a1,-12(s0)                             allGrp
204095f0:    fea42823              sw    a0,-16(s0)                             allGrp
204095f4:    0040006f              j    204095f8 <_mprec_log10+0xbc>            allGrp, Branch-Instr, controlFlowGrp
}
204095f8:    ff442583              lw    a1,-12(s0)                             Branch-Tgt, allGrp
204095fc:    ff042503              lw    a0,-16(s0)                             allGrp
20409600:    02812403              lw    s0,40(sp)                              allGrp
20409604:    02012423              sw    zero,40(sp)                            allGrp
20409608:    02c12083              lw    ra,44(sp)                              allGrp
2040960c:    02012623              sw    zero,44(sp)                            allGrp
20409610:    03010113              addi    sp,sp,48                             allGrp
20409614:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20409618 <__copybits>:
20409618:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
2040961c:    02112623              sw    ra,44(sp)                              allGrp
20409620:    02812423              sw    s0,40(sp)                              allGrp
20409624:    03010413              addi    s0,sp,48                             allGrp
20409628:    00060693              mv    a3,a2                                  allGrp
2040962c:    00058713              mv    a4,a1                                  allGrp
20409630:    00050793              mv    a5,a0                                  allGrp
20409634:    fea42a23              sw    a0,-12(s0)                             allGrp
20409638:    feb42823              sw    a1,-16(s0)                             allGrp
2040963c:    fec42623              sw    a2,-20(s0)                             allGrp
	__ULong *ce, *x, *xe;
#ifdef Pack_16
	int nw, nw1;
#endif

	ce = c + ((n-1) >> kshift) + 1;
20409640:    ff442503              lw    a0,-12(s0)                             allGrp
20409644:    ff042583              lw    a1,-16(s0)                             allGrp
20409648:    fff58593              addi    a1,a1,-1                             allGrp
2040964c:    4055d593              srai    a1,a1,0x5                            allGrp
20409650:    00259593              slli    a1,a1,0x2                            allGrp
20409654:    00b50533              add    a0,a0,a1                              allGrp
20409658:    00450513              addi    a0,a0,4                              allGrp
2040965c:    fea42423              sw    a0,-24(s0)                             allGrp
	x = b->_x;
20409660:    fec42503              lw    a0,-20(s0)                             allGrp
20409664:    01450513              addi    a0,a0,20                             allGrp
20409668:    fea42223              sw    a0,-28(s0)                             allGrp
#ifdef Pack_32
	xe = x + b->_wds;
2040966c:    fe442503              lw    a0,-28(s0)                             allGrp
20409670:    fec42583              lw    a1,-20(s0)                             allGrp
20409674:    0105a583              lw    a1,16(a1)                              allGrp
20409678:    00259593              slli    a1,a1,0x2                            allGrp
2040967c:    00b50533              add    a0,a0,a1                              allGrp
20409680:    fea42023              sw    a0,-32(s0)                             allGrp
	while(x < xe)
20409684:    fcd42e23              sw    a3,-36(s0)                             allGrp
20409688:    fce42c23              sw    a4,-40(s0)                             allGrp
2040968c:    fcf42a23              sw    a5,-44(s0)                             allGrp
20409690:    0040006f              j    20409694 <__copybits+0x7c>              allGrp, Branch-Instr, controlFlowGrp
20409694:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20409698:    fe042583              lw    a1,-32(s0)                             allGrp
2040969c:    02b57663              bleu    a1,a0,204096c8 <__copybits+0xb0>     allGrp, Branch-Instr, controlFlowGrp
204096a0:    0040006f              j    204096a4 <__copybits+0x8c>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		*c++ = *x++;
204096a4:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204096a8:    00450593              addi    a1,a0,4                              allGrp
204096ac:    feb42223              sw    a1,-28(s0)                             allGrp
204096b0:    00052503              lw    a0,0(a0)                               allGrp
204096b4:    ff442583              lw    a1,-12(s0)                             allGrp
204096b8:    00458613              addi    a2,a1,4                              allGrp
204096bc:    fec42a23              sw    a2,-12(s0)                             allGrp
204096c0:    00a5a023              sw    a0,0(a1)                               allGrp
	while(x < xe)
204096c4:    fd1ff06f              j    20409694 <__copybits+0x7c>              allGrp, Branch-Instr, controlFlowGrp
	for(xe = x + (nw - nw1); x < xe; x += 2)
		Storeinc(c, x[1], x[0]);
	if (nw1)
		*c++ = *x;
#endif
	while(c < ce)
204096c8:    0040006f              j    204096cc <__copybits+0xb4>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204096cc:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
204096d0:    fe842583              lw    a1,-24(s0)                             allGrp
204096d4:    02b57063              bleu    a1,a0,204096f4 <__copybits+0xdc>     allGrp, Branch-Instr, controlFlowGrp
204096d8:    0040006f              j    204096dc <__copybits+0xc4>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		*c++ = 0;
204096dc:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
204096e0:    00450593              addi    a1,a0,4                              allGrp
204096e4:    feb42a23              sw    a1,-12(s0)                             allGrp
204096e8:    00000593              li    a1,0                                   allGrp
204096ec:    00b52023              sw    a1,0(a0)                               allGrp
	while(c < ce)
204096f0:    fddff06f              j    204096cc <__copybits+0xb4>              allGrp, Branch-Instr, controlFlowGrp
}
204096f4:    02812403              lw    s0,40(sp)                              Branch-Tgt, allGrp
204096f8:    02012423              sw    zero,40(sp)                            allGrp
204096fc:    02c12083              lw    ra,44(sp)                              allGrp
20409700:    02012623              sw    zero,44(sp)                            allGrp
20409704:    03010113              addi    sp,sp,48                             allGrp
20409708:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040970c <__any_on>:
2040970c:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp, Branch-Tgt
20409710:    02112e23              sw    ra,60(sp)                              allGrp
20409714:    02812c23              sw    s0,56(sp)                              allGrp
20409718:    04010413              addi    s0,sp,64                             allGrp
2040971c:    00058613              mv    a2,a1                                  allGrp
20409720:    00050693              mv    a3,a0                                  allGrp
20409724:    fea42823              sw    a0,-16(s0)                             allGrp
20409728:    feb42623              sw    a1,-20(s0)                             allGrp
	int k)
{
	int n, nwds;
	__ULong *x, *x0, x1, x2;

	x = b->_x;
2040972c:    ff042503              lw    a0,-16(s0)                             allGrp
20409730:    01450513              addi    a0,a0,20                             allGrp
20409734:    fea42023              sw    a0,-32(s0)                             allGrp
	nwds = b->_wds;
20409738:    ff042503              lw    a0,-16(s0)                             allGrp
2040973c:    01052503              lw    a0,16(a0)                              allGrp
20409740:    fea42223              sw    a0,-28(s0)                             allGrp
	n = k >> kshift;
20409744:    fec42503              lw    a0,-20(s0)                             allGrp
20409748:    40555513              srai    a0,a0,0x5                            allGrp
2040974c:    fea42423              sw    a0,-24(s0)                             allGrp
	if (n > nwds)
20409750:    fe842503              lw    a0,-24(s0)                             allGrp
20409754:    fe442583              lw    a1,-28(s0)                             allGrp
20409758:    fcc42823              sw    a2,-48(s0)                             allGrp
2040975c:    fcd42623              sw    a3,-52(s0)                             allGrp
20409760:    00a5da63              ble    a0,a1,20409774 <__any_on+0x68>        allGrp, Branch-Instr, controlFlowGrp
20409764:    0040006f              j    20409768 <__any_on+0x5c>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		n = nwds;
20409768:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040976c:    fea42423              sw    a0,-24(s0)                             allGrp
20409770:    08c0006f              j    204097fc <__any_on+0xf0>                allGrp, Branch-Instr, controlFlowGrp
	else if (n < nwds && (k &= kmask)) {
20409774:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20409778:    fe442583              lw    a1,-28(s0)                             allGrp
2040977c:    06b55e63              ble    a1,a0,204097f8 <__any_on+0xec>        allGrp, Branch-Instr, controlFlowGrp
20409780:    0040006f              j    20409784 <__any_on+0x78>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409784:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20409788:    01f57513              andi    a0,a0,31                             allGrp
2040978c:    fea42623              sw    a0,-20(s0)                             allGrp
20409790:    00000593              li    a1,0                                   allGrp
20409794:    06b50263              beq    a0,a1,204097f8 <__any_on+0xec>        allGrp, Branch-Instr, controlFlowGrp
20409798:    0040006f              j    2040979c <__any_on+0x90>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		x1 = x2 = x[n];
2040979c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
204097a0:    fe842583              lw    a1,-24(s0)                             allGrp
204097a4:    00259593              slli    a1,a1,0x2                            allGrp
204097a8:    00b50533              add    a0,a0,a1                              allGrp
204097ac:    00052503              lw    a0,0(a0)                               allGrp
204097b0:    fca42a23              sw    a0,-44(s0)                             allGrp
204097b4:    fca42c23              sw    a0,-40(s0)                             allGrp
		x1 >>= k;
204097b8:    fec42503              lw    a0,-20(s0)                             allGrp
204097bc:    fd842583              lw    a1,-40(s0)                             allGrp
204097c0:    00a5d533              srl    a0,a1,a0                              allGrp
204097c4:    fca42c23              sw    a0,-40(s0)                             allGrp
		x1 <<= k;
204097c8:    fec42503              lw    a0,-20(s0)                             allGrp
204097cc:    fd842583              lw    a1,-40(s0)                             allGrp
204097d0:    00a59533              sll    a0,a1,a0                              allGrp
204097d4:    fca42c23              sw    a0,-40(s0)                             allGrp
		if (x1 != x2)
204097d8:    fd842503              lw    a0,-40(s0)                             allGrp
204097dc:    fd442583              lw    a1,-44(s0)                             allGrp
204097e0:    00b50a63              beq    a0,a1,204097f4 <__any_on+0xe8>        allGrp, Branch-Instr, controlFlowGrp
204097e4:    0040006f              j    204097e8 <__any_on+0xdc>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			return 1;
204097e8:    00100513              li    a0,1                                   Branch-Tgt, allGrp
204097ec:    fea42a23              sw    a0,-12(s0)                             allGrp
204097f0:    0740006f              j    20409864 <__any_on+0x158>               allGrp, Branch-Instr, controlFlowGrp
		}
204097f4:    0040006f              j    204097f8 <__any_on+0xec>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204097f8:    0040006f              j    204097fc <__any_on+0xf0>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	x0 = x;
204097fc:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20409800:    fca42e23              sw    a0,-36(s0)                             allGrp
	x += n;
20409804:    fe842503              lw    a0,-24(s0)                             allGrp
20409808:    fe042583              lw    a1,-32(s0)                             allGrp
2040980c:    00251513              slli    a0,a0,0x2                            allGrp
20409810:    00a58533              add    a0,a1,a0                              allGrp
20409814:    fea42023              sw    a0,-32(s0)                             allGrp
	while(x > x0)
20409818:    0040006f              j    2040981c <__any_on+0x110>               allGrp, Branch-Instr, controlFlowGrp
2040981c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20409820:    fdc42583              lw    a1,-36(s0)                             allGrp
20409824:    02a5fa63              bleu    a0,a1,20409858 <__any_on+0x14c>      allGrp, Branch-Instr, controlFlowGrp
20409828:    0040006f              j    2040982c <__any_on+0x120>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		if (*--x)
2040982c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20409830:    ffc50593              addi    a1,a0,-4                             allGrp
20409834:    feb42023              sw    a1,-32(s0)                             allGrp
20409838:    ffc52503              lw    a0,-4(a0)                              allGrp
2040983c:    00000593              li    a1,0                                   allGrp
20409840:    00b50a63              beq    a0,a1,20409854 <__any_on+0x148>       allGrp, Branch-Instr, controlFlowGrp
20409844:    0040006f              j    20409848 <__any_on+0x13c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			return 1;
20409848:    00100513              li    a0,1                                   Branch-Tgt, allGrp
2040984c:    fea42a23              sw    a0,-12(s0)                             allGrp
20409850:    0140006f              j    20409864 <__any_on+0x158>               allGrp, Branch-Instr, controlFlowGrp
	while(x > x0)
20409854:    fc9ff06f              j    2040981c <__any_on+0x110>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	return 0;
20409858:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040985c:    fea42a23              sw    a0,-12(s0)                             allGrp
20409860:    0040006f              j    20409864 <__any_on+0x158>               allGrp, Branch-Instr, controlFlowGrp
}
20409864:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20409868:    03812403              lw    s0,56(sp)                              allGrp
2040986c:    02012c23              sw    zero,56(sp)                            allGrp
20409870:    03c12083              lw    ra,60(sp)                              allGrp
20409874:    02012e23              sw    zero,60(sp)                            allGrp
20409878:    04010113              addi    sp,sp,64                             allGrp
2040987c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20409880 <__fpclassifyd>:
20409880:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
20409884:    02112623              sw    ra,44(sp)                              allGrp
20409888:    02812423              sw    s0,40(sp)                              allGrp
2040988c:    03010413              addi    s0,sp,48                             allGrp
20409890:    00058613              mv    a2,a1                                  allGrp
20409894:    00050693              mv    a3,a0                                  allGrp
20409898:    feb42623              sw    a1,-20(s0)                             allGrp
2040989c:    fea42423              sw    a0,-24(s0)                             allGrp
int
__fpclassifyd (double x)
{
  __uint32_t msw, lsw;

  EXTRACT_WORDS(msw,lsw,x);
204098a0:    fcd42a23              sw    a3,-44(s0)                             allGrp
204098a4:    fcc42823              sw    a2,-48(s0)                             allGrp
204098a8:    0040006f              j    204098ac <__fpclassifyd+0x2c>           allGrp, Branch-Instr, controlFlowGrp
204098ac:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
204098b0:    fec42583              lw    a1,-20(s0)                             allGrp
204098b4:    fcb42e23              sw    a1,-36(s0)                             allGrp
204098b8:    fca42c23              sw    a0,-40(s0)                             allGrp
204098bc:    fdc42503              lw    a0,-36(s0)                             allGrp
204098c0:    fea42223              sw    a0,-28(s0)                             allGrp
204098c4:    fd842503              lw    a0,-40(s0)                             allGrp
204098c8:    fea42023              sw    a0,-32(s0)                             allGrp
204098cc:    0040006f              j    204098d0 <__fpclassifyd+0x50>           allGrp, Branch-Instr, controlFlowGrp

  if ((msw == 0x00000000 && lsw == 0x00000000) ||
204098d0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204098d4:    00000593              li    a1,0                                   allGrp
204098d8:    00b51c63              bne    a0,a1,204098f0 <__fpclassifyd+0x70>   allGrp, Branch-Instr, controlFlowGrp
204098dc:    0040006f              j    204098e0 <__fpclassifyd+0x60>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204098e0:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
204098e4:    00000593              li    a1,0                                   allGrp
204098e8:    02b50463              beq    a0,a1,20409910 <__fpclassifyd+0x90>   allGrp, Branch-Instr, controlFlowGrp
204098ec:    0040006f              j    204098f0 <__fpclassifyd+0x70>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      (msw == 0x80000000 && lsw == 0x00000000))
204098f0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204098f4:    800005b7              lui    a1,0x80000                            allGrp
204098f8:    02b51263              bne    a0,a1,2040991c <__fpclassifyd+0x9c>   allGrp, Branch-Instr, controlFlowGrp
204098fc:    0040006f              j    20409900 <__fpclassifyd+0x80>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409900:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20409904:    00000593              li    a1,0                                   allGrp
  if ((msw == 0x00000000 && lsw == 0x00000000) ||
20409908:    00b51a63              bne    a0,a1,2040991c <__fpclassifyd+0x9c>   allGrp, Branch-Instr, controlFlowGrp
2040990c:    0040006f              j    20409910 <__fpclassifyd+0x90>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return FP_ZERO;
20409910:    00200513              li    a0,2                                   Branch-Tgt, allGrp
20409914:    fea42a23              sw    a0,-12(s0)                             allGrp
20409918:    1040006f              j    20409a1c <__fpclassifyd+0x19c>          allGrp, Branch-Instr, controlFlowGrp
  else if ((msw >= 0x00100000 && msw <= 0x7fefffff) ||
2040991c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20409920:    01455513              srli    a0,a0,0x14                           allGrp
20409924:    00000593              li    a1,0                                   allGrp
20409928:    00b50e63              beq    a0,a1,20409944 <__fpclassifyd+0xc4>   allGrp, Branch-Instr, controlFlowGrp
2040992c:    0040006f              j    20409930 <__fpclassifyd+0xb0>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409930:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20409934:    01455513              srli    a0,a0,0x14                           allGrp
20409938:    7ff00593              li    a1,2047                                allGrp
2040993c:    02b56663              bltu    a0,a1,20409968 <__fpclassifyd+0xe8>  allGrp, Branch-Instr, controlFlowGrp
20409940:    0040006f              j    20409944 <__fpclassifyd+0xc4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
           (msw >= 0x80100000 && msw <= 0xffefffff))
20409944:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20409948:    801005b7              lui    a1,0x80100                            allGrp
2040994c:    02b56463              bltu    a0,a1,20409974 <__fpclassifyd+0xf4>  allGrp, Branch-Instr, controlFlowGrp
20409950:    0040006f              j    20409954 <__fpclassifyd+0xd4>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409954:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20409958:    fff005b7              lui    a1,0xfff00                            allGrp
2040995c:    fff58593              addi    a1,a1,-1 # ffefffff <_sp+0x7fefbfff> allGrp
  else if ((msw >= 0x00100000 && msw <= 0x7fefffff) ||
20409960:    00a5ea63              bltu    a1,a0,20409974 <__fpclassifyd+0xf4>  allGrp, Branch-Instr, controlFlowGrp
20409964:    0040006f              j    20409968 <__fpclassifyd+0xe8>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return FP_NORMAL;
20409968:    00400513              li    a0,4                                   Branch-Tgt, allGrp
2040996c:    fea42a23              sw    a0,-12(s0)                             allGrp
20409970:    0ac0006f              j    20409a1c <__fpclassifyd+0x19c>          allGrp, Branch-Instr, controlFlowGrp
  else if ((msw >= 0x00000000 && msw <= 0x000fffff) ||
20409974:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20409978:    00051e63              bnez    a0,20409994 <__fpclassifyd+0x114>    allGrp, Branch-Instr, controlFlowGrp
2040997c:    0040006f              j    20409980 <__fpclassifyd+0x100>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409980:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20409984:    01455513              srli    a0,a0,0x14                           allGrp
20409988:    00000593              li    a1,0                                   allGrp
2040998c:    02b50663              beq    a0,a1,204099b8 <__fpclassifyd+0x138>  allGrp, Branch-Instr, controlFlowGrp
20409990:    0040006f              j    20409994 <__fpclassifyd+0x114>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
           (msw >= 0x80000000 && msw <= 0x800fffff))
20409994:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20409998:    fff00593              li    a1,-1                                  allGrp
2040999c:    02a5c463              blt    a1,a0,204099c4 <__fpclassifyd+0x144>  allGrp, Branch-Instr, controlFlowGrp
204099a0:    0040006f              j    204099a4 <__fpclassifyd+0x124>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204099a4:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204099a8:    801005b7              lui    a1,0x80100                            allGrp
204099ac:    fff58593              addi    a1,a1,-1 # 800fffff <_sp+0xfbfff>    allGrp
  else if ((msw >= 0x00000000 && msw <= 0x000fffff) ||
204099b0:    00a5ea63              bltu    a1,a0,204099c4 <__fpclassifyd+0x144> allGrp, Branch-Instr, controlFlowGrp
204099b4:    0040006f              j    204099b8 <__fpclassifyd+0x138>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    /* zero is already handled above */
    return FP_SUBNORMAL;
204099b8:    00300513              li    a0,3                                   Branch-Tgt, allGrp
204099bc:    fea42a23              sw    a0,-12(s0)                             allGrp
204099c0:    05c0006f              j    20409a1c <__fpclassifyd+0x19c>          allGrp, Branch-Instr, controlFlowGrp
  else if ((msw == 0x7ff00000 && lsw == 0x00000000) ||
204099c4:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204099c8:    7ff005b7              lui    a1,0x7ff00                            allGrp
204099cc:    00b51c63              bne    a0,a1,204099e4 <__fpclassifyd+0x164>  allGrp, Branch-Instr, controlFlowGrp
204099d0:    0040006f              j    204099d4 <__fpclassifyd+0x154>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204099d4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
204099d8:    00000593              li    a1,0                                   allGrp
204099dc:    02b50463              beq    a0,a1,20409a04 <__fpclassifyd+0x184>  allGrp, Branch-Instr, controlFlowGrp
204099e0:    0040006f              j    204099e4 <__fpclassifyd+0x164>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
           (msw == 0xfff00000 && lsw == 0x00000000))
204099e4:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
204099e8:    fff005b7              lui    a1,0xfff00                            allGrp
204099ec:    02b51263              bne    a0,a1,20409a10 <__fpclassifyd+0x190>  allGrp, Branch-Instr, controlFlowGrp
204099f0:    0040006f              j    204099f4 <__fpclassifyd+0x174>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
204099f4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
204099f8:    00000593              li    a1,0                                   allGrp
  else if ((msw == 0x7ff00000 && lsw == 0x00000000) ||
204099fc:    00b51a63              bne    a0,a1,20409a10 <__fpclassifyd+0x190>  allGrp, Branch-Instr, controlFlowGrp
20409a00:    0040006f              j    20409a04 <__fpclassifyd+0x184>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return FP_INFINITE;
20409a04:    00100513              li    a0,1                                   Branch-Tgt, allGrp
20409a08:    fea42a23              sw    a0,-12(s0)                             allGrp
20409a0c:    0100006f              j    20409a1c <__fpclassifyd+0x19c>          allGrp, Branch-Instr, controlFlowGrp
  else
    return FP_NAN;
20409a10:    00000513              li    a0,0                                   Branch-Tgt, allGrp
20409a14:    fea42a23              sw    a0,-12(s0)                             allGrp
20409a18:    0040006f              j    20409a1c <__fpclassifyd+0x19c>          allGrp, Branch-Instr, controlFlowGrp
}
20409a1c:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20409a20:    02812403              lw    s0,40(sp)                              allGrp
20409a24:    02012423              sw    zero,40(sp)                            allGrp
20409a28:    02c12083              lw    ra,44(sp)                              allGrp
20409a2c:    02012623              sw    zero,44(sp)                            allGrp
20409a30:    03010113              addi    sp,sp,48                             allGrp
20409a34:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20409a38 <strcmp>:

.text
.globl strcmp
.type  strcmp, @function
strcmp:
  or    a4, a0, a1
20409a38:    00b56733              or    a4,a0,a1                               allGrp
  li    t2, -1
20409a3c:    fff00393              li    t2,-1                                  allGrp
  andi   a4, a4, SZREG-1
20409a40:    00377713              andi    a4,a4,3                              allGrp
  bnez  a4, .Lmisaligned
20409a44:    10071063              bnez    a4,20409b44 <strcmp+0x10c>           allGrp, controlFlowGrp

#if SZREG == 4
  li a5, 0x7f7f7f7f
20409a48:    7f7f87b7              lui    a5,0x7f7f8                            allGrp
20409a4c:    f7f78793              addi    a5,a5,-129 # 7f7f7f7f <__fini_array_end+0x5f3e55bf>allGrp
  .endm

.Lloop:
  # examine full words at a time, favoring strings of a couple dozen chars
#if __riscv_xlen == 32
  check_one_word 0 5
20409a50:    00052603              lw    a2,0(a0)                               allGrp
20409a54:    0005a683              lw    a3,0(a1) # fff00000 <_sp+0x7fefc000>   allGrp
20409a58:    00f672b3              and    t0,a2,a5                              allGrp
20409a5c:    00f66333              or    t1,a2,a5                               allGrp
20409a60:    00f282b3              add    t0,t0,a5                              allGrp
20409a64:    0062e2b3              or    t0,t0,t1                               allGrp
20409a68:    10729263              bne    t0,t2,20409b6c <strcmp+0x134>         allGrp, controlFlowGrp
20409a6c:    08d61663              bne    a2,a3,20409af8 <strcmp+0xc0>          allGrp, controlFlowGrp
  check_one_word 1 5
20409a70:    00452603              lw    a2,4(a0)                               allGrp
20409a74:    0045a683              lw    a3,4(a1)                               allGrp
20409a78:    00f672b3              and    t0,a2,a5                              allGrp
20409a7c:    00f66333              or    t1,a2,a5                               allGrp
20409a80:    00f282b3              add    t0,t0,a5                              allGrp
20409a84:    0062e2b3              or    t0,t0,t1                               allGrp
20409a88:    0c729e63              bne    t0,t2,20409b64 <strcmp+0x12c>         allGrp, controlFlowGrp
20409a8c:    06d61663              bne    a2,a3,20409af8 <strcmp+0xc0>          allGrp, controlFlowGrp
  check_one_word 2 5
20409a90:    00852603              lw    a2,8(a0)                               allGrp
20409a94:    0085a683              lw    a3,8(a1)                               allGrp
20409a98:    00f672b3              and    t0,a2,a5                              allGrp
20409a9c:    00f66333              or    t1,a2,a5                               allGrp
20409aa0:    00f282b3              add    t0,t0,a5                              allGrp
20409aa4:    0062e2b3              or    t0,t0,t1                               allGrp
20409aa8:    0c729863              bne    t0,t2,20409b78 <strcmp+0x140>         allGrp, controlFlowGrp
20409aac:    04d61663              bne    a2,a3,20409af8 <strcmp+0xc0>          allGrp, controlFlowGrp
  check_one_word 3 5
20409ab0:    00c52603              lw    a2,12(a0)                              allGrp
20409ab4:    00c5a683              lw    a3,12(a1)                              allGrp
20409ab8:    00f672b3              and    t0,a2,a5                              allGrp
20409abc:    00f66333              or    t1,a2,a5                               allGrp
20409ac0:    00f282b3              add    t0,t0,a5                              allGrp
20409ac4:    0062e2b3              or    t0,t0,t1                               allGrp
20409ac8:    0c729263              bne    t0,t2,20409b8c <strcmp+0x154>         allGrp, controlFlowGrp
20409acc:    02d61663              bne    a2,a3,20409af8 <strcmp+0xc0>          allGrp, controlFlowGrp
  check_one_word 4 5
20409ad0:    01052603              lw    a2,16(a0)                              allGrp
20409ad4:    0105a683              lw    a3,16(a1)                              allGrp
20409ad8:    00f672b3              and    t0,a2,a5                              allGrp
20409adc:    00f66333              or    t1,a2,a5                               allGrp
20409ae0:    00f282b3              add    t0,t0,a5                              allGrp
20409ae4:    0062e2b3              or    t0,t0,t1                               allGrp
20409ae8:    0a729c63              bne    t0,t2,20409ba0 <strcmp+0x168>         allGrp, controlFlowGrp
20409aec:    01450513              addi    a0,a0,20                             allGrp
20409af0:    01458593              addi    a1,a1,20                             allGrp
20409af4:    f4d60ee3              beq    a2,a3,20409a50 <strcmp+0x18>          allGrp, controlFlowGrp
  bne   a4, a5, .Lmismatch_upper
  sll   a4, a2, 32
  sll   a5, a3, 32
  bne   a4, a5, .Lmismatch_upper
#endif
  slli   a4, a2, 16
20409af8:    01061713              slli    a4,a2,0x10                           allGrp
  slli   a5, a3, 16
20409afc:    01069793              slli    a5,a3,0x10                           allGrp
  bne   a4, a5, .Lmismatch_upper
20409b00:    00f71e63              bne    a4,a5,20409b1c <strcmp+0xe4>          allGrp, controlFlowGrp

  srli   a4, a2, 8*SZREG-16
20409b04:    01065713              srli    a4,a2,0x10                           allGrp
  srli   a5, a3, 8*SZREG-16
20409b08:    0106d793              srli    a5,a3,0x10                           allGrp
  sub   a0, a4, a5
20409b0c:    40f70533              sub    a0,a4,a5                              allGrp
  andi   a1, a0, 0xff
20409b10:    0ff57593              andi    a1,a0,255                            allGrp
  bnez  a1, 1f
20409b14:    02059063              bnez    a1,20409b34 <strcmp+0xfc>            allGrp, controlFlowGrp
  ret
20409b18:    00008067              ret                                          allGrp, controlFlowGrp

.Lmismatch_upper:
  srli   a4, a4, 8*SZREG-16
20409b1c:    01075713              srli    a4,a4,0x10                           allGrp
  srli   a5, a5, 8*SZREG-16
20409b20:    0107d793              srli    a5,a5,0x10                           allGrp
  sub   a0, a4, a5
20409b24:    40f70533              sub    a0,a4,a5                              allGrp
  andi   a1, a0, 0xff
20409b28:    0ff57593              andi    a1,a0,255                            allGrp
  bnez  a1, 1f
20409b2c:    00059463              bnez    a1,20409b34 <strcmp+0xfc>            allGrp, controlFlowGrp
  ret
20409b30:    00008067              ret                                          allGrp, controlFlowGrp

1:andi   a4, a4, 0xff
20409b34:    0ff77713              andi    a4,a4,255                            allGrp
  andi   a5, a5, 0xff
20409b38:    0ff7f793              andi    a5,a5,255                            allGrp
  sub   a0, a4, a5
20409b3c:    40f70533              sub    a0,a4,a5                              allGrp
  ret
20409b40:    00008067              ret                                          allGrp, controlFlowGrp

.Lmisaligned:
  # misaligned
  lbu   a2, 0(a0)
20409b44:    00054603              lbu    a2,0(a0)                              allGrp
  lbu   a3, 0(a1)
20409b48:    0005c683              lbu    a3,0(a1)                              allGrp
  addi   a0, a0, 1
20409b4c:    00150513              addi    a0,a0,1                              allGrp
  addi   a1, a1, 1
20409b50:    00158593              addi    a1,a1,1                              allGrp
  bne   a2, a3, 1f
20409b54:    00d61463              bne    a2,a3,20409b5c <strcmp+0x124>         allGrp, controlFlowGrp
  bnez  a2, .Lmisaligned
20409b58:    fe0616e3              bnez    a2,20409b44 <strcmp+0x10c>           allGrp, controlFlowGrp

1:
  sub   a0, a2, a3
20409b5c:    40d60533              sub    a0,a2,a3                              allGrp
  ret
20409b60:    00008067              ret                                          allGrp, controlFlowGrp

  # cases in which a null byte was detected
#if __riscv_xlen == 32
  foundnull 0 5
  foundnull 1 5
20409b64:    00450513              addi    a0,a0,4                              allGrp
20409b68:    00458593              addi    a1,a1,4                              allGrp
20409b6c:    fcd61ce3              bne    a2,a3,20409b44 <strcmp+0x10c>         allGrp, controlFlowGrp
20409b70:    00000513              li    a0,0                                   allGrp
20409b74:    00008067              ret                                          allGrp, controlFlowGrp
  foundnull 2 5
20409b78:    00850513              addi    a0,a0,8                              allGrp
20409b7c:    00858593              addi    a1,a1,8                              allGrp
20409b80:    fcd612e3              bne    a2,a3,20409b44 <strcmp+0x10c>         allGrp, controlFlowGrp
20409b84:    00000513              li    a0,0                                   allGrp
20409b88:    00008067              ret                                          allGrp, controlFlowGrp
  foundnull 3 5
20409b8c:    00c50513              addi    a0,a0,12                             allGrp
20409b90:    00c58593              addi    a1,a1,12                             allGrp
20409b94:    fad618e3              bne    a2,a3,20409b44 <strcmp+0x10c>         allGrp, controlFlowGrp
20409b98:    00000513              li    a0,0                                   allGrp
20409b9c:    00008067              ret                                          allGrp, controlFlowGrp
  foundnull 4 5
20409ba0:    01050513              addi    a0,a0,16                             allGrp
20409ba4:    01058593              addi    a1,a1,16                             allGrp
20409ba8:    f8d61ee3              bne    a2,a3,20409b44 <strcmp+0x10c>         allGrp, controlFlowGrp
20409bac:    00000513              li    a0,0                                   allGrp
20409bb0:    00008067              ret                                          allGrp, controlFlowGrp

20409bb4 <strlen>:
20409bb4:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
20409bb8:    02112623              sw    ra,44(sp)                              allGrp
20409bbc:    02812423              sw    s0,40(sp)                              allGrp
20409bc0:    03010413              addi    s0,sp,48                             allGrp
20409bc4:    00050593              mv    a1,a0                                  allGrp
20409bc8:    fea42823              sw    a0,-16(s0)                             allGrp
#include <string.h>
#include <stdint.h>

size_t strlen(const char *str)
{
  const char *start = str;
20409bcc:    ff042503              lw    a0,-16(s0)                             allGrp
20409bd0:    fea42623              sw    a0,-20(s0)                             allGrp
#if defined(PREFER_SIZE_OVER_SPEED) || defined(__OPTIMIZE_SIZE__)
  while (*str++)
    ;
  return str - start - 1;
#else
  if (__builtin_expect ((uintptr_t)str & (sizeof (long) - 1), 0)) do
20409bd4:    ff042503              lw    a0,-16(s0)                             allGrp
20409bd8:    00357513              andi    a0,a0,3                              allGrp
20409bdc:    00000613              li    a2,0                                   allGrp
20409be0:    fcb42a23              sw    a1,-44(s0)                             allGrp
20409be4:    06c50463              beq    a0,a2,20409c4c <strlen+0x98>          allGrp, Branch-Instr, controlFlowGrp
20409be8:    0040006f              j    20409bec <strlen+0x38>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409bec:    0040006f              j    20409bf0 <strlen+0x3c>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      char ch = *str;
20409bf0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20409bf4:    00050503              lb    a0,0(a0)                               allGrp
20409bf8:    fea405a3              sb    a0,-21(s0)                             allGrp
      str++;
20409bfc:    ff042503              lw    a0,-16(s0)                             allGrp
20409c00:    00150513              addi    a0,a0,1                              allGrp
20409c04:    fea42823              sw    a0,-16(s0)                             allGrp
      if (!ch)
20409c08:    feb44503              lbu    a0,-21(s0)                            allGrp
20409c0c:    00000593              li    a1,0                                   allGrp
20409c10:    02b51063              bne    a0,a1,20409c30 <strlen+0x7c>          allGrp, Branch-Instr, controlFlowGrp
20409c14:    0040006f              j    20409c18 <strlen+0x64>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	return str - start - 1;
20409c18:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20409c1c:    fec42583              lw    a1,-20(s0)                             allGrp
20409c20:    40b50533              sub    a0,a0,a1                              allGrp
20409c24:    fff50513              addi    a0,a0,-1                             allGrp
20409c28:    fea42a23              sw    a0,-12(s0)                             allGrp
20409c2c:    2900006f              j    20409ebc <strlen+0x308>                 allGrp, Branch-Instr, controlFlowGrp
    } while ((uintptr_t)str & (sizeof (long) - 1));
20409c30:    0040006f              j    20409c34 <strlen+0x80>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409c34:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20409c38:    00357513              andi    a0,a0,3                              allGrp
20409c3c:    00000593              li    a1,0                                   allGrp
20409c40:    fab518e3              bne    a0,a1,20409bf0 <strlen+0x3c>          allGrp, Branch-Instr, controlFlowGrp
20409c44:    0040006f              j    20409c48 <strlen+0x94>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409c48:    0040006f              j    20409c4c <strlen+0x98>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

  unsigned long *ls = (unsigned long *)str;
20409c4c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20409c50:    fea42223              sw    a0,-28(s0)                             allGrp
  while (!__libc_detect_null (*ls++))
20409c54:    0040006f              j    20409c58 <strlen+0xa4>                  allGrp, Branch-Instr, controlFlowGrp
20409c58:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20409c5c:    00450593              addi    a1,a0,4                              allGrp
20409c60:    feb42223              sw    a1,-28(s0)                             allGrp
20409c64:    00052503              lw    a0,0(a0)                               allGrp
20409c68:    00000097              auipc    ra,0x0                              allGrp
20409c6c:    270080e7              jalr    624(ra) # 20409ed8 <__libc_detect_null>Call-Instr, allGrp, controlFlowGrp
20409c70:    00000593              li    a1,0                                   Return-Tgt, allGrp
20409c74:    00b51663              bne    a0,a1,20409c80 <strlen+0xcc>          allGrp, Branch-Instr, controlFlowGrp
20409c78:    0040006f              j    20409c7c <strlen+0xc8>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409c7c:    fddff06f              j    20409c58 <strlen+0xa4>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    ;
  asm volatile ("" : "+r"(ls)); /* prevent "optimization" */
20409c80:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20409c84:    fea42223              sw    a0,-28(s0)                             allGrp

  str = (const char *)ls;
20409c88:    fe442503              lw    a0,-28(s0)                             allGrp
20409c8c:    fea42823              sw    a0,-16(s0)                             allGrp
  size_t ret = str - start, sl = sizeof (long);
20409c90:    ff042503              lw    a0,-16(s0)                             allGrp
20409c94:    fec42583              lw    a1,-20(s0)                             allGrp
20409c98:    40b50533              sub    a0,a0,a1                              allGrp
20409c9c:    fea42023              sw    a0,-32(s0)                             allGrp
20409ca0:    00400513              li    a0,4                                   allGrp
20409ca4:    fca42e23              sw    a0,-36(s0)                             allGrp

  char c0 = str[0 - sl], c1 = str[1 - sl], c2 = str[2 - sl], c3 = str[3 - sl];
20409ca8:    ff042503              lw    a0,-16(s0)                             allGrp
20409cac:    fdc42583              lw    a1,-36(s0)                             allGrp
20409cb0:    40b50533              sub    a0,a0,a1                              allGrp
20409cb4:    00050503              lb    a0,0(a0)                               allGrp
20409cb8:    fca40da3              sb    a0,-37(s0)                             allGrp
20409cbc:    ff042503              lw    a0,-16(s0)                             allGrp
20409cc0:    fdc42583              lw    a1,-36(s0)                             allGrp
20409cc4:    00100613              li    a2,1                                   allGrp
20409cc8:    40b605b3              sub    a1,a2,a1                              allGrp
20409ccc:    00b50533              add    a0,a0,a1                              allGrp
20409cd0:    00050503              lb    a0,0(a0)                               allGrp
20409cd4:    fca40d23              sb    a0,-38(s0)                             allGrp
20409cd8:    ff042503              lw    a0,-16(s0)                             allGrp
20409cdc:    fdc42583              lw    a1,-36(s0)                             allGrp
20409ce0:    00200613              li    a2,2                                   allGrp
20409ce4:    40b605b3              sub    a1,a2,a1                              allGrp
20409ce8:    00b50533              add    a0,a0,a1                              allGrp
20409cec:    00050503              lb    a0,0(a0)                               allGrp
20409cf0:    fca40ca3              sb    a0,-39(s0)                             allGrp
20409cf4:    ff042503              lw    a0,-16(s0)                             allGrp
20409cf8:    fdc42583              lw    a1,-36(s0)                             allGrp
20409cfc:    00300613              li    a2,3                                   allGrp
20409d00:    40b605b3              sub    a1,a2,a1                              allGrp
20409d04:    00b50533              add    a0,a0,a1                              allGrp
20409d08:    00050503              lb    a0,0(a0)                               allGrp
20409d0c:    fca40c23              sb    a0,-40(s0)                             allGrp
  if (c0 == 0)            return ret + 0 - sl;
20409d10:    fdb44503              lbu    a0,-37(s0)                            allGrp
20409d14:    00000593              li    a1,0                                   allGrp
20409d18:    00b51e63              bne    a0,a1,20409d34 <strlen+0x180>         allGrp, Branch-Instr, controlFlowGrp
20409d1c:    0040006f              j    20409d20 <strlen+0x16c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409d20:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20409d24:    fdc42583              lw    a1,-36(s0)                             allGrp
20409d28:    40b50533              sub    a0,a0,a1                              allGrp
20409d2c:    fea42a23              sw    a0,-12(s0)                             allGrp
20409d30:    18c0006f              j    20409ebc <strlen+0x308>                 allGrp, Branch-Instr, controlFlowGrp
  if (c1 == 0)            return ret + 1 - sl;
20409d34:    fda44503              lbu    a0,-38(s0)                            Branch-Tgt, allGrp
20409d38:    00000593              li    a1,0                                   allGrp
20409d3c:    02b51063              bne    a0,a1,20409d5c <strlen+0x1a8>         allGrp, Branch-Instr, controlFlowGrp
20409d40:    0040006f              j    20409d44 <strlen+0x190>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409d44:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20409d48:    00150513              addi    a0,a0,1                              allGrp
20409d4c:    fdc42583              lw    a1,-36(s0)                             allGrp
20409d50:    40b50533              sub    a0,a0,a1                              allGrp
20409d54:    fea42a23              sw    a0,-12(s0)                             allGrp
20409d58:    1640006f              j    20409ebc <strlen+0x308>                 allGrp, Branch-Instr, controlFlowGrp
  if (c2 == 0)            return ret + 2 - sl;
20409d5c:    fd944503              lbu    a0,-39(s0)                            Branch-Tgt, allGrp
20409d60:    00000593              li    a1,0                                   allGrp
20409d64:    02b51063              bne    a0,a1,20409d84 <strlen+0x1d0>         allGrp, Branch-Instr, controlFlowGrp
20409d68:    0040006f              j    20409d6c <strlen+0x1b8>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409d6c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20409d70:    00250513              addi    a0,a0,2                              allGrp
20409d74:    fdc42583              lw    a1,-36(s0)                             allGrp
20409d78:    40b50533              sub    a0,a0,a1                              allGrp
20409d7c:    fea42a23              sw    a0,-12(s0)                             allGrp
20409d80:    13c0006f              j    20409ebc <strlen+0x308>                 allGrp, Branch-Instr, controlFlowGrp
  if (sl == 4 || c3 == 0) return ret + 3 - sl;
20409d84:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20409d88:    00400593              li    a1,4                                   allGrp
20409d8c:    00b50c63              beq    a0,a1,20409da4 <strlen+0x1f0>         allGrp, Branch-Instr, controlFlowGrp
20409d90:    0040006f              j    20409d94 <strlen+0x1e0>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409d94:    fd844503              lbu    a0,-40(s0)                            Branch-Tgt, allGrp
20409d98:    00000593              li    a1,0                                   allGrp
20409d9c:    02b51063              bne    a0,a1,20409dbc <strlen+0x208>         allGrp, Branch-Instr, controlFlowGrp
20409da0:    0040006f              j    20409da4 <strlen+0x1f0>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409da4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20409da8:    00350513              addi    a0,a0,3                              allGrp
20409dac:    fdc42583              lw    a1,-36(s0)                             allGrp
20409db0:    40b50533              sub    a0,a0,a1                              allGrp
20409db4:    fea42a23              sw    a0,-12(s0)                             allGrp
20409db8:    1040006f              j    20409ebc <strlen+0x308>                 allGrp, Branch-Instr, controlFlowGrp

  c0 = str[4 - sl], c1 = str[5 - sl], c2 = str[6 - sl], c3 = str[7 - sl];
20409dbc:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
20409dc0:    fdc42583              lw    a1,-36(s0)                             allGrp
20409dc4:    00400613              li    a2,4                                   allGrp
20409dc8:    40b605b3              sub    a1,a2,a1                              allGrp
20409dcc:    00b50533              add    a0,a0,a1                              allGrp
20409dd0:    00050503              lb    a0,0(a0)                               allGrp
20409dd4:    fca40da3              sb    a0,-37(s0)                             allGrp
20409dd8:    ff042503              lw    a0,-16(s0)                             allGrp
20409ddc:    fdc42583              lw    a1,-36(s0)                             allGrp
20409de0:    00500613              li    a2,5                                   allGrp
20409de4:    40b605b3              sub    a1,a2,a1                              allGrp
20409de8:    00b50533              add    a0,a0,a1                              allGrp
20409dec:    00050503              lb    a0,0(a0)                               allGrp
20409df0:    fca40d23              sb    a0,-38(s0)                             allGrp
20409df4:    ff042503              lw    a0,-16(s0)                             allGrp
20409df8:    fdc42583              lw    a1,-36(s0)                             allGrp
20409dfc:    00600613              li    a2,6                                   allGrp
20409e00:    40b605b3              sub    a1,a2,a1                              allGrp
20409e04:    00b50533              add    a0,a0,a1                              allGrp
20409e08:    00050503              lb    a0,0(a0)                               allGrp
20409e0c:    fca40ca3              sb    a0,-39(s0)                             allGrp
20409e10:    ff042503              lw    a0,-16(s0)                             allGrp
20409e14:    fdc42583              lw    a1,-36(s0)                             allGrp
20409e18:    00700613              li    a2,7                                   allGrp
20409e1c:    40b605b3              sub    a1,a2,a1                              allGrp
20409e20:    00b50533              add    a0,a0,a1                              allGrp
20409e24:    00050503              lb    a0,0(a0)                               allGrp
20409e28:    fca40c23              sb    a0,-40(s0)                             allGrp
  if (c0 == 0)            return ret + 4 - sl;
20409e2c:    fdb44503              lbu    a0,-37(s0)                            allGrp
20409e30:    00000593              li    a1,0                                   allGrp
20409e34:    02b51063              bne    a0,a1,20409e54 <strlen+0x2a0>         allGrp, Branch-Instr, controlFlowGrp
20409e38:    0040006f              j    20409e3c <strlen+0x288>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409e3c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20409e40:    00450513              addi    a0,a0,4                              allGrp
20409e44:    fdc42583              lw    a1,-36(s0)                             allGrp
20409e48:    40b50533              sub    a0,a0,a1                              allGrp
20409e4c:    fea42a23              sw    a0,-12(s0)                             allGrp
20409e50:    06c0006f              j    20409ebc <strlen+0x308>                 allGrp, Branch-Instr, controlFlowGrp
  if (c1 == 0)            return ret + 5 - sl;
20409e54:    fda44503              lbu    a0,-38(s0)                            Branch-Tgt, allGrp
20409e58:    00000593              li    a1,0                                   allGrp
20409e5c:    02b51063              bne    a0,a1,20409e7c <strlen+0x2c8>         allGrp, Branch-Instr, controlFlowGrp
20409e60:    0040006f              j    20409e64 <strlen+0x2b0>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409e64:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20409e68:    00550513              addi    a0,a0,5                              allGrp
20409e6c:    fdc42583              lw    a1,-36(s0)                             allGrp
20409e70:    40b50533              sub    a0,a0,a1                              allGrp
20409e74:    fea42a23              sw    a0,-12(s0)                             allGrp
20409e78:    0440006f              j    20409ebc <strlen+0x308>                 allGrp, Branch-Instr, controlFlowGrp
  if (c2 == 0)            return ret + 6 - sl;
20409e7c:    fd944503              lbu    a0,-39(s0)                            Branch-Tgt, allGrp
20409e80:    00000593              li    a1,0                                   allGrp
20409e84:    02b51063              bne    a0,a1,20409ea4 <strlen+0x2f0>         allGrp, Branch-Instr, controlFlowGrp
20409e88:    0040006f              j    20409e8c <strlen+0x2d8>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409e8c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20409e90:    00650513              addi    a0,a0,6                              allGrp
20409e94:    fdc42583              lw    a1,-36(s0)                             allGrp
20409e98:    40b50533              sub    a0,a0,a1                              allGrp
20409e9c:    fea42a23              sw    a0,-12(s0)                             allGrp
20409ea0:    01c0006f              j    20409ebc <strlen+0x308>                 allGrp, Branch-Instr, controlFlowGrp

  return ret + 7 - sl;
20409ea4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
20409ea8:    00750513              addi    a0,a0,7                              allGrp
20409eac:    fdc42583              lw    a1,-36(s0)                             allGrp
20409eb0:    40b50533              sub    a0,a0,a1                              allGrp
20409eb4:    fea42a23              sw    a0,-12(s0)                             allGrp
20409eb8:    0040006f              j    20409ebc <strlen+0x308>                 allGrp, Branch-Instr, controlFlowGrp
#endif /* not PREFER_SIZE_OVER_SPEED */
}
20409ebc:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
20409ec0:    02812403              lw    s0,40(sp)                              allGrp
20409ec4:    02012423              sw    zero,40(sp)                            allGrp
20409ec8:    02c12083              lw    ra,44(sp)                              allGrp
20409ecc:    02012623              sw    zero,44(sp)                            allGrp
20409ed0:    03010113              addi    sp,sp,48                             allGrp
20409ed4:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20409ed8 <__libc_detect_null>:
20409ed8:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
20409edc:    00112e23              sw    ra,28(sp)                              allGrp
20409ee0:    00812c23              sw    s0,24(sp)                              allGrp
20409ee4:    02010413              addi    s0,sp,32                             allGrp
20409ee8:    00050593              mv    a1,a0                                  allGrp
20409eec:    fea42a23              sw    a0,-12(s0)                             allGrp
20409ef0:    7f7f8537              lui    a0,0x7f7f8                            allGrp
20409ef4:    f7f50513              addi    a0,a0,-129 # 7f7f7f7f <__fini_array_end+0x5f3e55bf>allGrp
#ifndef _SYS_STRING_H
#define _SYS_STRING_H

static __inline unsigned long __libc_detect_null(unsigned long w)
{
  unsigned long mask = 0x7f7f7f7f;
20409ef8:    fea42823              sw    a0,-16(s0)                             allGrp
  if (sizeof (long) == 8)
    mask = ((mask << 16) << 16) | mask;
  return ~(((w & mask) + mask) | w | mask);
20409efc:    ff442503              lw    a0,-12(s0)                             allGrp
20409f00:    ff042603              lw    a2,-16(s0)                             allGrp
20409f04:    00c57533              and    a0,a0,a2                              allGrp
20409f08:    ff042603              lw    a2,-16(s0)                             allGrp
20409f0c:    00c50533              add    a0,a0,a2                              allGrp
20409f10:    ff442603              lw    a2,-12(s0)                             allGrp
20409f14:    00c56533              or    a0,a0,a2                               allGrp
20409f18:    ff042603              lw    a2,-16(s0)                             allGrp
20409f1c:    00c56533              or    a0,a0,a2                               allGrp
20409f20:    fff54513              not    a0,a0                                 allGrp
20409f24:    feb42623              sw    a1,-20(s0)                             allGrp
20409f28:    01812403              lw    s0,24(sp)                              allGrp
20409f2c:    00012c23              sw    zero,24(sp)                            allGrp
20409f30:    01c12083              lw    ra,28(sp)                              allGrp
20409f34:    00012e23              sw    zero,28(sp)                            allGrp
20409f38:    02010113              addi    sp,sp,32                             allGrp
20409f3c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

20409f40 <__ssprint_r>:
20409f40:    fb010113              addi    sp,sp,-80                            Call-Tgt, allGrp, Branch-Tgt
20409f44:    04112623              sw    ra,76(sp)                              allGrp
20409f48:    04812423              sw    s0,72(sp)                              allGrp
20409f4c:    05010413              addi    s0,sp,80                             allGrp
20409f50:    00060693              mv    a3,a2                                  allGrp
20409f54:    00058713              mv    a4,a1                                  allGrp
20409f58:    00050793              mv    a5,a0                                  allGrp
20409f5c:    fea42823              sw    a0,-16(s0)                             allGrp
20409f60:    feb42623              sw    a1,-20(s0)                             allGrp
20409f64:    fec42423              sw    a2,-24(s0)                             allGrp
20409f68:    00000513              li    a0,0                                   allGrp
	register _CONST char *p = NULL;
20409f6c:    fca42c23              sw    a0,-40(s0)                             allGrp
	iov = uio->uio_iov;
20409f70:    fe842583              lw    a1,-24(s0)                             allGrp
20409f74:    0005a583              lw    a1,0(a1)                               allGrp
20409f78:    fcb42e23              sw    a1,-36(s0)                             allGrp
	len = 0;
20409f7c:    fea42223              sw    a0,-28(s0)                             allGrp
	if (uio->uio_resid == 0) {
20409f80:    fe842583              lw    a1,-24(s0)                             allGrp
20409f84:    0085a583              lw    a1,8(a1)                               allGrp
20409f88:    fcd42423              sw    a3,-56(s0)                             allGrp
20409f8c:    fce42223              sw    a4,-60(s0)                             allGrp
20409f90:    fcf42023              sw    a5,-64(s0)                             allGrp
20409f94:    00a59e63              bne    a1,a0,20409fb0 <__ssprint_r+0x70>     allGrp, Branch-Instr, controlFlowGrp
20409f98:    0040006f              j    20409f9c <__ssprint_r+0x5c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		uio->uio_iovcnt = 0;
20409f9c:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
20409fa0:    00000593              li    a1,0                                   allGrp
20409fa4:    00b52223              sw    a1,4(a0)                               allGrp
		return (0);
20409fa8:    feb42a23              sw    a1,-12(s0)                             allGrp
20409fac:    30c0006f              j    2040a2b8 <__ssprint_r+0x378>            allGrp, Branch-Instr, controlFlowGrp
        do {
20409fb0:    0040006f              j    20409fb4 <__ssprint_r+0x74>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		while (len == 0) {
20409fb4:    0040006f              j    20409fb8 <__ssprint_r+0x78>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
20409fb8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
20409fbc:    00000593              li    a1,0                                   allGrp
20409fc0:    02b51863              bne    a0,a1,20409ff0 <__ssprint_r+0xb0>     allGrp, Branch-Instr, controlFlowGrp
20409fc4:    0040006f              j    20409fc8 <__ssprint_r+0x88>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			p = iov->iov_base;
20409fc8:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
20409fcc:    00052503              lw    a0,0(a0)                               allGrp
20409fd0:    fca42c23              sw    a0,-40(s0)                             allGrp
			len = iov->iov_len;
20409fd4:    fdc42503              lw    a0,-36(s0)                             allGrp
20409fd8:    00452503              lw    a0,4(a0)                               allGrp
20409fdc:    fea42223              sw    a0,-28(s0)                             allGrp
			iov++;
20409fe0:    fdc42503              lw    a0,-36(s0)                             allGrp
20409fe4:    00850513              addi    a0,a0,8                              allGrp
20409fe8:    fca42e23              sw    a0,-36(s0)                             allGrp
		while (len == 0) {
20409fec:    fcdff06f              j    20409fb8 <__ssprint_r+0x78>             allGrp, Branch-Instr, controlFlowGrp
		w = fp->_w;
20409ff0:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
20409ff4:    00852503              lw    a0,8(a0)                               allGrp
20409ff8:    fea42023              sw    a0,-32(s0)                             allGrp
		if (len >= w && fp->_flags & (__SMBF | __SOPT)) {
20409ffc:    fe442503              lw    a0,-28(s0)                             allGrp
2040a000:    fe042583              lw    a1,-32(s0)                             allGrp
2040a004:    1ab56e63              bltu    a0,a1,2040a1c0 <__ssprint_r+0x280>   allGrp, Branch-Instr, controlFlowGrp
2040a008:    0040006f              j    2040a00c <__ssprint_r+0xcc>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a00c:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040a010:    00c55503              lhu    a0,12(a0)                             allGrp
2040a014:    48057513              andi    a0,a0,1152                           allGrp
2040a018:    00000593              li    a1,0                                   allGrp
2040a01c:    1ab50263              beq    a0,a1,2040a1c0 <__ssprint_r+0x280>    allGrp, Branch-Instr, controlFlowGrp
2040a020:    0040006f              j    2040a024 <__ssprint_r+0xe4>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			int curpos = (fp->_p - fp->_bf._base);
2040a024:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040a028:    00052503              lw    a0,0(a0)                               allGrp
2040a02c:    fec42583              lw    a1,-20(s0)                             allGrp
2040a030:    0105a583              lw    a1,16(a1)                              allGrp
2040a034:    40b50533              sub    a0,a0,a1                              allGrp
2040a038:    fca42823              sw    a0,-48(s0)                             allGrp
			int newsize = fp->_bf._size * 3 / 2;
2040a03c:    fec42503              lw    a0,-20(s0)                             allGrp
2040a040:    01452503              lw    a0,20(a0)                              allGrp
2040a044:    00300593              li    a1,3                                   allGrp
2040a048:    00008097              auipc    ra,0x8                              allGrp
2040a04c:    20c080e7              jalr    524(ra) # 20412254 <__mulsi3>        Call-Instr, allGrp, controlFlowGrp
2040a050:    01f55593              srli    a1,a0,0x1f                           Return-Tgt, allGrp
2040a054:    00b50533              add    a0,a0,a1                              allGrp
2040a058:    40155513              srai    a0,a0,0x1                            allGrp
2040a05c:    fca42623              sw    a0,-52(s0)                             allGrp
			if (newsize < curpos + len + 1)
2040a060:    fcc42503              lw    a0,-52(s0)                             allGrp
2040a064:    fd042583              lw    a1,-48(s0)                             allGrp
2040a068:    fe442603              lw    a2,-28(s0)                             allGrp
2040a06c:    00c585b3              add    a1,a1,a2                              allGrp
2040a070:    00158593              addi    a1,a1,1                              allGrp
2040a074:    02b57063              bleu    a1,a0,2040a094 <__ssprint_r+0x154>   allGrp, Branch-Instr, controlFlowGrp
2040a078:    0040006f              j    2040a07c <__ssprint_r+0x13c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				newsize = curpos + len + 1;
2040a07c:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040a080:    fe442583              lw    a1,-28(s0)                             allGrp
2040a084:    00b50533              add    a0,a0,a1                              allGrp
2040a088:    00150513              addi    a0,a0,1                              allGrp
2040a08c:    fca42623              sw    a0,-52(s0)                             allGrp
2040a090:    0040006f              j    2040a094 <__ssprint_r+0x154>            allGrp, Branch-Instr, controlFlowGrp
			if (fp->_flags & __SOPT)
2040a094:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040a098:    00c55503              lhu    a0,12(a0)                             allGrp
2040a09c:    40057513              andi    a0,a0,1024                           allGrp
2040a0a0:    00000593              li    a1,0                                   allGrp
2040a0a4:    06b50e63              beq    a0,a1,2040a120 <__ssprint_r+0x1e0>    allGrp, Branch-Instr, controlFlowGrp
2040a0a8:    0040006f              j    2040a0ac <__ssprint_r+0x16c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				str = (unsigned char *)_malloc_r (ptr, newsize);
2040a0ac:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040a0b0:    fcc42583              lw    a1,-52(s0)                             allGrp
2040a0b4:    00008097              auipc    ra,0x8                              allGrp
2040a0b8:    2d0080e7              jalr    720(ra) # 20412384 <_malloc_r>       Call-Instr, allGrp, controlFlowGrp
2040a0bc:    fca42a23              sw    a0,-44(s0)                             Return-Tgt, allGrp
				if (!str)
2040a0c0:    fd442503              lw    a0,-44(s0)                             allGrp
2040a0c4:    00000593              li    a1,0                                   allGrp
2040a0c8:    00b51c63              bne    a0,a1,2040a0e0 <__ssprint_r+0x1a0>    allGrp, Branch-Instr, controlFlowGrp
2040a0cc:    0040006f              j    2040a0d0 <__ssprint_r+0x190>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					ptr->_errno = ENOMEM;
2040a0d0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040a0d4:    00c00593              li    a1,12                                  allGrp
2040a0d8:    00b52023              sw    a1,0(a0)                               allGrp
					goto err;
2040a0dc:    1ac0006f              j    2040a288 <__ssprint_r+0x348>            allGrp, Branch-Instr, controlFlowGrp
				memcpy (str, fp->_bf._base, curpos);
2040a0e0:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
2040a0e4:    fec42583              lw    a1,-20(s0)                             allGrp
2040a0e8:    0105a583              lw    a1,16(a1)                              allGrp
2040a0ec:    fd042603              lw    a2,-48(s0)                             allGrp
2040a0f0:    ffff7097              auipc    ra,0xffff7                          allGrp
2040a0f4:    07c080e7              jalr    124(ra) # 2040116c <memcpy>          Call-Instr, allGrp, controlFlowGrp
				fp->_flags = (fp->_flags & ~__SOPT) | __SMBF;
2040a0f8:    fec42583              lw    a1,-20(s0)                             Return-Tgt, allGrp
2040a0fc:    00c5d583              lhu    a1,12(a1)                             allGrp
2040a100:    00010637              lui    a2,0x10                               allGrp
2040a104:    b7f60613              addi    a2,a2,-1153 # fb7f <__stack_size+0xf37f>allGrp
2040a108:    00c5f5b3              and    a1,a1,a2                              allGrp
2040a10c:    0805e593              ori    a1,a1,128                             allGrp
2040a110:    fec42603              lw    a2,-20(s0)                             allGrp
2040a114:    00b61623              sh    a1,12(a2)                              allGrp
			}
2040a118:    faa42e23              sw    a0,-68(s0)                             allGrp
2040a11c:    0580006f              j    2040a174 <__ssprint_r+0x234>            allGrp, Branch-Instr, controlFlowGrp
				str = (unsigned char *)_realloc_r (ptr, fp->_bf._base,
2040a120:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040a124:    fec42583              lw    a1,-20(s0)                             allGrp
2040a128:    0105a583              lw    a1,16(a1)                              allGrp
						newsize);
2040a12c:    fcc42603              lw    a2,-52(s0)                             allGrp
				str = (unsigned char *)_realloc_r (ptr, fp->_bf._base,
2040a130:    00003097              auipc    ra,0x3                              allGrp
2040a134:    210080e7              jalr    528(ra) # 2040d340 <_realloc_r>      Call-Instr, allGrp, controlFlowGrp
2040a138:    fca42a23              sw    a0,-44(s0)                             Return-Tgt, allGrp
				if (!str) {
2040a13c:    fd442503              lw    a0,-44(s0)                             allGrp
2040a140:    00000593              li    a1,0                                   allGrp
2040a144:    02b51663              bne    a0,a1,2040a170 <__ssprint_r+0x230>    allGrp, Branch-Instr, controlFlowGrp
2040a148:    0040006f              j    2040a14c <__ssprint_r+0x20c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					_free_r (ptr, fp->_bf._base);
2040a14c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040a150:    fec42583              lw    a1,-20(s0)                             allGrp
2040a154:    0105a583              lw    a1,16(a1)                              allGrp
2040a158:    00008097              auipc    ra,0x8                              allGrp
2040a15c:    27c080e7              jalr    636(ra) # 204123d4 <_free_r>         Call-Instr, allGrp, controlFlowGrp
					ptr->_errno = ENOMEM;
2040a160:    ff042503              lw    a0,-16(s0)                             Return-Tgt, allGrp
2040a164:    00c00593              li    a1,12                                  allGrp
2040a168:    00b52023              sw    a1,0(a0)                               allGrp
					goto err;
2040a16c:    11c0006f              j    2040a288 <__ssprint_r+0x348>            allGrp, Branch-Instr, controlFlowGrp
2040a170:    0040006f              j    2040a174 <__ssprint_r+0x234>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			fp->_bf._base = str;
2040a174:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
2040a178:    fec42583              lw    a1,-20(s0)                             allGrp
2040a17c:    00a5a823              sw    a0,16(a1)                              allGrp
			fp->_p = str + curpos;
2040a180:    fd442503              lw    a0,-44(s0)                             allGrp
2040a184:    fd042583              lw    a1,-48(s0)                             allGrp
2040a188:    00b50533              add    a0,a0,a1                              allGrp
2040a18c:    fec42583              lw    a1,-20(s0)                             allGrp
2040a190:    00a5a023              sw    a0,0(a1)                               allGrp
			fp->_bf._size = newsize;
2040a194:    fcc42503              lw    a0,-52(s0)                             allGrp
2040a198:    fec42583              lw    a1,-20(s0)                             allGrp
2040a19c:    00a5aa23              sw    a0,20(a1)                              allGrp
			w = len;
2040a1a0:    fe442503              lw    a0,-28(s0)                             allGrp
2040a1a4:    fea42023              sw    a0,-32(s0)                             allGrp
			fp->_w = newsize - curpos;
2040a1a8:    fcc42503              lw    a0,-52(s0)                             allGrp
2040a1ac:    fd042583              lw    a1,-48(s0)                             allGrp
2040a1b0:    40b50533              sub    a0,a0,a1                              allGrp
2040a1b4:    fec42583              lw    a1,-20(s0)                             allGrp
2040a1b8:    00a5a423              sw    a0,8(a1)                               allGrp
		}
2040a1bc:    0040006f              j    2040a1c0 <__ssprint_r+0x280>            allGrp, Branch-Instr, controlFlowGrp
		if (len < w)
2040a1c0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040a1c4:    fe042583              lw    a1,-32(s0)                             allGrp
2040a1c8:    00b57a63              bleu    a1,a0,2040a1dc <__ssprint_r+0x29c>   allGrp, Branch-Instr, controlFlowGrp
2040a1cc:    0040006f              j    2040a1d0 <__ssprint_r+0x290>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			w = len;
2040a1d0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040a1d4:    fea42023              sw    a0,-32(s0)                             allGrp
2040a1d8:    0040006f              j    2040a1dc <__ssprint_r+0x29c>            allGrp, Branch-Instr, controlFlowGrp
		(void)memmove ((_PTR) fp->_p, (_PTR) p, (size_t) (w));
2040a1dc:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040a1e0:    00052503              lw    a0,0(a0)                               allGrp
2040a1e4:    fd842583              lw    a1,-40(s0)                             allGrp
2040a1e8:    fe042603              lw    a2,-32(s0)                             allGrp
2040a1ec:    00003097              auipc    ra,0x3                              allGrp
2040a1f0:    c4c080e7              jalr    -948(ra) # 2040ce38 <memmove>        Call-Instr, allGrp, controlFlowGrp
		fp->_w -= w;
2040a1f4:    fe042583              lw    a1,-32(s0)                             Return-Tgt, allGrp
2040a1f8:    fec42603              lw    a2,-20(s0)                             allGrp
2040a1fc:    00862683              lw    a3,8(a2)                               allGrp
2040a200:    40b685b3              sub    a1,a3,a1                              allGrp
2040a204:    00b62423              sw    a1,8(a2)                               allGrp
		fp->_p += w;
2040a208:    fe042583              lw    a1,-32(s0)                             allGrp
2040a20c:    fec42603              lw    a2,-20(s0)                             allGrp
2040a210:    00062683              lw    a3,0(a2)                               allGrp
2040a214:    00b685b3              add    a1,a3,a1                              allGrp
2040a218:    00b62023              sw    a1,0(a2)                               allGrp
		w = len;          /* pretend we copied all */
2040a21c:    fe442583              lw    a1,-28(s0)                             allGrp
2040a220:    feb42023              sw    a1,-32(s0)                             allGrp
		p += w;
2040a224:    fe042583              lw    a1,-32(s0)                             allGrp
2040a228:    fd842603              lw    a2,-40(s0)                             allGrp
2040a22c:    00b605b3              add    a1,a2,a1                              allGrp
2040a230:    fcb42c23              sw    a1,-40(s0)                             allGrp
		len -= w;
2040a234:    fe042583              lw    a1,-32(s0)                             allGrp
2040a238:    fe442603              lw    a2,-28(s0)                             allGrp
2040a23c:    40b605b3              sub    a1,a2,a1                              allGrp
2040a240:    feb42223              sw    a1,-28(s0)                             allGrp
        } while ((uio->uio_resid -= w) != 0);
2040a244:    faa42c23              sw    a0,-72(s0)                             allGrp
2040a248:    0040006f              j    2040a24c <__ssprint_r+0x30c>            allGrp, Branch-Instr, controlFlowGrp
2040a24c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040a250:    fe842583              lw    a1,-24(s0)                             allGrp
2040a254:    0085a603              lw    a2,8(a1)                               allGrp
2040a258:    40a60533              sub    a0,a2,a0                              allGrp
2040a25c:    00a5a423              sw    a0,8(a1)                               allGrp
2040a260:    00000593              li    a1,0                                   allGrp
2040a264:    d4b518e3              bne    a0,a1,20409fb4 <__ssprint_r+0x74>     allGrp, Branch-Instr, controlFlowGrp
2040a268:    0040006f              j    2040a26c <__ssprint_r+0x32c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	uio->uio_resid = 0;
2040a26c:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040a270:    00000593              li    a1,0                                   allGrp
2040a274:    00b52423              sw    a1,8(a0)                               allGrp
	uio->uio_iovcnt = 0;
2040a278:    fe842503              lw    a0,-24(s0)                             allGrp
2040a27c:    00b52223              sw    a1,4(a0)                               allGrp
	return 0;
2040a280:    feb42a23              sw    a1,-12(s0)                             allGrp
2040a284:    0340006f              j    2040a2b8 <__ssprint_r+0x378>            allGrp, Branch-Instr, controlFlowGrp
  fp->_flags |= __SERR;
2040a288:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040a28c:    00c51583              lh    a1,12(a0)                              allGrp
2040a290:    0405e593              ori    a1,a1,64                              allGrp
2040a294:    00b51623              sh    a1,12(a0)                              allGrp
  uio->uio_resid = 0;
2040a298:    fe842503              lw    a0,-24(s0)                             allGrp
2040a29c:    00000593              li    a1,0                                   allGrp
2040a2a0:    00b52423              sw    a1,8(a0)                               allGrp
  uio->uio_iovcnt = 0;
2040a2a4:    fe842503              lw    a0,-24(s0)                             allGrp
2040a2a8:    00b52223              sw    a1,4(a0)                               allGrp
2040a2ac:    fff00513              li    a0,-1                                  allGrp
  return EOF;
2040a2b0:    fea42a23              sw    a0,-12(s0)                             allGrp
2040a2b4:    0040006f              j    2040a2b8 <__ssprint_r+0x378>            allGrp, Branch-Instr, controlFlowGrp
}
2040a2b8:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040a2bc:    04812403              lw    s0,72(sp)                              allGrp
2040a2c0:    04012423              sw    zero,72(sp)                            allGrp
2040a2c4:    04c12083              lw    ra,76(sp)                              allGrp
2040a2c8:    04012623              sw    zero,76(sp)                            allGrp
2040a2cc:    05010113              addi    sp,sp,80                             allGrp
2040a2d0:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040a2d4 <_svfiprintf_r>:
2040a2d4:    eb010113              addi    sp,sp,-336                           Call-Tgt, allGrp, Branch-Tgt
2040a2d8:    14112623              sw    ra,332(sp)                             allGrp
2040a2dc:    14812423              sw    s0,328(sp)                             allGrp
2040a2e0:    15010413              addi    s0,sp,336                            allGrp
2040a2e4:    00068713              mv    a4,a3                                  allGrp
2040a2e8:    00060793              mv    a5,a2                                  allGrp
2040a2ec:    00058813              mv    a6,a1                                  allGrp
2040a2f0:    00050893              mv    a7,a0                                  allGrp
2040a2f4:    fea42823              sw    a0,-16(s0)                             allGrp
2040a2f8:    feb42623              sw    a1,-20(s0)                             allGrp
2040a2fc:    fec42423              sw    a2,-24(s0)                             allGrp
2040a300:    fed42223              sw    a3,-28(s0)                             allGrp
2040a304:    00000513              li    a0,0                                   allGrp
	char *xdigs = NULL;	/* digits for [xX] conversion */
2040a308:    faa42023              sw    a0,-96(s0)                             allGrp
	char *malloc_buf = NULL;/* handy pointer for malloced buffers */
2040a30c:    f0a42e23              sw    a0,-228(s0)                            allGrp
        if (fp->_flags & __SMBF && !fp->_bf._base)
2040a310:    fec42583              lw    a1,-20(s0)                             allGrp
2040a314:    00c5d583              lhu    a1,12(a1)                             allGrp
2040a318:    0805f593              andi    a1,a1,128                            allGrp
2040a31c:    f0e42a23              sw    a4,-236(s0)                            allGrp
2040a320:    f0f42823              sw    a5,-240(s0)                            allGrp
2040a324:    f1042623              sw    a6,-244(s0)                            allGrp
2040a328:    f1142423              sw    a7,-248(s0)                            allGrp
2040a32c:    06a58c63              beq    a1,a0,2040a3a4 <_svfiprintf_r+0xd0>   allGrp, Branch-Instr, controlFlowGrp
2040a330:    0040006f              j    2040a334 <_svfiprintf_r+0x60>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a334:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040a338:    01052503              lw    a0,16(a0)                              allGrp
2040a33c:    00000593              li    a1,0                                   allGrp
2040a340:    06b51263              bne    a0,a1,2040a3a4 <_svfiprintf_r+0xd0>   allGrp, Branch-Instr, controlFlowGrp
2040a344:    0040006f              j    2040a348 <_svfiprintf_r+0x74>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		fp->_bf._base = fp->_p = _malloc_r (data, 64);
2040a348:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040a34c:    04000593              li    a1,64                                  allGrp
2040a350:    00008097              auipc    ra,0x8                              allGrp
2040a354:    034080e7              jalr    52(ra) # 20412384 <_malloc_r>        Call-Instr, allGrp, controlFlowGrp
2040a358:    fec42583              lw    a1,-20(s0)                             Return-Tgt, allGrp
2040a35c:    00a5a023              sw    a0,0(a1)                               allGrp
2040a360:    fec42583              lw    a1,-20(s0)                             allGrp
2040a364:    00a5a823              sw    a0,16(a1)                              allGrp
		if (!fp->_p)
2040a368:    fec42503              lw    a0,-20(s0)                             allGrp
2040a36c:    00052503              lw    a0,0(a0)                               allGrp
2040a370:    00000593              li    a1,0                                   allGrp
2040a374:    02b51063              bne    a0,a1,2040a394 <_svfiprintf_r+0xc0>   allGrp, Branch-Instr, controlFlowGrp
2040a378:    0040006f              j    2040a37c <_svfiprintf_r+0xa8>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			data->_errno = ENOMEM;
2040a37c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040a380:    00c00593              li    a1,12                                  allGrp
2040a384:    00b52023              sw    a1,0(a0)                               allGrp
2040a388:    fff00513              li    a0,-1                                  allGrp
			return EOF;
2040a38c:    fea42a23              sw    a0,-12(s0)                             allGrp
2040a390:    62c0106f              j    2040b9bc <_svfiprintf_r+0x16e8>         allGrp, Branch-Instr, controlFlowGrp
		fp->_bf._size = 64;
2040a394:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040a398:    04000593              li    a1,64                                  allGrp
2040a39c:    00b52a23              sw    a1,20(a0)                              allGrp
        }
2040a3a0:    0040006f              j    2040a3a4 <_svfiprintf_r+0xd0>           allGrp, Branch-Instr, controlFlowGrp
	fmt = (char *)fmt0;
2040a3a4:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040a3a8:    fea42023              sw    a0,-32(s0)                             allGrp
2040a3ac:    f5040513              addi    a0,s0,-176                           allGrp
	uio.uio_iov = iovp = iov;
2040a3b0:    f4a42623              sw    a0,-180(s0)                            allGrp
2040a3b4:    f8a42823              sw    a0,-112(s0)                            allGrp
2040a3b8:    00000513              li    a0,0                                   allGrp
	uio.uio_resid = 0;
2040a3bc:    f8a42c23              sw    a0,-104(s0)                            allGrp
	uio.uio_iovcnt = 0;
2040a3c0:    f8a42a23              sw    a0,-108(s0)                            allGrp
	ret = 0;
2040a3c4:    fca42223              sw    a0,-60(s0)                             allGrp
	for (;;) {
2040a3c8:    0040006f              j    2040a3cc <_svfiprintf_r+0xf8>           allGrp, Branch-Instr, controlFlowGrp
	        cp = fmt;
2040a3cc:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040a3d0:    fca42823              sw    a0,-48(s0)                             allGrp
                while (*fmt != '\0' && *fmt != '%')
2040a3d4:    0040006f              j    2040a3d8 <_svfiprintf_r+0x104>          allGrp, Branch-Instr, controlFlowGrp
2040a3d8:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040a3dc:    00054503              lbu    a0,0(a0)                              allGrp
2040a3e0:    00000593              li    a1,0                                   allGrp
2040a3e4:    00058613              mv    a2,a1                                  allGrp
2040a3e8:    f0c42223              sw    a2,-252(s0)                            allGrp
2040a3ec:    02b50263              beq    a0,a1,2040a410 <_svfiprintf_r+0x13c>  allGrp, Branch-Instr, controlFlowGrp
2040a3f0:    0040006f              j    2040a3f4 <_svfiprintf_r+0x120>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a3f4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040a3f8:    00054503              lbu    a0,0(a0)                              allGrp
2040a3fc:    02500593              li    a1,37                                  allGrp
2040a400:    00b54533              xor    a0,a0,a1                              allGrp
2040a404:    00a03533              snez    a0,a0                                allGrp
2040a408:    f0a42223              sw    a0,-252(s0)                            allGrp
2040a40c:    0040006f              j    2040a410 <_svfiprintf_r+0x13c>          allGrp, Branch-Instr, controlFlowGrp
2040a410:    f0442503              lw    a0,-252(s0)                            Branch-Tgt, allGrp
2040a414:    00157513              andi    a0,a0,1                              allGrp
2040a418:    00000593              li    a1,0                                   allGrp
2040a41c:    00b50c63              beq    a0,a1,2040a434 <_svfiprintf_r+0x160>  allGrp, Branch-Instr, controlFlowGrp
2040a420:    0040006f              j    2040a424 <_svfiprintf_r+0x150>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
                    fmt += 1;
2040a424:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040a428:    00150513              addi    a0,a0,1                              allGrp
2040a42c:    fea42023              sw    a0,-32(s0)                             allGrp
                while (*fmt != '\0' && *fmt != '%')
2040a430:    fa9ff06f              j    2040a3d8 <_svfiprintf_r+0x104>          allGrp, Branch-Instr, controlFlowGrp
		if ((m = fmt - cp) != 0) {
2040a434:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040a438:    fd042583              lw    a1,-48(s0)                             allGrp
2040a43c:    40b50533              sub    a0,a0,a1                              allGrp
2040a440:    fca42a23              sw    a0,-44(s0)                             allGrp
2040a444:    00000593              li    a1,0                                   allGrp
2040a448:    08b50c63              beq    a0,a1,2040a4e0 <_svfiprintf_r+0x20c>  allGrp, Branch-Instr, controlFlowGrp
2040a44c:    0040006f              j    2040a450 <_svfiprintf_r+0x17c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PRINT (cp, m);
2040a450:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040a454:    f4c42583              lw    a1,-180(s0)                            allGrp
2040a458:    00a5a023              sw    a0,0(a1)                               allGrp
2040a45c:    fd442503              lw    a0,-44(s0)                             allGrp
2040a460:    f4c42583              lw    a1,-180(s0)                            allGrp
2040a464:    00a5a223              sw    a0,4(a1)                               allGrp
2040a468:    fd442503              lw    a0,-44(s0)                             allGrp
2040a46c:    f9842583              lw    a1,-104(s0)                            allGrp
2040a470:    00a58533              add    a0,a1,a0                              allGrp
2040a474:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040a478:    f4c42503              lw    a0,-180(s0)                            allGrp
2040a47c:    00850513              addi    a0,a0,8                              allGrp
2040a480:    f4a42623              sw    a0,-180(s0)                            allGrp
2040a484:    f9442503              lw    a0,-108(s0)                            allGrp
2040a488:    00150513              addi    a0,a0,1                              allGrp
2040a48c:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040a490:    00800593              li    a1,8                                   allGrp
2040a494:    02b54c63              blt    a0,a1,2040a4cc <_svfiprintf_r+0x1f8>  allGrp, Branch-Instr, controlFlowGrp
2040a498:    0040006f              j    2040a49c <_svfiprintf_r+0x1c8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a49c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040a4a0:    fec42583              lw    a1,-20(s0)                             allGrp
2040a4a4:    f9040613              addi    a2,s0,-112                           allGrp
2040a4a8:    00000097              auipc    ra,0x0                              allGrp
2040a4ac:    a98080e7              jalr    -1384(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
2040a4b0:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040a4b4:    00b50663              beq    a0,a1,2040a4c0 <_svfiprintf_r+0x1ec>  allGrp, Branch-Instr, controlFlowGrp
2040a4b8:    0040006f              j    2040a4bc <_svfiprintf_r+0x1e8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a4bc:    4a00106f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a4c0:    f5040513              addi    a0,s0,-176                           Branch-Tgt, allGrp
2040a4c4:    f4a42623              sw    a0,-180(s0)                            allGrp
2040a4c8:    0040006f              j    2040a4cc <_svfiprintf_r+0x1f8>          allGrp, Branch-Instr, controlFlowGrp
			ret += m;
2040a4cc:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
2040a4d0:    fc442583              lw    a1,-60(s0)                             allGrp
2040a4d4:    00a58533              add    a0,a1,a0                              allGrp
2040a4d8:    fca42223              sw    a0,-60(s0)                             allGrp
		}
2040a4dc:    0040006f              j    2040a4e0 <_svfiprintf_r+0x20c>          allGrp, Branch-Instr, controlFlowGrp
                if (*fmt == '\0')
2040a4e0:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040a4e4:    00054503              lbu    a0,0(a0)                              allGrp
2040a4e8:    00000593              li    a1,0                                   allGrp
2040a4ec:    00b51663              bne    a0,a1,2040a4f8 <_svfiprintf_r+0x224>  allGrp, Branch-Instr, controlFlowGrp
2040a4f0:    0040006f              j    2040a4f4 <_svfiprintf_r+0x220>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
                    goto done;
2040a4f4:    4200106f              j    2040b914 <_svfiprintf_r+0x1640>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		fmt_anchor = fmt;
2040a4f8:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040a4fc:    fca42423              sw    a0,-56(s0)                             allGrp
		fmt++;		/* skip over '%' */
2040a500:    fe042503              lw    a0,-32(s0)                             allGrp
2040a504:    00150513              addi    a0,a0,1                              allGrp
2040a508:    fea42023              sw    a0,-32(s0)                             allGrp
2040a50c:    00000513              li    a0,0                                   allGrp
		flags = 0;
2040a510:    fca42623              sw    a0,-52(s0)                             allGrp
		dprec = 0;
2040a514:    faa42623              sw    a0,-84(s0)                             allGrp
		width = 0;
2040a518:    fca42023              sw    a0,-64(s0)                             allGrp
2040a51c:    fff00593              li    a1,-1                                  allGrp
		prec = -1;
2040a520:    fab42e23              sw    a1,-68(s0)                             allGrp
		sign = '\0';
2040a524:    faa40da3              sb    a0,-69(s0)                             allGrp
2040a528:    0040006f              j    2040a52c <_svfiprintf_r+0x258>          allGrp, Branch-Instr, controlFlowGrp
rflag:		ch = *fmt++;
2040a52c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040a530:    00150593              addi    a1,a0,1                              allGrp
2040a534:    feb42023              sw    a1,-32(s0)                             allGrp
2040a538:    00054503              lbu    a0,0(a0)                              allGrp
2040a53c:    fca42e23              sw    a0,-36(s0)                             allGrp
2040a540:    0040006f              j    2040a544 <_svfiprintf_r+0x270>          allGrp, Branch-Instr, controlFlowGrp
reswitch:	switch (ch) {
2040a544:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040a548:    02000593              li    a1,32                                  allGrp
2040a54c:    f0a42023              sw    a0,-256(s0)                            allGrp
2040a550:    16b50e63              beq    a0,a1,2040a6cc <_svfiprintf_r+0x3f8>  allGrp, Branch-Instr, controlFlowGrp
2040a554:    0040006f              j    2040a558 <_svfiprintf_r+0x284>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a558:    02300513              li    a0,35                                  Branch-Tgt, allGrp
2040a55c:    f0042583              lw    a1,-256(s0)                            allGrp
2040a560:    18a58663              beq    a1,a0,2040a6ec <_svfiprintf_r+0x418>  allGrp, Branch-Instr, controlFlowGrp
2040a564:    0040006f              j    2040a568 <_svfiprintf_r+0x294>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a568:    02a00513              li    a0,42                                  Branch-Tgt, allGrp
2040a56c:    f0042583              lw    a1,-256(s0)                            allGrp
2040a570:    18a58663              beq    a1,a0,2040a6fc <_svfiprintf_r+0x428>  allGrp, Branch-Instr, controlFlowGrp
2040a574:    0040006f              j    2040a578 <_svfiprintf_r+0x2a4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a578:    02b00513              li    a0,43                                  Branch-Tgt, allGrp
2040a57c:    f0042583              lw    a1,-256(s0)                            allGrp
2040a580:    1ca58463              beq    a1,a0,2040a748 <_svfiprintf_r+0x474>  allGrp, Branch-Instr, controlFlowGrp
2040a584:    0040006f              j    2040a588 <_svfiprintf_r+0x2b4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a588:    02d00513              li    a0,45                                  Branch-Tgt, allGrp
2040a58c:    f0042583              lw    a1,-256(s0)                            allGrp
2040a590:    1aa58463              beq    a1,a0,2040a738 <_svfiprintf_r+0x464>  allGrp, Branch-Instr, controlFlowGrp
2040a594:    0040006f              j    2040a598 <_svfiprintf_r+0x2c4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a598:    02e00513              li    a0,46                                  Branch-Tgt, allGrp
2040a59c:    f0042583              lw    a1,-256(s0)                            allGrp
2040a5a0:    1aa58a63              beq    a1,a0,2040a754 <_svfiprintf_r+0x480>  allGrp, Branch-Instr, controlFlowGrp
2040a5a4:    0040006f              j    2040a5a8 <_svfiprintf_r+0x2d4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a5a8:    03000513              li    a0,48                                  Branch-Tgt, allGrp
2040a5ac:    f0042583              lw    a1,-256(s0)                            allGrp
2040a5b0:    28a58263              beq    a1,a0,2040a834 <_svfiprintf_r+0x560>  allGrp, Branch-Instr, controlFlowGrp
2040a5b4:    0040006f              j    2040a5b8 <_svfiprintf_r+0x2e4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a5b8:    f0042503              lw    a0,-256(s0)                            Branch-Tgt, allGrp
2040a5bc:    fcf50593              addi    a1,a0,-49                            allGrp
2040a5c0:    00900613              li    a2,9                                   allGrp
2040a5c4:    28c5e063              bltu    a1,a2,2040a844 <_svfiprintf_r+0x570> allGrp, Branch-Instr, controlFlowGrp
2040a5c8:    0040006f              j    2040a5cc <_svfiprintf_r+0x2f8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a5cc:    04400513              li    a0,68                                  Branch-Tgt, allGrp
2040a5d0:    f0042583              lw    a1,-256(s0)                            allGrp
2040a5d4:    32a58c63              beq    a1,a0,2040a90c <_svfiprintf_r+0x638>  allGrp, Branch-Instr, controlFlowGrp
2040a5d8:    0040006f              j    2040a5dc <_svfiprintf_r+0x308>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a5dc:    04f00513              li    a0,79                                  Branch-Tgt, allGrp
2040a5e0:    f0042583              lw    a1,-256(s0)                            allGrp
2040a5e4:    4aa58463              beq    a1,a0,2040aa8c <_svfiprintf_r+0x7b8>  allGrp, Branch-Instr, controlFlowGrp
2040a5e8:    0040006f              j    2040a5ec <_svfiprintf_r+0x318>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a5ec:    05500513              li    a0,85                                  Branch-Tgt, allGrp
2040a5f0:    f0042583              lw    a1,-256(s0)                            allGrp
2040a5f4:    68a58c63              beq    a1,a0,2040ac8c <_svfiprintf_r+0x9b8>  allGrp, Branch-Instr, controlFlowGrp
2040a5f8:    0040006f              j    2040a5fc <_svfiprintf_r+0x328>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a5fc:    05800513              li    a0,88                                  Branch-Tgt, allGrp
2040a600:    f0042583              lw    a1,-256(s0)                            allGrp
2040a604:    74a58c63              beq    a1,a0,2040ad5c <_svfiprintf_r+0xa88>  allGrp, Branch-Instr, controlFlowGrp
2040a608:    0040006f              j    2040a60c <_svfiprintf_r+0x338>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a60c:    06300513              li    a0,99                                  Branch-Tgt, allGrp
2040a610:    f0042583              lw    a1,-256(s0)                            allGrp
2040a614:    2ca58263              beq    a1,a0,2040a8d8 <_svfiprintf_r+0x604>  allGrp, Branch-Instr, controlFlowGrp
2040a618:    0040006f              j    2040a61c <_svfiprintf_r+0x348>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a61c:    06400513              li    a0,100                                 Branch-Tgt, allGrp
2040a620:    f0042583              lw    a1,-256(s0)                            allGrp
2040a624:    2ea58c63              beq    a1,a0,2040a91c <_svfiprintf_r+0x648>  allGrp, Branch-Instr, controlFlowGrp
2040a628:    0040006f              j    2040a62c <_svfiprintf_r+0x358>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a62c:    06800513              li    a0,104                                 Branch-Tgt, allGrp
2040a630:    f0042583              lw    a1,-256(s0)                            allGrp
2040a634:    26a58a63              beq    a1,a0,2040a8a8 <_svfiprintf_r+0x5d4>  allGrp, Branch-Instr, controlFlowGrp
2040a638:    0040006f              j    2040a63c <_svfiprintf_r+0x368>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a63c:    06900513              li    a0,105                                 Branch-Tgt, allGrp
2040a640:    f0042583              lw    a1,-256(s0)                            allGrp
2040a644:    2ca58c63              beq    a1,a0,2040a91c <_svfiprintf_r+0x648>  allGrp, Branch-Instr, controlFlowGrp
2040a648:    0040006f              j    2040a64c <_svfiprintf_r+0x378>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a64c:    06c00513              li    a0,108                                 Branch-Tgt, allGrp
2040a650:    f0042583              lw    a1,-256(s0)                            allGrp
2040a654:    26a58263              beq    a1,a0,2040a8b8 <_svfiprintf_r+0x5e4>  allGrp, Branch-Instr, controlFlowGrp
2040a658:    0040006f              j    2040a65c <_svfiprintf_r+0x388>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a65c:    06e00513              li    a0,110                                 Branch-Tgt, allGrp
2040a660:    f0042583              lw    a1,-256(s0)                            allGrp
2040a664:    3aa58263              beq    a1,a0,2040aa08 <_svfiprintf_r+0x734>  allGrp, Branch-Instr, controlFlowGrp
2040a668:    0040006f              j    2040a66c <_svfiprintf_r+0x398>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a66c:    06f00513              li    a0,111                                 Branch-Tgt, allGrp
2040a670:    f0042583              lw    a1,-256(s0)                            allGrp
2040a674:    42a58463              beq    a1,a0,2040aa9c <_svfiprintf_r+0x7c8>  allGrp, Branch-Instr, controlFlowGrp
2040a678:    0040006f              j    2040a67c <_svfiprintf_r+0x3a8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a67c:    07000513              li    a0,112                                 Branch-Tgt, allGrp
2040a680:    f0042583              lw    a1,-256(s0)                            allGrp
2040a684:    4ca58c63              beq    a1,a0,2040ab5c <_svfiprintf_r+0x888>  allGrp, Branch-Instr, controlFlowGrp
2040a688:    0040006f              j    2040a68c <_svfiprintf_r+0x3b8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a68c:    07100513              li    a0,113                                 Branch-Tgt, allGrp
2040a690:    f0042583              lw    a1,-256(s0)                            allGrp
2040a694:    22a58a63              beq    a1,a0,2040a8c8 <_svfiprintf_r+0x5f4>  allGrp, Branch-Instr, controlFlowGrp
2040a698:    0040006f              j    2040a69c <_svfiprintf_r+0x3c8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a69c:    07300513              li    a0,115                                 Branch-Tgt, allGrp
2040a6a0:    f0042583              lw    a1,-256(s0)                            allGrp
2040a6a4:    50a58263              beq    a1,a0,2040aba8 <_svfiprintf_r+0x8d4>  allGrp, Branch-Instr, controlFlowGrp
2040a6a8:    0040006f              j    2040a6ac <_svfiprintf_r+0x3d8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a6ac:    07500513              li    a0,117                                 Branch-Tgt, allGrp
2040a6b0:    f0042583              lw    a1,-256(s0)                            allGrp
2040a6b4:    5ea58463              beq    a1,a0,2040ac9c <_svfiprintf_r+0x9c8>  allGrp, Branch-Instr, controlFlowGrp
2040a6b8:    0040006f              j    2040a6bc <_svfiprintf_r+0x3e8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a6bc:    07800513              li    a0,120                                 Branch-Tgt, allGrp
2040a6c0:    f0042583              lw    a1,-256(s0)                            allGrp
2040a6c4:    6aa58463              beq    a1,a0,2040ad6c <_svfiprintf_r+0xa98>  allGrp, Branch-Instr, controlFlowGrp
2040a6c8:    2150006f              j    2040b0dc <_svfiprintf_r+0xe08>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			if (!sign)
2040a6cc:    fbb44503              lbu    a0,-69(s0)                            Branch-Tgt, allGrp
2040a6d0:    00000593              li    a1,0                                   allGrp
2040a6d4:    00b51a63              bne    a0,a1,2040a6e8 <_svfiprintf_r+0x414>  allGrp, Branch-Instr, controlFlowGrp
2040a6d8:    0040006f              j    2040a6dc <_svfiprintf_r+0x408>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				sign = ' ';
2040a6dc:    02000513              li    a0,32                                  Branch-Tgt, allGrp
2040a6e0:    faa40da3              sb    a0,-69(s0)                             allGrp
2040a6e4:    0040006f              j    2040a6e8 <_svfiprintf_r+0x414>          allGrp, Branch-Instr, controlFlowGrp
			goto rflag;
2040a6e8:    e45ff06f              j    2040a52c <_svfiprintf_r+0x258>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			flags |= ALT;
2040a6ec:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040a6f0:    00156513              ori    a0,a0,1                               allGrp
2040a6f4:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
2040a6f8:    e35ff06f              j    2040a52c <_svfiprintf_r+0x258>          allGrp, Branch-Instr, controlFlowGrp
			width = GET_ARG (n, ap, int);
2040a6fc:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040a700:    00450593              addi    a1,a0,4                              allGrp
2040a704:    feb42223              sw    a1,-28(s0)                             allGrp
2040a708:    00052503              lw    a0,0(a0)                               allGrp
2040a70c:    fca42023              sw    a0,-64(s0)                             allGrp
			if (width >= 0)
2040a710:    fc042503              lw    a0,-64(s0)                             allGrp
2040a714:    00000593              li    a1,0                                   allGrp
2040a718:    00b54663              blt    a0,a1,2040a724 <_svfiprintf_r+0x450>  allGrp, Branch-Instr, controlFlowGrp
2040a71c:    0040006f              j    2040a720 <_svfiprintf_r+0x44c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				goto rflag;
2040a720:    e0dff06f              j    2040a52c <_svfiprintf_r+0x258>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			width = -width;
2040a724:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
2040a728:    00000593              li    a1,0                                   allGrp
2040a72c:    40a58533              sub    a0,a1,a0                              allGrp
2040a730:    fca42023              sw    a0,-64(s0)                             allGrp
2040a734:    0040006f              j    2040a738 <_svfiprintf_r+0x464>          allGrp, Branch-Instr, controlFlowGrp
			flags |= LADJUST;
2040a738:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040a73c:    00456513              ori    a0,a0,4                               allGrp
2040a740:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
2040a744:    de9ff06f              j    2040a52c <_svfiprintf_r+0x258>          allGrp, Branch-Instr, controlFlowGrp
			sign = '+';
2040a748:    02b00513              li    a0,43                                  Branch-Tgt, allGrp
2040a74c:    faa40da3              sb    a0,-69(s0)                             allGrp
			goto rflag;
2040a750:    dddff06f              j    2040a52c <_svfiprintf_r+0x258>          allGrp, Branch-Instr, controlFlowGrp
			if ((ch = *fmt++) == '*') {
2040a754:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040a758:    00150593              addi    a1,a0,1                              allGrp
2040a75c:    feb42023              sw    a1,-32(s0)                             allGrp
2040a760:    00054503              lbu    a0,0(a0)                              allGrp
2040a764:    fca42e23              sw    a0,-36(s0)                             allGrp
2040a768:    02a00593              li    a1,42                                  allGrp
2040a76c:    02b51e63              bne    a0,a1,2040a7a8 <_svfiprintf_r+0x4d4>  allGrp, Branch-Instr, controlFlowGrp
2040a770:    0040006f              j    2040a774 <_svfiprintf_r+0x4a0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				prec = GET_ARG (n, ap, int);
2040a774:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040a778:    00450593              addi    a1,a0,4                              allGrp
2040a77c:    feb42223              sw    a1,-28(s0)                             allGrp
2040a780:    00052503              lw    a0,0(a0)                               allGrp
2040a784:    faa42e23              sw    a0,-68(s0)                             allGrp
				if (prec < 0)
2040a788:    fbc42503              lw    a0,-68(s0)                             allGrp
2040a78c:    fff00593              li    a1,-1                                  allGrp
2040a790:    00a5ca63              blt    a1,a0,2040a7a4 <_svfiprintf_r+0x4d0>  allGrp, Branch-Instr, controlFlowGrp
2040a794:    0040006f              j    2040a798 <_svfiprintf_r+0x4c4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					prec = -1;
2040a798:    fff00513              li    a0,-1                                  Branch-Tgt, allGrp
2040a79c:    faa42e23              sw    a0,-68(s0)                             allGrp
2040a7a0:    0040006f              j    2040a7a4 <_svfiprintf_r+0x4d0>          allGrp, Branch-Instr, controlFlowGrp
				goto rflag;
2040a7a4:    d89ff06f              j    2040a52c <_svfiprintf_r+0x258>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			n = 0;
2040a7a8:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040a7ac:    fca42c23              sw    a0,-40(s0)                             allGrp
			while (is_digit (ch)) {
2040a7b0:    0040006f              j    2040a7b4 <_svfiprintf_r+0x4e0>          allGrp, Branch-Instr, controlFlowGrp
2040a7b4:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040a7b8:    fd050513              addi    a0,a0,-48                            allGrp
2040a7bc:    00900593              li    a1,9                                   allGrp
2040a7c0:    04a5e063              bltu    a1,a0,2040a800 <_svfiprintf_r+0x52c> allGrp, Branch-Instr, controlFlowGrp
2040a7c4:    0040006f              j    2040a7c8 <_svfiprintf_r+0x4f4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				n = 10 * n + to_digit (ch);
2040a7c8:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040a7cc:    00a00593              li    a1,10                                  allGrp
2040a7d0:    00008097              auipc    ra,0x8                              allGrp
2040a7d4:    a84080e7              jalr    -1404(ra) # 20412254 <__mulsi3>      Call-Instr, allGrp, controlFlowGrp
2040a7d8:    fdc42583              lw    a1,-36(s0)                             Return-Tgt, allGrp
2040a7dc:    00b50533              add    a0,a0,a1                              allGrp
2040a7e0:    fd050513              addi    a0,a0,-48                            allGrp
2040a7e4:    fca42c23              sw    a0,-40(s0)                             allGrp
				ch = *fmt++;
2040a7e8:    fe042503              lw    a0,-32(s0)                             allGrp
2040a7ec:    00150593              addi    a1,a0,1                              allGrp
2040a7f0:    feb42023              sw    a1,-32(s0)                             allGrp
2040a7f4:    00054503              lbu    a0,0(a0)                              allGrp
2040a7f8:    fca42e23              sw    a0,-36(s0)                             allGrp
			while (is_digit (ch)) {
2040a7fc:    fb9ff06f              j    2040a7b4 <_svfiprintf_r+0x4e0>          allGrp, Branch-Instr, controlFlowGrp
			prec = n < 0 ? -1 : n;
2040a800:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040a804:    fff00593              li    a1,-1                                  allGrp
2040a808:    00a5ca63              blt    a1,a0,2040a81c <_svfiprintf_r+0x548>  allGrp, Branch-Instr, controlFlowGrp
2040a80c:    0040006f              j    2040a810 <_svfiprintf_r+0x53c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a810:    fff00513              li    a0,-1                                  Branch-Tgt, allGrp
2040a814:    eea42e23              sw    a0,-260(s0)                            allGrp
2040a818:    0100006f              j    2040a828 <_svfiprintf_r+0x554>          allGrp, Branch-Instr, controlFlowGrp
2040a81c:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040a820:    eea42e23              sw    a0,-260(s0)                            allGrp
2040a824:    0040006f              j    2040a828 <_svfiprintf_r+0x554>          allGrp, Branch-Instr, controlFlowGrp
2040a828:    efc42503              lw    a0,-260(s0)                            Branch-Tgt, allGrp
2040a82c:    faa42e23              sw    a0,-68(s0)                             allGrp
			goto reswitch;
2040a830:    d15ff06f              j    2040a544 <_svfiprintf_r+0x270>          allGrp, Branch-Instr, controlFlowGrp
			flags |= ZEROPAD;
2040a834:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040a838:    08056513              ori    a0,a0,128                             allGrp
2040a83c:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
2040a840:    cedff06f              j    2040a52c <_svfiprintf_r+0x258>          allGrp, Branch-Instr, controlFlowGrp
			n = 0;
2040a844:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040a848:    fca42c23              sw    a0,-40(s0)                             allGrp
			do {
2040a84c:    0040006f              j    2040a850 <_svfiprintf_r+0x57c>          allGrp, Branch-Instr, controlFlowGrp
				n = 10 * n + to_digit (ch);
2040a850:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040a854:    00a00593              li    a1,10                                  allGrp
2040a858:    00008097              auipc    ra,0x8                              allGrp
2040a85c:    9fc080e7              jalr    -1540(ra) # 20412254 <__mulsi3>      Call-Instr, allGrp, controlFlowGrp
2040a860:    fdc42583              lw    a1,-36(s0)                             Return-Tgt, allGrp
2040a864:    00b50533              add    a0,a0,a1                              allGrp
2040a868:    fd050513              addi    a0,a0,-48                            allGrp
2040a86c:    fca42c23              sw    a0,-40(s0)                             allGrp
				ch = *fmt++;
2040a870:    fe042503              lw    a0,-32(s0)                             allGrp
2040a874:    00150593              addi    a1,a0,1                              allGrp
2040a878:    feb42023              sw    a1,-32(s0)                             allGrp
2040a87c:    00054503              lbu    a0,0(a0)                              allGrp
2040a880:    fca42e23              sw    a0,-36(s0)                             allGrp
			} while (is_digit (ch));
2040a884:    0040006f              j    2040a888 <_svfiprintf_r+0x5b4>          allGrp, Branch-Instr, controlFlowGrp
2040a888:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040a88c:    fd050513              addi    a0,a0,-48                            allGrp
2040a890:    00a00593              li    a1,10                                  allGrp
2040a894:    fab56ee3              bltu    a0,a1,2040a850 <_svfiprintf_r+0x57c> allGrp, Branch-Instr, controlFlowGrp
2040a898:    0040006f              j    2040a89c <_svfiprintf_r+0x5c8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			width = n;
2040a89c:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040a8a0:    fca42023              sw    a0,-64(s0)                             allGrp
			goto reswitch;
2040a8a4:    ca1ff06f              j    2040a544 <_svfiprintf_r+0x270>          allGrp, Branch-Instr, controlFlowGrp
				flags |= SHORTINT;
2040a8a8:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040a8ac:    04056513              ori    a0,a0,64                              allGrp
2040a8b0:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
2040a8b4:    c79ff06f              j    2040a52c <_svfiprintf_r+0x258>          allGrp, Branch-Instr, controlFlowGrp
				flags |= LONGINT;
2040a8b8:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040a8bc:    01056513              ori    a0,a0,16                              allGrp
2040a8c0:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
2040a8c4:    c69ff06f              j    2040a52c <_svfiprintf_r+0x258>          allGrp, Branch-Instr, controlFlowGrp
			flags |= QUADINT;
2040a8c8:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040a8cc:    01056513              ori    a0,a0,16                              allGrp
2040a8d0:    fca42623              sw    a0,-52(s0)                             allGrp
			goto rflag;
2040a8d4:    c59ff06f              j    2040a52c <_svfiprintf_r+0x258>          allGrp, Branch-Instr, controlFlowGrp
			cp = buf;
2040a8d8:    f2440513              addi    a0,s0,-220                           Branch-Tgt, allGrp
2040a8dc:    fca42823              sw    a0,-48(s0)                             allGrp
				*cp = GET_ARG (N, ap, int);
2040a8e0:    fe442503              lw    a0,-28(s0)                             allGrp
2040a8e4:    00450593              addi    a1,a0,4                              allGrp
2040a8e8:    feb42223              sw    a1,-28(s0)                             allGrp
2040a8ec:    00052503              lw    a0,0(a0)                               allGrp
2040a8f0:    fd042583              lw    a1,-48(s0)                             allGrp
2040a8f4:    00a58023              sb    a0,0(a1)                               allGrp
2040a8f8:    00100513              li    a0,1                                   allGrp
				size = 1;
2040a8fc:    faa42223              sw    a0,-92(s0)                             allGrp
2040a900:    00000513              li    a0,0                                   allGrp
			sign = '\0';
2040a904:    faa40da3              sb    a0,-69(s0)                             allGrp
			break;
2040a908:    0110006f              j    2040b118 <_svfiprintf_r+0xe44>          allGrp, Branch-Instr, controlFlowGrp
			flags |= LONGINT;
2040a90c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040a910:    01056513              ori    a0,a0,16                              allGrp
2040a914:    fca42623              sw    a0,-52(s0)                             allGrp
2040a918:    0040006f              j    2040a91c <_svfiprintf_r+0x648>          allGrp, Branch-Instr, controlFlowGrp
			_uquad = SARG ();
2040a91c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040a920:    01057513              andi    a0,a0,16                             allGrp
2040a924:    00000593              li    a1,0                                   allGrp
2040a928:    02b50063              beq    a0,a1,2040a948 <_svfiprintf_r+0x674>  allGrp, Branch-Instr, controlFlowGrp
2040a92c:    0040006f              j    2040a930 <_svfiprintf_r+0x65c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a930:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040a934:    00450593              addi    a1,a0,4                              allGrp
2040a938:    feb42223              sw    a1,-28(s0)                             allGrp
2040a93c:    00052503              lw    a0,0(a0)                               allGrp
2040a940:    eea42c23              sw    a0,-264(s0)                            allGrp
2040a944:    0840006f              j    2040a9c8 <_svfiprintf_r+0x6f4>          allGrp, Branch-Instr, controlFlowGrp
2040a948:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040a94c:    04057513              andi    a0,a0,64                             allGrp
2040a950:    00000593              li    a1,0                                   allGrp
2040a954:    02b50063              beq    a0,a1,2040a974 <_svfiprintf_r+0x6a0>  allGrp, Branch-Instr, controlFlowGrp
2040a958:    0040006f              j    2040a95c <_svfiprintf_r+0x688>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a95c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040a960:    00450593              addi    a1,a0,4                              allGrp
2040a964:    feb42223              sw    a1,-28(s0)                             allGrp
2040a968:    00051503              lh    a0,0(a0)                               allGrp
2040a96c:    eea42a23              sw    a0,-268(s0)                            allGrp
2040a970:    04c0006f              j    2040a9bc <_svfiprintf_r+0x6e8>          allGrp, Branch-Instr, controlFlowGrp
2040a974:    00100513              li    a0,1                                   Branch-Tgt, allGrp
2040a978:    02051063              bnez    a0,2040a998 <_svfiprintf_r+0x6c4>    allGrp, Branch-Instr, controlFlowGrp
2040a97c:    0040006f              j    2040a980 <_svfiprintf_r+0x6ac>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040a980:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040a984:    00450593              addi    a1,a0,4                              allGrp
2040a988:    feb42223              sw    a1,-28(s0)                             allGrp
2040a98c:    00050503              lb    a0,0(a0)                               allGrp
2040a990:    eea42823              sw    a0,-272(s0)                            allGrp
2040a994:    01c0006f              j    2040a9b0 <_svfiprintf_r+0x6dc>          allGrp, Branch-Instr, controlFlowGrp
2040a998:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040a99c:    00450593              addi    a1,a0,4                              allGrp
2040a9a0:    feb42223              sw    a1,-28(s0)                             allGrp
2040a9a4:    00052503              lw    a0,0(a0)                               allGrp
2040a9a8:    eea42823              sw    a0,-272(s0)                            allGrp
2040a9ac:    0040006f              j    2040a9b0 <_svfiprintf_r+0x6dc>          allGrp, Branch-Instr, controlFlowGrp
2040a9b0:    ef042503              lw    a0,-272(s0)                            Branch-Tgt, allGrp
2040a9b4:    eea42a23              sw    a0,-268(s0)                            allGrp
2040a9b8:    0040006f              j    2040a9bc <_svfiprintf_r+0x6e8>          allGrp, Branch-Instr, controlFlowGrp
2040a9bc:    ef442503              lw    a0,-268(s0)                            Branch-Tgt, allGrp
2040a9c0:    eea42c23              sw    a0,-264(s0)                            allGrp
2040a9c4:    0040006f              j    2040a9c8 <_svfiprintf_r+0x6f4>          allGrp, Branch-Instr, controlFlowGrp
2040a9c8:    ef842503              lw    a0,-264(s0)                            Branch-Tgt, allGrp
2040a9cc:    faa42a23              sw    a0,-76(s0)                             allGrp
			if ((long) _uquad < 0)
2040a9d0:    fb442503              lw    a0,-76(s0)                             allGrp
2040a9d4:    fff00593              li    a1,-1                                  allGrp
2040a9d8:    02a5c263              blt    a1,a0,2040a9fc <_svfiprintf_r+0x728>  allGrp, Branch-Instr, controlFlowGrp
2040a9dc:    0040006f              j    2040a9e0 <_svfiprintf_r+0x70c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				_uquad = -_uquad;
2040a9e0:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
2040a9e4:    00000593              li    a1,0                                   allGrp
2040a9e8:    40a58533              sub    a0,a1,a0                              allGrp
2040a9ec:    faa42a23              sw    a0,-76(s0)                             allGrp
2040a9f0:    02d00513              li    a0,45                                  allGrp
				sign = '-';
2040a9f4:    faa40da3              sb    a0,-69(s0)                             allGrp
			}
2040a9f8:    0040006f              j    2040a9fc <_svfiprintf_r+0x728>          allGrp, Branch-Instr, controlFlowGrp
			base = DEC;
2040a9fc:    00100513              li    a0,1                                   Branch-Tgt, allGrp
2040aa00:    faa409a3              sb    a0,-77(s0)                             allGrp
			goto number;
2040aa04:    4880006f              j    2040ae8c <_svfiprintf_r+0xbb8>          allGrp, Branch-Instr, controlFlowGrp
			if (flags & LONGINT)
2040aa08:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040aa0c:    01057513              andi    a0,a0,16                             allGrp
2040aa10:    00000593              li    a1,0                                   allGrp
2040aa14:    02b50263              beq    a0,a1,2040aa38 <_svfiprintf_r+0x764>  allGrp, Branch-Instr, controlFlowGrp
2040aa18:    0040006f              j    2040aa1c <_svfiprintf_r+0x748>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				*GET_ARG (N, ap, long_ptr_t) = ret;
2040aa1c:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040aa20:    fe442583              lw    a1,-28(s0)                             allGrp
2040aa24:    00458613              addi    a2,a1,4                              allGrp
2040aa28:    fec42223              sw    a2,-28(s0)                             allGrp
2040aa2c:    0005a583              lw    a1,0(a1)                               allGrp
2040aa30:    00a5a023              sw    a0,0(a1)                               allGrp
2040aa34:    0540006f              j    2040aa88 <_svfiprintf_r+0x7b4>          allGrp, Branch-Instr, controlFlowGrp
			else if (flags & SHORTINT)
2040aa38:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040aa3c:    04057513              andi    a0,a0,64                             allGrp
2040aa40:    00000593              li    a1,0                                   allGrp
2040aa44:    02b50263              beq    a0,a1,2040aa68 <_svfiprintf_r+0x794>  allGrp, Branch-Instr, controlFlowGrp
2040aa48:    0040006f              j    2040aa4c <_svfiprintf_r+0x778>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				*GET_ARG (N, ap, short_ptr_t) = ret;
2040aa4c:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040aa50:    fe442583              lw    a1,-28(s0)                             allGrp
2040aa54:    00458613              addi    a2,a1,4                              allGrp
2040aa58:    fec42223              sw    a2,-28(s0)                             allGrp
2040aa5c:    0005a583              lw    a1,0(a1)                               allGrp
2040aa60:    00a59023              sh    a0,0(a1)                               allGrp
2040aa64:    0200006f              j    2040aa84 <_svfiprintf_r+0x7b0>          allGrp, Branch-Instr, controlFlowGrp
				*GET_ARG (N, ap, int_ptr_t) = ret;
2040aa68:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040aa6c:    fe442583              lw    a1,-28(s0)                             allGrp
2040aa70:    00458613              addi    a2,a1,4                              allGrp
2040aa74:    fec42223              sw    a2,-28(s0)                             allGrp
2040aa78:    0005a583              lw    a1,0(a1)                               allGrp
2040aa7c:    00a5a023              sw    a0,0(a1)                               allGrp
2040aa80:    0040006f              j    2040aa84 <_svfiprintf_r+0x7b0>          allGrp, Branch-Instr, controlFlowGrp
2040aa84:    0040006f              j    2040aa88 <_svfiprintf_r+0x7b4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			continue;	/* no output */
2040aa88:    945ff06f              j    2040a3cc <_svfiprintf_r+0xf8>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			flags |= LONGINT;
2040aa8c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040aa90:    01056513              ori    a0,a0,16                              allGrp
2040aa94:    fca42623              sw    a0,-52(s0)                             allGrp
2040aa98:    0040006f              j    2040aa9c <_svfiprintf_r+0x7c8>          allGrp, Branch-Instr, controlFlowGrp
			_uquad = UARG ();
2040aa9c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040aaa0:    01057513              andi    a0,a0,16                             allGrp
2040aaa4:    00000593              li    a1,0                                   allGrp
2040aaa8:    02b50063              beq    a0,a1,2040aac8 <_svfiprintf_r+0x7f4>  allGrp, Branch-Instr, controlFlowGrp
2040aaac:    0040006f              j    2040aab0 <_svfiprintf_r+0x7dc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040aab0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040aab4:    00450593              addi    a1,a0,4                              allGrp
2040aab8:    feb42223              sw    a1,-28(s0)                             allGrp
2040aabc:    00052503              lw    a0,0(a0)                               allGrp
2040aac0:    eea42623              sw    a0,-276(s0)                            allGrp
2040aac4:    0840006f              j    2040ab48 <_svfiprintf_r+0x874>          allGrp, Branch-Instr, controlFlowGrp
2040aac8:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040aacc:    04057513              andi    a0,a0,64                             allGrp
2040aad0:    00000593              li    a1,0                                   allGrp
2040aad4:    02b50063              beq    a0,a1,2040aaf4 <_svfiprintf_r+0x820>  allGrp, Branch-Instr, controlFlowGrp
2040aad8:    0040006f              j    2040aadc <_svfiprintf_r+0x808>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040aadc:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040aae0:    00450593              addi    a1,a0,4                              allGrp
2040aae4:    feb42223              sw    a1,-28(s0)                             allGrp
2040aae8:    00055503              lhu    a0,0(a0)                              allGrp
2040aaec:    eea42423              sw    a0,-280(s0)                            allGrp
2040aaf0:    04c0006f              j    2040ab3c <_svfiprintf_r+0x868>          allGrp, Branch-Instr, controlFlowGrp
2040aaf4:    00100513              li    a0,1                                   Branch-Tgt, allGrp
2040aaf8:    02051063              bnez    a0,2040ab18 <_svfiprintf_r+0x844>    allGrp, Branch-Instr, controlFlowGrp
2040aafc:    0040006f              j    2040ab00 <_svfiprintf_r+0x82c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040ab00:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040ab04:    00450593              addi    a1,a0,4                              allGrp
2040ab08:    feb42223              sw    a1,-28(s0)                             allGrp
2040ab0c:    00054503              lbu    a0,0(a0)                              allGrp
2040ab10:    eea42223              sw    a0,-284(s0)                            allGrp
2040ab14:    01c0006f              j    2040ab30 <_svfiprintf_r+0x85c>          allGrp, Branch-Instr, controlFlowGrp
2040ab18:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040ab1c:    00450593              addi    a1,a0,4                              allGrp
2040ab20:    feb42223              sw    a1,-28(s0)                             allGrp
2040ab24:    00052503              lw    a0,0(a0)                               allGrp
2040ab28:    eea42223              sw    a0,-284(s0)                            allGrp
2040ab2c:    0040006f              j    2040ab30 <_svfiprintf_r+0x85c>          allGrp, Branch-Instr, controlFlowGrp
2040ab30:    ee442503              lw    a0,-284(s0)                            Branch-Tgt, allGrp
2040ab34:    eea42423              sw    a0,-280(s0)                            allGrp
2040ab38:    0040006f              j    2040ab3c <_svfiprintf_r+0x868>          allGrp, Branch-Instr, controlFlowGrp
2040ab3c:    ee842503              lw    a0,-280(s0)                            Branch-Tgt, allGrp
2040ab40:    eea42623              sw    a0,-276(s0)                            allGrp
2040ab44:    0040006f              j    2040ab48 <_svfiprintf_r+0x874>          allGrp, Branch-Instr, controlFlowGrp
2040ab48:    eec42503              lw    a0,-276(s0)                            Branch-Tgt, allGrp
2040ab4c:    faa42a23              sw    a0,-76(s0)                             allGrp
2040ab50:    00000513              li    a0,0                                   allGrp
			base = OCT;
2040ab54:    faa409a3              sb    a0,-77(s0)                             allGrp
			goto nosign;
2040ab58:    3280006f              j    2040ae80 <_svfiprintf_r+0xbac>          allGrp, Branch-Instr, controlFlowGrp
			_uquad = (uintptr_t) GET_ARG (N, ap, void_ptr_t);
2040ab5c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040ab60:    00450593              addi    a1,a0,4                              allGrp
2040ab64:    feb42223              sw    a1,-28(s0)                             allGrp
2040ab68:    00052503              lw    a0,0(a0)                               allGrp
2040ab6c:    faa42a23              sw    a0,-76(s0)                             allGrp
2040ab70:    00200513              li    a0,2                                   allGrp
			base = HEX;
2040ab74:    faa409a3              sb    a0,-77(s0)                             allGrp
			xdigs = "0123456789abcdef";
2040ab78:    20412537              lui    a0,0x20412                            allGrp
2040ab7c:    57050513              addi    a0,a0,1392 # 20412570 <_svfprintf_r.zeroes+0x20>allGrp
2040ab80:    faa42023              sw    a0,-96(s0)                             allGrp
			flags |= HEXPREFIX;
2040ab84:    fcc42503              lw    a0,-52(s0)                             allGrp
2040ab88:    00256513              ori    a0,a0,2                               allGrp
2040ab8c:    fca42623              sw    a0,-52(s0)                             allGrp
2040ab90:    03000513              li    a0,48                                  allGrp
			ox[0] = '0';
2040ab94:    f2a40123              sb    a0,-222(s0)                            allGrp
2040ab98:    07800513              li    a0,120                                 allGrp
			ox[1] = ch = 'x';
2040ab9c:    fca42e23              sw    a0,-36(s0)                             allGrp
2040aba0:    f2a401a3              sb    a0,-221(s0)                            allGrp
			goto nosign;
2040aba4:    2dc0006f              j    2040ae80 <_svfiprintf_r+0xbac>          allGrp, Branch-Instr, controlFlowGrp
			cp = GET_ARG (N, ap, char_ptr_t);
2040aba8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040abac:    00450593              addi    a1,a0,4                              allGrp
2040abb0:    feb42223              sw    a1,-28(s0)                             allGrp
2040abb4:    00052503              lw    a0,0(a0)                               allGrp
2040abb8:    fca42823              sw    a0,-48(s0)                             allGrp
2040abbc:    00000513              li    a0,0                                   allGrp
			sign = '\0';
2040abc0:    faa40da3              sb    a0,-69(s0)                             allGrp
			if (cp == NULL) {
2040abc4:    fd042583              lw    a1,-48(s0)                             allGrp
2040abc8:    04a59463              bne    a1,a0,2040ac10 <_svfiprintf_r+0x93c>  allGrp, Branch-Instr, controlFlowGrp
2040abcc:    0040006f              j    2040abd0 <_svfiprintf_r+0x8fc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				cp = "(null)";
2040abd0:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
2040abd4:    58150513              addi    a0,a0,1409 # 20412581 <_svfprintf_r.zeroes+0x31>allGrp
2040abd8:    fca42823              sw    a0,-48(s0)                             allGrp
				size = ((unsigned) prec > 6U) ? 6 : prec;
2040abdc:    fbc42503              lw    a0,-68(s0)                             allGrp
2040abe0:    00700593              li    a1,7                                   allGrp
2040abe4:    00b56a63              bltu    a0,a1,2040abf8 <_svfiprintf_r+0x924> allGrp, Branch-Instr, controlFlowGrp
2040abe8:    0040006f              j    2040abec <_svfiprintf_r+0x918>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040abec:    00600513              li    a0,6                                   Branch-Tgt, allGrp
2040abf0:    eea42023              sw    a0,-288(s0)                            allGrp
2040abf4:    0100006f              j    2040ac04 <_svfiprintf_r+0x930>          allGrp, Branch-Instr, controlFlowGrp
2040abf8:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
2040abfc:    eea42023              sw    a0,-288(s0)                            allGrp
2040ac00:    0040006f              j    2040ac04 <_svfiprintf_r+0x930>          allGrp, Branch-Instr, controlFlowGrp
2040ac04:    ee042503              lw    a0,-288(s0)                            Branch-Tgt, allGrp
2040ac08:    faa42223              sw    a0,-92(s0)                             allGrp
			}
2040ac0c:    07c0006f              j    2040ac88 <_svfiprintf_r+0x9b4>          allGrp, Branch-Instr, controlFlowGrp
			if (prec >= 0) {
2040ac10:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
2040ac14:    00000593              li    a1,0                                   allGrp
2040ac18:    04b54c63              blt    a0,a1,2040ac70 <_svfiprintf_r+0x99c>  allGrp, Branch-Instr, controlFlowGrp
2040ac1c:    0040006f              j    2040ac20 <_svfiprintf_r+0x94c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				char *p = memchr (cp, 0, prec);
2040ac20:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040ac24:    fbc42603              lw    a2,-68(s0)                             allGrp
2040ac28:    00000593              li    a1,0                                   allGrp
2040ac2c:    ecb42e23              sw    a1,-292(s0)                            allGrp
2040ac30:    ffffd097              auipc    ra,0xffffd                          allGrp
2040ac34:    9f0080e7              jalr    -1552(ra) # 20407620 <memchr>        Call-Instr, allGrp, controlFlowGrp
2040ac38:    f0a42c23              sw    a0,-232(s0)                            Return-Tgt, allGrp
				if (p != NULL)
2040ac3c:    f1842503              lw    a0,-232(s0)                            allGrp
2040ac40:    edc42583              lw    a1,-292(s0)                            allGrp
2040ac44:    00b50e63              beq    a0,a1,2040ac60 <_svfiprintf_r+0x98c>  allGrp, Branch-Instr, controlFlowGrp
2040ac48:    0040006f              j    2040ac4c <_svfiprintf_r+0x978>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					size = p - cp;
2040ac4c:    f1842503              lw    a0,-232(s0)                            Branch-Tgt, allGrp
2040ac50:    fd042583              lw    a1,-48(s0)                             allGrp
2040ac54:    40b50533              sub    a0,a0,a1                              allGrp
2040ac58:    faa42223              sw    a0,-92(s0)                             allGrp
2040ac5c:    0100006f              j    2040ac6c <_svfiprintf_r+0x998>          allGrp, Branch-Instr, controlFlowGrp
					size = prec;
2040ac60:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
2040ac64:    faa42223              sw    a0,-92(s0)                             allGrp
2040ac68:    0040006f              j    2040ac6c <_svfiprintf_r+0x998>          allGrp, Branch-Instr, controlFlowGrp
			} else
2040ac6c:    0180006f              j    2040ac84 <_svfiprintf_r+0x9b0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				size = strlen (cp);
2040ac70:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040ac74:    fffff097              auipc    ra,0xfffff                          allGrp
2040ac78:    f40080e7              jalr    -192(ra) # 20409bb4 <strlen>         Call-Instr, allGrp, controlFlowGrp
2040ac7c:    faa42223              sw    a0,-92(s0)                             Return-Tgt, allGrp
2040ac80:    0040006f              j    2040ac84 <_svfiprintf_r+0x9b0>          allGrp, Branch-Instr, controlFlowGrp
2040ac84:    0040006f              j    2040ac88 <_svfiprintf_r+0x9b4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			break;
2040ac88:    4900006f              j    2040b118 <_svfiprintf_r+0xe44>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			flags |= LONGINT;
2040ac8c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040ac90:    01056513              ori    a0,a0,16                              allGrp
2040ac94:    fca42623              sw    a0,-52(s0)                             allGrp
2040ac98:    0040006f              j    2040ac9c <_svfiprintf_r+0x9c8>          allGrp, Branch-Instr, controlFlowGrp
			_uquad = UARG ();
2040ac9c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040aca0:    01057513              andi    a0,a0,16                             allGrp
2040aca4:    00000593              li    a1,0                                   allGrp
2040aca8:    02b50063              beq    a0,a1,2040acc8 <_svfiprintf_r+0x9f4>  allGrp, Branch-Instr, controlFlowGrp
2040acac:    0040006f              j    2040acb0 <_svfiprintf_r+0x9dc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040acb0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040acb4:    00450593              addi    a1,a0,4                              allGrp
2040acb8:    feb42223              sw    a1,-28(s0)                             allGrp
2040acbc:    00052503              lw    a0,0(a0)                               allGrp
2040acc0:    eca42c23              sw    a0,-296(s0)                            allGrp
2040acc4:    0840006f              j    2040ad48 <_svfiprintf_r+0xa74>          allGrp, Branch-Instr, controlFlowGrp
2040acc8:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040accc:    04057513              andi    a0,a0,64                             allGrp
2040acd0:    00000593              li    a1,0                                   allGrp
2040acd4:    02b50063              beq    a0,a1,2040acf4 <_svfiprintf_r+0xa20>  allGrp, Branch-Instr, controlFlowGrp
2040acd8:    0040006f              j    2040acdc <_svfiprintf_r+0xa08>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040acdc:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040ace0:    00450593              addi    a1,a0,4                              allGrp
2040ace4:    feb42223              sw    a1,-28(s0)                             allGrp
2040ace8:    00055503              lhu    a0,0(a0)                              allGrp
2040acec:    eca42a23              sw    a0,-300(s0)                            allGrp
2040acf0:    04c0006f              j    2040ad3c <_svfiprintf_r+0xa68>          allGrp, Branch-Instr, controlFlowGrp
2040acf4:    00100513              li    a0,1                                   Branch-Tgt, allGrp
2040acf8:    02051063              bnez    a0,2040ad18 <_svfiprintf_r+0xa44>    allGrp, Branch-Instr, controlFlowGrp
2040acfc:    0040006f              j    2040ad00 <_svfiprintf_r+0xa2c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040ad00:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040ad04:    00450593              addi    a1,a0,4                              allGrp
2040ad08:    feb42223              sw    a1,-28(s0)                             allGrp
2040ad0c:    00054503              lbu    a0,0(a0)                              allGrp
2040ad10:    eca42823              sw    a0,-304(s0)                            allGrp
2040ad14:    01c0006f              j    2040ad30 <_svfiprintf_r+0xa5c>          allGrp, Branch-Instr, controlFlowGrp
2040ad18:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040ad1c:    00450593              addi    a1,a0,4                              allGrp
2040ad20:    feb42223              sw    a1,-28(s0)                             allGrp
2040ad24:    00052503              lw    a0,0(a0)                               allGrp
2040ad28:    eca42823              sw    a0,-304(s0)                            allGrp
2040ad2c:    0040006f              j    2040ad30 <_svfiprintf_r+0xa5c>          allGrp, Branch-Instr, controlFlowGrp
2040ad30:    ed042503              lw    a0,-304(s0)                            Branch-Tgt, allGrp
2040ad34:    eca42a23              sw    a0,-300(s0)                            allGrp
2040ad38:    0040006f              j    2040ad3c <_svfiprintf_r+0xa68>          allGrp, Branch-Instr, controlFlowGrp
2040ad3c:    ed442503              lw    a0,-300(s0)                            Branch-Tgt, allGrp
2040ad40:    eca42c23              sw    a0,-296(s0)                            allGrp
2040ad44:    0040006f              j    2040ad48 <_svfiprintf_r+0xa74>          allGrp, Branch-Instr, controlFlowGrp
2040ad48:    ed842503              lw    a0,-296(s0)                            Branch-Tgt, allGrp
2040ad4c:    faa42a23              sw    a0,-76(s0)                             allGrp
2040ad50:    00100513              li    a0,1                                   allGrp
			base = DEC;
2040ad54:    faa409a3              sb    a0,-77(s0)                             allGrp
			goto nosign;
2040ad58:    1280006f              j    2040ae80 <_svfiprintf_r+0xbac>          allGrp, Branch-Instr, controlFlowGrp
			xdigs = "0123456789ABCDEF";
2040ad5c:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
2040ad60:    58850513              addi    a0,a0,1416 # 20412588 <_svfprintf_r.zeroes+0x38>allGrp
2040ad64:    faa42023              sw    a0,-96(s0)                             allGrp
			goto hex;
2040ad68:    0140006f              j    2040ad7c <_svfiprintf_r+0xaa8>          allGrp, Branch-Instr, controlFlowGrp
			xdigs = "0123456789abcdef";
2040ad6c:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
2040ad70:    57050513              addi    a0,a0,1392 # 20412570 <_svfprintf_r.zeroes+0x20>allGrp
2040ad74:    faa42023              sw    a0,-96(s0)                             allGrp
2040ad78:    0040006f              j    2040ad7c <_svfiprintf_r+0xaa8>          allGrp, Branch-Instr, controlFlowGrp
hex:			_uquad = UARG ();
2040ad7c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040ad80:    01057513              andi    a0,a0,16                             allGrp
2040ad84:    00000593              li    a1,0                                   allGrp
2040ad88:    02b50063              beq    a0,a1,2040ada8 <_svfiprintf_r+0xad4>  allGrp, Branch-Instr, controlFlowGrp
2040ad8c:    0040006f              j    2040ad90 <_svfiprintf_r+0xabc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040ad90:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040ad94:    00450593              addi    a1,a0,4                              allGrp
2040ad98:    feb42223              sw    a1,-28(s0)                             allGrp
2040ad9c:    00052503              lw    a0,0(a0)                               allGrp
2040ada0:    eca42623              sw    a0,-308(s0)                            allGrp
2040ada4:    0840006f              j    2040ae28 <_svfiprintf_r+0xb54>          allGrp, Branch-Instr, controlFlowGrp
2040ada8:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040adac:    04057513              andi    a0,a0,64                             allGrp
2040adb0:    00000593              li    a1,0                                   allGrp
2040adb4:    02b50063              beq    a0,a1,2040add4 <_svfiprintf_r+0xb00>  allGrp, Branch-Instr, controlFlowGrp
2040adb8:    0040006f              j    2040adbc <_svfiprintf_r+0xae8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040adbc:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040adc0:    00450593              addi    a1,a0,4                              allGrp
2040adc4:    feb42223              sw    a1,-28(s0)                             allGrp
2040adc8:    00055503              lhu    a0,0(a0)                              allGrp
2040adcc:    eca42423              sw    a0,-312(s0)                            allGrp
2040add0:    04c0006f              j    2040ae1c <_svfiprintf_r+0xb48>          allGrp, Branch-Instr, controlFlowGrp
2040add4:    00100513              li    a0,1                                   Branch-Tgt, allGrp
2040add8:    02051063              bnez    a0,2040adf8 <_svfiprintf_r+0xb24>    allGrp, Branch-Instr, controlFlowGrp
2040addc:    0040006f              j    2040ade0 <_svfiprintf_r+0xb0c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040ade0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040ade4:    00450593              addi    a1,a0,4                              allGrp
2040ade8:    feb42223              sw    a1,-28(s0)                             allGrp
2040adec:    00054503              lbu    a0,0(a0)                              allGrp
2040adf0:    eca42223              sw    a0,-316(s0)                            allGrp
2040adf4:    01c0006f              j    2040ae10 <_svfiprintf_r+0xb3c>          allGrp, Branch-Instr, controlFlowGrp
2040adf8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040adfc:    00450593              addi    a1,a0,4                              allGrp
2040ae00:    feb42223              sw    a1,-28(s0)                             allGrp
2040ae04:    00052503              lw    a0,0(a0)                               allGrp
2040ae08:    eca42223              sw    a0,-316(s0)                            allGrp
2040ae0c:    0040006f              j    2040ae10 <_svfiprintf_r+0xb3c>          allGrp, Branch-Instr, controlFlowGrp
2040ae10:    ec442503              lw    a0,-316(s0)                            Branch-Tgt, allGrp
2040ae14:    eca42423              sw    a0,-312(s0)                            allGrp
2040ae18:    0040006f              j    2040ae1c <_svfiprintf_r+0xb48>          allGrp, Branch-Instr, controlFlowGrp
2040ae1c:    ec842503              lw    a0,-312(s0)                            Branch-Tgt, allGrp
2040ae20:    eca42623              sw    a0,-308(s0)                            allGrp
2040ae24:    0040006f              j    2040ae28 <_svfiprintf_r+0xb54>          allGrp, Branch-Instr, controlFlowGrp
2040ae28:    ecc42503              lw    a0,-308(s0)                            Branch-Tgt, allGrp
2040ae2c:    faa42a23              sw    a0,-76(s0)                             allGrp
2040ae30:    00200513              li    a0,2                                   allGrp
			base = HEX;
2040ae34:    faa409a3              sb    a0,-77(s0)                             allGrp
			if (flags & ALT && _uquad != 0) {
2040ae38:    fcc42503              lw    a0,-52(s0)                             allGrp
2040ae3c:    00157513              andi    a0,a0,1                              allGrp
2040ae40:    00000593              li    a1,0                                   allGrp
2040ae44:    02b50c63              beq    a0,a1,2040ae7c <_svfiprintf_r+0xba8>  allGrp, Branch-Instr, controlFlowGrp
2040ae48:    0040006f              j    2040ae4c <_svfiprintf_r+0xb78>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040ae4c:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
2040ae50:    00000593              li    a1,0                                   allGrp
2040ae54:    02b50463              beq    a0,a1,2040ae7c <_svfiprintf_r+0xba8>  allGrp, Branch-Instr, controlFlowGrp
2040ae58:    0040006f              j    2040ae5c <_svfiprintf_r+0xb88>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				ox[0] = '0';
2040ae5c:    03000513              li    a0,48                                  Branch-Tgt, allGrp
2040ae60:    f2a40123              sb    a0,-222(s0)                            allGrp
				ox[1] = ch;
2040ae64:    fdc42503              lw    a0,-36(s0)                             allGrp
2040ae68:    f2a401a3              sb    a0,-221(s0)                            allGrp
				flags |= HEXPREFIX;
2040ae6c:    fcc42503              lw    a0,-52(s0)                             allGrp
2040ae70:    00256513              ori    a0,a0,2                               allGrp
2040ae74:    fca42623              sw    a0,-52(s0)                             allGrp
			}
2040ae78:    0040006f              j    2040ae7c <_svfiprintf_r+0xba8>          allGrp, Branch-Instr, controlFlowGrp
			if (flags & ALT && _uquad != 0) {
2040ae7c:    0040006f              j    2040ae80 <_svfiprintf_r+0xbac>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
nosign:			sign = '\0';
2040ae80:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040ae84:    faa40da3              sb    a0,-69(s0)                             allGrp
2040ae88:    0040006f              j    2040ae8c <_svfiprintf_r+0xbb8>          allGrp, Branch-Instr, controlFlowGrp
number:			if ((dprec = prec) >= 0)
2040ae8c:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
2040ae90:    faa42623              sw    a0,-84(s0)                             allGrp
2040ae94:    00000593              li    a1,0                                   allGrp
2040ae98:    00b54c63              blt    a0,a1,2040aeb0 <_svfiprintf_r+0xbdc>  allGrp, Branch-Instr, controlFlowGrp
2040ae9c:    0040006f              j    2040aea0 <_svfiprintf_r+0xbcc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				flags &= ~ZEROPAD;
2040aea0:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040aea4:    f7f57513              andi    a0,a0,-129                           allGrp
2040aea8:    fca42623              sw    a0,-52(s0)                             allGrp
2040aeac:    0040006f              j    2040aeb0 <_svfiprintf_r+0xbdc>          allGrp, Branch-Instr, controlFlowGrp
			cp = buf + BUF;
2040aeb0:    f4c40513              addi    a0,s0,-180                           Branch-Tgt, allGrp
2040aeb4:    fca42823              sw    a0,-48(s0)                             allGrp
			if (_uquad != 0 || prec != 0) {
2040aeb8:    fb442503              lw    a0,-76(s0)                             allGrp
2040aebc:    00000593              li    a1,0                                   allGrp
2040aec0:    00b51c63              bne    a0,a1,2040aed8 <_svfiprintf_r+0xc04>  allGrp, Branch-Instr, controlFlowGrp
2040aec4:    0040006f              j    2040aec8 <_svfiprintf_r+0xbf4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040aec8:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
2040aecc:    00000593              li    a1,0                                   allGrp
2040aed0:    1ab50a63              beq    a0,a1,2040b084 <_svfiprintf_r+0xdb0>  allGrp, Branch-Instr, controlFlowGrp
2040aed4:    0040006f              j    2040aed8 <_svfiprintf_r+0xc04>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				switch (base) {
2040aed8:    fb344503              lbu    a0,-77(s0)                            Branch-Tgt, allGrp
2040aedc:    00000593              li    a1,0                                   allGrp
2040aee0:    eca42023              sw    a0,-320(s0)                            allGrp
2040aee4:    02b50463              beq    a0,a1,2040af0c <_svfiprintf_r+0xc38>  allGrp, Branch-Instr, controlFlowGrp
2040aee8:    0040006f              j    2040aeec <_svfiprintf_r+0xc18>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040aeec:    00100513              li    a0,1                                   Branch-Tgt, allGrp
2040aef0:    ec042583              lw    a1,-320(s0)                            allGrp
2040aef4:    08a58e63              beq    a1,a0,2040af90 <_svfiprintf_r+0xcbc>  allGrp, Branch-Instr, controlFlowGrp
2040aef8:    0040006f              j    2040aefc <_svfiprintf_r+0xc28>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040aefc:    00200513              li    a0,2                                   Branch-Tgt, allGrp
2040af00:    ec042583              lw    a1,-320(s0)                            allGrp
2040af04:    10a58863              beq    a1,a0,2040b014 <_svfiprintf_r+0xd40>  allGrp, Branch-Instr, controlFlowGrp
2040af08:    1580006f              j    2040b060 <_svfiprintf_r+0xd8c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					do {
2040af0c:    0040006f              j    2040af10 <_svfiprintf_r+0xc3c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						*--cp = to_char (_uquad & 7);
2040af10:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
2040af14:    00757513              andi    a0,a0,7                              allGrp
2040af18:    03056513              ori    a0,a0,48                              allGrp
2040af1c:    fd042583              lw    a1,-48(s0)                             allGrp
2040af20:    fff58613              addi    a2,a1,-1                             allGrp
2040af24:    fcc42823              sw    a2,-48(s0)                             allGrp
2040af28:    fea58fa3              sb    a0,-1(a1)                              allGrp
						_uquad >>= 3;
2040af2c:    fb442503              lw    a0,-76(s0)                             allGrp
2040af30:    00355513              srli    a0,a0,0x3                            allGrp
2040af34:    faa42a23              sw    a0,-76(s0)                             allGrp
					} while (_uquad);
2040af38:    0040006f              j    2040af3c <_svfiprintf_r+0xc68>          allGrp, Branch-Instr, controlFlowGrp
2040af3c:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
2040af40:    00000593              li    a1,0                                   allGrp
2040af44:    fcb516e3              bne    a0,a1,2040af10 <_svfiprintf_r+0xc3c>  allGrp, Branch-Instr, controlFlowGrp
2040af48:    0040006f              j    2040af4c <_svfiprintf_r+0xc78>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					if (flags & ALT && *cp != '0')
2040af4c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040af50:    00157513              andi    a0,a0,1                              allGrp
2040af54:    00000593              li    a1,0                                   allGrp
2040af58:    02b50a63              beq    a0,a1,2040af8c <_svfiprintf_r+0xcb8>  allGrp, Branch-Instr, controlFlowGrp
2040af5c:    0040006f              j    2040af60 <_svfiprintf_r+0xc8c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040af60:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040af64:    00054503              lbu    a0,0(a0)                              allGrp
2040af68:    03000593              li    a1,48                                  allGrp
2040af6c:    02b50063              beq    a0,a1,2040af8c <_svfiprintf_r+0xcb8>  allGrp, Branch-Instr, controlFlowGrp
2040af70:    0040006f              j    2040af74 <_svfiprintf_r+0xca0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						*--cp = '0';
2040af74:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040af78:    fff50593              addi    a1,a0,-1                             allGrp
2040af7c:    fcb42823              sw    a1,-48(s0)                             allGrp
2040af80:    03000593              li    a1,48                                  allGrp
2040af84:    feb50fa3              sb    a1,-1(a0)                              allGrp
2040af88:    0040006f              j    2040af8c <_svfiprintf_r+0xcb8>          allGrp, Branch-Instr, controlFlowGrp
					break;
2040af8c:    0f40006f              j    2040b080 <_svfiprintf_r+0xdac>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					if (_uquad < 10) {
2040af90:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
2040af94:    00900593              li    a1,9                                   allGrp
2040af98:    02a5e263              bltu    a1,a0,2040afbc <_svfiprintf_r+0xce8> allGrp, Branch-Instr, controlFlowGrp
2040af9c:    0040006f              j    2040afa0 <_svfiprintf_r+0xccc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						*--cp = to_char(_uquad);
2040afa0:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
2040afa4:    03050513              addi    a0,a0,48                             allGrp
2040afa8:    fd042583              lw    a1,-48(s0)                             allGrp
2040afac:    fff58613              addi    a2,a1,-1                             allGrp
2040afb0:    fcc42823              sw    a2,-48(s0)                             allGrp
2040afb4:    fea58fa3              sb    a0,-1(a1)                              allGrp
						break;
2040afb8:    0c80006f              j    2040b080 <_svfiprintf_r+0xdac>          allGrp, Branch-Instr, controlFlowGrp
					do {
2040afbc:    0040006f              j    2040afc0 <_svfiprintf_r+0xcec>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					  *--cp = to_char (_uquad % 10);
2040afc0:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
2040afc4:    00a00593              li    a1,10                                  allGrp
2040afc8:    eab42e23              sw    a1,-324(s0)                            allGrp
2040afcc:    00007097              auipc    ra,0x7                              allGrp
2040afd0:    2fc080e7              jalr    764(ra) # 204122c8 <__umodsi3>       Call-Instr, allGrp, controlFlowGrp
2040afd4:    03056513              ori    a0,a0,48                              Return-Tgt, allGrp
2040afd8:    fd042583              lw    a1,-48(s0)                             allGrp
2040afdc:    fff58613              addi    a2,a1,-1                             allGrp
2040afe0:    fcc42823              sw    a2,-48(s0)                             allGrp
2040afe4:    fea58fa3              sb    a0,-1(a1)                              allGrp
					  _uquad /= 10;
2040afe8:    fb442503              lw    a0,-76(s0)                             allGrp
2040afec:    ebc42583              lw    a1,-324(s0)                            allGrp
2040aff0:    00007097              auipc    ra,0x7                              allGrp
2040aff4:    290080e7              jalr    656(ra) # 20412280 <__udivsi3>       Call-Instr, allGrp, controlFlowGrp
2040aff8:    faa42a23              sw    a0,-76(s0)                             Return-Tgt, allGrp
					} while (_uquad != 0);
2040affc:    0040006f              j    2040b000 <_svfiprintf_r+0xd2c>          allGrp, Branch-Instr, controlFlowGrp
2040b000:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
2040b004:    00000593              li    a1,0                                   allGrp
2040b008:    fab51ce3              bne    a0,a1,2040afc0 <_svfiprintf_r+0xcec>  allGrp, Branch-Instr, controlFlowGrp
2040b00c:    0040006f              j    2040b010 <_svfiprintf_r+0xd3c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					break;
2040b010:    0700006f              j    2040b080 <_svfiprintf_r+0xdac>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					do {
2040b014:    0040006f              j    2040b018 <_svfiprintf_r+0xd44>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
						*--cp = xdigs[_uquad & 15];
2040b018:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
2040b01c:    fb442583              lw    a1,-76(s0)                             allGrp
2040b020:    00f5f593              andi    a1,a1,15                             allGrp
2040b024:    00b50533              add    a0,a0,a1                              allGrp
2040b028:    00050503              lb    a0,0(a0)                               allGrp
2040b02c:    fd042583              lw    a1,-48(s0)                             allGrp
2040b030:    fff58613              addi    a2,a1,-1                             allGrp
2040b034:    fcc42823              sw    a2,-48(s0)                             allGrp
2040b038:    fea58fa3              sb    a0,-1(a1)                              allGrp
						_uquad >>= 4;
2040b03c:    fb442503              lw    a0,-76(s0)                             allGrp
2040b040:    00455513              srli    a0,a0,0x4                            allGrp
2040b044:    faa42a23              sw    a0,-76(s0)                             allGrp
					} while (_uquad);
2040b048:    0040006f              j    2040b04c <_svfiprintf_r+0xd78>          allGrp, Branch-Instr, controlFlowGrp
2040b04c:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
2040b050:    00000593              li    a1,0                                   allGrp
2040b054:    fcb512e3              bne    a0,a1,2040b018 <_svfiprintf_r+0xd44>  allGrp, Branch-Instr, controlFlowGrp
2040b058:    0040006f              j    2040b05c <_svfiprintf_r+0xd88>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					break;
2040b05c:    0240006f              j    2040b080 <_svfiprintf_r+0xdac>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
					cp = "bug in vfprintf: bad base";
2040b060:    20412537              lui    a0,0x20412                            Branch-Tgt, allGrp
2040b064:    59950513              addi    a0,a0,1433 # 20412599 <_svfprintf_r.zeroes+0x49>allGrp
2040b068:    fca42823              sw    a0,-48(s0)                             allGrp
					size = strlen (cp);
2040b06c:    fd042503              lw    a0,-48(s0)                             allGrp
2040b070:    fffff097              auipc    ra,0xfffff                          allGrp
2040b074:    b44080e7              jalr    -1212(ra) # 20409bb4 <strlen>        Call-Instr, allGrp, controlFlowGrp
2040b078:    faa42223              sw    a0,-92(s0)                             Return-Tgt, allGrp
					goto skipsize;
2040b07c:    05c0006f              j    2040b0d8 <_svfiprintf_r+0xe04>          allGrp, Branch-Instr, controlFlowGrp
			}
2040b080:    0440006f              j    2040b0c4 <_svfiprintf_r+0xdf0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
                       else if (base == OCT && (flags & ALT))
2040b084:    fb344503              lbu    a0,-77(s0)                            Branch-Tgt, allGrp
2040b088:    00000593              li    a1,0                                   allGrp
2040b08c:    02b51a63              bne    a0,a1,2040b0c0 <_svfiprintf_r+0xdec>  allGrp, Branch-Instr, controlFlowGrp
2040b090:    0040006f              j    2040b094 <_svfiprintf_r+0xdc0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b094:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040b098:    00157513              andi    a0,a0,1                              allGrp
2040b09c:    00000593              li    a1,0                                   allGrp
2040b0a0:    02b50063              beq    a0,a1,2040b0c0 <_svfiprintf_r+0xdec>  allGrp, Branch-Instr, controlFlowGrp
2040b0a4:    0040006f              j    2040b0a8 <_svfiprintf_r+0xdd4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
                         *--cp = '0';
2040b0a8:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040b0ac:    fff50593              addi    a1,a0,-1                             allGrp
2040b0b0:    fcb42823              sw    a1,-48(s0)                             allGrp
2040b0b4:    03000593              li    a1,48                                  allGrp
2040b0b8:    feb50fa3              sb    a1,-1(a0)                              allGrp
2040b0bc:    0040006f              j    2040b0c0 <_svfiprintf_r+0xdec>          allGrp, Branch-Instr, controlFlowGrp
2040b0c0:    0040006f              j    2040b0c4 <_svfiprintf_r+0xdf0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			size = buf + BUF - cp;
2040b0c4:    f4c40513              addi    a0,s0,-180                           Branch-Tgt, allGrp
2040b0c8:    fd042583              lw    a1,-48(s0)                             allGrp
2040b0cc:    40b50533              sub    a0,a0,a1                              allGrp
2040b0d0:    faa42223              sw    a0,-92(s0)                             allGrp
2040b0d4:    0040006f              j    2040b0d8 <_svfiprintf_r+0xe04>          allGrp, Branch-Instr, controlFlowGrp
			break;
2040b0d8:    0400006f              j    2040b118 <_svfiprintf_r+0xe44>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			if (ch == '\0')
2040b0dc:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040b0e0:    00000593              li    a1,0                                   allGrp
2040b0e4:    00b51663              bne    a0,a1,2040b0f0 <_svfiprintf_r+0xe1c>  allGrp, Branch-Instr, controlFlowGrp
2040b0e8:    0040006f              j    2040b0ec <_svfiprintf_r+0xe18>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
				goto done;
2040b0ec:    0290006f              j    2040b914 <_svfiprintf_r+0x1640>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			cp = buf;
2040b0f0:    f2440513              addi    a0,s0,-220                           Branch-Tgt, allGrp
2040b0f4:    fca42823              sw    a0,-48(s0)                             allGrp
			*cp = ch;
2040b0f8:    fdc42503              lw    a0,-36(s0)                             allGrp
2040b0fc:    fd042583              lw    a1,-48(s0)                             allGrp
2040b100:    00a58023              sb    a0,0(a1)                               allGrp
2040b104:    00100513              li    a0,1                                   allGrp
			size = 1;
2040b108:    faa42223              sw    a0,-92(s0)                             allGrp
2040b10c:    00000513              li    a0,0                                   allGrp
			sign = '\0';
2040b110:    faa40da3              sb    a0,-69(s0)                             allGrp
			break;
2040b114:    0040006f              j    2040b118 <_svfiprintf_r+0xe44>          allGrp, Branch-Instr, controlFlowGrp
		realsz = dprec > size ? dprec : size;
2040b118:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
2040b11c:    fa442583              lw    a1,-92(s0)                             allGrp
2040b120:    00a5da63              ble    a0,a1,2040b134 <_svfiprintf_r+0xe60>  allGrp, Branch-Instr, controlFlowGrp
2040b124:    0040006f              j    2040b128 <_svfiprintf_r+0xe54>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b128:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
2040b12c:    eaa42c23              sw    a0,-328(s0)                            allGrp
2040b130:    0100006f              j    2040b140 <_svfiprintf_r+0xe6c>          allGrp, Branch-Instr, controlFlowGrp
2040b134:    fa442503              lw    a0,-92(s0)                             Branch-Tgt, allGrp
2040b138:    eaa42c23              sw    a0,-328(s0)                            allGrp
2040b13c:    0040006f              j    2040b140 <_svfiprintf_r+0xe6c>          allGrp, Branch-Instr, controlFlowGrp
2040b140:    eb842503              lw    a0,-328(s0)                            Branch-Tgt, allGrp
2040b144:    faa42423              sw    a0,-88(s0)                             allGrp
		if (sign)
2040b148:    fbb44503              lbu    a0,-69(s0)                            allGrp
2040b14c:    00000593              li    a1,0                                   allGrp
2040b150:    00b50c63              beq    a0,a1,2040b168 <_svfiprintf_r+0xe94>  allGrp, Branch-Instr, controlFlowGrp
2040b154:    0040006f              j    2040b158 <_svfiprintf_r+0xe84>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			realsz++;
2040b158:    fa842503              lw    a0,-88(s0)                             Branch-Tgt, allGrp
2040b15c:    00150513              addi    a0,a0,1                              allGrp
2040b160:    faa42423              sw    a0,-88(s0)                             allGrp
2040b164:    0040006f              j    2040b168 <_svfiprintf_r+0xe94>          allGrp, Branch-Instr, controlFlowGrp
		if (flags & HEXPREFIX)
2040b168:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040b16c:    00257513              andi    a0,a0,2                              allGrp
2040b170:    00000593              li    a1,0                                   allGrp
2040b174:    00b50c63              beq    a0,a1,2040b18c <_svfiprintf_r+0xeb8>  allGrp, Branch-Instr, controlFlowGrp
2040b178:    0040006f              j    2040b17c <_svfiprintf_r+0xea8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			realsz+= 2;
2040b17c:    fa842503              lw    a0,-88(s0)                             Branch-Tgt, allGrp
2040b180:    00250513              addi    a0,a0,2                              allGrp
2040b184:    faa42423              sw    a0,-88(s0)                             allGrp
2040b188:    0040006f              j    2040b18c <_svfiprintf_r+0xeb8>          allGrp, Branch-Instr, controlFlowGrp
		if ((flags & (LADJUST|ZEROPAD)) == 0)
2040b18c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040b190:    08457513              andi    a0,a0,132                            allGrp
2040b194:    00000593              li    a1,0                                   allGrp
2040b198:    14b51663              bne    a0,a1,2040b2e4 <_svfiprintf_r+0x1010> allGrp, Branch-Instr, controlFlowGrp
2040b19c:    0040006f              j    2040b1a0 <_svfiprintf_r+0xecc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PAD (width - realsz, blanks);
2040b1a0:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
2040b1a4:    fa842583              lw    a1,-88(s0)                             allGrp
2040b1a8:    40b50533              sub    a0,a0,a1                              allGrp
2040b1ac:    fca42c23              sw    a0,-40(s0)                             allGrp
2040b1b0:    00100593              li    a1,1                                   allGrp
2040b1b4:    12b54663              blt    a0,a1,2040b2e0 <_svfiprintf_r+0x100c> allGrp, Branch-Instr, controlFlowGrp
2040b1b8:    0040006f              j    2040b1bc <_svfiprintf_r+0xee8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b1bc:    0040006f              j    2040b1c0 <_svfiprintf_r+0xeec>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b1c0:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040b1c4:    01100593              li    a1,17                                  allGrp
2040b1c8:    08b54a63              blt    a0,a1,2040b25c <_svfiprintf_r+0xf88>  allGrp, Branch-Instr, controlFlowGrp
2040b1cc:    0040006f              j    2040b1d0 <_svfiprintf_r+0xefc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b1d0:    f4c42503              lw    a0,-180(s0)                            Branch-Tgt, allGrp
2040b1d4:    204125b7              lui    a1,0x20412                            allGrp
2040b1d8:    6f858593              addi    a1,a1,1784 # 204126f8 <_svfiprintf_r.blanks>allGrp
2040b1dc:    00b52023              sw    a1,0(a0)                               allGrp
2040b1e0:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b1e4:    01000593              li    a1,16                                  allGrp
2040b1e8:    00b52223              sw    a1,4(a0)                               allGrp
2040b1ec:    f9842503              lw    a0,-104(s0)                            allGrp
2040b1f0:    01050513              addi    a0,a0,16                             allGrp
2040b1f4:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040b1f8:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b1fc:    00850513              addi    a0,a0,8                              allGrp
2040b200:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b204:    f9442503              lw    a0,-108(s0)                            allGrp
2040b208:    00150513              addi    a0,a0,1                              allGrp
2040b20c:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b210:    00800593              li    a1,8                                   allGrp
2040b214:    02b54c63              blt    a0,a1,2040b24c <_svfiprintf_r+0xf78>  allGrp, Branch-Instr, controlFlowGrp
2040b218:    0040006f              j    2040b21c <_svfiprintf_r+0xf48>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b21c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b220:    fec42583              lw    a1,-20(s0)                             allGrp
2040b224:    f9040613              addi    a2,s0,-112                           allGrp
2040b228:    fffff097              auipc    ra,0xfffff                          allGrp
2040b22c:    d18080e7              jalr    -744(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
2040b230:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b234:    00b50663              beq    a0,a1,2040b240 <_svfiprintf_r+0xf6c>  allGrp, Branch-Instr, controlFlowGrp
2040b238:    0040006f              j    2040b23c <_svfiprintf_r+0xf68>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b23c:    7200006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b240:    f5040513              addi    a0,s0,-176                           Branch-Tgt, allGrp
2040b244:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b248:    0040006f              j    2040b24c <_svfiprintf_r+0xf78>          allGrp, Branch-Instr, controlFlowGrp
2040b24c:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040b250:    ff050513              addi    a0,a0,-16                            allGrp
2040b254:    fca42c23              sw    a0,-40(s0)                             allGrp
2040b258:    f69ff06f              j    2040b1c0 <_svfiprintf_r+0xeec>          allGrp, Branch-Instr, controlFlowGrp
2040b25c:    f4c42503              lw    a0,-180(s0)                            Branch-Tgt, allGrp
2040b260:    204125b7              lui    a1,0x20412                            allGrp
2040b264:    6f858593              addi    a1,a1,1784 # 204126f8 <_svfiprintf_r.blanks>allGrp
2040b268:    00b52023              sw    a1,0(a0)                               allGrp
2040b26c:    fd842503              lw    a0,-40(s0)                             allGrp
2040b270:    f4c42583              lw    a1,-180(s0)                            allGrp
2040b274:    00a5a223              sw    a0,4(a1)                               allGrp
2040b278:    fd842503              lw    a0,-40(s0)                             allGrp
2040b27c:    f9842583              lw    a1,-104(s0)                            allGrp
2040b280:    00a58533              add    a0,a1,a0                              allGrp
2040b284:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040b288:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b28c:    00850513              addi    a0,a0,8                              allGrp
2040b290:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b294:    f9442503              lw    a0,-108(s0)                            allGrp
2040b298:    00150513              addi    a0,a0,1                              allGrp
2040b29c:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b2a0:    00800593              li    a1,8                                   allGrp
2040b2a4:    02b54c63              blt    a0,a1,2040b2dc <_svfiprintf_r+0x1008> allGrp, Branch-Instr, controlFlowGrp
2040b2a8:    0040006f              j    2040b2ac <_svfiprintf_r+0xfd8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b2ac:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b2b0:    fec42583              lw    a1,-20(s0)                             allGrp
2040b2b4:    f9040613              addi    a2,s0,-112                           allGrp
2040b2b8:    fffff097              auipc    ra,0xfffff                          allGrp
2040b2bc:    c88080e7              jalr    -888(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
2040b2c0:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b2c4:    00b50663              beq    a0,a1,2040b2d0 <_svfiprintf_r+0xffc>  allGrp, Branch-Instr, controlFlowGrp
2040b2c8:    0040006f              j    2040b2cc <_svfiprintf_r+0xff8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b2cc:    6900006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b2d0:    f5040513              addi    a0,s0,-176                           Branch-Tgt, allGrp
2040b2d4:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b2d8:    0040006f              j    2040b2dc <_svfiprintf_r+0x1008>         allGrp, Branch-Instr, controlFlowGrp
2040b2dc:    0040006f              j    2040b2e0 <_svfiprintf_r+0x100c>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b2e0:    0040006f              j    2040b2e4 <_svfiprintf_r+0x1010>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		if (sign)
2040b2e4:    fbb44503              lbu    a0,-69(s0)                            Branch-Tgt, allGrp
2040b2e8:    00000593              li    a1,0                                   allGrp
2040b2ec:    08b50263              beq    a0,a1,2040b370 <_svfiprintf_r+0x109c> allGrp, Branch-Instr, controlFlowGrp
2040b2f0:    0040006f              j    2040b2f4 <_svfiprintf_r+0x1020>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PRINT (&sign, 1);
2040b2f4:    f4c42503              lw    a0,-180(s0)                            Branch-Tgt, allGrp
2040b2f8:    fbb40593              addi    a1,s0,-69                            allGrp
2040b2fc:    00b52023              sw    a1,0(a0)                               allGrp
2040b300:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b304:    00100593              li    a1,1                                   allGrp
2040b308:    00b52223              sw    a1,4(a0)                               allGrp
2040b30c:    f9842503              lw    a0,-104(s0)                            allGrp
2040b310:    00150513              addi    a0,a0,1                              allGrp
2040b314:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040b318:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b31c:    00850513              addi    a0,a0,8                              allGrp
2040b320:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b324:    f9442503              lw    a0,-108(s0)                            allGrp
2040b328:    00150513              addi    a0,a0,1                              allGrp
2040b32c:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b330:    00800593              li    a1,8                                   allGrp
2040b334:    02b54c63              blt    a0,a1,2040b36c <_svfiprintf_r+0x1098> allGrp, Branch-Instr, controlFlowGrp
2040b338:    0040006f              j    2040b33c <_svfiprintf_r+0x1068>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b33c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b340:    fec42583              lw    a1,-20(s0)                             allGrp
2040b344:    f9040613              addi    a2,s0,-112                           allGrp
2040b348:    fffff097              auipc    ra,0xfffff                          allGrp
2040b34c:    bf8080e7              jalr    -1032(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
2040b350:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b354:    00b50663              beq    a0,a1,2040b360 <_svfiprintf_r+0x108c> allGrp, Branch-Instr, controlFlowGrp
2040b358:    0040006f              j    2040b35c <_svfiprintf_r+0x1088>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b35c:    6000006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b360:    f5040513              addi    a0,s0,-176                           Branch-Tgt, allGrp
2040b364:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b368:    0040006f              j    2040b36c <_svfiprintf_r+0x1098>         allGrp, Branch-Instr, controlFlowGrp
2040b36c:    0040006f              j    2040b370 <_svfiprintf_r+0x109c>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		if (flags & HEXPREFIX)
2040b370:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040b374:    00257513              andi    a0,a0,2                              allGrp
2040b378:    00000593              li    a1,0                                   allGrp
2040b37c:    08b50263              beq    a0,a1,2040b400 <_svfiprintf_r+0x112c> allGrp, Branch-Instr, controlFlowGrp
2040b380:    0040006f              j    2040b384 <_svfiprintf_r+0x10b0>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PRINT (ox, 2);
2040b384:    f4c42503              lw    a0,-180(s0)                            Branch-Tgt, allGrp
2040b388:    f2240593              addi    a1,s0,-222                           allGrp
2040b38c:    00b52023              sw    a1,0(a0)                               allGrp
2040b390:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b394:    00200593              li    a1,2                                   allGrp
2040b398:    00b52223              sw    a1,4(a0)                               allGrp
2040b39c:    f9842503              lw    a0,-104(s0)                            allGrp
2040b3a0:    00250513              addi    a0,a0,2                              allGrp
2040b3a4:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040b3a8:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b3ac:    00850513              addi    a0,a0,8                              allGrp
2040b3b0:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b3b4:    f9442503              lw    a0,-108(s0)                            allGrp
2040b3b8:    00150513              addi    a0,a0,1                              allGrp
2040b3bc:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b3c0:    00800593              li    a1,8                                   allGrp
2040b3c4:    02b54c63              blt    a0,a1,2040b3fc <_svfiprintf_r+0x1128> allGrp, Branch-Instr, controlFlowGrp
2040b3c8:    0040006f              j    2040b3cc <_svfiprintf_r+0x10f8>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b3cc:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b3d0:    fec42583              lw    a1,-20(s0)                             allGrp
2040b3d4:    f9040613              addi    a2,s0,-112                           allGrp
2040b3d8:    fffff097              auipc    ra,0xfffff                          allGrp
2040b3dc:    b68080e7              jalr    -1176(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
2040b3e0:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b3e4:    00b50663              beq    a0,a1,2040b3f0 <_svfiprintf_r+0x111c> allGrp, Branch-Instr, controlFlowGrp
2040b3e8:    0040006f              j    2040b3ec <_svfiprintf_r+0x1118>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b3ec:    5700006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b3f0:    f5040513              addi    a0,s0,-176                           Branch-Tgt, allGrp
2040b3f4:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b3f8:    0040006f              j    2040b3fc <_svfiprintf_r+0x1128>         allGrp, Branch-Instr, controlFlowGrp
2040b3fc:    0040006f              j    2040b400 <_svfiprintf_r+0x112c>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		if ((flags & (LADJUST|ZEROPAD)) == ZEROPAD)
2040b400:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040b404:    08457513              andi    a0,a0,132                            allGrp
2040b408:    08000593              li    a1,128                                 allGrp
2040b40c:    14b51663              bne    a0,a1,2040b558 <_svfiprintf_r+0x1284> allGrp, Branch-Instr, controlFlowGrp
2040b410:    0040006f              j    2040b414 <_svfiprintf_r+0x1140>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PAD (width - realsz, zeroes);
2040b414:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
2040b418:    fa842583              lw    a1,-88(s0)                             allGrp
2040b41c:    40b50533              sub    a0,a0,a1                              allGrp
2040b420:    fca42c23              sw    a0,-40(s0)                             allGrp
2040b424:    00100593              li    a1,1                                   allGrp
2040b428:    12b54663              blt    a0,a1,2040b554 <_svfiprintf_r+0x1280> allGrp, Branch-Instr, controlFlowGrp
2040b42c:    0040006f              j    2040b430 <_svfiprintf_r+0x115c>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b430:    0040006f              j    2040b434 <_svfiprintf_r+0x1160>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b434:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040b438:    01100593              li    a1,17                                  allGrp
2040b43c:    08b54a63              blt    a0,a1,2040b4d0 <_svfiprintf_r+0x11fc> allGrp, Branch-Instr, controlFlowGrp
2040b440:    0040006f              j    2040b444 <_svfiprintf_r+0x1170>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b444:    f4c42503              lw    a0,-180(s0)                            Branch-Tgt, allGrp
2040b448:    204125b7              lui    a1,0x20412                            allGrp
2040b44c:    70858593              addi    a1,a1,1800 # 20412708 <_svfiprintf_r.zeroes>allGrp
2040b450:    00b52023              sw    a1,0(a0)                               allGrp
2040b454:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b458:    01000593              li    a1,16                                  allGrp
2040b45c:    00b52223              sw    a1,4(a0)                               allGrp
2040b460:    f9842503              lw    a0,-104(s0)                            allGrp
2040b464:    01050513              addi    a0,a0,16                             allGrp
2040b468:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040b46c:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b470:    00850513              addi    a0,a0,8                              allGrp
2040b474:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b478:    f9442503              lw    a0,-108(s0)                            allGrp
2040b47c:    00150513              addi    a0,a0,1                              allGrp
2040b480:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b484:    00800593              li    a1,8                                   allGrp
2040b488:    02b54c63              blt    a0,a1,2040b4c0 <_svfiprintf_r+0x11ec> allGrp, Branch-Instr, controlFlowGrp
2040b48c:    0040006f              j    2040b490 <_svfiprintf_r+0x11bc>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b490:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b494:    fec42583              lw    a1,-20(s0)                             allGrp
2040b498:    f9040613              addi    a2,s0,-112                           allGrp
2040b49c:    fffff097              auipc    ra,0xfffff                          allGrp
2040b4a0:    aa4080e7              jalr    -1372(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
2040b4a4:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b4a8:    00b50663              beq    a0,a1,2040b4b4 <_svfiprintf_r+0x11e0> allGrp, Branch-Instr, controlFlowGrp
2040b4ac:    0040006f              j    2040b4b0 <_svfiprintf_r+0x11dc>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b4b0:    4ac0006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b4b4:    f5040513              addi    a0,s0,-176                           Branch-Tgt, allGrp
2040b4b8:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b4bc:    0040006f              j    2040b4c0 <_svfiprintf_r+0x11ec>         allGrp, Branch-Instr, controlFlowGrp
2040b4c0:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040b4c4:    ff050513              addi    a0,a0,-16                            allGrp
2040b4c8:    fca42c23              sw    a0,-40(s0)                             allGrp
2040b4cc:    f69ff06f              j    2040b434 <_svfiprintf_r+0x1160>         allGrp, Branch-Instr, controlFlowGrp
2040b4d0:    f4c42503              lw    a0,-180(s0)                            Branch-Tgt, allGrp
2040b4d4:    204125b7              lui    a1,0x20412                            allGrp
2040b4d8:    70858593              addi    a1,a1,1800 # 20412708 <_svfiprintf_r.zeroes>allGrp
2040b4dc:    00b52023              sw    a1,0(a0)                               allGrp
2040b4e0:    fd842503              lw    a0,-40(s0)                             allGrp
2040b4e4:    f4c42583              lw    a1,-180(s0)                            allGrp
2040b4e8:    00a5a223              sw    a0,4(a1)                               allGrp
2040b4ec:    fd842503              lw    a0,-40(s0)                             allGrp
2040b4f0:    f9842583              lw    a1,-104(s0)                            allGrp
2040b4f4:    00a58533              add    a0,a1,a0                              allGrp
2040b4f8:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040b4fc:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b500:    00850513              addi    a0,a0,8                              allGrp
2040b504:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b508:    f9442503              lw    a0,-108(s0)                            allGrp
2040b50c:    00150513              addi    a0,a0,1                              allGrp
2040b510:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b514:    00800593              li    a1,8                                   allGrp
2040b518:    02b54c63              blt    a0,a1,2040b550 <_svfiprintf_r+0x127c> allGrp, Branch-Instr, controlFlowGrp
2040b51c:    0040006f              j    2040b520 <_svfiprintf_r+0x124c>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b520:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b524:    fec42583              lw    a1,-20(s0)                             allGrp
2040b528:    f9040613              addi    a2,s0,-112                           allGrp
2040b52c:    fffff097              auipc    ra,0xfffff                          allGrp
2040b530:    a14080e7              jalr    -1516(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
2040b534:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b538:    00b50663              beq    a0,a1,2040b544 <_svfiprintf_r+0x1270> allGrp, Branch-Instr, controlFlowGrp
2040b53c:    0040006f              j    2040b540 <_svfiprintf_r+0x126c>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b540:    41c0006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b544:    f5040513              addi    a0,s0,-176                           Branch-Tgt, allGrp
2040b548:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b54c:    0040006f              j    2040b550 <_svfiprintf_r+0x127c>         allGrp, Branch-Instr, controlFlowGrp
2040b550:    0040006f              j    2040b554 <_svfiprintf_r+0x1280>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b554:    0040006f              j    2040b558 <_svfiprintf_r+0x1284>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		PAD (dprec - size, zeroes);
2040b558:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
2040b55c:    fa442583              lw    a1,-92(s0)                             allGrp
2040b560:    40b50533              sub    a0,a0,a1                              allGrp
2040b564:    fca42c23              sw    a0,-40(s0)                             allGrp
2040b568:    00100593              li    a1,1                                   allGrp
2040b56c:    12b54663              blt    a0,a1,2040b698 <_svfiprintf_r+0x13c4> allGrp, Branch-Instr, controlFlowGrp
2040b570:    0040006f              j    2040b574 <_svfiprintf_r+0x12a0>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b574:    0040006f              j    2040b578 <_svfiprintf_r+0x12a4>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b578:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040b57c:    01100593              li    a1,17                                  allGrp
2040b580:    08b54a63              blt    a0,a1,2040b614 <_svfiprintf_r+0x1340> allGrp, Branch-Instr, controlFlowGrp
2040b584:    0040006f              j    2040b588 <_svfiprintf_r+0x12b4>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b588:    f4c42503              lw    a0,-180(s0)                            Branch-Tgt, allGrp
2040b58c:    204125b7              lui    a1,0x20412                            allGrp
2040b590:    70858593              addi    a1,a1,1800 # 20412708 <_svfiprintf_r.zeroes>allGrp
2040b594:    00b52023              sw    a1,0(a0)                               allGrp
2040b598:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b59c:    01000593              li    a1,16                                  allGrp
2040b5a0:    00b52223              sw    a1,4(a0)                               allGrp
2040b5a4:    f9842503              lw    a0,-104(s0)                            allGrp
2040b5a8:    01050513              addi    a0,a0,16                             allGrp
2040b5ac:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040b5b0:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b5b4:    00850513              addi    a0,a0,8                              allGrp
2040b5b8:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b5bc:    f9442503              lw    a0,-108(s0)                            allGrp
2040b5c0:    00150513              addi    a0,a0,1                              allGrp
2040b5c4:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b5c8:    00800593              li    a1,8                                   allGrp
2040b5cc:    02b54c63              blt    a0,a1,2040b604 <_svfiprintf_r+0x1330> allGrp, Branch-Instr, controlFlowGrp
2040b5d0:    0040006f              j    2040b5d4 <_svfiprintf_r+0x1300>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b5d4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b5d8:    fec42583              lw    a1,-20(s0)                             allGrp
2040b5dc:    f9040613              addi    a2,s0,-112                           allGrp
2040b5e0:    fffff097              auipc    ra,0xfffff                          allGrp
2040b5e4:    960080e7              jalr    -1696(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
2040b5e8:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b5ec:    00b50663              beq    a0,a1,2040b5f8 <_svfiprintf_r+0x1324> allGrp, Branch-Instr, controlFlowGrp
2040b5f0:    0040006f              j    2040b5f4 <_svfiprintf_r+0x1320>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b5f4:    3680006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b5f8:    f5040513              addi    a0,s0,-176                           Branch-Tgt, allGrp
2040b5fc:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b600:    0040006f              j    2040b604 <_svfiprintf_r+0x1330>         allGrp, Branch-Instr, controlFlowGrp
2040b604:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040b608:    ff050513              addi    a0,a0,-16                            allGrp
2040b60c:    fca42c23              sw    a0,-40(s0)                             allGrp
2040b610:    f69ff06f              j    2040b578 <_svfiprintf_r+0x12a4>         allGrp, Branch-Instr, controlFlowGrp
2040b614:    f4c42503              lw    a0,-180(s0)                            Branch-Tgt, allGrp
2040b618:    204125b7              lui    a1,0x20412                            allGrp
2040b61c:    70858593              addi    a1,a1,1800 # 20412708 <_svfiprintf_r.zeroes>allGrp
2040b620:    00b52023              sw    a1,0(a0)                               allGrp
2040b624:    fd842503              lw    a0,-40(s0)                             allGrp
2040b628:    f4c42583              lw    a1,-180(s0)                            allGrp
2040b62c:    00a5a223              sw    a0,4(a1)                               allGrp
2040b630:    fd842503              lw    a0,-40(s0)                             allGrp
2040b634:    f9842583              lw    a1,-104(s0)                            allGrp
2040b638:    00a58533              add    a0,a1,a0                              allGrp
2040b63c:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040b640:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b644:    00850513              addi    a0,a0,8                              allGrp
2040b648:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b64c:    f9442503              lw    a0,-108(s0)                            allGrp
2040b650:    00150513              addi    a0,a0,1                              allGrp
2040b654:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b658:    00800593              li    a1,8                                   allGrp
2040b65c:    02b54c63              blt    a0,a1,2040b694 <_svfiprintf_r+0x13c0> allGrp, Branch-Instr, controlFlowGrp
2040b660:    0040006f              j    2040b664 <_svfiprintf_r+0x1390>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b664:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b668:    fec42583              lw    a1,-20(s0)                             allGrp
2040b66c:    f9040613              addi    a2,s0,-112                           allGrp
2040b670:    fffff097              auipc    ra,0xfffff                          allGrp
2040b674:    8d0080e7              jalr    -1840(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
2040b678:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b67c:    00b50663              beq    a0,a1,2040b688 <_svfiprintf_r+0x13b4> allGrp, Branch-Instr, controlFlowGrp
2040b680:    0040006f              j    2040b684 <_svfiprintf_r+0x13b0>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b684:    2d80006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b688:    f5040513              addi    a0,s0,-176                           Branch-Tgt, allGrp
2040b68c:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b690:    0040006f              j    2040b694 <_svfiprintf_r+0x13c0>         allGrp, Branch-Instr, controlFlowGrp
2040b694:    0040006f              j    2040b698 <_svfiprintf_r+0x13c4>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		PRINT (cp, size);
2040b698:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040b69c:    f4c42583              lw    a1,-180(s0)                            allGrp
2040b6a0:    00a5a023              sw    a0,0(a1)                               allGrp
2040b6a4:    fa442503              lw    a0,-92(s0)                             allGrp
2040b6a8:    f4c42583              lw    a1,-180(s0)                            allGrp
2040b6ac:    00a5a223              sw    a0,4(a1)                               allGrp
2040b6b0:    fa442503              lw    a0,-92(s0)                             allGrp
2040b6b4:    f9842583              lw    a1,-104(s0)                            allGrp
2040b6b8:    00a58533              add    a0,a1,a0                              allGrp
2040b6bc:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040b6c0:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b6c4:    00850513              addi    a0,a0,8                              allGrp
2040b6c8:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b6cc:    f9442503              lw    a0,-108(s0)                            allGrp
2040b6d0:    00150513              addi    a0,a0,1                              allGrp
2040b6d4:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b6d8:    00800593              li    a1,8                                   allGrp
2040b6dc:    02b54c63              blt    a0,a1,2040b714 <_svfiprintf_r+0x1440> allGrp, Branch-Instr, controlFlowGrp
2040b6e0:    0040006f              j    2040b6e4 <_svfiprintf_r+0x1410>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b6e4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b6e8:    fec42583              lw    a1,-20(s0)                             allGrp
2040b6ec:    f9040613              addi    a2,s0,-112                           allGrp
2040b6f0:    fffff097              auipc    ra,0xfffff                          allGrp
2040b6f4:    850080e7              jalr    -1968(ra) # 20409f40 <__ssprint_r>   Call-Instr, allGrp, controlFlowGrp
2040b6f8:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b6fc:    00b50663              beq    a0,a1,2040b708 <_svfiprintf_r+0x1434> allGrp, Branch-Instr, controlFlowGrp
2040b700:    0040006f              j    2040b704 <_svfiprintf_r+0x1430>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b704:    2580006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b708:    f5040513              addi    a0,s0,-176                           Branch-Tgt, allGrp
2040b70c:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b710:    0040006f              j    2040b714 <_svfiprintf_r+0x1440>         allGrp, Branch-Instr, controlFlowGrp
		if (flags & LADJUST)
2040b714:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040b718:    00457513              andi    a0,a0,4                              allGrp
2040b71c:    00000593              li    a1,0                                   allGrp
2040b720:    14b50663              beq    a0,a1,2040b86c <_svfiprintf_r+0x1598> allGrp, Branch-Instr, controlFlowGrp
2040b724:    0040006f              j    2040b728 <_svfiprintf_r+0x1454>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			PAD (width - realsz, blanks);
2040b728:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
2040b72c:    fa842583              lw    a1,-88(s0)                             allGrp
2040b730:    40b50533              sub    a0,a0,a1                              allGrp
2040b734:    fca42c23              sw    a0,-40(s0)                             allGrp
2040b738:    00100593              li    a1,1                                   allGrp
2040b73c:    12b54663              blt    a0,a1,2040b868 <_svfiprintf_r+0x1594> allGrp, Branch-Instr, controlFlowGrp
2040b740:    0040006f              j    2040b744 <_svfiprintf_r+0x1470>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b744:    0040006f              j    2040b748 <_svfiprintf_r+0x1474>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b748:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040b74c:    01100593              li    a1,17                                  allGrp
2040b750:    08b54a63              blt    a0,a1,2040b7e4 <_svfiprintf_r+0x1510> allGrp, Branch-Instr, controlFlowGrp
2040b754:    0040006f              j    2040b758 <_svfiprintf_r+0x1484>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b758:    f4c42503              lw    a0,-180(s0)                            Branch-Tgt, allGrp
2040b75c:    204125b7              lui    a1,0x20412                            allGrp
2040b760:    6f858593              addi    a1,a1,1784 # 204126f8 <_svfiprintf_r.blanks>allGrp
2040b764:    00b52023              sw    a1,0(a0)                               allGrp
2040b768:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b76c:    01000593              li    a1,16                                  allGrp
2040b770:    00b52223              sw    a1,4(a0)                               allGrp
2040b774:    f9842503              lw    a0,-104(s0)                            allGrp
2040b778:    01050513              addi    a0,a0,16                             allGrp
2040b77c:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040b780:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b784:    00850513              addi    a0,a0,8                              allGrp
2040b788:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b78c:    f9442503              lw    a0,-108(s0)                            allGrp
2040b790:    00150513              addi    a0,a0,1                              allGrp
2040b794:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b798:    00800593              li    a1,8                                   allGrp
2040b79c:    02b54c63              blt    a0,a1,2040b7d4 <_svfiprintf_r+0x1500> allGrp, Branch-Instr, controlFlowGrp
2040b7a0:    0040006f              j    2040b7a4 <_svfiprintf_r+0x14d0>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b7a4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b7a8:    fec42583              lw    a1,-20(s0)                             allGrp
2040b7ac:    f9040613              addi    a2,s0,-112                           allGrp
2040b7b0:    ffffe097              auipc    ra,0xffffe                          allGrp
2040b7b4:    790080e7              jalr    1936(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
2040b7b8:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b7bc:    00b50663              beq    a0,a1,2040b7c8 <_svfiprintf_r+0x14f4> allGrp, Branch-Instr, controlFlowGrp
2040b7c0:    0040006f              j    2040b7c4 <_svfiprintf_r+0x14f0>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b7c4:    1980006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b7c8:    f5040513              addi    a0,s0,-176                           Branch-Tgt, allGrp
2040b7cc:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b7d0:    0040006f              j    2040b7d4 <_svfiprintf_r+0x1500>         allGrp, Branch-Instr, controlFlowGrp
2040b7d4:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040b7d8:    ff050513              addi    a0,a0,-16                            allGrp
2040b7dc:    fca42c23              sw    a0,-40(s0)                             allGrp
2040b7e0:    f69ff06f              j    2040b748 <_svfiprintf_r+0x1474>         allGrp, Branch-Instr, controlFlowGrp
2040b7e4:    f4c42503              lw    a0,-180(s0)                            Branch-Tgt, allGrp
2040b7e8:    204125b7              lui    a1,0x20412                            allGrp
2040b7ec:    6f858593              addi    a1,a1,1784 # 204126f8 <_svfiprintf_r.blanks>allGrp
2040b7f0:    00b52023              sw    a1,0(a0)                               allGrp
2040b7f4:    fd842503              lw    a0,-40(s0)                             allGrp
2040b7f8:    f4c42583              lw    a1,-180(s0)                            allGrp
2040b7fc:    00a5a223              sw    a0,4(a1)                               allGrp
2040b800:    fd842503              lw    a0,-40(s0)                             allGrp
2040b804:    f9842583              lw    a1,-104(s0)                            allGrp
2040b808:    00a58533              add    a0,a1,a0                              allGrp
2040b80c:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040b810:    f4c42503              lw    a0,-180(s0)                            allGrp
2040b814:    00850513              addi    a0,a0,8                              allGrp
2040b818:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b81c:    f9442503              lw    a0,-108(s0)                            allGrp
2040b820:    00150513              addi    a0,a0,1                              allGrp
2040b824:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b828:    00800593              li    a1,8                                   allGrp
2040b82c:    02b54c63              blt    a0,a1,2040b864 <_svfiprintf_r+0x1590> allGrp, Branch-Instr, controlFlowGrp
2040b830:    0040006f              j    2040b834 <_svfiprintf_r+0x1560>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b834:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b838:    fec42583              lw    a1,-20(s0)                             allGrp
2040b83c:    f9040613              addi    a2,s0,-112                           allGrp
2040b840:    ffffe097              auipc    ra,0xffffe                          allGrp
2040b844:    700080e7              jalr    1792(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
2040b848:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b84c:    00b50663              beq    a0,a1,2040b858 <_svfiprintf_r+0x1584> allGrp, Branch-Instr, controlFlowGrp
2040b850:    0040006f              j    2040b854 <_svfiprintf_r+0x1580>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b854:    1080006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b858:    f5040513              addi    a0,s0,-176                           Branch-Tgt, allGrp
2040b85c:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b860:    0040006f              j    2040b864 <_svfiprintf_r+0x1590>         allGrp, Branch-Instr, controlFlowGrp
2040b864:    0040006f              j    2040b868 <_svfiprintf_r+0x1594>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b868:    0040006f              j    2040b86c <_svfiprintf_r+0x1598>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		ret += width > realsz ? width : realsz;
2040b86c:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
2040b870:    fa842583              lw    a1,-88(s0)                             allGrp
2040b874:    00a5da63              ble    a0,a1,2040b888 <_svfiprintf_r+0x15b4> allGrp, Branch-Instr, controlFlowGrp
2040b878:    0040006f              j    2040b87c <_svfiprintf_r+0x15a8>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b87c:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
2040b880:    eaa42a23              sw    a0,-332(s0)                            allGrp
2040b884:    0100006f              j    2040b894 <_svfiprintf_r+0x15c0>         allGrp, Branch-Instr, controlFlowGrp
2040b888:    fa842503              lw    a0,-88(s0)                             Branch-Tgt, allGrp
2040b88c:    eaa42a23              sw    a0,-332(s0)                            allGrp
2040b890:    0040006f              j    2040b894 <_svfiprintf_r+0x15c0>         allGrp, Branch-Instr, controlFlowGrp
2040b894:    eb442503              lw    a0,-332(s0)                            Branch-Tgt, allGrp
2040b898:    fc442583              lw    a1,-60(s0)                             allGrp
2040b89c:    00a58533              add    a0,a1,a0                              allGrp
2040b8a0:    fca42223              sw    a0,-60(s0)                             allGrp
		FLUSH ();	/* copy out the I/O vectors */
2040b8a4:    f9842503              lw    a0,-104(s0)                            allGrp
2040b8a8:    00000593              li    a1,0                                   allGrp
2040b8ac:    02b50663              beq    a0,a1,2040b8d8 <_svfiprintf_r+0x1604> allGrp, Branch-Instr, controlFlowGrp
2040b8b0:    0040006f              j    2040b8b4 <_svfiprintf_r+0x15e0>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b8b4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b8b8:    fec42583              lw    a1,-20(s0)                             allGrp
2040b8bc:    f9040613              addi    a2,s0,-112                           allGrp
2040b8c0:    ffffe097              auipc    ra,0xffffe                          allGrp
2040b8c4:    680080e7              jalr    1664(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
2040b8c8:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b8cc:    00b50663              beq    a0,a1,2040b8d8 <_svfiprintf_r+0x1604> allGrp, Branch-Instr, controlFlowGrp
2040b8d0:    0040006f              j    2040b8d4 <_svfiprintf_r+0x1600>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b8d4:    0880006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b8d8:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040b8dc:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b8e0:    f5040593              addi    a1,s0,-176                           allGrp
2040b8e4:    f4b42623              sw    a1,-180(s0)                            allGrp
                if (malloc_buf != NULL) {
2040b8e8:    f1c42583              lw    a1,-228(s0)                            allGrp
2040b8ec:    02a58263              beq    a1,a0,2040b910 <_svfiprintf_r+0x163c> allGrp, Branch-Instr, controlFlowGrp
2040b8f0:    0040006f              j    2040b8f4 <_svfiprintf_r+0x1620>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
			_free_r (data, malloc_buf);
2040b8f4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b8f8:    f1c42583              lw    a1,-228(s0)                            allGrp
2040b8fc:    00007097              auipc    ra,0x7                              allGrp
2040b900:    ad8080e7              jalr    -1320(ra) # 204123d4 <_free_r>       Call-Instr, allGrp, controlFlowGrp
2040b904:    00000513              li    a0,0                                   Return-Tgt, allGrp
			malloc_buf = NULL;
2040b908:    f0a42e23              sw    a0,-228(s0)                            allGrp
		}
2040b90c:    0040006f              j    2040b910 <_svfiprintf_r+0x163c>         allGrp, Branch-Instr, controlFlowGrp
	for (;;) {
2040b910:    abdfe06f              j    2040a3cc <_svfiprintf_r+0xf8>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	FLUSH ();
2040b914:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
2040b918:    00000593              li    a1,0                                   allGrp
2040b91c:    02b50663              beq    a0,a1,2040b948 <_svfiprintf_r+0x1674> allGrp, Branch-Instr, controlFlowGrp
2040b920:    0040006f              j    2040b924 <_svfiprintf_r+0x1650>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b924:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b928:    fec42583              lw    a1,-20(s0)                             allGrp
2040b92c:    f9040613              addi    a2,s0,-112                           allGrp
2040b930:    ffffe097              auipc    ra,0xffffe                          allGrp
2040b934:    610080e7              jalr    1552(ra) # 20409f40 <__ssprint_r>    Call-Instr, allGrp, controlFlowGrp
2040b938:    00000593              li    a1,0                                   Return-Tgt, allGrp
2040b93c:    00b50663              beq    a0,a1,2040b948 <_svfiprintf_r+0x1674> allGrp, Branch-Instr, controlFlowGrp
2040b940:    0040006f              j    2040b944 <_svfiprintf_r+0x1670>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b944:    0180006f              j    2040b95c <_svfiprintf_r+0x1688>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b948:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040b94c:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040b950:    f5040513              addi    a0,s0,-176                           allGrp
2040b954:    f4a42623              sw    a0,-180(s0)                            allGrp
2040b958:    0040006f              j    2040b95c <_svfiprintf_r+0x1688>         allGrp, Branch-Instr, controlFlowGrp
	if (malloc_buf != NULL)
2040b95c:    f1c42503              lw    a0,-228(s0)                            Branch-Tgt, allGrp
2040b960:    00000593              li    a1,0                                   allGrp
2040b964:    00b50e63              beq    a0,a1,2040b980 <_svfiprintf_r+0x16ac> allGrp, Branch-Instr, controlFlowGrp
2040b968:    0040006f              j    2040b96c <_svfiprintf_r+0x1698>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		_free_r (data, malloc_buf);
2040b96c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040b970:    f1c42583              lw    a1,-228(s0)                            allGrp
2040b974:    00007097              auipc    ra,0x7                              allGrp
2040b978:    a60080e7              jalr    -1440(ra) # 204123d4 <_free_r>       Call-Instr, allGrp, controlFlowGrp
2040b97c:    0040006f              j    2040b980 <_svfiprintf_r+0x16ac>         Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
	return (__sferror (fp) ? EOF : ret);
2040b980:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040b984:    00c55503              lhu    a0,12(a0)                             allGrp
2040b988:    04057513              andi    a0,a0,64                             allGrp
2040b98c:    00000593              li    a1,0                                   allGrp
2040b990:    00b50a63              beq    a0,a1,2040b9a4 <_svfiprintf_r+0x16d0> allGrp, Branch-Instr, controlFlowGrp
2040b994:    0040006f              j    2040b998 <_svfiprintf_r+0x16c4>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040b998:    fff00513              li    a0,-1                                  Branch-Tgt, allGrp
2040b99c:    eaa42823              sw    a0,-336(s0)                            allGrp
2040b9a0:    0100006f              j    2040b9b0 <_svfiprintf_r+0x16dc>         allGrp, Branch-Instr, controlFlowGrp
2040b9a4:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040b9a8:    eaa42823              sw    a0,-336(s0)                            allGrp
2040b9ac:    0040006f              j    2040b9b0 <_svfiprintf_r+0x16dc>         allGrp, Branch-Instr, controlFlowGrp
2040b9b0:    eb042503              lw    a0,-336(s0)                            Branch-Tgt, allGrp
2040b9b4:    fea42a23              sw    a0,-12(s0)                             allGrp
2040b9b8:    0040006f              j    2040b9bc <_svfiprintf_r+0x16e8>         allGrp, Branch-Instr, controlFlowGrp
}
2040b9bc:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040b9c0:    14812403              lw    s0,328(sp)                             allGrp
2040b9c4:    14012423              sw    zero,328(sp)                           allGrp
2040b9c8:    14c12083              lw    ra,332(sp)                             allGrp
2040b9cc:    14012623              sw    zero,332(sp)                           allGrp
2040b9d0:    15010113              addi    sp,sp,336                            allGrp
2040b9d4:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040b9d8 <_wctomb_r>:
2040b9d8:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
2040b9dc:    02112623              sw    ra,44(sp)                              allGrp
2040b9e0:    02812423              sw    s0,40(sp)                              allGrp
2040b9e4:    03010413              addi    s0,sp,48                             allGrp
2040b9e8:    00068713              mv    a4,a3                                  allGrp
2040b9ec:    00060793              mv    a5,a2                                  allGrp
2040b9f0:    00058813              mv    a6,a1                                  allGrp
2040b9f4:    00050893              mv    a7,a0                                  allGrp
2040b9f8:    fea42a23              sw    a0,-12(s0)                             allGrp
2040b9fc:    feb42823              sw    a1,-16(s0)                             allGrp
2040ba00:    fec42623              sw    a2,-20(s0)                             allGrp
2040ba04:    fed42423              sw    a3,-24(s0)                             allGrp
        struct _reent *r     _AND 
        char          *s     _AND
        wchar_t        _wchar _AND
        mbstate_t     *state)
{
  return __WCTOMB (r, s, _wchar, state);
2040ba08:    fee42223              sw    a4,-28(s0)                             allGrp
2040ba0c:    fef42023              sw    a5,-32(s0)                             allGrp
2040ba10:    fd042e23              sw    a6,-36(s0)                             allGrp
2040ba14:    fd142c23              sw    a7,-40(s0)                             allGrp
2040ba18:    00000097              auipc    ra,0x0                              allGrp
2040ba1c:    050080e7              jalr    80(ra) # 2040ba68 <__get_current_locale>Call-Instr, allGrp, controlFlowGrp
2040ba20:    0e052503              lw    a0,224(a0)                             Return-Tgt, allGrp
2040ba24:    ff442583              lw    a1,-12(s0)                             allGrp
2040ba28:    ff042603              lw    a2,-16(s0)                             allGrp
2040ba2c:    fec42683              lw    a3,-20(s0)                             allGrp
2040ba30:    fe842703              lw    a4,-24(s0)                             allGrp
2040ba34:    fca42a23              sw    a0,-44(s0)                             allGrp
2040ba38:    00058513              mv    a0,a1                                  allGrp
2040ba3c:    00060593              mv    a1,a2                                  allGrp
2040ba40:    00068613              mv    a2,a3                                  allGrp
2040ba44:    00070693              mv    a3,a4                                  allGrp
2040ba48:    fd442703              lw    a4,-44(s0)                             allGrp
2040ba4c:    000700e7              jalr    a4                                   Call-Instr, allGrp, controlFlowGrp
2040ba50:    02812403              lw    s0,40(sp)                              Return-Tgt, allGrp
2040ba54:    02012423              sw    zero,40(sp)                            allGrp
2040ba58:    02c12083              lw    ra,44(sp)                              allGrp
2040ba5c:    02012623              sw    zero,44(sp)                            allGrp
2040ba60:    03010113              addi    sp,sp,48                             allGrp
2040ba64:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040ba68 <__get_current_locale>:
2040ba68:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
  return _REENT->_locale ?: __get_global_locale ();
2040ba6c:    00112623              sw    ra,12(sp)                              allGrp
2040ba70:    00812423              sw    s0,8(sp)                               allGrp
2040ba74:    01010413              addi    s0,sp,16                             allGrp
2040ba78:    80000537              lui    a0,0x80000                            allGrp
2040ba7c:    43052503              lw    a0,1072(a0) # 80000430 <_sp+0xffffc430>allGrp
2040ba80:    03452503              lw    a0,52(a0)                              allGrp
2040ba84:    00000593              li    a1,0                                   allGrp
2040ba88:    fea42a23              sw    a0,-12(s0)                             allGrp
2040ba8c:    00b50a63              beq    a0,a1,2040baa0 <__get_current_locale+0x38>allGrp, Branch-Instr, controlFlowGrp
2040ba90:    0040006f              j    2040ba94 <__get_current_locale+0x2c>    Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040ba94:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040ba98:    fea42823              sw    a0,-16(s0)                             allGrp
2040ba9c:    0140006f              j    2040bab0 <__get_current_locale+0x48>    allGrp, Branch-Instr, controlFlowGrp
2040baa0:    00000097              auipc    ra,0x0                              Branch-Tgt, allGrp
2040baa4:    0ec080e7              jalr    236(ra) # 2040bb8c <__get_global_locale>Call-Instr, allGrp, controlFlowGrp
2040baa8:    fea42823              sw    a0,-16(s0)                             Return-Tgt, allGrp
2040baac:    0040006f              j    2040bab0 <__get_current_locale+0x48>    allGrp, Branch-Instr, controlFlowGrp
2040bab0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040bab4:    00812403              lw    s0,8(sp)                               allGrp
2040bab8:    00012423              sw    zero,8(sp)                             allGrp
2040babc:    00c12083              lw    ra,12(sp)                              allGrp
2040bac0:    00012623              sw    zero,12(sp)                            allGrp
2040bac4:    01010113              addi    sp,sp,16                             allGrp
2040bac8:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040bacc <__ascii_wctomb>:
2040bacc:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
2040bad0:    02112623              sw    ra,44(sp)                              allGrp
2040bad4:    02812423              sw    s0,40(sp)                              allGrp
2040bad8:    03010413              addi    s0,sp,48                             allGrp
2040badc:    00068713              mv    a4,a3                                  allGrp
2040bae0:    00060793              mv    a5,a2                                  allGrp
2040bae4:    00058813              mv    a6,a1                                  allGrp
2040bae8:    00050893              mv    a7,a0                                  allGrp
2040baec:    fea42823              sw    a0,-16(s0)                             allGrp
2040baf0:    feb42623              sw    a1,-20(s0)                             allGrp
2040baf4:    fec42423              sw    a2,-24(s0)                             allGrp
2040baf8:    fed42223              sw    a3,-28(s0)                             allGrp
        mbstate_t     *state)
{
  /* Avoids compiler warnings about comparisons that are always false
     due to limited range when sizeof(wchar_t) is 2 but sizeof(wint_t)
     is 4, as is the case on cygwin.  */
  wint_t wchar = _wchar;
2040bafc:    fe842503              lw    a0,-24(s0)                             allGrp
2040bb00:    fea42023              sw    a0,-32(s0)                             allGrp

  if (s == NULL)
2040bb04:    fec42503              lw    a0,-20(s0)                             allGrp
2040bb08:    00000593              li    a1,0                                   allGrp
2040bb0c:    fce42e23              sw    a4,-36(s0)                             allGrp
2040bb10:    fcf42c23              sw    a5,-40(s0)                             allGrp
2040bb14:    fd042a23              sw    a6,-44(s0)                             allGrp
2040bb18:    fd142823              sw    a7,-48(s0)                             allGrp
2040bb1c:    00b51a63              bne    a0,a1,2040bb30 <__ascii_wctomb+0x64>  allGrp, Branch-Instr, controlFlowGrp
2040bb20:    0040006f              j    2040bb24 <__ascii_wctomb+0x58>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return 0;
2040bb24:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040bb28:    fea42a23              sw    a0,-12(s0)                             allGrp
2040bb2c:    0440006f              j    2040bb70 <__ascii_wctomb+0xa4>          allGrp, Branch-Instr, controlFlowGrp
 
#ifdef __CYGWIN__
  if ((size_t)wchar >= 0x80)
#else
  if ((size_t)wchar >= 0x100)
2040bb30:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040bb34:    10000593              li    a1,256                                 allGrp
2040bb38:    02b56063              bltu    a0,a1,2040bb58 <__ascii_wctomb+0x8c> allGrp, Branch-Instr, controlFlowGrp
2040bb3c:    0040006f              j    2040bb40 <__ascii_wctomb+0x74>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
#endif
    {
      r->_errno = EILSEQ;
2040bb40:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040bb44:    08a00593              li    a1,138                                 allGrp
2040bb48:    00b52023              sw    a1,0(a0)                               allGrp
2040bb4c:    fff00513              li    a0,-1                                  allGrp
      return -1;
2040bb50:    fea42a23              sw    a0,-12(s0)                             allGrp
2040bb54:    01c0006f              j    2040bb70 <__ascii_wctomb+0xa4>          allGrp, Branch-Instr, controlFlowGrp
    }

  *s = (char) wchar;
2040bb58:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040bb5c:    fec42583              lw    a1,-20(s0)                             allGrp
2040bb60:    00a58023              sb    a0,0(a1)                               allGrp
2040bb64:    00100513              li    a0,1                                   allGrp
  return 1;
2040bb68:    fea42a23              sw    a0,-12(s0)                             allGrp
2040bb6c:    0040006f              j    2040bb70 <__ascii_wctomb+0xa4>          allGrp, Branch-Instr, controlFlowGrp
}
2040bb70:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040bb74:    02812403              lw    s0,40(sp)                              allGrp
2040bb78:    02012423              sw    zero,40(sp)                            allGrp
2040bb7c:    02c12083              lw    ra,44(sp)                              allGrp
2040bb80:    02012623              sw    zero,44(sp)                            allGrp
2040bb84:    03010113              addi    sp,sp,48                             allGrp
2040bb88:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040bb8c <__get_global_locale>:
2040bb8c:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
  return &__global_locale;
2040bb90:    00112623              sw    ra,12(sp)                              allGrp
2040bb94:    00812423              sw    s0,8(sp)                               allGrp
2040bb98:    01010413              addi    s0,sp,16                             allGrp
2040bb9c:    80000537              lui    a0,0x80000                            allGrp
2040bba0:    43450513              addi    a0,a0,1076 # 80000434 <_sp+0xffffc434>allGrp
2040bba4:    00812403              lw    s0,8(sp)                               allGrp
2040bba8:    00012423              sw    zero,8(sp)                             allGrp
2040bbac:    00c12083              lw    ra,12(sp)                              allGrp
2040bbb0:    00012623              sw    zero,12(sp)                            allGrp
2040bbb4:    01010113              addi    sp,sp,16                             allGrp
2040bbb8:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040bbbc <_calloc_r>:
2040bbbc:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp, Branch-Tgt
2040bbc0:    02112e23              sw    ra,60(sp)                              allGrp
2040bbc4:    02812c23              sw    s0,56(sp)                              allGrp
2040bbc8:    04010413              addi    s0,sp,64                             allGrp
2040bbcc:    00060693              mv    a3,a2                                  allGrp
2040bbd0:    00058713              mv    a4,a1                                  allGrp
2040bbd4:    00050793              mv    a5,a0                                  allGrp
2040bbd8:    fea42823              sw    a0,-16(s0)                             allGrp
2040bbdc:    feb42623              sw    a1,-20(s0)                             allGrp
2040bbe0:    fec42423              sw    a2,-24(s0)                             allGrp
#endif
{
  mchunkptr p;
  INTERNAL_SIZE_T csz;

  INTERNAL_SIZE_T sz = n * elem_size;
2040bbe4:    fec42503              lw    a0,-20(s0)                             allGrp
2040bbe8:    fe842583              lw    a1,-24(s0)                             allGrp
2040bbec:    fcd42623              sw    a3,-52(s0)                             allGrp
2040bbf0:    fce42423              sw    a4,-56(s0)                             allGrp
2040bbf4:    fcf42223              sw    a5,-60(s0)                             allGrp
2040bbf8:    00006097              auipc    ra,0x6                              allGrp
2040bbfc:    65c080e7              jalr    1628(ra) # 20412254 <__mulsi3>       Call-Instr, allGrp, controlFlowGrp
2040bc00:    fca42e23              sw    a0,-36(s0)                             Return-Tgt, allGrp
  MALLOC_LOCK;
  oldtop = top;
  oldtopsize = chunksize(top);
#endif

  mem = mALLOc (RCALL sz);
2040bc04:    ff042503              lw    a0,-16(s0)                             allGrp
2040bc08:    fdc42583              lw    a1,-36(s0)                             allGrp
2040bc0c:    00000097              auipc    ra,0x0                              allGrp
2040bc10:    18c080e7              jalr    396(ra) # 2040bd98 <_usf_malloc_r>   Call-Instr, allGrp, controlFlowGrp
2040bc14:    fca42c23              sw    a0,-40(s0)                             Return-Tgt, allGrp

  if (mem == 0) 
2040bc18:    fd842503              lw    a0,-40(s0)                             allGrp
2040bc1c:    00000593              li    a1,0                                   allGrp
2040bc20:    00b51a63              bne    a0,a1,2040bc34 <_calloc_r+0x78>       allGrp, Branch-Instr, controlFlowGrp
2040bc24:    0040006f              j    2040bc28 <_calloc_r+0x6c>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  {
#if MORECORE_CLEARS
    MALLOC_UNLOCK;
#endif
    return 0;
2040bc28:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040bc2c:    fea42a23              sw    a0,-12(s0)                             allGrp
2040bc30:    14c0006f              j    2040bd7c <_calloc_r+0x1c0>              allGrp, Branch-Instr, controlFlowGrp
  }
  else
  {
    p = mem2chunk(mem);
2040bc34:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040bc38:    ff850513              addi    a0,a0,-8                             allGrp
2040bc3c:    fea42223              sw    a0,-28(s0)                             allGrp
#endif
      return mem;
    }
#endif

    csz = chunksize(p);
2040bc40:    fe442503              lw    a0,-28(s0)                             allGrp
2040bc44:    00452503              lw    a0,4(a0)                               allGrp
2040bc48:    ffc57513              andi    a0,a0,-4                             allGrp
2040bc4c:    fea42023              sw    a0,-32(s0)                             allGrp
      csz = oldtopsize;
    }
    MALLOC_UNLOCK;
#endif

    MALLOC_ZERO(mem, csz - SIZE_SZ);
2040bc50:    0040006f              j    2040bc54 <_calloc_r+0x98>               allGrp, Branch-Instr, controlFlowGrp
2040bc54:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040bc58:    ffc50513              addi    a0,a0,-4                             allGrp
2040bc5c:    fca42a23              sw    a0,-44(s0)                             allGrp
2040bc60:    fd442503              lw    a0,-44(s0)                             allGrp
2040bc64:    02400593              li    a1,36                                  allGrp
2040bc68:    0ea5e463              bltu    a1,a0,2040bd50 <_calloc_r+0x194>     allGrp, Branch-Instr, controlFlowGrp
2040bc6c:    0040006f              j    2040bc70 <_calloc_r+0xb4>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040bc70:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040bc74:    fca42823              sw    a0,-48(s0)                             allGrp
2040bc78:    fd442503              lw    a0,-44(s0)                             allGrp
2040bc7c:    01400593              li    a1,20                                  allGrp
2040bc80:    0ab56063              bltu    a0,a1,2040bd20 <_calloc_r+0x164>     allGrp, Branch-Instr, controlFlowGrp
2040bc84:    0040006f              j    2040bc88 <_calloc_r+0xcc>               Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040bc88:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040bc8c:    00450593              addi    a1,a0,4                              allGrp
2040bc90:    fcb42823              sw    a1,-48(s0)                             allGrp
2040bc94:    00000593              li    a1,0                                   allGrp
2040bc98:    00b52023              sw    a1,0(a0)                               allGrp
2040bc9c:    fd042503              lw    a0,-48(s0)                             allGrp
2040bca0:    00450613              addi    a2,a0,4                              allGrp
2040bca4:    fcc42823              sw    a2,-48(s0)                             allGrp
2040bca8:    00b52023              sw    a1,0(a0)                               allGrp
2040bcac:    fd442503              lw    a0,-44(s0)                             allGrp
2040bcb0:    01c00593              li    a1,28                                  allGrp
2040bcb4:    06b56463              bltu    a0,a1,2040bd1c <_calloc_r+0x160>     allGrp, Branch-Instr, controlFlowGrp
2040bcb8:    0040006f              j    2040bcbc <_calloc_r+0x100>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040bcbc:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040bcc0:    00450593              addi    a1,a0,4                              allGrp
2040bcc4:    fcb42823              sw    a1,-48(s0)                             allGrp
2040bcc8:    00000593              li    a1,0                                   allGrp
2040bccc:    00b52023              sw    a1,0(a0)                               allGrp
2040bcd0:    fd042503              lw    a0,-48(s0)                             allGrp
2040bcd4:    00450613              addi    a2,a0,4                              allGrp
2040bcd8:    fcc42823              sw    a2,-48(s0)                             allGrp
2040bcdc:    00b52023              sw    a1,0(a0)                               allGrp
2040bce0:    fd442503              lw    a0,-44(s0)                             allGrp
2040bce4:    02400593              li    a1,36                                  allGrp
2040bce8:    02b56863              bltu    a0,a1,2040bd18 <_calloc_r+0x15c>     allGrp, Branch-Instr, controlFlowGrp
2040bcec:    0040006f              j    2040bcf0 <_calloc_r+0x134>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040bcf0:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040bcf4:    00450593              addi    a1,a0,4                              allGrp
2040bcf8:    fcb42823              sw    a1,-48(s0)                             allGrp
2040bcfc:    00000593              li    a1,0                                   allGrp
2040bd00:    00b52023              sw    a1,0(a0)                               allGrp
2040bd04:    fd042503              lw    a0,-48(s0)                             allGrp
2040bd08:    00450613              addi    a2,a0,4                              allGrp
2040bd0c:    fcc42823              sw    a2,-48(s0)                             allGrp
2040bd10:    00b52023              sw    a1,0(a0)                               allGrp
2040bd14:    0040006f              j    2040bd18 <_calloc_r+0x15c>              allGrp, Branch-Instr, controlFlowGrp
2040bd18:    0040006f              j    2040bd1c <_calloc_r+0x160>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040bd1c:    0040006f              j    2040bd20 <_calloc_r+0x164>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040bd20:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040bd24:    00450593              addi    a1,a0,4                              allGrp
2040bd28:    fcb42823              sw    a1,-48(s0)                             allGrp
2040bd2c:    00000593              li    a1,0                                   allGrp
2040bd30:    00b52023              sw    a1,0(a0)                               allGrp
2040bd34:    fd042503              lw    a0,-48(s0)                             allGrp
2040bd38:    00450613              addi    a2,a0,4                              allGrp
2040bd3c:    fcc42823              sw    a2,-48(s0)                             allGrp
2040bd40:    00b52023              sw    a1,0(a0)                               allGrp
2040bd44:    fd042503              lw    a0,-48(s0)                             allGrp
2040bd48:    00b52023              sw    a1,0(a0)                               allGrp
2040bd4c:    0200006f              j    2040bd6c <_calloc_r+0x1b0>              allGrp, Branch-Instr, controlFlowGrp
2040bd50:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040bd54:    fd442603              lw    a2,-44(s0)                             allGrp
2040bd58:    00000593              li    a1,0                                   allGrp
2040bd5c:    00001097              auipc    ra,0x1                              allGrp
2040bd60:    344080e7              jalr    836(ra) # 2040d0a0 <memset>          Call-Instr, allGrp, controlFlowGrp
2040bd64:    fca42023              sw    a0,-64(s0)                             Return-Tgt, allGrp
2040bd68:    0040006f              j    2040bd6c <_calloc_r+0x1b0>              allGrp, Branch-Instr, controlFlowGrp
2040bd6c:    0040006f              j    2040bd70 <_calloc_r+0x1b4>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return mem;
2040bd70:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040bd74:    fea42a23              sw    a0,-12(s0)                             allGrp
2040bd78:    0040006f              j    2040bd7c <_calloc_r+0x1c0>              allGrp, Branch-Instr, controlFlowGrp
  }
}
2040bd7c:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040bd80:    03812403              lw    s0,56(sp)                              allGrp
2040bd84:    02012c23              sw    zero,56(sp)                            allGrp
2040bd88:    03c12083              lw    ra,60(sp)                              allGrp
2040bd8c:    02012e23              sw    zero,60(sp)                            allGrp
2040bd90:    04010113              addi    sp,sp,64                             allGrp
2040bd94:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040bd98 <_usf_malloc_r>:
2040bd98:    f7010113              addi    sp,sp,-144                           Call-Tgt, allGrp, Branch-Tgt
2040bd9c:    08112623              sw    ra,140(sp)                             allGrp
2040bda0:    08812423              sw    s0,136(sp)                             allGrp
2040bda4:    09010413              addi    s0,sp,144                            allGrp
2040bda8:    00058613              mv    a2,a1                                  allGrp
2040bdac:    00050693              mv    a3,a0                                  allGrp
2040bdb0:    fea42823              sw    a0,-16(s0)                             allGrp
2040bdb4:    feb42623              sw    a1,-20(s0)                             allGrp
  INTERNAL_SIZE_T nb  = request2size(bytes);  /* padded request size; */
2040bdb8:    fec42503              lw    a0,-20(s0)                             allGrp
2040bdbc:    00b50513              addi    a0,a0,11                             allGrp
2040bdc0:    01600593              li    a1,22                                  allGrp
2040bdc4:    fac42a23              sw    a2,-76(s0)                             allGrp
2040bdc8:    fad42823              sw    a3,-80(s0)                             allGrp
2040bdcc:    00a5ea63              bltu    a1,a0,2040bde0 <_usf_malloc_r+0x48>  allGrp, Branch-Instr, controlFlowGrp
2040bdd0:    0040006f              j    2040bdd4 <_usf_malloc_r+0x3c>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040bdd4:    01000513              li    a0,16                                  Branch-Tgt, allGrp
2040bdd8:    faa42623              sw    a0,-84(s0)                             allGrp
2040bddc:    0180006f              j    2040bdf4 <_usf_malloc_r+0x5c>           allGrp, Branch-Instr, controlFlowGrp
2040bde0:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040bde4:    00b50513              addi    a0,a0,11                             allGrp
2040bde8:    ff857513              andi    a0,a0,-8                             allGrp
2040bdec:    faa42623              sw    a0,-84(s0)                             allGrp
2040bdf0:    0040006f              j    2040bdf4 <_usf_malloc_r+0x5c>           allGrp, Branch-Instr, controlFlowGrp
2040bdf4:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
2040bdf8:    faa42c23              sw    a0,-72(s0)                             allGrp
  if (nb > INT_MAX || nb < bytes)
2040bdfc:    fb842503              lw    a0,-72(s0)                             allGrp
2040be00:    00000593              li    a1,0                                   allGrp
2040be04:    00b54c63              blt    a0,a1,2040be1c <_usf_malloc_r+0x84>   allGrp, Branch-Instr, controlFlowGrp
2040be08:    0040006f              j    2040be0c <_usf_malloc_r+0x74>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040be0c:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040be10:    fec42583              lw    a1,-20(s0)                             allGrp
2040be14:    02b57063              bleu    a1,a0,2040be34 <_usf_malloc_r+0x9c>  allGrp, Branch-Instr, controlFlowGrp
2040be18:    0040006f              j    2040be1c <_usf_malloc_r+0x84>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    RERRNO = ENOMEM;
2040be1c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040be20:    00c00593              li    a1,12                                  allGrp
2040be24:    00b52023              sw    a1,0(a0)                               allGrp
2040be28:    00000513              li    a0,0                                   allGrp
    return 0;
2040be2c:    fea42a23              sw    a0,-12(s0)                             allGrp
2040be30:    4090006f              j    2040ca38 <_usf_malloc_r+0xca0>          allGrp, Branch-Instr, controlFlowGrp
  MALLOC_LOCK;
2040be34:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040be38:    00001097              auipc    ra,0x1                              allGrp
2040be3c:    4a0080e7              jalr    1184(ra) # 2040d2d8 <__malloc_lock>  Call-Instr, allGrp, controlFlowGrp
  if (is_small_request(nb))  /* Faster version for small requests */
2040be40:    fb842503              lw    a0,-72(s0)                             Return-Tgt, allGrp
2040be44:    1f700593              li    a1,503                                 allGrp
2040be48:    0ea5ec63              bltu    a1,a0,2040bf40 <_usf_malloc_r+0x1a8> allGrp, Branch-Instr, controlFlowGrp
2040be4c:    0040006f              j    2040be50 <_usf_malloc_r+0xb8>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    idx = smallbin_index(nb); 
2040be50:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040be54:    00355513              srli    a0,a0,0x3                            allGrp
2040be58:    fea42023              sw    a0,-32(s0)                             allGrp
    q = bin_at(idx);
2040be5c:    fe042503              lw    a0,-32(s0)                             allGrp
2040be60:    00351513              slli    a0,a0,0x3                            allGrp
2040be64:    800005b7              lui    a1,0x80000                            allGrp
2040be68:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040be6c:    00b50533              add    a0,a0,a1                              allGrp
2040be70:    faa42e23              sw    a0,-68(s0)                             allGrp
    victim = last(q);
2040be74:    fbc42503              lw    a0,-68(s0)                             allGrp
2040be78:    00c52503              lw    a0,12(a0)                              allGrp
2040be7c:    fea42423              sw    a0,-24(s0)                             allGrp
    if (victim == q)
2040be80:    fe842503              lw    a0,-24(s0)                             allGrp
2040be84:    fbc42583              lw    a1,-68(s0)                             allGrp
2040be88:    02b51263              bne    a0,a1,2040beac <_usf_malloc_r+0x114>  allGrp, Branch-Instr, controlFlowGrp
2040be8c:    0040006f              j    2040be90 <_usf_malloc_r+0xf8>           Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      q = next_bin(q);
2040be90:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
2040be94:    00850513              addi    a0,a0,8                              allGrp
2040be98:    faa42e23              sw    a0,-68(s0)                             allGrp
      victim = last(q);
2040be9c:    fbc42503              lw    a0,-68(s0)                             allGrp
2040bea0:    00c52503              lw    a0,12(a0)                              allGrp
2040bea4:    fea42423              sw    a0,-24(s0)                             allGrp
    }
2040bea8:    0040006f              j    2040beac <_usf_malloc_r+0x114>          allGrp, Branch-Instr, controlFlowGrp
    if (victim != q)
2040beac:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040beb0:    fbc42583              lw    a1,-68(s0)                             allGrp
2040beb4:    06b50e63              beq    a0,a1,2040bf30 <_usf_malloc_r+0x198>  allGrp, Branch-Instr, controlFlowGrp
2040beb8:    0040006f              j    2040bebc <_usf_malloc_r+0x124>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      victim_size = chunksize(victim);
2040bebc:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040bec0:    00452503              lw    a0,4(a0)                               allGrp
2040bec4:    ffc57513              andi    a0,a0,-4                             allGrp
2040bec8:    fea42223              sw    a0,-28(s0)                             allGrp
      unlink(victim, bck, fwd);
2040becc:    fe842503              lw    a0,-24(s0)                             allGrp
2040bed0:    00c52503              lw    a0,12(a0)                              allGrp
2040bed4:    fca42023              sw    a0,-64(s0)                             allGrp
2040bed8:    fe842503              lw    a0,-24(s0)                             allGrp
2040bedc:    00852503              lw    a0,8(a0)                               allGrp
2040bee0:    fca42223              sw    a0,-60(s0)                             allGrp
2040bee4:    fc042503              lw    a0,-64(s0)                             allGrp
2040bee8:    fc442583              lw    a1,-60(s0)                             allGrp
2040beec:    00a5a623              sw    a0,12(a1)                              allGrp
2040bef0:    fc442503              lw    a0,-60(s0)                             allGrp
2040bef4:    fc042583              lw    a1,-64(s0)                             allGrp
2040bef8:    00a5a423              sw    a0,8(a1)                               allGrp
      set_inuse_bit_at_offset(victim, victim_size);
2040befc:    fe842503              lw    a0,-24(s0)                             allGrp
2040bf00:    fe442583              lw    a1,-28(s0)                             allGrp
2040bf04:    00b50533              add    a0,a0,a1                              allGrp
2040bf08:    00452583              lw    a1,4(a0)                               allGrp
2040bf0c:    0015e593              ori    a1,a1,1                               allGrp
2040bf10:    00b52223              sw    a1,4(a0)                               allGrp
      MALLOC_UNLOCK;
2040bf14:    ff042503              lw    a0,-16(s0)                             allGrp
2040bf18:    00001097              auipc    ra,0x1                              allGrp
2040bf1c:    3f4080e7              jalr    1012(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
      return chunk2mem(victim);
2040bf20:    fe842503              lw    a0,-24(s0)                             Return-Tgt, allGrp
2040bf24:    00850513              addi    a0,a0,8                              allGrp
2040bf28:    fea42a23              sw    a0,-12(s0)                             allGrp
2040bf2c:    30d0006f              j    2040ca38 <_usf_malloc_r+0xca0>          allGrp, Branch-Instr, controlFlowGrp
    idx += 2; /* Set for bin scan below. We've already scanned 2 bins. */
2040bf30:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040bf34:    00250513              addi    a0,a0,2                              allGrp
2040bf38:    fea42023              sw    a0,-32(s0)                             allGrp
  }
2040bf3c:    2540006f              j    2040c190 <_usf_malloc_r+0x3f8>          allGrp, Branch-Instr, controlFlowGrp
    idx = bin_index(nb);
2040bf40:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040bf44:    00955513              srli    a0,a0,0x9                            allGrp
2040bf48:    00000593              li    a1,0                                   allGrp
2040bf4c:    00b51c63              bne    a0,a1,2040bf64 <_usf_malloc_r+0x1cc>  allGrp, Branch-Instr, controlFlowGrp
2040bf50:    0040006f              j    2040bf54 <_usf_malloc_r+0x1bc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040bf54:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040bf58:    00355513              srli    a0,a0,0x3                            allGrp
2040bf5c:    faa42423              sw    a0,-88(s0)                             allGrp
2040bf60:    1140006f              j    2040c074 <_usf_malloc_r+0x2dc>          allGrp, Branch-Instr, controlFlowGrp
2040bf64:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040bf68:    00955513              srli    a0,a0,0x9                            allGrp
2040bf6c:    00400593              li    a1,4                                   allGrp
2040bf70:    00a5ee63              bltu    a1,a0,2040bf8c <_usf_malloc_r+0x1f4> allGrp, Branch-Instr, controlFlowGrp
2040bf74:    0040006f              j    2040bf78 <_usf_malloc_r+0x1e0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040bf78:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040bf7c:    00655513              srli    a0,a0,0x6                            allGrp
2040bf80:    03850513              addi    a0,a0,56                             allGrp
2040bf84:    faa42223              sw    a0,-92(s0)                             allGrp
2040bf88:    0e00006f              j    2040c068 <_usf_malloc_r+0x2d0>          allGrp, Branch-Instr, controlFlowGrp
2040bf8c:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040bf90:    00955513              srli    a0,a0,0x9                            allGrp
2040bf94:    01400593              li    a1,20                                  allGrp
2040bf98:    00a5ee63              bltu    a1,a0,2040bfb4 <_usf_malloc_r+0x21c> allGrp, Branch-Instr, controlFlowGrp
2040bf9c:    0040006f              j    2040bfa0 <_usf_malloc_r+0x208>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040bfa0:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040bfa4:    00955513              srli    a0,a0,0x9                            allGrp
2040bfa8:    05b50513              addi    a0,a0,91                             allGrp
2040bfac:    faa42023              sw    a0,-96(s0)                             allGrp
2040bfb0:    0ac0006f              j    2040c05c <_usf_malloc_r+0x2c4>          allGrp, Branch-Instr, controlFlowGrp
2040bfb4:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040bfb8:    00955513              srli    a0,a0,0x9                            allGrp
2040bfbc:    05400593              li    a1,84                                  allGrp
2040bfc0:    00a5ee63              bltu    a1,a0,2040bfdc <_usf_malloc_r+0x244> allGrp, Branch-Instr, controlFlowGrp
2040bfc4:    0040006f              j    2040bfc8 <_usf_malloc_r+0x230>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040bfc8:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040bfcc:    00c55513              srli    a0,a0,0xc                            allGrp
2040bfd0:    06e50513              addi    a0,a0,110                            allGrp
2040bfd4:    f8a42e23              sw    a0,-100(s0)                            allGrp
2040bfd8:    0780006f              j    2040c050 <_usf_malloc_r+0x2b8>          allGrp, Branch-Instr, controlFlowGrp
2040bfdc:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040bfe0:    00955513              srli    a0,a0,0x9                            allGrp
2040bfe4:    15400593              li    a1,340                                 allGrp
2040bfe8:    00a5ee63              bltu    a1,a0,2040c004 <_usf_malloc_r+0x26c> allGrp, Branch-Instr, controlFlowGrp
2040bfec:    0040006f              j    2040bff0 <_usf_malloc_r+0x258>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040bff0:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040bff4:    00f55513              srli    a0,a0,0xf                            allGrp
2040bff8:    07750513              addi    a0,a0,119                            allGrp
2040bffc:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040c000:    0440006f              j    2040c044 <_usf_malloc_r+0x2ac>          allGrp, Branch-Instr, controlFlowGrp
2040c004:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040c008:    00955513              srli    a0,a0,0x9                            allGrp
2040c00c:    55400593              li    a1,1364                                allGrp
2040c010:    00a5ee63              bltu    a1,a0,2040c02c <_usf_malloc_r+0x294> allGrp, Branch-Instr, controlFlowGrp
2040c014:    0040006f              j    2040c018 <_usf_malloc_r+0x280>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c018:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040c01c:    01255513              srli    a0,a0,0x12                           allGrp
2040c020:    07c50513              addi    a0,a0,124                            allGrp
2040c024:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040c028:    0100006f              j    2040c038 <_usf_malloc_r+0x2a0>          allGrp, Branch-Instr, controlFlowGrp
2040c02c:    07e00513              li    a0,126                                 Branch-Tgt, allGrp
2040c030:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040c034:    0040006f              j    2040c038 <_usf_malloc_r+0x2a0>          allGrp, Branch-Instr, controlFlowGrp
2040c038:    f9442503              lw    a0,-108(s0)                            Branch-Tgt, allGrp
2040c03c:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040c040:    0040006f              j    2040c044 <_usf_malloc_r+0x2ac>          allGrp, Branch-Instr, controlFlowGrp
2040c044:    f9842503              lw    a0,-104(s0)                            Branch-Tgt, allGrp
2040c048:    f8a42e23              sw    a0,-100(s0)                            allGrp
2040c04c:    0040006f              j    2040c050 <_usf_malloc_r+0x2b8>          allGrp, Branch-Instr, controlFlowGrp
2040c050:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
2040c054:    faa42023              sw    a0,-96(s0)                             allGrp
2040c058:    0040006f              j    2040c05c <_usf_malloc_r+0x2c4>          allGrp, Branch-Instr, controlFlowGrp
2040c05c:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
2040c060:    faa42223              sw    a0,-92(s0)                             allGrp
2040c064:    0040006f              j    2040c068 <_usf_malloc_r+0x2d0>          allGrp, Branch-Instr, controlFlowGrp
2040c068:    fa442503              lw    a0,-92(s0)                             Branch-Tgt, allGrp
2040c06c:    faa42423              sw    a0,-88(s0)                             allGrp
2040c070:    0040006f              j    2040c074 <_usf_malloc_r+0x2dc>          allGrp, Branch-Instr, controlFlowGrp
2040c074:    fa842503              lw    a0,-88(s0)                             Branch-Tgt, allGrp
2040c078:    fea42023              sw    a0,-32(s0)                             allGrp
    bin = bin_at(idx);
2040c07c:    fe042503              lw    a0,-32(s0)                             allGrp
2040c080:    00351513              slli    a0,a0,0x3                            allGrp
2040c084:    800005b7              lui    a1,0x80000                            allGrp
2040c088:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c08c:    00b50533              add    a0,a0,a1                              allGrp
2040c090:    fca42e23              sw    a0,-36(s0)                             allGrp
    for (victim = last(bin); victim != bin; victim = victim->bk)
2040c094:    fdc42503              lw    a0,-36(s0)                             allGrp
2040c098:    00c52503              lw    a0,12(a0)                              allGrp
2040c09c:    fea42423              sw    a0,-24(s0)                             allGrp
2040c0a0:    0040006f              j    2040c0a4 <_usf_malloc_r+0x30c>          allGrp, Branch-Instr, controlFlowGrp
2040c0a4:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040c0a8:    fdc42583              lw    a1,-36(s0)                             allGrp
2040c0ac:    0cb50a63              beq    a0,a1,2040c180 <_usf_malloc_r+0x3e8>  allGrp, Branch-Instr, controlFlowGrp
2040c0b0:    0040006f              j    2040c0b4 <_usf_malloc_r+0x31c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      victim_size = chunksize(victim);
2040c0b4:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040c0b8:    00452503              lw    a0,4(a0)                               allGrp
2040c0bc:    ffc57513              andi    a0,a0,-4                             allGrp
2040c0c0:    fea42223              sw    a0,-28(s0)                             allGrp
      remainder_size = long_sub_size_t(victim_size, nb);
2040c0c4:    fe442503              lw    a0,-28(s0)                             allGrp
2040c0c8:    fb842583              lw    a1,-72(s0)                             allGrp
2040c0cc:    40b50533              sub    a0,a0,a1                              allGrp
2040c0d0:    fca42a23              sw    a0,-44(s0)                             allGrp
      if (remainder_size >= (long)MINSIZE) /* too big */
2040c0d4:    fd442503              lw    a0,-44(s0)                             allGrp
2040c0d8:    01000593              li    a1,16                                  allGrp
2040c0dc:    00b54c63              blt    a0,a1,2040c0f4 <_usf_malloc_r+0x35c>  allGrp, Branch-Instr, controlFlowGrp
2040c0e0:    0040006f              j    2040c0e4 <_usf_malloc_r+0x34c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        --idx; /* adjust to rescan below after checking last remainder */
2040c0e4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040c0e8:    fff50513              addi    a0,a0,-1                             allGrp
2040c0ec:    fea42023              sw    a0,-32(s0)                             allGrp
        break;   
2040c0f0:    0900006f              j    2040c180 <_usf_malloc_r+0x3e8>          allGrp, Branch-Instr, controlFlowGrp
      else if (remainder_size >= 0) /* exact fit */
2040c0f4:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
2040c0f8:    00000593              li    a1,0                                   allGrp
2040c0fc:    06b54663              blt    a0,a1,2040c168 <_usf_malloc_r+0x3d0>  allGrp, Branch-Instr, controlFlowGrp
2040c100:    0040006f              j    2040c104 <_usf_malloc_r+0x36c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        unlink(victim, bck, fwd);
2040c104:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040c108:    00c52503              lw    a0,12(a0)                              allGrp
2040c10c:    fca42023              sw    a0,-64(s0)                             allGrp
2040c110:    fe842503              lw    a0,-24(s0)                             allGrp
2040c114:    00852503              lw    a0,8(a0)                               allGrp
2040c118:    fca42223              sw    a0,-60(s0)                             allGrp
2040c11c:    fc042503              lw    a0,-64(s0)                             allGrp
2040c120:    fc442583              lw    a1,-60(s0)                             allGrp
2040c124:    00a5a623              sw    a0,12(a1)                              allGrp
2040c128:    fc442503              lw    a0,-60(s0)                             allGrp
2040c12c:    fc042583              lw    a1,-64(s0)                             allGrp
2040c130:    00a5a423              sw    a0,8(a1)                               allGrp
        set_inuse_bit_at_offset(victim, victim_size);
2040c134:    fe842503              lw    a0,-24(s0)                             allGrp
2040c138:    fe442583              lw    a1,-28(s0)                             allGrp
2040c13c:    00b50533              add    a0,a0,a1                              allGrp
2040c140:    00452583              lw    a1,4(a0)                               allGrp
2040c144:    0015e593              ori    a1,a1,1                               allGrp
2040c148:    00b52223              sw    a1,4(a0)                               allGrp
	MALLOC_UNLOCK;
2040c14c:    ff042503              lw    a0,-16(s0)                             allGrp
2040c150:    00001097              auipc    ra,0x1                              allGrp
2040c154:    1bc080e7              jalr    444(ra) # 2040d30c <__malloc_unlock> Call-Instr, allGrp, controlFlowGrp
        return chunk2mem(victim);
2040c158:    fe842503              lw    a0,-24(s0)                             Return-Tgt, allGrp
2040c15c:    00850513              addi    a0,a0,8                              allGrp
2040c160:    fea42a23              sw    a0,-12(s0)                             allGrp
2040c164:    0d50006f              j    2040ca38 <_usf_malloc_r+0xca0>          allGrp, Branch-Instr, controlFlowGrp
2040c168:    0040006f              j    2040c16c <_usf_malloc_r+0x3d4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    }
2040c16c:    0040006f              j    2040c170 <_usf_malloc_r+0x3d8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    for (victim = last(bin); victim != bin; victim = victim->bk)
2040c170:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040c174:    00c52503              lw    a0,12(a0)                              allGrp
2040c178:    fea42423              sw    a0,-24(s0)                             allGrp
2040c17c:    f29ff06f              j    2040c0a4 <_usf_malloc_r+0x30c>          allGrp, Branch-Instr, controlFlowGrp
    ++idx; 
2040c180:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040c184:    00150513              addi    a0,a0,1                              allGrp
2040c188:    fea42023              sw    a0,-32(s0)                             allGrp
2040c18c:    0040006f              j    2040c190 <_usf_malloc_r+0x3f8>          allGrp, Branch-Instr, controlFlowGrp
  if ( (victim = last_remainder->fd) != last_remainder)
2040c190:    80000537              lui    a0,0x80000                            Branch-Tgt, allGrp
2040c194:    5a050513              addi    a0,a0,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c198:    01052583              lw    a1,16(a0)                              allGrp
2040c19c:    feb42423              sw    a1,-24(s0)                             allGrp
2040c1a0:    00850513              addi    a0,a0,8                              allGrp
2040c1a4:    3ea58a63              beq    a1,a0,2040c598 <_usf_malloc_r+0x800>  allGrp, Branch-Instr, controlFlowGrp
2040c1a8:    0040006f              j    2040c1ac <_usf_malloc_r+0x414>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    victim_size = chunksize(victim);
2040c1ac:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040c1b0:    00452503              lw    a0,4(a0)                               allGrp
2040c1b4:    ffc57513              andi    a0,a0,-4                             allGrp
2040c1b8:    fea42223              sw    a0,-28(s0)                             allGrp
    remainder_size = long_sub_size_t(victim_size, nb);
2040c1bc:    fe442503              lw    a0,-28(s0)                             allGrp
2040c1c0:    fb842583              lw    a1,-72(s0)                             allGrp
2040c1c4:    40b50533              sub    a0,a0,a1                              allGrp
2040c1c8:    fca42a23              sw    a0,-44(s0)                             allGrp
    if (remainder_size >= (long)MINSIZE) /* re-split */
2040c1cc:    fd442503              lw    a0,-44(s0)                             allGrp
2040c1d0:    01000593              li    a1,16                                  allGrp
2040c1d4:    08b54863              blt    a0,a1,2040c264 <_usf_malloc_r+0x4cc>  allGrp, Branch-Instr, controlFlowGrp
2040c1d8:    0040006f              j    2040c1dc <_usf_malloc_r+0x444>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      remainder = chunk_at_offset(victim, nb);
2040c1dc:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040c1e0:    fb842583              lw    a1,-72(s0)                             allGrp
2040c1e4:    00b50533              add    a0,a0,a1                              allGrp
2040c1e8:    fca42c23              sw    a0,-40(s0)                             allGrp
      set_head(victim, nb | PREV_INUSE);
2040c1ec:    fb842503              lw    a0,-72(s0)                             allGrp
2040c1f0:    00156513              ori    a0,a0,1                               allGrp
2040c1f4:    fe842583              lw    a1,-24(s0)                             allGrp
2040c1f8:    00a5a223              sw    a0,4(a1)                               allGrp
      link_last_remainder(remainder);
2040c1fc:    fd842503              lw    a0,-40(s0)                             allGrp
2040c200:    800005b7              lui    a1,0x80000                            allGrp
2040c204:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c208:    00a5aa23              sw    a0,20(a1)                              allGrp
2040c20c:    00a5a823              sw    a0,16(a1)                              allGrp
2040c210:    fd842503              lw    a0,-40(s0)                             allGrp
2040c214:    00858593              addi    a1,a1,8                              allGrp
2040c218:    00b52623              sw    a1,12(a0)                              allGrp
2040c21c:    fd842503              lw    a0,-40(s0)                             allGrp
2040c220:    00b52423              sw    a1,8(a0)                               allGrp
      set_head(remainder, remainder_size | PREV_INUSE);
2040c224:    fd442503              lw    a0,-44(s0)                             allGrp
2040c228:    00156513              ori    a0,a0,1                               allGrp
2040c22c:    fd842583              lw    a1,-40(s0)                             allGrp
2040c230:    00a5a223              sw    a0,4(a1)                               allGrp
      set_foot(remainder, remainder_size);
2040c234:    fd442503              lw    a0,-44(s0)                             allGrp
2040c238:    fd842583              lw    a1,-40(s0)                             allGrp
2040c23c:    fd442603              lw    a2,-44(s0)                             allGrp
2040c240:    00c585b3              add    a1,a1,a2                              allGrp
2040c244:    00a5a023              sw    a0,0(a1)                               allGrp
      MALLOC_UNLOCK;
2040c248:    ff042503              lw    a0,-16(s0)                             allGrp
2040c24c:    00001097              auipc    ra,0x1                              allGrp
2040c250:    0c0080e7              jalr    192(ra) # 2040d30c <__malloc_unlock> Call-Instr, allGrp, controlFlowGrp
      return chunk2mem(victim);
2040c254:    fe842503              lw    a0,-24(s0)                             Return-Tgt, allGrp
2040c258:    00850513              addi    a0,a0,8                              allGrp
2040c25c:    fea42a23              sw    a0,-12(s0)                             allGrp
2040c260:    7d80006f              j    2040ca38 <_usf_malloc_r+0xca0>          allGrp, Branch-Instr, controlFlowGrp
    clear_last_remainder;
2040c264:    80000537              lui    a0,0x80000                            Branch-Tgt, allGrp
2040c268:    5a050513              addi    a0,a0,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c26c:    00850593              addi    a1,a0,8                              allGrp
2040c270:    00b52a23              sw    a1,20(a0)                              allGrp
2040c274:    00b52823              sw    a1,16(a0)                              allGrp
    if (remainder_size >= 0)  /* exhaust */
2040c278:    fd442503              lw    a0,-44(s0)                             allGrp
2040c27c:    00000593              li    a1,0                                   allGrp
2040c280:    02b54e63              blt    a0,a1,2040c2bc <_usf_malloc_r+0x524>  allGrp, Branch-Instr, controlFlowGrp
2040c284:    0040006f              j    2040c288 <_usf_malloc_r+0x4f0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      set_inuse_bit_at_offset(victim, victim_size);
2040c288:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040c28c:    fe442583              lw    a1,-28(s0)                             allGrp
2040c290:    00b50533              add    a0,a0,a1                              allGrp
2040c294:    00452583              lw    a1,4(a0)                               allGrp
2040c298:    0015e593              ori    a1,a1,1                               allGrp
2040c29c:    00b52223              sw    a1,4(a0)                               allGrp
      MALLOC_UNLOCK;
2040c2a0:    ff042503              lw    a0,-16(s0)                             allGrp
2040c2a4:    00001097              auipc    ra,0x1                              allGrp
2040c2a8:    068080e7              jalr    104(ra) # 2040d30c <__malloc_unlock> Call-Instr, allGrp, controlFlowGrp
      return chunk2mem(victim);
2040c2ac:    fe842503              lw    a0,-24(s0)                             Return-Tgt, allGrp
2040c2b0:    00850513              addi    a0,a0,8                              allGrp
2040c2b4:    fea42a23              sw    a0,-12(s0)                             allGrp
2040c2b8:    7800006f              j    2040ca38 <_usf_malloc_r+0xca0>          allGrp, Branch-Instr, controlFlowGrp
    frontlink(victim, victim_size, remainder_index, bck, fwd);
2040c2bc:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c2c0:    1ff00593              li    a1,511                                 allGrp
2040c2c4:    08a5e863              bltu    a1,a0,2040c354 <_usf_malloc_r+0x5bc> allGrp, Branch-Instr, controlFlowGrp
2040c2c8:    0040006f              j    2040c2cc <_usf_malloc_r+0x534>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c2cc:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c2d0:    00355513              srli    a0,a0,0x3                            allGrp
2040c2d4:    fca42823              sw    a0,-48(s0)                             allGrp
2040c2d8:    fd042503              lw    a0,-48(s0)                             allGrp
2040c2dc:    41f55593              srai    a1,a0,0x1f                           allGrp
2040c2e0:    01e5d593              srli    a1,a1,0x1e                           allGrp
2040c2e4:    00b50533              add    a0,a0,a1                              allGrp
2040c2e8:    40255513              srai    a0,a0,0x2                            allGrp
2040c2ec:    00100593              li    a1,1                                   allGrp
2040c2f0:    00a59533              sll    a0,a1,a0                              allGrp
2040c2f4:    800005b7              lui    a1,0x80000                            allGrp
2040c2f8:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c2fc:    0045a603              lw    a2,4(a1)                               allGrp
2040c300:    00a66533              or    a0,a2,a0                               allGrp
2040c304:    00a5a223              sw    a0,4(a1)                               allGrp
2040c308:    fd042503              lw    a0,-48(s0)                             allGrp
2040c30c:    00351513              slli    a0,a0,0x3                            allGrp
2040c310:    00b50533              add    a0,a0,a1                              allGrp
2040c314:    fca42023              sw    a0,-64(s0)                             allGrp
2040c318:    fc042503              lw    a0,-64(s0)                             allGrp
2040c31c:    00852503              lw    a0,8(a0)                               allGrp
2040c320:    fca42223              sw    a0,-60(s0)                             allGrp
2040c324:    fc042503              lw    a0,-64(s0)                             allGrp
2040c328:    fe842583              lw    a1,-24(s0)                             allGrp
2040c32c:    00a5a623              sw    a0,12(a1)                              allGrp
2040c330:    fc442503              lw    a0,-60(s0)                             allGrp
2040c334:    fe842583              lw    a1,-24(s0)                             allGrp
2040c338:    00a5a423              sw    a0,8(a1)                               allGrp
2040c33c:    fe842503              lw    a0,-24(s0)                             allGrp
2040c340:    fc042583              lw    a1,-64(s0)                             allGrp
2040c344:    00a5a423              sw    a0,8(a1)                               allGrp
2040c348:    fc442583              lw    a1,-60(s0)                             allGrp
2040c34c:    00a5a623              sw    a0,12(a1)                              allGrp
2040c350:    2440006f              j    2040c594 <_usf_malloc_r+0x7fc>          allGrp, Branch-Instr, controlFlowGrp
2040c354:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c358:    00955513              srli    a0,a0,0x9                            allGrp
2040c35c:    00000593              li    a1,0                                   allGrp
2040c360:    00b51c63              bne    a0,a1,2040c378 <_usf_malloc_r+0x5e0>  allGrp, Branch-Instr, controlFlowGrp
2040c364:    0040006f              j    2040c368 <_usf_malloc_r+0x5d0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c368:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c36c:    00355513              srli    a0,a0,0x3                            allGrp
2040c370:    f8a42823              sw    a0,-112(s0)                            allGrp
2040c374:    1140006f              j    2040c488 <_usf_malloc_r+0x6f0>          allGrp, Branch-Instr, controlFlowGrp
2040c378:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c37c:    00955513              srli    a0,a0,0x9                            allGrp
2040c380:    00400593              li    a1,4                                   allGrp
2040c384:    00a5ee63              bltu    a1,a0,2040c3a0 <_usf_malloc_r+0x608> allGrp, Branch-Instr, controlFlowGrp
2040c388:    0040006f              j    2040c38c <_usf_malloc_r+0x5f4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c38c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c390:    00655513              srli    a0,a0,0x6                            allGrp
2040c394:    03850513              addi    a0,a0,56                             allGrp
2040c398:    f8a42623              sw    a0,-116(s0)                            allGrp
2040c39c:    0e00006f              j    2040c47c <_usf_malloc_r+0x6e4>          allGrp, Branch-Instr, controlFlowGrp
2040c3a0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c3a4:    00955513              srli    a0,a0,0x9                            allGrp
2040c3a8:    01400593              li    a1,20                                  allGrp
2040c3ac:    00a5ee63              bltu    a1,a0,2040c3c8 <_usf_malloc_r+0x630> allGrp, Branch-Instr, controlFlowGrp
2040c3b0:    0040006f              j    2040c3b4 <_usf_malloc_r+0x61c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c3b4:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c3b8:    00955513              srli    a0,a0,0x9                            allGrp
2040c3bc:    05b50513              addi    a0,a0,91                             allGrp
2040c3c0:    f8a42423              sw    a0,-120(s0)                            allGrp
2040c3c4:    0ac0006f              j    2040c470 <_usf_malloc_r+0x6d8>          allGrp, Branch-Instr, controlFlowGrp
2040c3c8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c3cc:    00955513              srli    a0,a0,0x9                            allGrp
2040c3d0:    05400593              li    a1,84                                  allGrp
2040c3d4:    00a5ee63              bltu    a1,a0,2040c3f0 <_usf_malloc_r+0x658> allGrp, Branch-Instr, controlFlowGrp
2040c3d8:    0040006f              j    2040c3dc <_usf_malloc_r+0x644>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c3dc:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c3e0:    00c55513              srli    a0,a0,0xc                            allGrp
2040c3e4:    06e50513              addi    a0,a0,110                            allGrp
2040c3e8:    f8a42223              sw    a0,-124(s0)                            allGrp
2040c3ec:    0780006f              j    2040c464 <_usf_malloc_r+0x6cc>          allGrp, Branch-Instr, controlFlowGrp
2040c3f0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c3f4:    00955513              srli    a0,a0,0x9                            allGrp
2040c3f8:    15400593              li    a1,340                                 allGrp
2040c3fc:    00a5ee63              bltu    a1,a0,2040c418 <_usf_malloc_r+0x680> allGrp, Branch-Instr, controlFlowGrp
2040c400:    0040006f              j    2040c404 <_usf_malloc_r+0x66c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c404:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c408:    00f55513              srli    a0,a0,0xf                            allGrp
2040c40c:    07750513              addi    a0,a0,119                            allGrp
2040c410:    f8a42023              sw    a0,-128(s0)                            allGrp
2040c414:    0440006f              j    2040c458 <_usf_malloc_r+0x6c0>          allGrp, Branch-Instr, controlFlowGrp
2040c418:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c41c:    00955513              srli    a0,a0,0x9                            allGrp
2040c420:    55400593              li    a1,1364                                allGrp
2040c424:    00a5ee63              bltu    a1,a0,2040c440 <_usf_malloc_r+0x6a8> allGrp, Branch-Instr, controlFlowGrp
2040c428:    0040006f              j    2040c42c <_usf_malloc_r+0x694>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c42c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c430:    01255513              srli    a0,a0,0x12                           allGrp
2040c434:    07c50513              addi    a0,a0,124                            allGrp
2040c438:    f6a42e23              sw    a0,-132(s0)                            allGrp
2040c43c:    0100006f              j    2040c44c <_usf_malloc_r+0x6b4>          allGrp, Branch-Instr, controlFlowGrp
2040c440:    07e00513              li    a0,126                                 Branch-Tgt, allGrp
2040c444:    f6a42e23              sw    a0,-132(s0)                            allGrp
2040c448:    0040006f              j    2040c44c <_usf_malloc_r+0x6b4>          allGrp, Branch-Instr, controlFlowGrp
2040c44c:    f7c42503              lw    a0,-132(s0)                            Branch-Tgt, allGrp
2040c450:    f8a42023              sw    a0,-128(s0)                            allGrp
2040c454:    0040006f              j    2040c458 <_usf_malloc_r+0x6c0>          allGrp, Branch-Instr, controlFlowGrp
2040c458:    f8042503              lw    a0,-128(s0)                            Branch-Tgt, allGrp
2040c45c:    f8a42223              sw    a0,-124(s0)                            allGrp
2040c460:    0040006f              j    2040c464 <_usf_malloc_r+0x6cc>          allGrp, Branch-Instr, controlFlowGrp
2040c464:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
2040c468:    f8a42423              sw    a0,-120(s0)                            allGrp
2040c46c:    0040006f              j    2040c470 <_usf_malloc_r+0x6d8>          allGrp, Branch-Instr, controlFlowGrp
2040c470:    f8842503              lw    a0,-120(s0)                            Branch-Tgt, allGrp
2040c474:    f8a42623              sw    a0,-116(s0)                            allGrp
2040c478:    0040006f              j    2040c47c <_usf_malloc_r+0x6e4>          allGrp, Branch-Instr, controlFlowGrp
2040c47c:    f8c42503              lw    a0,-116(s0)                            Branch-Tgt, allGrp
2040c480:    f8a42823              sw    a0,-112(s0)                            allGrp
2040c484:    0040006f              j    2040c488 <_usf_malloc_r+0x6f0>          allGrp, Branch-Instr, controlFlowGrp
2040c488:    f9042503              lw    a0,-112(s0)                            Branch-Tgt, allGrp
2040c48c:    fca42823              sw    a0,-48(s0)                             allGrp
2040c490:    fd042503              lw    a0,-48(s0)                             allGrp
2040c494:    00351513              slli    a0,a0,0x3                            allGrp
2040c498:    800005b7              lui    a1,0x80000                            allGrp
2040c49c:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c4a0:    00b50533              add    a0,a0,a1                              allGrp
2040c4a4:    fca42023              sw    a0,-64(s0)                             allGrp
2040c4a8:    fc042503              lw    a0,-64(s0)                             allGrp
2040c4ac:    00852503              lw    a0,8(a0)                               allGrp
2040c4b0:    fca42223              sw    a0,-60(s0)                             allGrp
2040c4b4:    fc442503              lw    a0,-60(s0)                             allGrp
2040c4b8:    fc042583              lw    a1,-64(s0)                             allGrp
2040c4bc:    02b51e63              bne    a0,a1,2040c4f8 <_usf_malloc_r+0x760>  allGrp, Branch-Instr, controlFlowGrp
2040c4c0:    0040006f              j    2040c4c4 <_usf_malloc_r+0x72c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c4c4:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040c4c8:    41f55593              srai    a1,a0,0x1f                           allGrp
2040c4cc:    01e5d593              srli    a1,a1,0x1e                           allGrp
2040c4d0:    00b50533              add    a0,a0,a1                              allGrp
2040c4d4:    40255513              srai    a0,a0,0x2                            allGrp
2040c4d8:    00100593              li    a1,1                                   allGrp
2040c4dc:    00a59533              sll    a0,a1,a0                              allGrp
2040c4e0:    800005b7              lui    a1,0x80000                            allGrp
2040c4e4:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c4e8:    0045a603              lw    a2,4(a1)                               allGrp
2040c4ec:    00a66533              or    a0,a2,a0                               allGrp
2040c4f0:    00a5a223              sw    a0,4(a1)                               allGrp
2040c4f4:    0700006f              j    2040c564 <_usf_malloc_r+0x7cc>          allGrp, Branch-Instr, controlFlowGrp
2040c4f8:    0040006f              j    2040c4fc <_usf_malloc_r+0x764>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c4fc:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040c500:    fc042583              lw    a1,-64(s0)                             allGrp
2040c504:    00000613              li    a2,0                                   allGrp
2040c508:    f6c42c23              sw    a2,-136(s0)                            allGrp
2040c50c:    02b50263              beq    a0,a1,2040c530 <_usf_malloc_r+0x798>  allGrp, Branch-Instr, controlFlowGrp
2040c510:    0040006f              j    2040c514 <_usf_malloc_r+0x77c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c514:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040c518:    fc442583              lw    a1,-60(s0)                             allGrp
2040c51c:    0045a583              lw    a1,4(a1)                               allGrp
2040c520:    ffc5f593              andi    a1,a1,-4                             allGrp
2040c524:    00b53533              sltu    a0,a0,a1                             allGrp
2040c528:    f6a42c23              sw    a0,-136(s0)                            allGrp
2040c52c:    0040006f              j    2040c530 <_usf_malloc_r+0x798>          allGrp, Branch-Instr, controlFlowGrp
2040c530:    f7842503              lw    a0,-136(s0)                            Branch-Tgt, allGrp
2040c534:    00157513              andi    a0,a0,1                              allGrp
2040c538:    00000593              li    a1,0                                   allGrp
2040c53c:    00b50c63              beq    a0,a1,2040c554 <_usf_malloc_r+0x7bc>  allGrp, Branch-Instr, controlFlowGrp
2040c540:    0040006f              j    2040c544 <_usf_malloc_r+0x7ac>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c544:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040c548:    00852503              lw    a0,8(a0)                               allGrp
2040c54c:    fca42223              sw    a0,-60(s0)                             allGrp
2040c550:    fadff06f              j    2040c4fc <_usf_malloc_r+0x764>          allGrp, Branch-Instr, controlFlowGrp
2040c554:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040c558:    00c52503              lw    a0,12(a0)                              allGrp
2040c55c:    fca42023              sw    a0,-64(s0)                             allGrp
2040c560:    0040006f              j    2040c564 <_usf_malloc_r+0x7cc>          allGrp, Branch-Instr, controlFlowGrp
2040c564:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
2040c568:    fe842583              lw    a1,-24(s0)                             allGrp
2040c56c:    00a5a623              sw    a0,12(a1)                              allGrp
2040c570:    fc442503              lw    a0,-60(s0)                             allGrp
2040c574:    fe842583              lw    a1,-24(s0)                             allGrp
2040c578:    00a5a423              sw    a0,8(a1)                               allGrp
2040c57c:    fe842503              lw    a0,-24(s0)                             allGrp
2040c580:    fc042583              lw    a1,-64(s0)                             allGrp
2040c584:    00a5a423              sw    a0,8(a1)                               allGrp
2040c588:    fc442583              lw    a1,-60(s0)                             allGrp
2040c58c:    00a5a623              sw    a0,12(a1)                              allGrp
2040c590:    0040006f              j    2040c594 <_usf_malloc_r+0x7fc>          allGrp, Branch-Instr, controlFlowGrp
  }
2040c594:    0040006f              j    2040c598 <_usf_malloc_r+0x800>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  if ( (block = idx2binblock(idx)) <= binblocks)  
2040c598:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040c59c:    41f55593              srai    a1,a0,0x1f                           allGrp
2040c5a0:    01e5d593              srli    a1,a1,0x1e                           allGrp
2040c5a4:    00b50533              add    a0,a0,a1                              allGrp
2040c5a8:    40255513              srai    a0,a0,0x2                            allGrp
2040c5ac:    00100593              li    a1,1                                   allGrp
2040c5b0:    00a59533              sll    a0,a1,a0                              allGrp
2040c5b4:    fca42623              sw    a0,-52(s0)                             allGrp
2040c5b8:    800005b7              lui    a1,0x80000                            allGrp
2040c5bc:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c5c0:    0045a583              lw    a1,4(a1)                               allGrp
2040c5c4:    34a5ee63              bltu    a1,a0,2040c920 <_usf_malloc_r+0xb88> allGrp, Branch-Instr, controlFlowGrp
2040c5c8:    0040006f              j    2040c5cc <_usf_malloc_r+0x834>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    if ( (block & binblocks) == 0) 
2040c5cc:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040c5d0:    800005b7              lui    a1,0x80000                            allGrp
2040c5d4:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c5d8:    0045a583              lw    a1,4(a1)                               allGrp
2040c5dc:    00b57533              and    a0,a0,a1                              allGrp
2040c5e0:    00000593              li    a1,0                                   allGrp
2040c5e4:    06b51463              bne    a0,a1,2040c64c <_usf_malloc_r+0x8b4>  allGrp, Branch-Instr, controlFlowGrp
2040c5e8:    0040006f              j    2040c5ec <_usf_malloc_r+0x854>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      idx = (idx & ~(BINBLOCKWIDTH - 1)) + BINBLOCKWIDTH;
2040c5ec:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040c5f0:    ffc57513              andi    a0,a0,-4                             allGrp
2040c5f4:    00450513              addi    a0,a0,4                              allGrp
2040c5f8:    fea42023              sw    a0,-32(s0)                             allGrp
      block <<= 1;
2040c5fc:    fcc42503              lw    a0,-52(s0)                             allGrp
2040c600:    00151513              slli    a0,a0,0x1                            allGrp
2040c604:    fca42623              sw    a0,-52(s0)                             allGrp
      while ((block & binblocks) == 0)
2040c608:    0040006f              j    2040c60c <_usf_malloc_r+0x874>          allGrp, Branch-Instr, controlFlowGrp
2040c60c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040c610:    800005b7              lui    a1,0x80000                            allGrp
2040c614:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c618:    0045a583              lw    a1,4(a1)                               allGrp
2040c61c:    00b57533              and    a0,a0,a1                              allGrp
2040c620:    00000593              li    a1,0                                   allGrp
2040c624:    02b51263              bne    a0,a1,2040c648 <_usf_malloc_r+0x8b0>  allGrp, Branch-Instr, controlFlowGrp
2040c628:    0040006f              j    2040c62c <_usf_malloc_r+0x894>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        idx += BINBLOCKWIDTH;
2040c62c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040c630:    00450513              addi    a0,a0,4                              allGrp
2040c634:    fea42023              sw    a0,-32(s0)                             allGrp
        block <<= 1;
2040c638:    fcc42503              lw    a0,-52(s0)                             allGrp
2040c63c:    00151513              slli    a0,a0,0x1                            allGrp
2040c640:    fca42623              sw    a0,-52(s0)                             allGrp
      while ((block & binblocks) == 0)
2040c644:    fc9ff06f              j    2040c60c <_usf_malloc_r+0x874>          allGrp, Branch-Instr, controlFlowGrp
    }
2040c648:    0040006f              j    2040c64c <_usf_malloc_r+0x8b4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    for (;;)  
2040c64c:    0040006f              j    2040c650 <_usf_malloc_r+0x8b8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      startidx = idx;          /* (track incomplete blocks) */
2040c650:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040c654:    fca42423              sw    a0,-56(s0)                             allGrp
      q = bin = bin_at(idx);
2040c658:    fe042503              lw    a0,-32(s0)                             allGrp
2040c65c:    00351513              slli    a0,a0,0x3                            allGrp
2040c660:    800005b7              lui    a1,0x80000                            allGrp
2040c664:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c668:    00b50533              add    a0,a0,a1                              allGrp
2040c66c:    fca42e23              sw    a0,-36(s0)                             allGrp
2040c670:    faa42e23              sw    a0,-68(s0)                             allGrp
      do
2040c674:    0040006f              j    2040c678 <_usf_malloc_r+0x8e0>          allGrp, Branch-Instr, controlFlowGrp
        for (victim = last(bin); victim != bin; victim = victim->bk)
2040c678:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040c67c:    00c52503              lw    a0,12(a0)                              allGrp
2040c680:    fea42423              sw    a0,-24(s0)                             allGrp
2040c684:    0040006f              j    2040c688 <_usf_malloc_r+0x8f0>          allGrp, Branch-Instr, controlFlowGrp
2040c688:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040c68c:    fdc42583              lw    a1,-36(s0)                             allGrp
2040c690:    16b50e63              beq    a0,a1,2040c80c <_usf_malloc_r+0xa74>  allGrp, Branch-Instr, controlFlowGrp
2040c694:    0040006f              j    2040c698 <_usf_malloc_r+0x900>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
          victim_size = chunksize(victim);
2040c698:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040c69c:    00452503              lw    a0,4(a0)                               allGrp
2040c6a0:    ffc57513              andi    a0,a0,-4                             allGrp
2040c6a4:    fea42223              sw    a0,-28(s0)                             allGrp
          remainder_size = long_sub_size_t(victim_size, nb);
2040c6a8:    fe442503              lw    a0,-28(s0)                             allGrp
2040c6ac:    fb842583              lw    a1,-72(s0)                             allGrp
2040c6b0:    40b50533              sub    a0,a0,a1                              allGrp
2040c6b4:    fca42a23              sw    a0,-44(s0)                             allGrp
          if (remainder_size >= (long)MINSIZE) /* split */
2040c6b8:    fd442503              lw    a0,-44(s0)                             allGrp
2040c6bc:    01000593              li    a1,16                                  allGrp
2040c6c0:    0cb54063              blt    a0,a1,2040c780 <_usf_malloc_r+0x9e8>  allGrp, Branch-Instr, controlFlowGrp
2040c6c4:    0040006f              j    2040c6c8 <_usf_malloc_r+0x930>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
            remainder = chunk_at_offset(victim, nb);
2040c6c8:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040c6cc:    fb842583              lw    a1,-72(s0)                             allGrp
2040c6d0:    00b50533              add    a0,a0,a1                              allGrp
2040c6d4:    fca42c23              sw    a0,-40(s0)                             allGrp
            set_head(victim, nb | PREV_INUSE);
2040c6d8:    fb842503              lw    a0,-72(s0)                             allGrp
2040c6dc:    00156513              ori    a0,a0,1                               allGrp
2040c6e0:    fe842583              lw    a1,-24(s0)                             allGrp
2040c6e4:    00a5a223              sw    a0,4(a1)                               allGrp
            unlink(victim, bck, fwd);
2040c6e8:    fe842503              lw    a0,-24(s0)                             allGrp
2040c6ec:    00c52503              lw    a0,12(a0)                              allGrp
2040c6f0:    fca42023              sw    a0,-64(s0)                             allGrp
2040c6f4:    fe842503              lw    a0,-24(s0)                             allGrp
2040c6f8:    00852503              lw    a0,8(a0)                               allGrp
2040c6fc:    fca42223              sw    a0,-60(s0)                             allGrp
2040c700:    fc042503              lw    a0,-64(s0)                             allGrp
2040c704:    fc442583              lw    a1,-60(s0)                             allGrp
2040c708:    00a5a623              sw    a0,12(a1)                              allGrp
2040c70c:    fc442503              lw    a0,-60(s0)                             allGrp
2040c710:    fc042583              lw    a1,-64(s0)                             allGrp
2040c714:    00a5a423              sw    a0,8(a1)                               allGrp
            link_last_remainder(remainder);
2040c718:    fd842503              lw    a0,-40(s0)                             allGrp
2040c71c:    800005b7              lui    a1,0x80000                            allGrp
2040c720:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c724:    00a5aa23              sw    a0,20(a1)                              allGrp
2040c728:    00a5a823              sw    a0,16(a1)                              allGrp
2040c72c:    fd842503              lw    a0,-40(s0)                             allGrp
2040c730:    00858593              addi    a1,a1,8                              allGrp
2040c734:    00b52623              sw    a1,12(a0)                              allGrp
2040c738:    fd842503              lw    a0,-40(s0)                             allGrp
2040c73c:    00b52423              sw    a1,8(a0)                               allGrp
            set_head(remainder, remainder_size | PREV_INUSE);
2040c740:    fd442503              lw    a0,-44(s0)                             allGrp
2040c744:    00156513              ori    a0,a0,1                               allGrp
2040c748:    fd842583              lw    a1,-40(s0)                             allGrp
2040c74c:    00a5a223              sw    a0,4(a1)                               allGrp
            set_foot(remainder, remainder_size);
2040c750:    fd442503              lw    a0,-44(s0)                             allGrp
2040c754:    fd842583              lw    a1,-40(s0)                             allGrp
2040c758:    fd442603              lw    a2,-44(s0)                             allGrp
2040c75c:    00c585b3              add    a1,a1,a2                              allGrp
2040c760:    00a5a023              sw    a0,0(a1)                               allGrp
	    MALLOC_UNLOCK;
2040c764:    ff042503              lw    a0,-16(s0)                             allGrp
2040c768:    00001097              auipc    ra,0x1                              allGrp
2040c76c:    ba4080e7              jalr    -1116(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
            return chunk2mem(victim);
2040c770:    fe842503              lw    a0,-24(s0)                             Return-Tgt, allGrp
2040c774:    00850513              addi    a0,a0,8                              allGrp
2040c778:    fea42a23              sw    a0,-12(s0)                             allGrp
2040c77c:    2bc0006f              j    2040ca38 <_usf_malloc_r+0xca0>          allGrp, Branch-Instr, controlFlowGrp
          else if (remainder_size >= 0)  /* take */
2040c780:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
2040c784:    00000593              li    a1,0                                   allGrp
2040c788:    06b54663              blt    a0,a1,2040c7f4 <_usf_malloc_r+0xa5c>  allGrp, Branch-Instr, controlFlowGrp
2040c78c:    0040006f              j    2040c790 <_usf_malloc_r+0x9f8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
            set_inuse_bit_at_offset(victim, victim_size);
2040c790:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040c794:    fe442583              lw    a1,-28(s0)                             allGrp
2040c798:    00b50533              add    a0,a0,a1                              allGrp
2040c79c:    00452583              lw    a1,4(a0)                               allGrp
2040c7a0:    0015e593              ori    a1,a1,1                               allGrp
2040c7a4:    00b52223              sw    a1,4(a0)                               allGrp
            unlink(victim, bck, fwd);
2040c7a8:    fe842503              lw    a0,-24(s0)                             allGrp
2040c7ac:    00c52503              lw    a0,12(a0)                              allGrp
2040c7b0:    fca42023              sw    a0,-64(s0)                             allGrp
2040c7b4:    fe842503              lw    a0,-24(s0)                             allGrp
2040c7b8:    00852503              lw    a0,8(a0)                               allGrp
2040c7bc:    fca42223              sw    a0,-60(s0)                             allGrp
2040c7c0:    fc042503              lw    a0,-64(s0)                             allGrp
2040c7c4:    fc442583              lw    a1,-60(s0)                             allGrp
2040c7c8:    00a5a623              sw    a0,12(a1)                              allGrp
2040c7cc:    fc442503              lw    a0,-60(s0)                             allGrp
2040c7d0:    fc042583              lw    a1,-64(s0)                             allGrp
2040c7d4:    00a5a423              sw    a0,8(a1)                               allGrp
	    MALLOC_UNLOCK;
2040c7d8:    ff042503              lw    a0,-16(s0)                             allGrp
2040c7dc:    00001097              auipc    ra,0x1                              allGrp
2040c7e0:    b30080e7              jalr    -1232(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
            return chunk2mem(victim);
2040c7e4:    fe842503              lw    a0,-24(s0)                             Return-Tgt, allGrp
2040c7e8:    00850513              addi    a0,a0,8                              allGrp
2040c7ec:    fea42a23              sw    a0,-12(s0)                             allGrp
2040c7f0:    2480006f              j    2040ca38 <_usf_malloc_r+0xca0>          allGrp, Branch-Instr, controlFlowGrp
2040c7f4:    0040006f              j    2040c7f8 <_usf_malloc_r+0xa60>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        }
2040c7f8:    0040006f              j    2040c7fc <_usf_malloc_r+0xa64>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        for (victim = last(bin); victim != bin; victim = victim->bk)
2040c7fc:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040c800:    00c52503              lw    a0,12(a0)                              allGrp
2040c804:    fea42423              sw    a0,-24(s0)                             allGrp
2040c808:    e81ff06f              j    2040c688 <_usf_malloc_r+0x8f0>          allGrp, Branch-Instr, controlFlowGrp
       bin = next_bin(bin);
2040c80c:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040c810:    00850513              addi    a0,a0,8                              allGrp
2040c814:    fca42e23              sw    a0,-36(s0)                             allGrp
      } while ((++idx & (BINBLOCKWIDTH - 1)) != 0);
2040c818:    0040006f              j    2040c81c <_usf_malloc_r+0xa84>          allGrp, Branch-Instr, controlFlowGrp
2040c81c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040c820:    00150513              addi    a0,a0,1                              allGrp
2040c824:    fea42023              sw    a0,-32(s0)                             allGrp
2040c828:    00357513              andi    a0,a0,3                              allGrp
2040c82c:    00000593              li    a1,0                                   allGrp
2040c830:    e4b514e3              bne    a0,a1,2040c678 <_usf_malloc_r+0x8e0>  allGrp, Branch-Instr, controlFlowGrp
2040c834:    0040006f              j    2040c838 <_usf_malloc_r+0xaa0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      do   /* Possibly backtrack to try to clear a partial block */
2040c838:    0040006f              j    2040c83c <_usf_malloc_r+0xaa4>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        if ((startidx & (BINBLOCKWIDTH - 1)) == 0)
2040c83c:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
2040c840:    00357513              andi    a0,a0,3                              allGrp
2040c844:    00000593              li    a1,0                                   allGrp
2040c848:    02b51463              bne    a0,a1,2040c870 <_usf_malloc_r+0xad8>  allGrp, Branch-Instr, controlFlowGrp
2040c84c:    0040006f              j    2040c850 <_usf_malloc_r+0xab8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
          binblocks &= ~block;
2040c850:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040c854:    fff54513              not    a0,a0                                 allGrp
2040c858:    800005b7              lui    a1,0x80000                            allGrp
2040c85c:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c860:    0045a603              lw    a2,4(a1)                               allGrp
2040c864:    00a67533              and    a0,a2,a0                              allGrp
2040c868:    00a5a223              sw    a0,4(a1)                               allGrp
          break;
2040c86c:    0340006f              j    2040c8a0 <_usf_malloc_r+0xb08>          allGrp, Branch-Instr, controlFlowGrp
        --startidx;
2040c870:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
2040c874:    fff50513              addi    a0,a0,-1                             allGrp
2040c878:    fca42423              sw    a0,-56(s0)                             allGrp
       q = prev_bin(q);
2040c87c:    fbc42503              lw    a0,-68(s0)                             allGrp
2040c880:    ff850513              addi    a0,a0,-8                             allGrp
2040c884:    faa42e23              sw    a0,-68(s0)                             allGrp
      } while (first(q) == q);
2040c888:    0040006f              j    2040c88c <_usf_malloc_r+0xaf4>          allGrp, Branch-Instr, controlFlowGrp
2040c88c:    fbc42503              lw    a0,-68(s0)                             Branch-Tgt, allGrp
2040c890:    00852503              lw    a0,8(a0)                               allGrp
2040c894:    fbc42583              lw    a1,-68(s0)                             allGrp
2040c898:    fab502e3              beq    a0,a1,2040c83c <_usf_malloc_r+0xaa4>  allGrp, Branch-Instr, controlFlowGrp
2040c89c:    0040006f              j    2040c8a0 <_usf_malloc_r+0xb08>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      if ( (block <<= 1) <= binblocks && (block != 0) ) 
2040c8a0:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040c8a4:    00151513              slli    a0,a0,0x1                            allGrp
2040c8a8:    fca42623              sw    a0,-52(s0)                             allGrp
2040c8ac:    800005b7              lui    a1,0x80000                            allGrp
2040c8b0:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c8b4:    0045a583              lw    a1,4(a1)                               allGrp
2040c8b8:    04a5ee63              bltu    a1,a0,2040c914 <_usf_malloc_r+0xb7c> allGrp, Branch-Instr, controlFlowGrp
2040c8bc:    0040006f              j    2040c8c0 <_usf_malloc_r+0xb28>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c8c0:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040c8c4:    00000593              li    a1,0                                   allGrp
2040c8c8:    04b50663              beq    a0,a1,2040c914 <_usf_malloc_r+0xb7c>  allGrp, Branch-Instr, controlFlowGrp
2040c8cc:    0040006f              j    2040c8d0 <_usf_malloc_r+0xb38>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        while ((block & binblocks) == 0)
2040c8d0:    0040006f              j    2040c8d4 <_usf_malloc_r+0xb3c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c8d4:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040c8d8:    800005b7              lui    a1,0x80000                            allGrp
2040c8dc:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c8e0:    0045a583              lw    a1,4(a1)                               allGrp
2040c8e4:    00b57533              and    a0,a0,a1                              allGrp
2040c8e8:    00000593              li    a1,0                                   allGrp
2040c8ec:    02b51263              bne    a0,a1,2040c910 <_usf_malloc_r+0xb78>  allGrp, Branch-Instr, controlFlowGrp
2040c8f0:    0040006f              j    2040c8f4 <_usf_malloc_r+0xb5c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
          idx += BINBLOCKWIDTH;
2040c8f4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040c8f8:    00450513              addi    a0,a0,4                              allGrp
2040c8fc:    fea42023              sw    a0,-32(s0)                             allGrp
          block <<= 1;
2040c900:    fcc42503              lw    a0,-52(s0)                             allGrp
2040c904:    00151513              slli    a0,a0,0x1                            allGrp
2040c908:    fca42623              sw    a0,-52(s0)                             allGrp
        while ((block & binblocks) == 0)
2040c90c:    fc9ff06f              j    2040c8d4 <_usf_malloc_r+0xb3c>          allGrp, Branch-Instr, controlFlowGrp
      }
2040c910:    0080006f              j    2040c918 <_usf_malloc_r+0xb80>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        break;
2040c914:    0080006f              j    2040c91c <_usf_malloc_r+0xb84>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    for (;;)  
2040c918:    d39ff06f              j    2040c650 <_usf_malloc_r+0x8b8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  }
2040c91c:    0040006f              j    2040c920 <_usf_malloc_r+0xb88>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  remainder_size = long_sub_size_t(chunksize(top), nb);
2040c920:    80000537              lui    a0,0x80000                            Branch-Tgt, allGrp
2040c924:    5a050513              addi    a0,a0,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c928:    00852583              lw    a1,8(a0)                               allGrp
2040c92c:    0045a583              lw    a1,4(a1)                               allGrp
2040c930:    ffc5f593              andi    a1,a1,-4                             allGrp
2040c934:    fb842603              lw    a2,-72(s0)                             allGrp
2040c938:    40c585b3              sub    a1,a1,a2                              allGrp
2040c93c:    fcb42a23              sw    a1,-44(s0)                             allGrp
  if (chunksize(top) < nb || remainder_size < (long)MINSIZE)
2040c940:    00852503              lw    a0,8(a0)                               allGrp
2040c944:    00452503              lw    a0,4(a0)                               allGrp
2040c948:    ffc57513              andi    a0,a0,-4                             allGrp
2040c94c:    fb842583              lw    a1,-72(s0)                             allGrp
2040c950:    00b56c63              bltu    a0,a1,2040c968 <_usf_malloc_r+0xbd0> allGrp, Branch-Instr, controlFlowGrp
2040c954:    0040006f              j    2040c958 <_usf_malloc_r+0xbc0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c958:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
2040c95c:    00f00593              li    a1,15                                  allGrp
2040c960:    06a5ce63              blt    a1,a0,2040c9dc <_usf_malloc_r+0xc44>  allGrp, Branch-Instr, controlFlowGrp
2040c964:    0040006f              j    2040c968 <_usf_malloc_r+0xbd0>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    malloc_extend_top(RCALL nb);
2040c968:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040c96c:    fb842583              lw    a1,-72(s0)                             allGrp
2040c970:    00000097              auipc    ra,0x0                              allGrp
2040c974:    0e4080e7              jalr    228(ra) # 2040ca54 <malloc_extend_top>Call-Instr, allGrp, controlFlowGrp
2040c978:    80000537              lui    a0,0x80000                            Return-Tgt, allGrp
2040c97c:    5a050513              addi    a0,a0,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
    remainder_size = long_sub_size_t(chunksize(top), nb);
2040c980:    00852583              lw    a1,8(a0)                               allGrp
2040c984:    0045a583              lw    a1,4(a1)                               allGrp
2040c988:    ffc5f593              andi    a1,a1,-4                             allGrp
2040c98c:    fb842603              lw    a2,-72(s0)                             allGrp
2040c990:    40c585b3              sub    a1,a1,a2                              allGrp
2040c994:    fcb42a23              sw    a1,-44(s0)                             allGrp
    if (chunksize(top) < nb || remainder_size < (long)MINSIZE)
2040c998:    00852503              lw    a0,8(a0)                               allGrp
2040c99c:    00452503              lw    a0,4(a0)                               allGrp
2040c9a0:    ffc57513              andi    a0,a0,-4                             allGrp
2040c9a4:    fb842583              lw    a1,-72(s0)                             allGrp
2040c9a8:    00b56c63              bltu    a0,a1,2040c9c0 <_usf_malloc_r+0xc28> allGrp, Branch-Instr, controlFlowGrp
2040c9ac:    0040006f              j    2040c9b0 <_usf_malloc_r+0xc18>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040c9b0:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
2040c9b4:    00f00593              li    a1,15                                  allGrp
2040c9b8:    02a5c063              blt    a1,a0,2040c9d8 <_usf_malloc_r+0xc40>  allGrp, Branch-Instr, controlFlowGrp
2040c9bc:    0040006f              j    2040c9c0 <_usf_malloc_r+0xc28>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      MALLOC_UNLOCK;
2040c9c0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040c9c4:    00001097              auipc    ra,0x1                              allGrp
2040c9c8:    948080e7              jalr    -1720(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
2040c9cc:    00000513              li    a0,0                                   Return-Tgt, allGrp
      return 0; /* propagate failure */
2040c9d0:    fea42a23              sw    a0,-12(s0)                             allGrp
2040c9d4:    0640006f              j    2040ca38 <_usf_malloc_r+0xca0>          allGrp, Branch-Instr, controlFlowGrp
  }
2040c9d8:    0040006f              j    2040c9dc <_usf_malloc_r+0xc44>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  victim = top;
2040c9dc:    80000537              lui    a0,0x80000                            Branch-Tgt, allGrp
2040c9e0:    5a050513              addi    a0,a0,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040c9e4:    00852583              lw    a1,8(a0)                               allGrp
2040c9e8:    feb42423              sw    a1,-24(s0)                             allGrp
  set_head(victim, nb | PREV_INUSE);
2040c9ec:    fb842583              lw    a1,-72(s0)                             allGrp
2040c9f0:    0015e593              ori    a1,a1,1                               allGrp
2040c9f4:    fe842603              lw    a2,-24(s0)                             allGrp
2040c9f8:    00b62223              sw    a1,4(a2)                               allGrp
  top = chunk_at_offset(victim, nb);
2040c9fc:    fe842583              lw    a1,-24(s0)                             allGrp
2040ca00:    fb842603              lw    a2,-72(s0)                             allGrp
2040ca04:    00c585b3              add    a1,a1,a2                              allGrp
2040ca08:    00b52423              sw    a1,8(a0)                               allGrp
  set_head(top, remainder_size | PREV_INUSE);
2040ca0c:    fd442583              lw    a1,-44(s0)                             allGrp
2040ca10:    0015e593              ori    a1,a1,1                               allGrp
2040ca14:    00852503              lw    a0,8(a0)                               allGrp
2040ca18:    00b52223              sw    a1,4(a0)                               allGrp
  MALLOC_UNLOCK;
2040ca1c:    ff042503              lw    a0,-16(s0)                             allGrp
2040ca20:    00001097              auipc    ra,0x1                              allGrp
2040ca24:    8ec080e7              jalr    -1812(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
  return chunk2mem(victim);
2040ca28:    fe842503              lw    a0,-24(s0)                             Return-Tgt, allGrp
2040ca2c:    00850513              addi    a0,a0,8                              allGrp
2040ca30:    fea42a23              sw    a0,-12(s0)                             allGrp
2040ca34:    0040006f              j    2040ca38 <_usf_malloc_r+0xca0>          allGrp, Branch-Instr, controlFlowGrp
}
2040ca38:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040ca3c:    08812403              lw    s0,136(sp)                             allGrp
2040ca40:    08012423              sw    zero,136(sp)                           allGrp
2040ca44:    08c12083              lw    ra,140(sp)                             allGrp
2040ca48:    08012623              sw    zero,140(sp)                           allGrp
2040ca4c:    09010113              addi    sp,sp,144                            allGrp
2040ca50:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040ca54 <malloc_extend_top>:
2040ca54:    fb010113              addi    sp,sp,-80                            Call-Tgt, allGrp, Branch-Tgt
2040ca58:    04112623              sw    ra,76(sp)                              allGrp
2040ca5c:    04812423              sw    s0,72(sp)                              allGrp
2040ca60:    05010413              addi    s0,sp,80                             allGrp
2040ca64:    00058613              mv    a2,a1                                  allGrp
2040ca68:    00050693              mv    a3,a0                                  allGrp
2040ca6c:    fea42a23              sw    a0,-12(s0)                             allGrp
2040ca70:    feb42823              sw    a1,-16(s0)                             allGrp
2040ca74:    00000513              li    a0,0                                   allGrp
  int correction_failed = 0;      /* whether we should relax the assertion */
2040ca78:    fea42023              sw    a0,-32(s0)                             allGrp
2040ca7c:    80000537              lui    a0,0x80000                            allGrp
2040ca80:    5a050513              addi    a0,a0,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
  mchunkptr old_top     = top;  /* Record state of old top */
2040ca84:    00852503              lw    a0,8(a0)                               allGrp
2040ca88:    fca42a23              sw    a0,-44(s0)                             allGrp
  INTERNAL_SIZE_T old_top_size = chunksize(old_top);
2040ca8c:    fd442503              lw    a0,-44(s0)                             allGrp
2040ca90:    00452503              lw    a0,4(a0)                               allGrp
2040ca94:    ffc57513              andi    a0,a0,-4                             allGrp
2040ca98:    fca42823              sw    a0,-48(s0)                             allGrp
  char*     old_end      = (char*)(chunk_at_offset(old_top, old_top_size));
2040ca9c:    fd442503              lw    a0,-44(s0)                             allGrp
2040caa0:    fd042583              lw    a1,-48(s0)                             allGrp
2040caa4:    00b50533              add    a0,a0,a1                              allGrp
2040caa8:    fca42623              sw    a0,-52(s0)                             allGrp
  INTERNAL_SIZE_T    sbrk_size     = nb + top_pad + MINSIZE;
2040caac:    ff042503              lw    a0,-16(s0)                             allGrp
2040cab0:    800025b7              lui    a1,0x80002                            allGrp
2040cab4:    a185a583              lw    a1,-1512(a1) # 80001a18 <_sp+0xffffda18>allGrp
2040cab8:    00b50533              add    a0,a0,a1                              allGrp
2040cabc:    01050513              addi    a0,a0,16                             allGrp
2040cac0:    fca42423              sw    a0,-56(s0)                             allGrp
2040cac4:    00001537              lui    a0,0x1                                allGrp
  unsigned long pagesz    = malloc_getpagesize;
2040cac8:    fca42223              sw    a0,-60(s0)                             allGrp
  if (sbrk_base != (char*)(-1))
2040cacc:    80001537              lui    a0,0x80001                            allGrp
2040cad0:    9ac52503              lw    a0,-1620(a0) # 800009ac <_sp+0xffffc9ac>allGrp
2040cad4:    fff00593              li    a1,-1                                  allGrp
2040cad8:    fcc42023              sw    a2,-64(s0)                             allGrp
2040cadc:    fad42e23              sw    a3,-68(s0)                             allGrp
2040cae0:    02b50863              beq    a0,a1,2040cb10 <malloc_extend_top+0xbc>allGrp, Branch-Instr, controlFlowGrp
2040cae4:    0040006f              j    2040cae8 <malloc_extend_top+0x94>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    sbrk_size = (sbrk_size + (pagesz - 1)) & ~(pagesz - 1);
2040cae8:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
2040caec:    fc442583              lw    a1,-60(s0)                             allGrp
2040caf0:    00b50533              add    a0,a0,a1                              allGrp
2040caf4:    fff50513              addi    a0,a0,-1                             allGrp
2040caf8:    fc442583              lw    a1,-60(s0)                             allGrp
2040cafc:    fff58593              addi    a1,a1,-1                             allGrp
2040cb00:    fff5c593              not    a1,a1                                 allGrp
2040cb04:    00b57533              and    a0,a0,a1                              allGrp
2040cb08:    fca42423              sw    a0,-56(s0)                             allGrp
2040cb0c:    0040006f              j    2040cb10 <malloc_extend_top+0xbc>       allGrp, Branch-Instr, controlFlowGrp
  brk = (char*)(MORECORE (sbrk_size));
2040cb10:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040cb14:    fc842583              lw    a1,-56(s0)                             allGrp
2040cb18:    00001097              auipc    ra,0x1                              allGrp
2040cb1c:    56c080e7              jalr    1388(ra) # 2040e084 <_sbrk_r>        Call-Instr, allGrp, controlFlowGrp
2040cb20:    fea42623              sw    a0,-20(s0)                             Return-Tgt, allGrp
  if (brk == (char*)(MORECORE_FAILURE) || 
2040cb24:    fec42503              lw    a0,-20(s0)                             allGrp
2040cb28:    fff00593              li    a1,-1                                  allGrp
2040cb2c:    02b50663              beq    a0,a1,2040cb58 <malloc_extend_top+0x104>allGrp, Branch-Instr, controlFlowGrp
2040cb30:    0040006f              j    2040cb34 <malloc_extend_top+0xe0>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      (brk < old_end && old_top != initial_top))
2040cb34:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040cb38:    fcc42583              lw    a1,-52(s0)                             allGrp
2040cb3c:    02b57063              bleu    a1,a0,2040cb5c <malloc_extend_top+0x108>allGrp, Branch-Instr, controlFlowGrp
2040cb40:    0040006f              j    2040cb44 <malloc_extend_top+0xf0>       Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040cb44:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
2040cb48:    800005b7              lui    a1,0x80000                            allGrp
2040cb4c:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
  if (brk == (char*)(MORECORE_FAILURE) || 
2040cb50:    00b50663              beq    a0,a1,2040cb5c <malloc_extend_top+0x108>allGrp, Branch-Instr, controlFlowGrp
2040cb54:    0040006f              j    2040cb58 <malloc_extend_top+0x104>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return;
2040cb58:    2c80006f              j    2040ce20 <malloc_extend_top+0x3cc>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  sbrked_mem += sbrk_size;
2040cb5c:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
2040cb60:    800025b7              lui    a1,0x80002                            allGrp
2040cb64:    a245a603              lw    a2,-1500(a1) # 80001a24 <_sp+0xffffda24>allGrp
2040cb68:    00a60533              add    a0,a2,a0                              allGrp
2040cb6c:    a2a5a223              sw    a0,-1500(a1)                           allGrp
  if (brk == old_end /* can just add bytes to current top, unless
2040cb70:    fec42503              lw    a0,-20(s0)                             allGrp
2040cb74:    fcc42583              lw    a1,-52(s0)                             allGrp
      && ((POINTER_UINT)old_end & (pagesz - 1)) == 0)
2040cb78:    04b51863              bne    a0,a1,2040cbc8 <malloc_extend_top+0x174>allGrp, Branch-Instr, controlFlowGrp
2040cb7c:    0040006f              j    2040cb80 <malloc_extend_top+0x12c>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040cb80:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040cb84:    fc442583              lw    a1,-60(s0)                             allGrp
2040cb88:    fff58593              addi    a1,a1,-1                             allGrp
2040cb8c:    00b57533              and    a0,a0,a1                              allGrp
2040cb90:    00000593              li    a1,0                                   allGrp
  if (brk == old_end /* can just add bytes to current top, unless
2040cb94:    02b51a63              bne    a0,a1,2040cbc8 <malloc_extend_top+0x174>allGrp, Branch-Instr, controlFlowGrp
2040cb98:    0040006f              j    2040cb9c <malloc_extend_top+0x148>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    top_size = sbrk_size + old_top_size;
2040cb9c:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
2040cba0:    fd042583              lw    a1,-48(s0)                             allGrp
2040cba4:    00b50533              add    a0,a0,a1                              allGrp
2040cba8:    fca42c23              sw    a0,-40(s0)                             allGrp
    set_head(top, top_size | PREV_INUSE);
2040cbac:    fd842503              lw    a0,-40(s0)                             allGrp
2040cbb0:    00156513              ori    a0,a0,1                               allGrp
2040cbb4:    800005b7              lui    a1,0x80000                            allGrp
2040cbb8:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040cbbc:    0085a583              lw    a1,8(a1)                               allGrp
2040cbc0:    00a5a223              sw    a0,4(a1)                               allGrp
  }
2040cbc4:    2040006f              j    2040cdc8 <malloc_extend_top+0x374>      allGrp, Branch-Instr, controlFlowGrp
    if (sbrk_base == (char*)(-1))  /* First time through. Record base */
2040cbc8:    80001537              lui    a0,0x80001                            Branch-Tgt, allGrp
2040cbcc:    9ac52503              lw    a0,-1620(a0) # 800009ac <_sp+0xffffc9ac>allGrp
2040cbd0:    fff00593              li    a1,-1                                  allGrp
2040cbd4:    00b51c63              bne    a0,a1,2040cbec <malloc_extend_top+0x198>allGrp, Branch-Instr, controlFlowGrp
2040cbd8:    0040006f              j    2040cbdc <malloc_extend_top+0x188>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      sbrk_base = brk;
2040cbdc:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040cbe0:    800015b7              lui    a1,0x80001                            allGrp
2040cbe4:    9aa5a623              sw    a0,-1620(a1) # 800009ac <_sp+0xffffc9ac>allGrp
2040cbe8:    0240006f              j    2040cc0c <malloc_extend_top+0x1b8>      allGrp, Branch-Instr, controlFlowGrp
      sbrked_mem += brk - (char*)old_end;
2040cbec:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040cbf0:    fcc42583              lw    a1,-52(s0)                             allGrp
2040cbf4:    40b50533              sub    a0,a0,a1                              allGrp
2040cbf8:    800025b7              lui    a1,0x80002                            allGrp
2040cbfc:    a245a603              lw    a2,-1500(a1) # 80001a24 <_sp+0xffffda24>allGrp
2040cc00:    00a60533              add    a0,a2,a0                              allGrp
2040cc04:    a2a5a223              sw    a0,-1500(a1)                           allGrp
2040cc08:    0040006f              j    2040cc0c <malloc_extend_top+0x1b8>      allGrp, Branch-Instr, controlFlowGrp
    front_misalign = (POINTER_UINT)chunk2mem(brk) & MALLOC_ALIGN_MASK;
2040cc0c:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040cc10:    00850513              addi    a0,a0,8                              allGrp
2040cc14:    00757513              andi    a0,a0,7                              allGrp
2040cc18:    fea42423              sw    a0,-24(s0)                             allGrp
    if (front_misalign > 0) 
2040cc1c:    fe842503              lw    a0,-24(s0)                             allGrp
2040cc20:    00000593              li    a1,0                                   allGrp
2040cc24:    02b50663              beq    a0,a1,2040cc50 <malloc_extend_top+0x1fc>allGrp, Branch-Instr, controlFlowGrp
2040cc28:    0040006f              j    2040cc2c <malloc_extend_top+0x1d8>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      correction = (MALLOC_ALIGNMENT) - front_misalign;
2040cc2c:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040cc30:    00800593              li    a1,8                                   allGrp
2040cc34:    40a58533              sub    a0,a1,a0                              allGrp
2040cc38:    fea42223              sw    a0,-28(s0)                             allGrp
      brk += correction;
2040cc3c:    fe442503              lw    a0,-28(s0)                             allGrp
2040cc40:    fec42583              lw    a1,-20(s0)                             allGrp
2040cc44:    00a58533              add    a0,a1,a0                              allGrp
2040cc48:    fea42623              sw    a0,-20(s0)                             allGrp
    }
2040cc4c:    0100006f              j    2040cc5c <malloc_extend_top+0x208>      allGrp, Branch-Instr, controlFlowGrp
      correction = 0;
2040cc50:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040cc54:    fea42223              sw    a0,-28(s0)                             allGrp
2040cc58:    0040006f              j    2040cc5c <malloc_extend_top+0x208>      allGrp, Branch-Instr, controlFlowGrp
    correction += pagesz - ((POINTER_UINT)(brk + sbrk_size) & (pagesz - 1));
2040cc5c:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040cc60:    fec42583              lw    a1,-20(s0)                             allGrp
2040cc64:    fc842603              lw    a2,-56(s0)                             allGrp
2040cc68:    00c585b3              add    a1,a1,a2                              allGrp
2040cc6c:    fc442603              lw    a2,-60(s0)                             allGrp
2040cc70:    fff60613              addi    a2,a2,-1                             allGrp
2040cc74:    00c5f5b3              and    a1,a1,a2                              allGrp
2040cc78:    40b50533              sub    a0,a0,a1                              allGrp
2040cc7c:    fe442583              lw    a1,-28(s0)                             allGrp
2040cc80:    00a58533              add    a0,a1,a0                              allGrp
2040cc84:    fea42223              sw    a0,-28(s0)                             allGrp
    new_brk = (char*)(MORECORE (correction));
2040cc88:    ff442503              lw    a0,-12(s0)                             allGrp
2040cc8c:    fe442583              lw    a1,-28(s0)                             allGrp
2040cc90:    00001097              auipc    ra,0x1                              allGrp
2040cc94:    3f4080e7              jalr    1012(ra) # 2040e084 <_sbrk_r>        Call-Instr, allGrp, controlFlowGrp
2040cc98:    fca42e23              sw    a0,-36(s0)                             Return-Tgt, allGrp
    if (new_brk == (char*)(MORECORE_FAILURE))
2040cc9c:    fdc42503              lw    a0,-36(s0)                             allGrp
2040cca0:    fff00593              li    a1,-1                                  allGrp
2040cca4:    02b51263              bne    a0,a1,2040ccc8 <malloc_extend_top+0x274>allGrp, Branch-Instr, controlFlowGrp
2040cca8:    0040006f              j    2040ccac <malloc_extend_top+0x258>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	correction = 0;
2040ccac:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040ccb0:    fea42223              sw    a0,-28(s0)                             allGrp
2040ccb4:    00100513              li    a0,1                                   allGrp
	correction_failed = 1;
2040ccb8:    fea42023              sw    a0,-32(s0)                             allGrp
	new_brk = brk;
2040ccbc:    fec42503              lw    a0,-20(s0)                             allGrp
2040ccc0:    fca42e23              sw    a0,-36(s0)                             allGrp
      }
2040ccc4:    0040006f              j    2040ccc8 <malloc_extend_top+0x274>      allGrp, Branch-Instr, controlFlowGrp
    sbrked_mem += correction;
2040ccc8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040cccc:    800025b7              lui    a1,0x80002                            allGrp
2040ccd0:    a245a603              lw    a2,-1500(a1) # 80001a24 <_sp+0xffffda24>allGrp
2040ccd4:    00a60533              add    a0,a2,a0                              allGrp
2040ccd8:    a2a5a223              sw    a0,-1500(a1)                           allGrp
    top = (mchunkptr)brk;
2040ccdc:    fec42503              lw    a0,-20(s0)                             allGrp
2040cce0:    800005b7              lui    a1,0x80000                            allGrp
2040cce4:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040cce8:    00a5a423              sw    a0,8(a1)                               allGrp
    top_size = new_brk - brk + correction;
2040ccec:    fdc42503              lw    a0,-36(s0)                             allGrp
2040ccf0:    fec42603              lw    a2,-20(s0)                             allGrp
2040ccf4:    40c50533              sub    a0,a0,a2                              allGrp
2040ccf8:    fe442603              lw    a2,-28(s0)                             allGrp
2040ccfc:    00c50533              add    a0,a0,a2                              allGrp
2040cd00:    fca42c23              sw    a0,-40(s0)                             allGrp
    set_head(top, top_size | PREV_INUSE);
2040cd04:    fd842503              lw    a0,-40(s0)                             allGrp
2040cd08:    00156513              ori    a0,a0,1                               allGrp
2040cd0c:    0085a603              lw    a2,8(a1)                               allGrp
2040cd10:    00a62223              sw    a0,4(a2)                               allGrp
    if (old_top != initial_top)
2040cd14:    fd442503              lw    a0,-44(s0)                             allGrp
2040cd18:    0ab50663              beq    a0,a1,2040cdc4 <malloc_extend_top+0x370>allGrp, Branch-Instr, controlFlowGrp
2040cd1c:    0040006f              j    2040cd20 <malloc_extend_top+0x2cc>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      if (old_top_size < MINSIZE) 
2040cd20:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040cd24:    00f00593              li    a1,15                                  allGrp
2040cd28:    02a5e063              bltu    a1,a0,2040cd48 <malloc_extend_top+0x2f4>allGrp, Branch-Instr, controlFlowGrp
2040cd2c:    0040006f              j    2040cd30 <malloc_extend_top+0x2dc>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        set_head(top, PREV_INUSE); /* will force null return from malloc */
2040cd30:    80000537              lui    a0,0x80000                            Branch-Tgt, allGrp
2040cd34:    5a050513              addi    a0,a0,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040cd38:    00852503              lw    a0,8(a0)                               allGrp
2040cd3c:    00100593              li    a1,1                                   allGrp
2040cd40:    00b52223              sw    a1,4(a0)                               allGrp
        return;
2040cd44:    0dc0006f              j    2040ce20 <malloc_extend_top+0x3cc>      allGrp, Branch-Instr, controlFlowGrp
      old_top_size = (old_top_size - 3*SIZE_SZ) & ~MALLOC_ALIGN_MASK;
2040cd48:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040cd4c:    ff450513              addi    a0,a0,-12                            allGrp
2040cd50:    ff857513              andi    a0,a0,-8                             allGrp
2040cd54:    fca42823              sw    a0,-48(s0)                             allGrp
      set_head_size(old_top, old_top_size);
2040cd58:    fd442503              lw    a0,-44(s0)                             allGrp
2040cd5c:    00452503              lw    a0,4(a0)                               allGrp
2040cd60:    00157513              andi    a0,a0,1                              allGrp
2040cd64:    fd042583              lw    a1,-48(s0)                             allGrp
2040cd68:    00b56533              or    a0,a0,a1                               allGrp
2040cd6c:    fd442583              lw    a1,-44(s0)                             allGrp
2040cd70:    00a5a223              sw    a0,4(a1)                               allGrp
      chunk_at_offset(old_top, old_top_size          )->size =
2040cd74:    fd442503              lw    a0,-44(s0)                             allGrp
2040cd78:    fd042583              lw    a1,-48(s0)                             allGrp
2040cd7c:    00b50533              add    a0,a0,a1                              allGrp
2040cd80:    00500593              li    a1,5                                   allGrp
2040cd84:    00b52223              sw    a1,4(a0)                               allGrp
      chunk_at_offset(old_top, old_top_size + SIZE_SZ)->size =
2040cd88:    fd442503              lw    a0,-44(s0)                             allGrp
2040cd8c:    fd042603              lw    a2,-48(s0)                             allGrp
2040cd90:    00c50533              add    a0,a0,a2                              allGrp
2040cd94:    00b52423              sw    a1,8(a0)                               allGrp
      if (old_top_size >= MINSIZE) 
2040cd98:    fd042503              lw    a0,-48(s0)                             allGrp
2040cd9c:    01000593              li    a1,16                                  allGrp
2040cda0:    02b56063              bltu    a0,a1,2040cdc0 <malloc_extend_top+0x36c>allGrp, Branch-Instr, controlFlowGrp
2040cda4:    0040006f              j    2040cda8 <malloc_extend_top+0x354>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        fREe(RCALL chunk2mem(old_top));
2040cda8:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040cdac:    fd442583              lw    a1,-44(s0)                             allGrp
2040cdb0:    00858593              addi    a1,a1,8                              allGrp
2040cdb4:    00001097              auipc    ra,0x1                              allGrp
2040cdb8:    364080e7              jalr    868(ra) # 2040e118 <_usf_free_r>     Call-Instr, allGrp, controlFlowGrp
2040cdbc:    0040006f              j    2040cdc0 <malloc_extend_top+0x36c>      Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
    }
2040cdc0:    0040006f              j    2040cdc4 <malloc_extend_top+0x370>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040cdc4:    0040006f              j    2040cdc8 <malloc_extend_top+0x374>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  if ((unsigned long)sbrked_mem > (unsigned long)max_sbrked_mem) 
2040cdc8:    80002537              lui    a0,0x80002                            Branch-Tgt, allGrp
2040cdcc:    a2452503              lw    a0,-1500(a0) # 80001a24 <_sp+0xffffda24>allGrp
2040cdd0:    800025b7              lui    a1,0x80002                            allGrp
2040cdd4:    a1c5a583              lw    a1,-1508(a1) # 80001a1c <_sp+0xffffda1c>allGrp
2040cdd8:    00a5fe63              bleu    a0,a1,2040cdf4 <malloc_extend_top+0x3a0>allGrp, Branch-Instr, controlFlowGrp
2040cddc:    0040006f              j    2040cde0 <malloc_extend_top+0x38c>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    max_sbrked_mem = sbrked_mem;
2040cde0:    80002537              lui    a0,0x80002                            Branch-Tgt, allGrp
2040cde4:    a2452503              lw    a0,-1500(a0) # 80001a24 <_sp+0xffffda24>allGrp
2040cde8:    800025b7              lui    a1,0x80002                            allGrp
2040cdec:    a0a5ae23              sw    a0,-1508(a1) # 80001a1c <_sp+0xffffda1c>allGrp
2040cdf0:    0040006f              j    2040cdf4 <malloc_extend_top+0x3a0>      allGrp, Branch-Instr, controlFlowGrp
  if ((unsigned long)(sbrked_mem) > (unsigned long)max_total_mem) 
2040cdf4:    80002537              lui    a0,0x80002                            Branch-Tgt, allGrp
2040cdf8:    a2452503              lw    a0,-1500(a0) # 80001a24 <_sp+0xffffda24>allGrp
2040cdfc:    800025b7              lui    a1,0x80002                            allGrp
2040ce00:    a205a583              lw    a1,-1504(a1) # 80001a20 <_sp+0xffffda20>allGrp
2040ce04:    00a5fe63              bleu    a0,a1,2040ce20 <malloc_extend_top+0x3cc>allGrp, Branch-Instr, controlFlowGrp
2040ce08:    0040006f              j    2040ce0c <malloc_extend_top+0x3b8>      Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    max_total_mem = sbrked_mem;
2040ce0c:    80002537              lui    a0,0x80002                            Branch-Tgt, allGrp
2040ce10:    a2452503              lw    a0,-1500(a0) # 80001a24 <_sp+0xffffda24>allGrp
2040ce14:    800025b7              lui    a1,0x80002                            allGrp
2040ce18:    a2a5a023              sw    a0,-1504(a1) # 80001a20 <_sp+0xffffda20>allGrp
2040ce1c:    0040006f              j    2040ce20 <malloc_extend_top+0x3cc>      allGrp, Branch-Instr, controlFlowGrp
}
2040ce20:    04812403              lw    s0,72(sp)                              Branch-Tgt, allGrp
2040ce24:    04012423              sw    zero,72(sp)                            allGrp
2040ce28:    04c12083              lw    ra,76(sp)                              allGrp
2040ce2c:    04012623              sw    zero,76(sp)                            allGrp
2040ce30:    05010113              addi    sp,sp,80                             allGrp
2040ce34:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040ce38 <memmove>:
2040ce38:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
2040ce3c:    02112623              sw    ra,44(sp)                              allGrp
2040ce40:    02812423              sw    s0,40(sp)                              allGrp
2040ce44:    03010413              addi    s0,sp,48                             allGrp
2040ce48:    00060693              mv    a3,a2                                  allGrp
2040ce4c:    00058713              mv    a4,a1                                  allGrp
2040ce50:    00050793              mv    a5,a0                                  allGrp
2040ce54:    fea42a23              sw    a0,-12(s0)                             allGrp
2040ce58:    feb42823              sw    a1,-16(s0)                             allGrp
2040ce5c:    fec42623              sw    a2,-20(s0)                             allGrp
	}
    }

  return dst_void;
#else
  char *dst = dst_void;
2040ce60:    ff442503              lw    a0,-12(s0)                             allGrp
2040ce64:    fea42423              sw    a0,-24(s0)                             allGrp
  _CONST char *src = src_void;
2040ce68:    ff042503              lw    a0,-16(s0)                             allGrp
2040ce6c:    fea42223              sw    a0,-28(s0)                             allGrp
  long *aligned_dst;
  _CONST long *aligned_src;

  if (src < dst && dst < src + length)
2040ce70:    fe442503              lw    a0,-28(s0)                             allGrp
2040ce74:    fe842583              lw    a1,-24(s0)                             allGrp
2040ce78:    fcd42c23              sw    a3,-40(s0)                             allGrp
2040ce7c:    fce42a23              sw    a4,-44(s0)                             allGrp
2040ce80:    fcf42823              sw    a5,-48(s0)                             allGrp
2040ce84:    08b57263              bleu    a1,a0,2040cf08 <memmove+0xd0>        allGrp, Branch-Instr, controlFlowGrp
2040ce88:    0040006f              j    2040ce8c <memmove+0x54>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040ce8c:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040ce90:    fe442583              lw    a1,-28(s0)                             allGrp
2040ce94:    fec42603              lw    a2,-20(s0)                             allGrp
2040ce98:    00c585b3              add    a1,a1,a2                              allGrp
2040ce9c:    06b57663              bleu    a1,a0,2040cf08 <memmove+0xd0>        allGrp, Branch-Instr, controlFlowGrp
2040cea0:    0040006f              j    2040cea4 <memmove+0x6c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      /* Destructive overlap...have to copy backwards */
      src += length;
2040cea4:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040cea8:    fe442583              lw    a1,-28(s0)                             allGrp
2040ceac:    00a58533              add    a0,a1,a0                              allGrp
2040ceb0:    fea42223              sw    a0,-28(s0)                             allGrp
      dst += length;
2040ceb4:    fec42503              lw    a0,-20(s0)                             allGrp
2040ceb8:    fe842583              lw    a1,-24(s0)                             allGrp
2040cebc:    00a58533              add    a0,a1,a0                              allGrp
2040cec0:    fea42423              sw    a0,-24(s0)                             allGrp
      while (length--)
2040cec4:    0040006f              j    2040cec8 <memmove+0x90>                 allGrp, Branch-Instr, controlFlowGrp
2040cec8:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040cecc:    fff50593              addi    a1,a0,-1                             allGrp
2040ced0:    feb42623              sw    a1,-20(s0)                             allGrp
2040ced4:    00000593              li    a1,0                                   allGrp
2040ced8:    02b50663              beq    a0,a1,2040cf04 <memmove+0xcc>         allGrp, Branch-Instr, controlFlowGrp
2040cedc:    0040006f              j    2040cee0 <memmove+0xa8>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  *--dst = *--src;
2040cee0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040cee4:    fff50593              addi    a1,a0,-1                             allGrp
2040cee8:    feb42223              sw    a1,-28(s0)                             allGrp
2040ceec:    fff50503              lb    a0,-1(a0)                              allGrp
2040cef0:    fe842583              lw    a1,-24(s0)                             allGrp
2040cef4:    fff58613              addi    a2,a1,-1                             allGrp
2040cef8:    fec42423              sw    a2,-24(s0)                             allGrp
2040cefc:    fea58fa3              sb    a0,-1(a1)                              allGrp
      while (length--)
2040cf00:    fc9ff06f              j    2040cec8 <memmove+0x90>                 allGrp, Branch-Instr, controlFlowGrp
	}
    }
2040cf04:    1800006f              j    2040d084 <memmove+0x24c>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  else
    {
      /* Use optimizing algorithm for a non-destructive copy to closely 
         match memcpy. If the size is small or either SRC or DST is unaligned,
         then punt into the byte copy loop.  This should be rare.  */
      if (!TOO_SMALL(length) && !UNALIGNED (src, dst))
2040cf08:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040cf0c:    01000593              li    a1,16                                  allGrp
2040cf10:    12b56863              bltu    a0,a1,2040d040 <memmove+0x208>       allGrp, Branch-Instr, controlFlowGrp
2040cf14:    0040006f              j    2040cf18 <memmove+0xe0>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040cf18:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040cf1c:    fe842583              lw    a1,-24(s0)                             allGrp
2040cf20:    00b56533              or    a0,a0,a1                               allGrp
2040cf24:    00357513              andi    a0,a0,3                              allGrp
2040cf28:    00000593              li    a1,0                                   allGrp
2040cf2c:    10b51a63              bne    a0,a1,2040d040 <memmove+0x208>        allGrp, Branch-Instr, controlFlowGrp
2040cf30:    0040006f              j    2040cf34 <memmove+0xfc>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        {
          aligned_dst = (long*)dst;
2040cf34:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040cf38:    fea42023              sw    a0,-32(s0)                             allGrp
          aligned_src = (long*)src;
2040cf3c:    fe442503              lw    a0,-28(s0)                             allGrp
2040cf40:    fca42e23              sw    a0,-36(s0)                             allGrp

          /* Copy 4X long words at a time if possible.  */
          while (length >= BIGBLOCKSIZE)
2040cf44:    0040006f              j    2040cf48 <memmove+0x110>                allGrp, Branch-Instr, controlFlowGrp
2040cf48:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040cf4c:    01000593              li    a1,16                                  allGrp
2040cf50:    08b56c63              bltu    a0,a1,2040cfe8 <memmove+0x1b0>       allGrp, Branch-Instr, controlFlowGrp
2040cf54:    0040006f              j    2040cf58 <memmove+0x120>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
            {
              *aligned_dst++ = *aligned_src++;
2040cf58:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040cf5c:    00450593              addi    a1,a0,4                              allGrp
2040cf60:    fcb42e23              sw    a1,-36(s0)                             allGrp
2040cf64:    00052503              lw    a0,0(a0)                               allGrp
2040cf68:    fe042583              lw    a1,-32(s0)                             allGrp
2040cf6c:    00458613              addi    a2,a1,4                              allGrp
2040cf70:    fec42023              sw    a2,-32(s0)                             allGrp
2040cf74:    00a5a023              sw    a0,0(a1)                               allGrp
              *aligned_dst++ = *aligned_src++;
2040cf78:    fdc42503              lw    a0,-36(s0)                             allGrp
2040cf7c:    00450593              addi    a1,a0,4                              allGrp
2040cf80:    fcb42e23              sw    a1,-36(s0)                             allGrp
2040cf84:    00052503              lw    a0,0(a0)                               allGrp
2040cf88:    fe042583              lw    a1,-32(s0)                             allGrp
2040cf8c:    00458613              addi    a2,a1,4                              allGrp
2040cf90:    fec42023              sw    a2,-32(s0)                             allGrp
2040cf94:    00a5a023              sw    a0,0(a1)                               allGrp
              *aligned_dst++ = *aligned_src++;
2040cf98:    fdc42503              lw    a0,-36(s0)                             allGrp
2040cf9c:    00450593              addi    a1,a0,4                              allGrp
2040cfa0:    fcb42e23              sw    a1,-36(s0)                             allGrp
2040cfa4:    00052503              lw    a0,0(a0)                               allGrp
2040cfa8:    fe042583              lw    a1,-32(s0)                             allGrp
2040cfac:    00458613              addi    a2,a1,4                              allGrp
2040cfb0:    fec42023              sw    a2,-32(s0)                             allGrp
2040cfb4:    00a5a023              sw    a0,0(a1)                               allGrp
              *aligned_dst++ = *aligned_src++;
2040cfb8:    fdc42503              lw    a0,-36(s0)                             allGrp
2040cfbc:    00450593              addi    a1,a0,4                              allGrp
2040cfc0:    fcb42e23              sw    a1,-36(s0)                             allGrp
2040cfc4:    00052503              lw    a0,0(a0)                               allGrp
2040cfc8:    fe042583              lw    a1,-32(s0)                             allGrp
2040cfcc:    00458613              addi    a2,a1,4                              allGrp
2040cfd0:    fec42023              sw    a2,-32(s0)                             allGrp
2040cfd4:    00a5a023              sw    a0,0(a1)                               allGrp
              length -= BIGBLOCKSIZE;
2040cfd8:    fec42503              lw    a0,-20(s0)                             allGrp
2040cfdc:    ff050513              addi    a0,a0,-16                            allGrp
2040cfe0:    fea42623              sw    a0,-20(s0)                             allGrp
          while (length >= BIGBLOCKSIZE)
2040cfe4:    f65ff06f              j    2040cf48 <memmove+0x110>                allGrp, Branch-Instr, controlFlowGrp
            }

          /* Copy one long word at a time if possible.  */
          while (length >= LITTLEBLOCKSIZE)
2040cfe8:    0040006f              j    2040cfec <memmove+0x1b4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040cfec:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040cff0:    00400593              li    a1,4                                   allGrp
2040cff4:    02b56c63              bltu    a0,a1,2040d02c <memmove+0x1f4>       allGrp, Branch-Instr, controlFlowGrp
2040cff8:    0040006f              j    2040cffc <memmove+0x1c4>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
            {
              *aligned_dst++ = *aligned_src++;
2040cffc:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040d000:    00450593              addi    a1,a0,4                              allGrp
2040d004:    fcb42e23              sw    a1,-36(s0)                             allGrp
2040d008:    00052503              lw    a0,0(a0)                               allGrp
2040d00c:    fe042583              lw    a1,-32(s0)                             allGrp
2040d010:    00458613              addi    a2,a1,4                              allGrp
2040d014:    fec42023              sw    a2,-32(s0)                             allGrp
2040d018:    00a5a023              sw    a0,0(a1)                               allGrp
              length -= LITTLEBLOCKSIZE;
2040d01c:    fec42503              lw    a0,-20(s0)                             allGrp
2040d020:    ffc50513              addi    a0,a0,-4                             allGrp
2040d024:    fea42623              sw    a0,-20(s0)                             allGrp
          while (length >= LITTLEBLOCKSIZE)
2040d028:    fc5ff06f              j    2040cfec <memmove+0x1b4>                allGrp, Branch-Instr, controlFlowGrp
            }

          /* Pick up any residual with a byte copier.  */
          dst = (char*)aligned_dst;
2040d02c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040d030:    fea42423              sw    a0,-24(s0)                             allGrp
          src = (char*)aligned_src;
2040d034:    fdc42503              lw    a0,-36(s0)                             allGrp
2040d038:    fea42223              sw    a0,-28(s0)                             allGrp
        }
2040d03c:    0040006f              j    2040d040 <memmove+0x208>                allGrp, Branch-Instr, controlFlowGrp

      while (length--)
2040d040:    0040006f              j    2040d044 <memmove+0x20c>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d044:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040d048:    fff50593              addi    a1,a0,-1                             allGrp
2040d04c:    feb42623              sw    a1,-20(s0)                             allGrp
2040d050:    00000593              li    a1,0                                   allGrp
2040d054:    02b50663              beq    a0,a1,2040d080 <memmove+0x248>        allGrp, Branch-Instr, controlFlowGrp
2040d058:    0040006f              j    2040d05c <memmove+0x224>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        {
          *dst++ = *src++;
2040d05c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040d060:    00150593              addi    a1,a0,1                              allGrp
2040d064:    feb42223              sw    a1,-28(s0)                             allGrp
2040d068:    00050503              lb    a0,0(a0)                               allGrp
2040d06c:    fe842583              lw    a1,-24(s0)                             allGrp
2040d070:    00158613              addi    a2,a1,1                              allGrp
2040d074:    fec42423              sw    a2,-24(s0)                             allGrp
2040d078:    00a58023              sb    a0,0(a1)                               allGrp
      while (length--)
2040d07c:    fc9ff06f              j    2040d044 <memmove+0x20c>                allGrp, Branch-Instr, controlFlowGrp
2040d080:    0040006f              j    2040d084 <memmove+0x24c>                Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        }
    }

  return dst_void;
2040d084:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040d088:    02812403              lw    s0,40(sp)                              allGrp
2040d08c:    02012423              sw    zero,40(sp)                            allGrp
2040d090:    02c12083              lw    ra,44(sp)                              allGrp
2040d094:    02012623              sw    zero,44(sp)                            allGrp
2040d098:    03010113              addi    sp,sp,48                             allGrp
2040d09c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040d0a0 <memset>:
2040d0a0:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp, Branch-Tgt
2040d0a4:    02112e23              sw    ra,60(sp)                              allGrp
2040d0a8:    02812c23              sw    s0,56(sp)                              allGrp
2040d0ac:    04010413              addi    s0,sp,64                             allGrp
2040d0b0:    00060693              mv    a3,a2                                  allGrp
2040d0b4:    00058713              mv    a4,a1                                  allGrp
2040d0b8:    00050793              mv    a5,a0                                  allGrp
2040d0bc:    fea42823              sw    a0,-16(s0)                             allGrp
2040d0c0:    feb42623              sw    a1,-20(s0)                             allGrp
2040d0c4:    fec42423              sw    a2,-24(s0)                             allGrp
_DEFUN (memset, (m, c, n),
	_PTR m _AND
	int c _AND
	size_t n)
{
  char *s = (char *) m;
2040d0c8:    ff042503              lw    a0,-16(s0)                             allGrp
2040d0cc:    fea42223              sw    a0,-28(s0)                             allGrp

#if !defined(PREFER_SIZE_OVER_SPEED) && !defined(__OPTIMIZE_SIZE__)
  unsigned int i;
  unsigned long buffer;
  unsigned long *aligned_addr;
  unsigned int d = c & 0xff;	/* To avoid sign extension, copy C to an
2040d0d0:    fec44503              lbu    a0,-20(s0)                            allGrp
2040d0d4:    fca42a23              sw    a0,-44(s0)                             allGrp
				   unsigned variable.  */

  while (UNALIGNED (s))
2040d0d8:    fcd42823              sw    a3,-48(s0)                             allGrp
2040d0dc:    fce42623              sw    a4,-52(s0)                             allGrp
2040d0e0:    fcf42423              sw    a5,-56(s0)                             allGrp
2040d0e4:    0040006f              j    2040d0e8 <memset+0x48>                  allGrp, Branch-Instr, controlFlowGrp
2040d0e8:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040d0ec:    00357513              andi    a0,a0,3                              allGrp
2040d0f0:    00000593              li    a1,0                                   allGrp
2040d0f4:    04b50463              beq    a0,a1,2040d13c <memset+0x9c>          allGrp, Branch-Instr, controlFlowGrp
2040d0f8:    0040006f              j    2040d0fc <memset+0x5c>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      if (n--)
2040d0fc:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040d100:    fff50593              addi    a1,a0,-1                             allGrp
2040d104:    feb42423              sw    a1,-24(s0)                             allGrp
2040d108:    00000593              li    a1,0                                   allGrp
2040d10c:    02b50063              beq    a0,a1,2040d12c <memset+0x8c>          allGrp, Branch-Instr, controlFlowGrp
2040d110:    0040006f              j    2040d114 <memset+0x74>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        *s++ = (char) c;
2040d114:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040d118:    fe442583              lw    a1,-28(s0)                             allGrp
2040d11c:    00158613              addi    a2,a1,1                              allGrp
2040d120:    fec42223              sw    a2,-28(s0)                             allGrp
2040d124:    00a58023              sb    a0,0(a1)                               allGrp
2040d128:    0100006f              j    2040d138 <memset+0x98>                  allGrp, Branch-Instr, controlFlowGrp
      else
        return m;
2040d12c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040d130:    fea42a23              sw    a0,-12(s0)                             allGrp
2040d134:    1880006f              j    2040d2bc <memset+0x21c>                 allGrp, Branch-Instr, controlFlowGrp
  while (UNALIGNED (s))
2040d138:    fb1ff06f              j    2040d0e8 <memset+0x48>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    }

  if (!TOO_SMALL (n))
2040d13c:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040d140:    00400593              li    a1,4                                   allGrp
2040d144:    12b56c63              bltu    a0,a1,2040d27c <memset+0x1dc>        allGrp, Branch-Instr, controlFlowGrp
2040d148:    0040006f              j    2040d14c <memset+0xac>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      /* If we get this far, we know that n is large and s is word-aligned. */
      aligned_addr = (unsigned long *) s;
2040d14c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040d150:    fca42c23              sw    a0,-40(s0)                             allGrp

      /* Store D into each char sized location in BUFFER so that
         we can set large blocks quickly.  */
      buffer = (d << 8) | d;
2040d154:    fd442503              lw    a0,-44(s0)                             allGrp
2040d158:    00851513              slli    a0,a0,0x8                            allGrp
2040d15c:    fd442583              lw    a1,-44(s0)                             allGrp
2040d160:    00b56533              or    a0,a0,a1                               allGrp
2040d164:    fca42e23              sw    a0,-36(s0)                             allGrp
      buffer |= (buffer << 16);
2040d168:    fdc42503              lw    a0,-36(s0)                             allGrp
2040d16c:    01051513              slli    a0,a0,0x10                           allGrp
2040d170:    fdc42583              lw    a1,-36(s0)                             allGrp
2040d174:    00a5e533              or    a0,a1,a0                               allGrp
2040d178:    fca42e23              sw    a0,-36(s0)                             allGrp
2040d17c:    02000513              li    a0,32                                  allGrp
      for (i = 32; i < LBLOCKSIZE * 8; i <<= 1)
2040d180:    fea42023              sw    a0,-32(s0)                             allGrp
2040d184:    0040006f              j    2040d188 <memset+0xe8>                  allGrp, Branch-Instr, controlFlowGrp
2040d188:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040d18c:    01f00593              li    a1,31                                  allGrp
2040d190:    02a5ea63              bltu    a1,a0,2040d1c4 <memset+0x124>        allGrp, Branch-Instr, controlFlowGrp
2040d194:    0040006f              j    2040d198 <memset+0xf8>                  Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        buffer = (buffer << i) | buffer;
2040d198:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040d19c:    fe042583              lw    a1,-32(s0)                             allGrp
2040d1a0:    00b51533              sll    a0,a0,a1                              allGrp
2040d1a4:    fdc42583              lw    a1,-36(s0)                             allGrp
2040d1a8:    00b56533              or    a0,a0,a1                               allGrp
2040d1ac:    fca42e23              sw    a0,-36(s0)                             allGrp
2040d1b0:    0040006f              j    2040d1b4 <memset+0x114>                 allGrp, Branch-Instr, controlFlowGrp
      for (i = 32; i < LBLOCKSIZE * 8; i <<= 1)
2040d1b4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040d1b8:    00151513              slli    a0,a0,0x1                            allGrp
2040d1bc:    fea42023              sw    a0,-32(s0)                             allGrp
2040d1c0:    fc9ff06f              j    2040d188 <memset+0xe8>                  allGrp, Branch-Instr, controlFlowGrp

      /* Unroll the loop.  */
      while (n >= LBLOCKSIZE*4)
2040d1c4:    0040006f              j    2040d1c8 <memset+0x128>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d1c8:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040d1cc:    01000593              li    a1,16                                  allGrp
2040d1d0:    06b56463              bltu    a0,a1,2040d238 <memset+0x198>        allGrp, Branch-Instr, controlFlowGrp
2040d1d4:    0040006f              j    2040d1d8 <memset+0x138>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        {
          *aligned_addr++ = buffer;
2040d1d8:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040d1dc:    fd842583              lw    a1,-40(s0)                             allGrp
2040d1e0:    00458613              addi    a2,a1,4                              allGrp
2040d1e4:    fcc42c23              sw    a2,-40(s0)                             allGrp
2040d1e8:    00a5a023              sw    a0,0(a1)                               allGrp
          *aligned_addr++ = buffer;
2040d1ec:    fdc42503              lw    a0,-36(s0)                             allGrp
2040d1f0:    fd842583              lw    a1,-40(s0)                             allGrp
2040d1f4:    00458613              addi    a2,a1,4                              allGrp
2040d1f8:    fcc42c23              sw    a2,-40(s0)                             allGrp
2040d1fc:    00a5a023              sw    a0,0(a1)                               allGrp
          *aligned_addr++ = buffer;
2040d200:    fdc42503              lw    a0,-36(s0)                             allGrp
2040d204:    fd842583              lw    a1,-40(s0)                             allGrp
2040d208:    00458613              addi    a2,a1,4                              allGrp
2040d20c:    fcc42c23              sw    a2,-40(s0)                             allGrp
2040d210:    00a5a023              sw    a0,0(a1)                               allGrp
          *aligned_addr++ = buffer;
2040d214:    fdc42503              lw    a0,-36(s0)                             allGrp
2040d218:    fd842583              lw    a1,-40(s0)                             allGrp
2040d21c:    00458613              addi    a2,a1,4                              allGrp
2040d220:    fcc42c23              sw    a2,-40(s0)                             allGrp
2040d224:    00a5a023              sw    a0,0(a1)                               allGrp
          n -= 4*LBLOCKSIZE;
2040d228:    fe842503              lw    a0,-24(s0)                             allGrp
2040d22c:    ff050513              addi    a0,a0,-16                            allGrp
2040d230:    fea42423              sw    a0,-24(s0)                             allGrp
      while (n >= LBLOCKSIZE*4)
2040d234:    f95ff06f              j    2040d1c8 <memset+0x128>                 allGrp, Branch-Instr, controlFlowGrp
        }

      while (n >= LBLOCKSIZE)
2040d238:    0040006f              j    2040d23c <memset+0x19c>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d23c:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040d240:    00400593              li    a1,4                                   allGrp
2040d244:    02b56663              bltu    a0,a1,2040d270 <memset+0x1d0>        allGrp, Branch-Instr, controlFlowGrp
2040d248:    0040006f              j    2040d24c <memset+0x1ac>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        {
          *aligned_addr++ = buffer;
2040d24c:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040d250:    fd842583              lw    a1,-40(s0)                             allGrp
2040d254:    00458613              addi    a2,a1,4                              allGrp
2040d258:    fcc42c23              sw    a2,-40(s0)                             allGrp
2040d25c:    00a5a023              sw    a0,0(a1)                               allGrp
          n -= LBLOCKSIZE;
2040d260:    fe842503              lw    a0,-24(s0)                             allGrp
2040d264:    ffc50513              addi    a0,a0,-4                             allGrp
2040d268:    fea42423              sw    a0,-24(s0)                             allGrp
      while (n >= LBLOCKSIZE)
2040d26c:    fd1ff06f              j    2040d23c <memset+0x19c>                 allGrp, Branch-Instr, controlFlowGrp
        }
      /* Pick up the remainder with a bytewise loop.  */
      s = (char*)aligned_addr;
2040d270:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040d274:    fea42223              sw    a0,-28(s0)                             allGrp
    }
2040d278:    0040006f              j    2040d27c <memset+0x1dc>                 allGrp, Branch-Instr, controlFlowGrp

#endif /* not PREFER_SIZE_OVER_SPEED */

  while (n--)
2040d27c:    0040006f              j    2040d280 <memset+0x1e0>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d280:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040d284:    fff50593              addi    a1,a0,-1                             allGrp
2040d288:    feb42423              sw    a1,-24(s0)                             allGrp
2040d28c:    00000593              li    a1,0                                   allGrp
2040d290:    02b50063              beq    a0,a1,2040d2b0 <memset+0x210>         allGrp, Branch-Instr, controlFlowGrp
2040d294:    0040006f              j    2040d298 <memset+0x1f8>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    *s++ = (char) c;
2040d298:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040d29c:    fe442583              lw    a1,-28(s0)                             allGrp
2040d2a0:    00158613              addi    a2,a1,1                              allGrp
2040d2a4:    fec42223              sw    a2,-28(s0)                             allGrp
2040d2a8:    00a58023              sb    a0,0(a1)                               allGrp
  while (n--)
2040d2ac:    fd5ff06f              j    2040d280 <memset+0x1e0>                 allGrp, Branch-Instr, controlFlowGrp

  return m;
2040d2b0:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040d2b4:    fea42a23              sw    a0,-12(s0)                             allGrp
2040d2b8:    0040006f              j    2040d2bc <memset+0x21c>                 allGrp, Branch-Instr, controlFlowGrp
}
2040d2bc:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040d2c0:    03812403              lw    s0,56(sp)                              allGrp
2040d2c4:    02012c23              sw    zero,56(sp)                            allGrp
2040d2c8:    03c12083              lw    ra,60(sp)                              allGrp
2040d2cc:    02012e23              sw    zero,60(sp)                            allGrp
2040d2d0:    04010113              addi    sp,sp,64                             allGrp
2040d2d4:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040d2d8 <__malloc_lock>:
2040d2d8:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
2040d2dc:    00112623              sw    ra,12(sp)                              allGrp
2040d2e0:    00812423              sw    s0,8(sp)                               allGrp
2040d2e4:    01010413              addi    s0,sp,16                             allGrp
2040d2e8:    00050593              mv    a1,a0                                  allGrp
2040d2ec:    fea42a23              sw    a0,-12(s0)                             allGrp
     struct _reent *ptr;
{
#ifndef __SINGLE_THREAD__
  __lock_acquire_recursive (__malloc_lock_object);
#endif
}
2040d2f0:    feb42823              sw    a1,-16(s0)                             allGrp
2040d2f4:    00812403              lw    s0,8(sp)                               allGrp
2040d2f8:    00012423              sw    zero,8(sp)                             allGrp
2040d2fc:    00c12083              lw    ra,12(sp)                              allGrp
2040d300:    00012623              sw    zero,12(sp)                            allGrp
2040d304:    01010113              addi    sp,sp,16                             allGrp
2040d308:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040d30c <__malloc_unlock>:
2040d30c:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp, Branch-Tgt
2040d310:    00112623              sw    ra,12(sp)                              allGrp
2040d314:    00812423              sw    s0,8(sp)                               allGrp
2040d318:    01010413              addi    s0,sp,16                             allGrp
2040d31c:    00050593              mv    a1,a0                                  allGrp
2040d320:    fea42a23              sw    a0,-12(s0)                             allGrp
     struct _reent *ptr;
{
#ifndef __SINGLE_THREAD__
  __lock_release_recursive (__malloc_lock_object);
#endif
}
2040d324:    feb42823              sw    a1,-16(s0)                             allGrp
2040d328:    00812403              lw    s0,8(sp)                               allGrp
2040d32c:    00012423              sw    zero,8(sp)                             allGrp
2040d330:    00c12083              lw    ra,12(sp)                              allGrp
2040d334:    00012623              sw    zero,12(sp)                            allGrp
2040d338:    01010113              addi    sp,sp,16                             allGrp
2040d33c:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040d340 <_realloc_r>:
2040d340:    f6010113              addi    sp,sp,-160                           Call-Tgt, allGrp, Branch-Tgt
2040d344:    08112e23              sw    ra,156(sp)                             allGrp
2040d348:    08812c23              sw    s0,152(sp)                             allGrp
2040d34c:    0a010413              addi    s0,sp,160                            allGrp
2040d350:    00060693              mv    a3,a2                                  allGrp
2040d354:    00058713              mv    a4,a1                                  allGrp
2040d358:    00050793              mv    a5,a0                                  allGrp
2040d35c:    fea42823              sw    a0,-16(s0)                             allGrp
2040d360:    feb42623              sw    a1,-20(s0)                             allGrp
2040d364:    fec42423              sw    a2,-24(s0)                             allGrp
  if (oldmem == 0) return mALLOc(RCALL bytes);
2040d368:    fec42503              lw    a0,-20(s0)                             allGrp
2040d36c:    00000593              li    a1,0                                   allGrp
2040d370:    f6d42e23              sw    a3,-132(s0)                            allGrp
2040d374:    f6e42c23              sw    a4,-136(s0)                            allGrp
2040d378:    f6f42a23              sw    a5,-140(s0)                            allGrp
2040d37c:    02b51063              bne    a0,a1,2040d39c <_realloc_r+0x5c>      allGrp, Branch-Instr, controlFlowGrp
2040d380:    0040006f              j    2040d384 <_realloc_r+0x44>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d384:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040d388:    fe842583              lw    a1,-24(s0)                             allGrp
2040d38c:    fffff097              auipc    ra,0xfffff                          allGrp
2040d390:    a0c080e7              jalr    -1524(ra) # 2040bd98 <_usf_malloc_r> Call-Instr, allGrp, controlFlowGrp
2040d394:    fea42a23              sw    a0,-12(s0)                             Return-Tgt, allGrp
2040d398:    4d10006f              j    2040e068 <_realloc_r+0xd28>             allGrp, Branch-Instr, controlFlowGrp
  MALLOC_LOCK;
2040d39c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040d3a0:    00000097              auipc    ra,0x0                              allGrp
2040d3a4:    f38080e7              jalr    -200(ra) # 2040d2d8 <__malloc_lock>  Call-Instr, allGrp, controlFlowGrp
  newp    = oldp    = mem2chunk(oldmem);
2040d3a8:    fec42503              lw    a0,-20(s0)                             Return-Tgt, allGrp
2040d3ac:    ff850513              addi    a0,a0,-8                             allGrp
2040d3b0:    fea42023              sw    a0,-32(s0)                             allGrp
2040d3b4:    fca42c23              sw    a0,-40(s0)                             allGrp
  newsize = oldsize = chunksize(oldp);
2040d3b8:    fe042503              lw    a0,-32(s0)                             allGrp
2040d3bc:    00452503              lw    a0,4(a0)                               allGrp
2040d3c0:    ffc57513              andi    a0,a0,-4                             allGrp
2040d3c4:    fca42e23              sw    a0,-36(s0)                             allGrp
2040d3c8:    fca42a23              sw    a0,-44(s0)                             allGrp
  nb = request2size(bytes);
2040d3cc:    fe842503              lw    a0,-24(s0)                             allGrp
2040d3d0:    00b50513              addi    a0,a0,11                             allGrp
2040d3d4:    01600593              li    a1,22                                  allGrp
2040d3d8:    00a5ea63              bltu    a1,a0,2040d3ec <_realloc_r+0xac>     allGrp, Branch-Instr, controlFlowGrp
2040d3dc:    0040006f              j    2040d3e0 <_realloc_r+0xa0>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d3e0:    01000513              li    a0,16                                  Branch-Tgt, allGrp
2040d3e4:    f6a42823              sw    a0,-144(s0)                            allGrp
2040d3e8:    0180006f              j    2040d400 <_realloc_r+0xc0>              allGrp, Branch-Instr, controlFlowGrp
2040d3ec:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040d3f0:    00b50513              addi    a0,a0,11                             allGrp
2040d3f4:    ff857513              andi    a0,a0,-8                             allGrp
2040d3f8:    f6a42823              sw    a0,-144(s0)                            allGrp
2040d3fc:    0040006f              j    2040d400 <_realloc_r+0xc0>              allGrp, Branch-Instr, controlFlowGrp
2040d400:    f7042503              lw    a0,-144(s0)                            Branch-Tgt, allGrp
2040d404:    fea42223              sw    a0,-28(s0)                             allGrp
  if (nb > INT_MAX || nb < bytes)
2040d408:    fe442503              lw    a0,-28(s0)                             allGrp
2040d40c:    00000593              li    a1,0                                   allGrp
2040d410:    00b54c63              blt    a0,a1,2040d428 <_realloc_r+0xe8>      allGrp, Branch-Instr, controlFlowGrp
2040d414:    0040006f              j    2040d418 <_realloc_r+0xd8>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d418:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040d41c:    fe842583              lw    a1,-24(s0)                             allGrp
2040d420:    02b57063              bleu    a1,a0,2040d440 <_realloc_r+0x100>    allGrp, Branch-Instr, controlFlowGrp
2040d424:    0040006f              j    2040d428 <_realloc_r+0xe8>              Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    RERRNO = ENOMEM;
2040d428:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040d42c:    00c00593              li    a1,12                                  allGrp
2040d430:    00b52023              sw    a1,0(a0)                               allGrp
2040d434:    00000513              li    a0,0                                   allGrp
    return 0;
2040d438:    fea42a23              sw    a0,-12(s0)                             allGrp
2040d43c:    42d0006f              j    2040e068 <_realloc_r+0xd28>             allGrp, Branch-Instr, controlFlowGrp
  if ((long)(oldsize) < (long)(nb))  
2040d440:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040d444:    fe442583              lw    a1,-28(s0)                             allGrp
2040d448:    32b55ee3              ble    a1,a0,2040df84 <_realloc_r+0xc44>     allGrp, Branch-Instr, controlFlowGrp
2040d44c:    0040006f              j    2040d450 <_realloc_r+0x110>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    next = chunk_at_offset(oldp, oldsize);
2040d450:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040d454:    fdc42583              lw    a1,-36(s0)                             allGrp
2040d458:    00b50533              add    a0,a0,a1                              allGrp
2040d45c:    fca42623              sw    a0,-52(s0)                             allGrp
    if (next == top || !inuse(next)) 
2040d460:    fcc42503              lw    a0,-52(s0)                             allGrp
2040d464:    800005b7              lui    a1,0x80000                            allGrp
2040d468:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040d46c:    0085a583              lw    a1,8(a1)                               allGrp
2040d470:    02b50663              beq    a0,a1,2040d49c <_realloc_r+0x15c>     allGrp, Branch-Instr, controlFlowGrp
2040d474:    0040006f              j    2040d478 <_realloc_r+0x138>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d478:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040d47c:    fcc42583              lw    a1,-52(s0)                             allGrp
2040d480:    0045a583              lw    a1,4(a1)                               allGrp
2040d484:    ffe5f593              andi    a1,a1,-2                             allGrp
2040d488:    00b50533              add    a0,a0,a1                              allGrp
2040d48c:    00452503              lw    a0,4(a0)                               allGrp
2040d490:    00157513              andi    a0,a0,1                              allGrp
2040d494:    12051663              bnez    a0,2040d5c0 <_realloc_r+0x280>       allGrp, Branch-Instr, controlFlowGrp
2040d498:    0040006f              j    2040d49c <_realloc_r+0x15c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      nextsize = chunksize(next);
2040d49c:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040d4a0:    00452503              lw    a0,4(a0)                               allGrp
2040d4a4:    ffc57513              andi    a0,a0,-4                             allGrp
2040d4a8:    fca42423              sw    a0,-56(s0)                             allGrp
      if (next == top)
2040d4ac:    fcc42503              lw    a0,-52(s0)                             allGrp
2040d4b0:    800005b7              lui    a1,0x80000                            allGrp
2040d4b4:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040d4b8:    0085a583              lw    a1,8(a1)                               allGrp
2040d4bc:    0ab51063              bne    a0,a1,2040d55c <_realloc_r+0x21c>     allGrp, Branch-Instr, controlFlowGrp
2040d4c0:    0040006f              j    2040d4c4 <_realloc_r+0x184>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        if ((long)(nextsize + newsize) >= (long)(nb + MINSIZE))
2040d4c4:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
2040d4c8:    fd442583              lw    a1,-44(s0)                             allGrp
2040d4cc:    00b50533              add    a0,a0,a1                              allGrp
2040d4d0:    fe442583              lw    a1,-28(s0)                             allGrp
2040d4d4:    01058593              addi    a1,a1,16                             allGrp
2040d4d8:    08b54063              blt    a0,a1,2040d558 <_realloc_r+0x218>     allGrp, Branch-Instr, controlFlowGrp
2040d4dc:    0040006f              j    2040d4e0 <_realloc_r+0x1a0>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
          newsize += nextsize;
2040d4e0:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
2040d4e4:    fd442583              lw    a1,-44(s0)                             allGrp
2040d4e8:    00a58533              add    a0,a1,a0                              allGrp
2040d4ec:    fca42a23              sw    a0,-44(s0)                             allGrp
          top = chunk_at_offset(oldp, nb);
2040d4f0:    fe042503              lw    a0,-32(s0)                             allGrp
2040d4f4:    fe442583              lw    a1,-28(s0)                             allGrp
2040d4f8:    00b50533              add    a0,a0,a1                              allGrp
2040d4fc:    800005b7              lui    a1,0x80000                            allGrp
2040d500:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040d504:    00a5a423              sw    a0,8(a1)                               allGrp
          set_head(top, (newsize - nb) | PREV_INUSE);
2040d508:    fd442503              lw    a0,-44(s0)                             allGrp
2040d50c:    fe442603              lw    a2,-28(s0)                             allGrp
2040d510:    40c50533              sub    a0,a0,a2                              allGrp
2040d514:    00156513              ori    a0,a0,1                               allGrp
2040d518:    0085a583              lw    a1,8(a1)                               allGrp
2040d51c:    00a5a223              sw    a0,4(a1)                               allGrp
          set_head_size(oldp, nb);
2040d520:    fe042503              lw    a0,-32(s0)                             allGrp
2040d524:    00452503              lw    a0,4(a0)                               allGrp
2040d528:    00157513              andi    a0,a0,1                              allGrp
2040d52c:    fe442583              lw    a1,-28(s0)                             allGrp
2040d530:    00b56533              or    a0,a0,a1                               allGrp
2040d534:    fe042583              lw    a1,-32(s0)                             allGrp
2040d538:    00a5a223              sw    a0,4(a1)                               allGrp
	  MALLOC_UNLOCK;
2040d53c:    ff042503              lw    a0,-16(s0)                             allGrp
2040d540:    00000097              auipc    ra,0x0                              allGrp
2040d544:    dcc080e7              jalr    -564(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
          return chunk2mem(oldp);
2040d548:    fe042503              lw    a0,-32(s0)                             Return-Tgt, allGrp
2040d54c:    00850513              addi    a0,a0,8                              allGrp
2040d550:    fea42a23              sw    a0,-12(s0)                             allGrp
2040d554:    3150006f              j    2040e068 <_realloc_r+0xd28>             allGrp, Branch-Instr, controlFlowGrp
      }
2040d558:    0640006f              j    2040d5bc <_realloc_r+0x27c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      else if (((long)(nextsize + newsize) >= (long)(nb)))
2040d55c:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
2040d560:    fd442583              lw    a1,-44(s0)                             allGrp
2040d564:    00b50533              add    a0,a0,a1                              allGrp
2040d568:    fe442583              lw    a1,-28(s0)                             allGrp
2040d56c:    04b54663              blt    a0,a1,2040d5b8 <_realloc_r+0x278>     allGrp, Branch-Instr, controlFlowGrp
2040d570:    0040006f              j    2040d574 <_realloc_r+0x234>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        unlink(next, bck, fwd);
2040d574:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040d578:    00c52503              lw    a0,12(a0)                              allGrp
2040d57c:    faa42a23              sw    a0,-76(s0)                             allGrp
2040d580:    fcc42503              lw    a0,-52(s0)                             allGrp
2040d584:    00852503              lw    a0,8(a0)                               allGrp
2040d588:    faa42823              sw    a0,-80(s0)                             allGrp
2040d58c:    fb442503              lw    a0,-76(s0)                             allGrp
2040d590:    fb042583              lw    a1,-80(s0)                             allGrp
2040d594:    00a5a623              sw    a0,12(a1)                              allGrp
2040d598:    fb042503              lw    a0,-80(s0)                             allGrp
2040d59c:    fb442583              lw    a1,-76(s0)                             allGrp
2040d5a0:    00a5a423              sw    a0,8(a1)                               allGrp
        newsize  += nextsize;
2040d5a4:    fc842503              lw    a0,-56(s0)                             allGrp
2040d5a8:    fd442583              lw    a1,-44(s0)                             allGrp
2040d5ac:    00a58533              add    a0,a1,a0                              allGrp
2040d5b0:    fca42a23              sw    a0,-44(s0)                             allGrp
        goto split;
2040d5b4:    1d50006f              j    2040df88 <_realloc_r+0xc48>             allGrp, Branch-Instr, controlFlowGrp
2040d5b8:    0040006f              j    2040d5bc <_realloc_r+0x27c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    }
2040d5bc:    0140006f              j    2040d5d0 <_realloc_r+0x290>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      next = 0;
2040d5c0:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040d5c4:    fca42623              sw    a0,-52(s0)                             allGrp
      nextsize = 0;
2040d5c8:    fca42423              sw    a0,-56(s0)                             allGrp
2040d5cc:    0040006f              j    2040d5d0 <_realloc_r+0x290>             allGrp, Branch-Instr, controlFlowGrp
    if (!prev_inuse(oldp))
2040d5d0:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040d5d4:    00452503              lw    a0,4(a0)                               allGrp
2040d5d8:    00157513              andi    a0,a0,1                              allGrp
2040d5dc:    74051c63              bnez    a0,2040dd34 <_realloc_r+0x9f4>       allGrp, Branch-Instr, controlFlowGrp
2040d5e0:    0040006f              j    2040d5e4 <_realloc_r+0x2a4>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      prev = prev_chunk(oldp);
2040d5e4:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040d5e8:    fe042583              lw    a1,-32(s0)                             allGrp
2040d5ec:    0005a583              lw    a1,0(a1)                               allGrp
2040d5f0:    40b50533              sub    a0,a0,a1                              allGrp
2040d5f4:    fca42223              sw    a0,-60(s0)                             allGrp
      prevsize = chunksize(prev);
2040d5f8:    fc442503              lw    a0,-60(s0)                             allGrp
2040d5fc:    00452503              lw    a0,4(a0)                               allGrp
2040d600:    ffc57513              andi    a0,a0,-4                             allGrp
2040d604:    fca42023              sw    a0,-64(s0)                             allGrp
      if (next != 0)
2040d608:    fcc42503              lw    a0,-52(s0)                             allGrp
2040d60c:    00000593              li    a1,0                                   allGrp
2040d610:    50b50063              beq    a0,a1,2040db10 <_realloc_r+0x7d0>     allGrp, Branch-Instr, controlFlowGrp
2040d614:    0040006f              j    2040d618 <_realloc_r+0x2d8>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        if (next == top)
2040d618:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040d61c:    800005b7              lui    a1,0x80000                            allGrp
2040d620:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040d624:    0085a583              lw    a1,8(a1)                               allGrp
2040d628:    28b51863              bne    a0,a1,2040d8b8 <_realloc_r+0x578>     allGrp, Branch-Instr, controlFlowGrp
2040d62c:    0040006f              j    2040d630 <_realloc_r+0x2f0>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
          if ((long)(nextsize + prevsize + newsize) >= (long)(nb + MINSIZE))
2040d630:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
2040d634:    fc042583              lw    a1,-64(s0)                             allGrp
2040d638:    00b50533              add    a0,a0,a1                              allGrp
2040d63c:    fd442583              lw    a1,-44(s0)                             allGrp
2040d640:    00b50533              add    a0,a0,a1                              allGrp
2040d644:    fe442583              lw    a1,-28(s0)                             allGrp
2040d648:    01058593              addi    a1,a1,16                             allGrp
2040d64c:    26b54463              blt    a0,a1,2040d8b4 <_realloc_r+0x574>     allGrp, Branch-Instr, controlFlowGrp
2040d650:    0040006f              j    2040d654 <_realloc_r+0x314>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
            unlink(prev, bck, fwd);
2040d654:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040d658:    00c52503              lw    a0,12(a0)                              allGrp
2040d65c:    faa42a23              sw    a0,-76(s0)                             allGrp
2040d660:    fc442503              lw    a0,-60(s0)                             allGrp
2040d664:    00852503              lw    a0,8(a0)                               allGrp
2040d668:    faa42823              sw    a0,-80(s0)                             allGrp
2040d66c:    fb442503              lw    a0,-76(s0)                             allGrp
2040d670:    fb042583              lw    a1,-80(s0)                             allGrp
2040d674:    00a5a623              sw    a0,12(a1)                              allGrp
2040d678:    fb042503              lw    a0,-80(s0)                             allGrp
2040d67c:    fb442583              lw    a1,-76(s0)                             allGrp
2040d680:    00a5a423              sw    a0,8(a1)                               allGrp
            newp = prev;
2040d684:    fc442503              lw    a0,-60(s0)                             allGrp
2040d688:    fca42c23              sw    a0,-40(s0)                             allGrp
            newsize += prevsize + nextsize;
2040d68c:    fc042503              lw    a0,-64(s0)                             allGrp
2040d690:    fc842583              lw    a1,-56(s0)                             allGrp
2040d694:    00b50533              add    a0,a0,a1                              allGrp
2040d698:    fd442583              lw    a1,-44(s0)                             allGrp
2040d69c:    00a58533              add    a0,a1,a0                              allGrp
2040d6a0:    fca42a23              sw    a0,-44(s0)                             allGrp
            newmem = chunk2mem(newp);
2040d6a4:    fd842503              lw    a0,-40(s0)                             allGrp
2040d6a8:    00850513              addi    a0,a0,8                              allGrp
2040d6ac:    fca42823              sw    a0,-48(s0)                             allGrp
            MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
2040d6b0:    0040006f              j    2040d6b4 <_realloc_r+0x374>             allGrp, Branch-Instr, controlFlowGrp
2040d6b4:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040d6b8:    ffc50513              addi    a0,a0,-4                             allGrp
2040d6bc:    faa42623              sw    a0,-84(s0)                             allGrp
2040d6c0:    fac42503              lw    a0,-84(s0)                             allGrp
2040d6c4:    02400593              li    a1,36                                  allGrp
2040d6c8:    16a5e463              bltu    a1,a0,2040d830 <_realloc_r+0x4f0>    allGrp, Branch-Instr, controlFlowGrp
2040d6cc:    0040006f              j    2040d6d0 <_realloc_r+0x390>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d6d0:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040d6d4:    faa42423              sw    a0,-88(s0)                             allGrp
2040d6d8:    fd042503              lw    a0,-48(s0)                             allGrp
2040d6dc:    faa42223              sw    a0,-92(s0)                             allGrp
2040d6e0:    fac42503              lw    a0,-84(s0)                             allGrp
2040d6e4:    01400593              li    a1,20                                  allGrp
2040d6e8:    0eb56a63              bltu    a0,a1,2040d7dc <_realloc_r+0x49c>    allGrp, Branch-Instr, controlFlowGrp
2040d6ec:    0040006f              j    2040d6f0 <_realloc_r+0x3b0>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d6f0:    fa842503              lw    a0,-88(s0)                             Branch-Tgt, allGrp
2040d6f4:    00450593              addi    a1,a0,4                              allGrp
2040d6f8:    fab42423              sw    a1,-88(s0)                             allGrp
2040d6fc:    00052503              lw    a0,0(a0)                               allGrp
2040d700:    fa442583              lw    a1,-92(s0)                             allGrp
2040d704:    00458613              addi    a2,a1,4                              allGrp
2040d708:    fac42223              sw    a2,-92(s0)                             allGrp
2040d70c:    00a5a023              sw    a0,0(a1)                               allGrp
2040d710:    fa842503              lw    a0,-88(s0)                             allGrp
2040d714:    00450593              addi    a1,a0,4                              allGrp
2040d718:    fab42423              sw    a1,-88(s0)                             allGrp
2040d71c:    00052503              lw    a0,0(a0)                               allGrp
2040d720:    fa442583              lw    a1,-92(s0)                             allGrp
2040d724:    00458613              addi    a2,a1,4                              allGrp
2040d728:    fac42223              sw    a2,-92(s0)                             allGrp
2040d72c:    00a5a023              sw    a0,0(a1)                               allGrp
2040d730:    fac42503              lw    a0,-84(s0)                             allGrp
2040d734:    01c00593              li    a1,28                                  allGrp
2040d738:    0ab56063              bltu    a0,a1,2040d7d8 <_realloc_r+0x498>    allGrp, Branch-Instr, controlFlowGrp
2040d73c:    0040006f              j    2040d740 <_realloc_r+0x400>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d740:    fa842503              lw    a0,-88(s0)                             Branch-Tgt, allGrp
2040d744:    00450593              addi    a1,a0,4                              allGrp
2040d748:    fab42423              sw    a1,-88(s0)                             allGrp
2040d74c:    00052503              lw    a0,0(a0)                               allGrp
2040d750:    fa442583              lw    a1,-92(s0)                             allGrp
2040d754:    00458613              addi    a2,a1,4                              allGrp
2040d758:    fac42223              sw    a2,-92(s0)                             allGrp
2040d75c:    00a5a023              sw    a0,0(a1)                               allGrp
2040d760:    fa842503              lw    a0,-88(s0)                             allGrp
2040d764:    00450593              addi    a1,a0,4                              allGrp
2040d768:    fab42423              sw    a1,-88(s0)                             allGrp
2040d76c:    00052503              lw    a0,0(a0)                               allGrp
2040d770:    fa442583              lw    a1,-92(s0)                             allGrp
2040d774:    00458613              addi    a2,a1,4                              allGrp
2040d778:    fac42223              sw    a2,-92(s0)                             allGrp
2040d77c:    00a5a023              sw    a0,0(a1)                               allGrp
2040d780:    fac42503              lw    a0,-84(s0)                             allGrp
2040d784:    02400593              li    a1,36                                  allGrp
2040d788:    04b56663              bltu    a0,a1,2040d7d4 <_realloc_r+0x494>    allGrp, Branch-Instr, controlFlowGrp
2040d78c:    0040006f              j    2040d790 <_realloc_r+0x450>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d790:    fa842503              lw    a0,-88(s0)                             Branch-Tgt, allGrp
2040d794:    00450593              addi    a1,a0,4                              allGrp
2040d798:    fab42423              sw    a1,-88(s0)                             allGrp
2040d79c:    00052503              lw    a0,0(a0)                               allGrp
2040d7a0:    fa442583              lw    a1,-92(s0)                             allGrp
2040d7a4:    00458613              addi    a2,a1,4                              allGrp
2040d7a8:    fac42223              sw    a2,-92(s0)                             allGrp
2040d7ac:    00a5a023              sw    a0,0(a1)                               allGrp
2040d7b0:    fa842503              lw    a0,-88(s0)                             allGrp
2040d7b4:    00450593              addi    a1,a0,4                              allGrp
2040d7b8:    fab42423              sw    a1,-88(s0)                             allGrp
2040d7bc:    00052503              lw    a0,0(a0)                               allGrp
2040d7c0:    fa442583              lw    a1,-92(s0)                             allGrp
2040d7c4:    00458613              addi    a2,a1,4                              allGrp
2040d7c8:    fac42223              sw    a2,-92(s0)                             allGrp
2040d7cc:    00a5a023              sw    a0,0(a1)                               allGrp
2040d7d0:    0040006f              j    2040d7d4 <_realloc_r+0x494>             allGrp, Branch-Instr, controlFlowGrp
2040d7d4:    0040006f              j    2040d7d8 <_realloc_r+0x498>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d7d8:    0040006f              j    2040d7dc <_realloc_r+0x49c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d7dc:    fa842503              lw    a0,-88(s0)                             Branch-Tgt, allGrp
2040d7e0:    00450593              addi    a1,a0,4                              allGrp
2040d7e4:    fab42423              sw    a1,-88(s0)                             allGrp
2040d7e8:    00052503              lw    a0,0(a0)                               allGrp
2040d7ec:    fa442583              lw    a1,-92(s0)                             allGrp
2040d7f0:    00458613              addi    a2,a1,4                              allGrp
2040d7f4:    fac42223              sw    a2,-92(s0)                             allGrp
2040d7f8:    00a5a023              sw    a0,0(a1)                               allGrp
2040d7fc:    fa842503              lw    a0,-88(s0)                             allGrp
2040d800:    00450593              addi    a1,a0,4                              allGrp
2040d804:    fab42423              sw    a1,-88(s0)                             allGrp
2040d808:    00052503              lw    a0,0(a0)                               allGrp
2040d80c:    fa442583              lw    a1,-92(s0)                             allGrp
2040d810:    00458613              addi    a2,a1,4                              allGrp
2040d814:    fac42223              sw    a2,-92(s0)                             allGrp
2040d818:    00a5a023              sw    a0,0(a1)                               allGrp
2040d81c:    fa842503              lw    a0,-88(s0)                             allGrp
2040d820:    00052503              lw    a0,0(a0)                               allGrp
2040d824:    fa442583              lw    a1,-92(s0)                             allGrp
2040d828:    00a5a023              sw    a0,0(a1)                               allGrp
2040d82c:    0200006f              j    2040d84c <_realloc_r+0x50c>             allGrp, Branch-Instr, controlFlowGrp
2040d830:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040d834:    fec42583              lw    a1,-20(s0)                             allGrp
2040d838:    fac42603              lw    a2,-84(s0)                             allGrp
2040d83c:    fffff097              auipc    ra,0xfffff                          allGrp
2040d840:    5fc080e7              jalr    1532(ra) # 2040ce38 <memmove>        Call-Instr, allGrp, controlFlowGrp
2040d844:    f6a42623              sw    a0,-148(s0)                            Return-Tgt, allGrp
2040d848:    0040006f              j    2040d84c <_realloc_r+0x50c>             allGrp, Branch-Instr, controlFlowGrp
2040d84c:    0040006f              j    2040d850 <_realloc_r+0x510>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
            top = chunk_at_offset(newp, nb);
2040d850:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040d854:    fe442583              lw    a1,-28(s0)                             allGrp
2040d858:    00b50533              add    a0,a0,a1                              allGrp
2040d85c:    800005b7              lui    a1,0x80000                            allGrp
2040d860:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040d864:    00a5a423              sw    a0,8(a1)                               allGrp
            set_head(top, (newsize - nb) | PREV_INUSE);
2040d868:    fd442503              lw    a0,-44(s0)                             allGrp
2040d86c:    fe442603              lw    a2,-28(s0)                             allGrp
2040d870:    40c50533              sub    a0,a0,a2                              allGrp
2040d874:    00156513              ori    a0,a0,1                               allGrp
2040d878:    0085a583              lw    a1,8(a1)                               allGrp
2040d87c:    00a5a223              sw    a0,4(a1)                               allGrp
            set_head_size(newp, nb);
2040d880:    fd842503              lw    a0,-40(s0)                             allGrp
2040d884:    00452503              lw    a0,4(a0)                               allGrp
2040d888:    00157513              andi    a0,a0,1                              allGrp
2040d88c:    fe442583              lw    a1,-28(s0)                             allGrp
2040d890:    00b56533              or    a0,a0,a1                               allGrp
2040d894:    fd842583              lw    a1,-40(s0)                             allGrp
2040d898:    00a5a223              sw    a0,4(a1)                               allGrp
	    MALLOC_UNLOCK;
2040d89c:    ff042503              lw    a0,-16(s0)                             allGrp
2040d8a0:    00000097              auipc    ra,0x0                              allGrp
2040d8a4:    a6c080e7              jalr    -1428(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
            return newmem;
2040d8a8:    fd042503              lw    a0,-48(s0)                             Return-Tgt, allGrp
2040d8ac:    fea42a23              sw    a0,-12(s0)                             allGrp
2040d8b0:    7b80006f              j    2040e068 <_realloc_r+0xd28>             allGrp, Branch-Instr, controlFlowGrp
        }
2040d8b4:    2580006f              j    2040db0c <_realloc_r+0x7cc>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        else if (((long)(nextsize + prevsize + newsize) >= (long)(nb)))
2040d8b8:    fc842503              lw    a0,-56(s0)                             Branch-Tgt, allGrp
2040d8bc:    fc042583              lw    a1,-64(s0)                             allGrp
2040d8c0:    00b50533              add    a0,a0,a1                              allGrp
2040d8c4:    fd442583              lw    a1,-44(s0)                             allGrp
2040d8c8:    00b50533              add    a0,a0,a1                              allGrp
2040d8cc:    fe442583              lw    a1,-28(s0)                             allGrp
2040d8d0:    22b54c63              blt    a0,a1,2040db08 <_realloc_r+0x7c8>     allGrp, Branch-Instr, controlFlowGrp
2040d8d4:    0040006f              j    2040d8d8 <_realloc_r+0x598>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
          unlink(next, bck, fwd);
2040d8d8:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040d8dc:    00c52503              lw    a0,12(a0)                              allGrp
2040d8e0:    faa42a23              sw    a0,-76(s0)                             allGrp
2040d8e4:    fcc42503              lw    a0,-52(s0)                             allGrp
2040d8e8:    00852503              lw    a0,8(a0)                               allGrp
2040d8ec:    faa42823              sw    a0,-80(s0)                             allGrp
2040d8f0:    fb442503              lw    a0,-76(s0)                             allGrp
2040d8f4:    fb042583              lw    a1,-80(s0)                             allGrp
2040d8f8:    00a5a623              sw    a0,12(a1)                              allGrp
2040d8fc:    fb042503              lw    a0,-80(s0)                             allGrp
2040d900:    fb442583              lw    a1,-76(s0)                             allGrp
2040d904:    00a5a423              sw    a0,8(a1)                               allGrp
          unlink(prev, bck, fwd);
2040d908:    fc442503              lw    a0,-60(s0)                             allGrp
2040d90c:    00c52503              lw    a0,12(a0)                              allGrp
2040d910:    faa42a23              sw    a0,-76(s0)                             allGrp
2040d914:    fc442503              lw    a0,-60(s0)                             allGrp
2040d918:    00852503              lw    a0,8(a0)                               allGrp
2040d91c:    faa42823              sw    a0,-80(s0)                             allGrp
2040d920:    fb442503              lw    a0,-76(s0)                             allGrp
2040d924:    fb042583              lw    a1,-80(s0)                             allGrp
2040d928:    00a5a623              sw    a0,12(a1)                              allGrp
2040d92c:    fb042503              lw    a0,-80(s0)                             allGrp
2040d930:    fb442583              lw    a1,-76(s0)                             allGrp
2040d934:    00a5a423              sw    a0,8(a1)                               allGrp
          newp = prev;
2040d938:    fc442503              lw    a0,-60(s0)                             allGrp
2040d93c:    fca42c23              sw    a0,-40(s0)                             allGrp
          newsize += nextsize + prevsize;
2040d940:    fc842503              lw    a0,-56(s0)                             allGrp
2040d944:    fc042583              lw    a1,-64(s0)                             allGrp
2040d948:    00b50533              add    a0,a0,a1                              allGrp
2040d94c:    fd442583              lw    a1,-44(s0)                             allGrp
2040d950:    00a58533              add    a0,a1,a0                              allGrp
2040d954:    fca42a23              sw    a0,-44(s0)                             allGrp
          newmem = chunk2mem(newp);
2040d958:    fd842503              lw    a0,-40(s0)                             allGrp
2040d95c:    00850513              addi    a0,a0,8                              allGrp
2040d960:    fca42823              sw    a0,-48(s0)                             allGrp
          MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
2040d964:    0040006f              j    2040d968 <_realloc_r+0x628>             allGrp, Branch-Instr, controlFlowGrp
2040d968:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040d96c:    ffc50513              addi    a0,a0,-4                             allGrp
2040d970:    faa42023              sw    a0,-96(s0)                             allGrp
2040d974:    fa042503              lw    a0,-96(s0)                             allGrp
2040d978:    02400593              li    a1,36                                  allGrp
2040d97c:    16a5e463              bltu    a1,a0,2040dae4 <_realloc_r+0x7a4>    allGrp, Branch-Instr, controlFlowGrp
2040d980:    0040006f              j    2040d984 <_realloc_r+0x644>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d984:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040d988:    f8a42e23              sw    a0,-100(s0)                            allGrp
2040d98c:    fd042503              lw    a0,-48(s0)                             allGrp
2040d990:    f8a42c23              sw    a0,-104(s0)                            allGrp
2040d994:    fa042503              lw    a0,-96(s0)                             allGrp
2040d998:    01400593              li    a1,20                                  allGrp
2040d99c:    0eb56a63              bltu    a0,a1,2040da90 <_realloc_r+0x750>    allGrp, Branch-Instr, controlFlowGrp
2040d9a0:    0040006f              j    2040d9a4 <_realloc_r+0x664>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d9a4:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
2040d9a8:    00450593              addi    a1,a0,4                              allGrp
2040d9ac:    f8b42e23              sw    a1,-100(s0)                            allGrp
2040d9b0:    00052503              lw    a0,0(a0)                               allGrp
2040d9b4:    f9842583              lw    a1,-104(s0)                            allGrp
2040d9b8:    00458613              addi    a2,a1,4                              allGrp
2040d9bc:    f8c42c23              sw    a2,-104(s0)                            allGrp
2040d9c0:    00a5a023              sw    a0,0(a1)                               allGrp
2040d9c4:    f9c42503              lw    a0,-100(s0)                            allGrp
2040d9c8:    00450593              addi    a1,a0,4                              allGrp
2040d9cc:    f8b42e23              sw    a1,-100(s0)                            allGrp
2040d9d0:    00052503              lw    a0,0(a0)                               allGrp
2040d9d4:    f9842583              lw    a1,-104(s0)                            allGrp
2040d9d8:    00458613              addi    a2,a1,4                              allGrp
2040d9dc:    f8c42c23              sw    a2,-104(s0)                            allGrp
2040d9e0:    00a5a023              sw    a0,0(a1)                               allGrp
2040d9e4:    fa042503              lw    a0,-96(s0)                             allGrp
2040d9e8:    01c00593              li    a1,28                                  allGrp
2040d9ec:    0ab56063              bltu    a0,a1,2040da8c <_realloc_r+0x74c>    allGrp, Branch-Instr, controlFlowGrp
2040d9f0:    0040006f              j    2040d9f4 <_realloc_r+0x6b4>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040d9f4:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
2040d9f8:    00450593              addi    a1,a0,4                              allGrp
2040d9fc:    f8b42e23              sw    a1,-100(s0)                            allGrp
2040da00:    00052503              lw    a0,0(a0)                               allGrp
2040da04:    f9842583              lw    a1,-104(s0)                            allGrp
2040da08:    00458613              addi    a2,a1,4                              allGrp
2040da0c:    f8c42c23              sw    a2,-104(s0)                            allGrp
2040da10:    00a5a023              sw    a0,0(a1)                               allGrp
2040da14:    f9c42503              lw    a0,-100(s0)                            allGrp
2040da18:    00450593              addi    a1,a0,4                              allGrp
2040da1c:    f8b42e23              sw    a1,-100(s0)                            allGrp
2040da20:    00052503              lw    a0,0(a0)                               allGrp
2040da24:    f9842583              lw    a1,-104(s0)                            allGrp
2040da28:    00458613              addi    a2,a1,4                              allGrp
2040da2c:    f8c42c23              sw    a2,-104(s0)                            allGrp
2040da30:    00a5a023              sw    a0,0(a1)                               allGrp
2040da34:    fa042503              lw    a0,-96(s0)                             allGrp
2040da38:    02400593              li    a1,36                                  allGrp
2040da3c:    04b56663              bltu    a0,a1,2040da88 <_realloc_r+0x748>    allGrp, Branch-Instr, controlFlowGrp
2040da40:    0040006f              j    2040da44 <_realloc_r+0x704>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040da44:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
2040da48:    00450593              addi    a1,a0,4                              allGrp
2040da4c:    f8b42e23              sw    a1,-100(s0)                            allGrp
2040da50:    00052503              lw    a0,0(a0)                               allGrp
2040da54:    f9842583              lw    a1,-104(s0)                            allGrp
2040da58:    00458613              addi    a2,a1,4                              allGrp
2040da5c:    f8c42c23              sw    a2,-104(s0)                            allGrp
2040da60:    00a5a023              sw    a0,0(a1)                               allGrp
2040da64:    f9c42503              lw    a0,-100(s0)                            allGrp
2040da68:    00450593              addi    a1,a0,4                              allGrp
2040da6c:    f8b42e23              sw    a1,-100(s0)                            allGrp
2040da70:    00052503              lw    a0,0(a0)                               allGrp
2040da74:    f9842583              lw    a1,-104(s0)                            allGrp
2040da78:    00458613              addi    a2,a1,4                              allGrp
2040da7c:    f8c42c23              sw    a2,-104(s0)                            allGrp
2040da80:    00a5a023              sw    a0,0(a1)                               allGrp
2040da84:    0040006f              j    2040da88 <_realloc_r+0x748>             allGrp, Branch-Instr, controlFlowGrp
2040da88:    0040006f              j    2040da8c <_realloc_r+0x74c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040da8c:    0040006f              j    2040da90 <_realloc_r+0x750>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040da90:    f9c42503              lw    a0,-100(s0)                            Branch-Tgt, allGrp
2040da94:    00450593              addi    a1,a0,4                              allGrp
2040da98:    f8b42e23              sw    a1,-100(s0)                            allGrp
2040da9c:    00052503              lw    a0,0(a0)                               allGrp
2040daa0:    f9842583              lw    a1,-104(s0)                            allGrp
2040daa4:    00458613              addi    a2,a1,4                              allGrp
2040daa8:    f8c42c23              sw    a2,-104(s0)                            allGrp
2040daac:    00a5a023              sw    a0,0(a1)                               allGrp
2040dab0:    f9c42503              lw    a0,-100(s0)                            allGrp
2040dab4:    00450593              addi    a1,a0,4                              allGrp
2040dab8:    f8b42e23              sw    a1,-100(s0)                            allGrp
2040dabc:    00052503              lw    a0,0(a0)                               allGrp
2040dac0:    f9842583              lw    a1,-104(s0)                            allGrp
2040dac4:    00458613              addi    a2,a1,4                              allGrp
2040dac8:    f8c42c23              sw    a2,-104(s0)                            allGrp
2040dacc:    00a5a023              sw    a0,0(a1)                               allGrp
2040dad0:    f9c42503              lw    a0,-100(s0)                            allGrp
2040dad4:    00052503              lw    a0,0(a0)                               allGrp
2040dad8:    f9842583              lw    a1,-104(s0)                            allGrp
2040dadc:    00a5a023              sw    a0,0(a1)                               allGrp
2040dae0:    0200006f              j    2040db00 <_realloc_r+0x7c0>             allGrp, Branch-Instr, controlFlowGrp
2040dae4:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040dae8:    fec42583              lw    a1,-20(s0)                             allGrp
2040daec:    fa042603              lw    a2,-96(s0)                             allGrp
2040daf0:    fffff097              auipc    ra,0xfffff                          allGrp
2040daf4:    348080e7              jalr    840(ra) # 2040ce38 <memmove>         Call-Instr, allGrp, controlFlowGrp
2040daf8:    f6a42423              sw    a0,-152(s0)                            Return-Tgt, allGrp
2040dafc:    0040006f              j    2040db00 <_realloc_r+0x7c0>             allGrp, Branch-Instr, controlFlowGrp
2040db00:    0040006f              j    2040db04 <_realloc_r+0x7c4>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
          goto split;
2040db04:    4840006f              j    2040df88 <_realloc_r+0xc48>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040db08:    0040006f              j    2040db0c <_realloc_r+0x7cc>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      }
2040db0c:    0040006f              j    2040db10 <_realloc_r+0x7d0>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      if (prev != 0 && (long)(prevsize + newsize) >= (long)nb)  
2040db10:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040db14:    00000593              li    a1,0                                   allGrp
2040db18:    20b50c63              beq    a0,a1,2040dd30 <_realloc_r+0x9f0>     allGrp, Branch-Instr, controlFlowGrp
2040db1c:    0040006f              j    2040db20 <_realloc_r+0x7e0>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040db20:    fc042503              lw    a0,-64(s0)                             Branch-Tgt, allGrp
2040db24:    fd442583              lw    a1,-44(s0)                             allGrp
2040db28:    00b50533              add    a0,a0,a1                              allGrp
2040db2c:    fe442583              lw    a1,-28(s0)                             allGrp
2040db30:    20b54063              blt    a0,a1,2040dd30 <_realloc_r+0x9f0>     allGrp, Branch-Instr, controlFlowGrp
2040db34:    0040006f              j    2040db38 <_realloc_r+0x7f8>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        unlink(prev, bck, fwd);
2040db38:    fc442503              lw    a0,-60(s0)                             Branch-Tgt, allGrp
2040db3c:    00c52503              lw    a0,12(a0)                              allGrp
2040db40:    faa42a23              sw    a0,-76(s0)                             allGrp
2040db44:    fc442503              lw    a0,-60(s0)                             allGrp
2040db48:    00852503              lw    a0,8(a0)                               allGrp
2040db4c:    faa42823              sw    a0,-80(s0)                             allGrp
2040db50:    fb442503              lw    a0,-76(s0)                             allGrp
2040db54:    fb042583              lw    a1,-80(s0)                             allGrp
2040db58:    00a5a623              sw    a0,12(a1)                              allGrp
2040db5c:    fb042503              lw    a0,-80(s0)                             allGrp
2040db60:    fb442583              lw    a1,-76(s0)                             allGrp
2040db64:    00a5a423              sw    a0,8(a1)                               allGrp
        newp = prev;
2040db68:    fc442503              lw    a0,-60(s0)                             allGrp
2040db6c:    fca42c23              sw    a0,-40(s0)                             allGrp
        newsize += prevsize;
2040db70:    fc042503              lw    a0,-64(s0)                             allGrp
2040db74:    fd442583              lw    a1,-44(s0)                             allGrp
2040db78:    00a58533              add    a0,a1,a0                              allGrp
2040db7c:    fca42a23              sw    a0,-44(s0)                             allGrp
        newmem = chunk2mem(newp);
2040db80:    fd842503              lw    a0,-40(s0)                             allGrp
2040db84:    00850513              addi    a0,a0,8                              allGrp
2040db88:    fca42823              sw    a0,-48(s0)                             allGrp
        MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
2040db8c:    0040006f              j    2040db90 <_realloc_r+0x850>             allGrp, Branch-Instr, controlFlowGrp
2040db90:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040db94:    ffc50513              addi    a0,a0,-4                             allGrp
2040db98:    f8a42a23              sw    a0,-108(s0)                            allGrp
2040db9c:    f9442503              lw    a0,-108(s0)                            allGrp
2040dba0:    02400593              li    a1,36                                  allGrp
2040dba4:    16a5e463              bltu    a1,a0,2040dd0c <_realloc_r+0x9cc>    allGrp, Branch-Instr, controlFlowGrp
2040dba8:    0040006f              j    2040dbac <_realloc_r+0x86c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040dbac:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040dbb0:    f8a42823              sw    a0,-112(s0)                            allGrp
2040dbb4:    fd042503              lw    a0,-48(s0)                             allGrp
2040dbb8:    f8a42623              sw    a0,-116(s0)                            allGrp
2040dbbc:    f9442503              lw    a0,-108(s0)                            allGrp
2040dbc0:    01400593              li    a1,20                                  allGrp
2040dbc4:    0eb56a63              bltu    a0,a1,2040dcb8 <_realloc_r+0x978>    allGrp, Branch-Instr, controlFlowGrp
2040dbc8:    0040006f              j    2040dbcc <_realloc_r+0x88c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040dbcc:    f9042503              lw    a0,-112(s0)                            Branch-Tgt, allGrp
2040dbd0:    00450593              addi    a1,a0,4                              allGrp
2040dbd4:    f8b42823              sw    a1,-112(s0)                            allGrp
2040dbd8:    00052503              lw    a0,0(a0)                               allGrp
2040dbdc:    f8c42583              lw    a1,-116(s0)                            allGrp
2040dbe0:    00458613              addi    a2,a1,4                              allGrp
2040dbe4:    f8c42623              sw    a2,-116(s0)                            allGrp
2040dbe8:    00a5a023              sw    a0,0(a1)                               allGrp
2040dbec:    f9042503              lw    a0,-112(s0)                            allGrp
2040dbf0:    00450593              addi    a1,a0,4                              allGrp
2040dbf4:    f8b42823              sw    a1,-112(s0)                            allGrp
2040dbf8:    00052503              lw    a0,0(a0)                               allGrp
2040dbfc:    f8c42583              lw    a1,-116(s0)                            allGrp
2040dc00:    00458613              addi    a2,a1,4                              allGrp
2040dc04:    f8c42623              sw    a2,-116(s0)                            allGrp
2040dc08:    00a5a023              sw    a0,0(a1)                               allGrp
2040dc0c:    f9442503              lw    a0,-108(s0)                            allGrp
2040dc10:    01c00593              li    a1,28                                  allGrp
2040dc14:    0ab56063              bltu    a0,a1,2040dcb4 <_realloc_r+0x974>    allGrp, Branch-Instr, controlFlowGrp
2040dc18:    0040006f              j    2040dc1c <_realloc_r+0x8dc>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040dc1c:    f9042503              lw    a0,-112(s0)                            Branch-Tgt, allGrp
2040dc20:    00450593              addi    a1,a0,4                              allGrp
2040dc24:    f8b42823              sw    a1,-112(s0)                            allGrp
2040dc28:    00052503              lw    a0,0(a0)                               allGrp
2040dc2c:    f8c42583              lw    a1,-116(s0)                            allGrp
2040dc30:    00458613              addi    a2,a1,4                              allGrp
2040dc34:    f8c42623              sw    a2,-116(s0)                            allGrp
2040dc38:    00a5a023              sw    a0,0(a1)                               allGrp
2040dc3c:    f9042503              lw    a0,-112(s0)                            allGrp
2040dc40:    00450593              addi    a1,a0,4                              allGrp
2040dc44:    f8b42823              sw    a1,-112(s0)                            allGrp
2040dc48:    00052503              lw    a0,0(a0)                               allGrp
2040dc4c:    f8c42583              lw    a1,-116(s0)                            allGrp
2040dc50:    00458613              addi    a2,a1,4                              allGrp
2040dc54:    f8c42623              sw    a2,-116(s0)                            allGrp
2040dc58:    00a5a023              sw    a0,0(a1)                               allGrp
2040dc5c:    f9442503              lw    a0,-108(s0)                            allGrp
2040dc60:    02400593              li    a1,36                                  allGrp
2040dc64:    04b56663              bltu    a0,a1,2040dcb0 <_realloc_r+0x970>    allGrp, Branch-Instr, controlFlowGrp
2040dc68:    0040006f              j    2040dc6c <_realloc_r+0x92c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040dc6c:    f9042503              lw    a0,-112(s0)                            Branch-Tgt, allGrp
2040dc70:    00450593              addi    a1,a0,4                              allGrp
2040dc74:    f8b42823              sw    a1,-112(s0)                            allGrp
2040dc78:    00052503              lw    a0,0(a0)                               allGrp
2040dc7c:    f8c42583              lw    a1,-116(s0)                            allGrp
2040dc80:    00458613              addi    a2,a1,4                              allGrp
2040dc84:    f8c42623              sw    a2,-116(s0)                            allGrp
2040dc88:    00a5a023              sw    a0,0(a1)                               allGrp
2040dc8c:    f9042503              lw    a0,-112(s0)                            allGrp
2040dc90:    00450593              addi    a1,a0,4                              allGrp
2040dc94:    f8b42823              sw    a1,-112(s0)                            allGrp
2040dc98:    00052503              lw    a0,0(a0)                               allGrp
2040dc9c:    f8c42583              lw    a1,-116(s0)                            allGrp
2040dca0:    00458613              addi    a2,a1,4                              allGrp
2040dca4:    f8c42623              sw    a2,-116(s0)                            allGrp
2040dca8:    00a5a023              sw    a0,0(a1)                               allGrp
2040dcac:    0040006f              j    2040dcb0 <_realloc_r+0x970>             allGrp, Branch-Instr, controlFlowGrp
2040dcb0:    0040006f              j    2040dcb4 <_realloc_r+0x974>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040dcb4:    0040006f              j    2040dcb8 <_realloc_r+0x978>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040dcb8:    f9042503              lw    a0,-112(s0)                            Branch-Tgt, allGrp
2040dcbc:    00450593              addi    a1,a0,4                              allGrp
2040dcc0:    f8b42823              sw    a1,-112(s0)                            allGrp
2040dcc4:    00052503              lw    a0,0(a0)                               allGrp
2040dcc8:    f8c42583              lw    a1,-116(s0)                            allGrp
2040dccc:    00458613              addi    a2,a1,4                              allGrp
2040dcd0:    f8c42623              sw    a2,-116(s0)                            allGrp
2040dcd4:    00a5a023              sw    a0,0(a1)                               allGrp
2040dcd8:    f9042503              lw    a0,-112(s0)                            allGrp
2040dcdc:    00450593              addi    a1,a0,4                              allGrp
2040dce0:    f8b42823              sw    a1,-112(s0)                            allGrp
2040dce4:    00052503              lw    a0,0(a0)                               allGrp
2040dce8:    f8c42583              lw    a1,-116(s0)                            allGrp
2040dcec:    00458613              addi    a2,a1,4                              allGrp
2040dcf0:    f8c42623              sw    a2,-116(s0)                            allGrp
2040dcf4:    00a5a023              sw    a0,0(a1)                               allGrp
2040dcf8:    f9042503              lw    a0,-112(s0)                            allGrp
2040dcfc:    00052503              lw    a0,0(a0)                               allGrp
2040dd00:    f8c42583              lw    a1,-116(s0)                            allGrp
2040dd04:    00a5a023              sw    a0,0(a1)                               allGrp
2040dd08:    0200006f              j    2040dd28 <_realloc_r+0x9e8>             allGrp, Branch-Instr, controlFlowGrp
2040dd0c:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040dd10:    fec42583              lw    a1,-20(s0)                             allGrp
2040dd14:    f9442603              lw    a2,-108(s0)                            allGrp
2040dd18:    fffff097              auipc    ra,0xfffff                          allGrp
2040dd1c:    120080e7              jalr    288(ra) # 2040ce38 <memmove>         Call-Instr, allGrp, controlFlowGrp
2040dd20:    f6a42223              sw    a0,-156(s0)                            Return-Tgt, allGrp
2040dd24:    0040006f              j    2040dd28 <_realloc_r+0x9e8>             allGrp, Branch-Instr, controlFlowGrp
2040dd28:    0040006f              j    2040dd2c <_realloc_r+0x9ec>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        goto split;
2040dd2c:    25c0006f              j    2040df88 <_realloc_r+0xc48>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    }
2040dd30:    0040006f              j    2040dd34 <_realloc_r+0x9f4>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    newmem = mALLOc (RCALL bytes);
2040dd34:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040dd38:    fe842583              lw    a1,-24(s0)                             allGrp
2040dd3c:    ffffe097              auipc    ra,0xffffe                          allGrp
2040dd40:    05c080e7              jalr    92(ra) # 2040bd98 <_usf_malloc_r>    Call-Instr, allGrp, controlFlowGrp
2040dd44:    fca42823              sw    a0,-48(s0)                             Return-Tgt, allGrp
    if (newmem == 0)  /* propagate failure */
2040dd48:    fd042503              lw    a0,-48(s0)                             allGrp
2040dd4c:    00000593              li    a1,0                                   allGrp
2040dd50:    02b51063              bne    a0,a1,2040dd70 <_realloc_r+0xa30>     allGrp, Branch-Instr, controlFlowGrp
2040dd54:    0040006f              j    2040dd58 <_realloc_r+0xa18>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      MALLOC_UNLOCK;
2040dd58:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040dd5c:    fffff097              auipc    ra,0xfffff                          allGrp
2040dd60:    5b0080e7              jalr    1456(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
2040dd64:    00000513              li    a0,0                                   Return-Tgt, allGrp
      return 0;
2040dd68:    fea42a23              sw    a0,-12(s0)                             allGrp
2040dd6c:    2fc0006f              j    2040e068 <_realloc_r+0xd28>             allGrp, Branch-Instr, controlFlowGrp
    if ( (newp = mem2chunk(newmem)) == next_chunk(oldp)) 
2040dd70:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040dd74:    ff850513              addi    a0,a0,-8                             allGrp
2040dd78:    fca42c23              sw    a0,-40(s0)                             allGrp
2040dd7c:    fe042583              lw    a1,-32(s0)                             allGrp
2040dd80:    fe042603              lw    a2,-32(s0)                             allGrp
2040dd84:    00462603              lw    a2,4(a2)                               allGrp
2040dd88:    ffe67613              andi    a2,a2,-2                             allGrp
2040dd8c:    00c585b3              add    a1,a1,a2                              allGrp
2040dd90:    02b51663              bne    a0,a1,2040ddbc <_realloc_r+0xa7c>     allGrp, Branch-Instr, controlFlowGrp
2040dd94:    0040006f              j    2040dd98 <_realloc_r+0xa58>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      newsize += chunksize(newp);
2040dd98:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040dd9c:    00452503              lw    a0,4(a0)                               allGrp
2040dda0:    ffc57513              andi    a0,a0,-4                             allGrp
2040dda4:    fd442583              lw    a1,-44(s0)                             allGrp
2040dda8:    00a58533              add    a0,a1,a0                              allGrp
2040ddac:    fca42a23              sw    a0,-44(s0)                             allGrp
      newp = oldp;
2040ddb0:    fe042503              lw    a0,-32(s0)                             allGrp
2040ddb4:    fca42c23              sw    a0,-40(s0)                             allGrp
      goto split;
2040ddb8:    1d00006f              j    2040df88 <_realloc_r+0xc48>             allGrp, Branch-Instr, controlFlowGrp
    MALLOC_COPY(newmem, oldmem, oldsize - SIZE_SZ);
2040ddbc:    0040006f              j    2040ddc0 <_realloc_r+0xa80>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040ddc0:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040ddc4:    ffc50513              addi    a0,a0,-4                             allGrp
2040ddc8:    f8a42423              sw    a0,-120(s0)                            allGrp
2040ddcc:    f8842503              lw    a0,-120(s0)                            allGrp
2040ddd0:    02400593              li    a1,36                                  allGrp
2040ddd4:    16a5e463              bltu    a1,a0,2040df3c <_realloc_r+0xbfc>    allGrp, Branch-Instr, controlFlowGrp
2040ddd8:    0040006f              j    2040dddc <_realloc_r+0xa9c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040dddc:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040dde0:    f8a42223              sw    a0,-124(s0)                            allGrp
2040dde4:    fd042503              lw    a0,-48(s0)                             allGrp
2040dde8:    f8a42023              sw    a0,-128(s0)                            allGrp
2040ddec:    f8842503              lw    a0,-120(s0)                            allGrp
2040ddf0:    01400593              li    a1,20                                  allGrp
2040ddf4:    0eb56a63              bltu    a0,a1,2040dee8 <_realloc_r+0xba8>    allGrp, Branch-Instr, controlFlowGrp
2040ddf8:    0040006f              j    2040ddfc <_realloc_r+0xabc>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040ddfc:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
2040de00:    00450593              addi    a1,a0,4                              allGrp
2040de04:    f8b42223              sw    a1,-124(s0)                            allGrp
2040de08:    00052503              lw    a0,0(a0)                               allGrp
2040de0c:    f8042583              lw    a1,-128(s0)                            allGrp
2040de10:    00458613              addi    a2,a1,4                              allGrp
2040de14:    f8c42023              sw    a2,-128(s0)                            allGrp
2040de18:    00a5a023              sw    a0,0(a1)                               allGrp
2040de1c:    f8442503              lw    a0,-124(s0)                            allGrp
2040de20:    00450593              addi    a1,a0,4                              allGrp
2040de24:    f8b42223              sw    a1,-124(s0)                            allGrp
2040de28:    00052503              lw    a0,0(a0)                               allGrp
2040de2c:    f8042583              lw    a1,-128(s0)                            allGrp
2040de30:    00458613              addi    a2,a1,4                              allGrp
2040de34:    f8c42023              sw    a2,-128(s0)                            allGrp
2040de38:    00a5a023              sw    a0,0(a1)                               allGrp
2040de3c:    f8842503              lw    a0,-120(s0)                            allGrp
2040de40:    01c00593              li    a1,28                                  allGrp
2040de44:    0ab56063              bltu    a0,a1,2040dee4 <_realloc_r+0xba4>    allGrp, Branch-Instr, controlFlowGrp
2040de48:    0040006f              j    2040de4c <_realloc_r+0xb0c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040de4c:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
2040de50:    00450593              addi    a1,a0,4                              allGrp
2040de54:    f8b42223              sw    a1,-124(s0)                            allGrp
2040de58:    00052503              lw    a0,0(a0)                               allGrp
2040de5c:    f8042583              lw    a1,-128(s0)                            allGrp
2040de60:    00458613              addi    a2,a1,4                              allGrp
2040de64:    f8c42023              sw    a2,-128(s0)                            allGrp
2040de68:    00a5a023              sw    a0,0(a1)                               allGrp
2040de6c:    f8442503              lw    a0,-124(s0)                            allGrp
2040de70:    00450593              addi    a1,a0,4                              allGrp
2040de74:    f8b42223              sw    a1,-124(s0)                            allGrp
2040de78:    00052503              lw    a0,0(a0)                               allGrp
2040de7c:    f8042583              lw    a1,-128(s0)                            allGrp
2040de80:    00458613              addi    a2,a1,4                              allGrp
2040de84:    f8c42023              sw    a2,-128(s0)                            allGrp
2040de88:    00a5a023              sw    a0,0(a1)                               allGrp
2040de8c:    f8842503              lw    a0,-120(s0)                            allGrp
2040de90:    02400593              li    a1,36                                  allGrp
2040de94:    04b56663              bltu    a0,a1,2040dee0 <_realloc_r+0xba0>    allGrp, Branch-Instr, controlFlowGrp
2040de98:    0040006f              j    2040de9c <_realloc_r+0xb5c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040de9c:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
2040dea0:    00450593              addi    a1,a0,4                              allGrp
2040dea4:    f8b42223              sw    a1,-124(s0)                            allGrp
2040dea8:    00052503              lw    a0,0(a0)                               allGrp
2040deac:    f8042583              lw    a1,-128(s0)                            allGrp
2040deb0:    00458613              addi    a2,a1,4                              allGrp
2040deb4:    f8c42023              sw    a2,-128(s0)                            allGrp
2040deb8:    00a5a023              sw    a0,0(a1)                               allGrp
2040debc:    f8442503              lw    a0,-124(s0)                            allGrp
2040dec0:    00450593              addi    a1,a0,4                              allGrp
2040dec4:    f8b42223              sw    a1,-124(s0)                            allGrp
2040dec8:    00052503              lw    a0,0(a0)                               allGrp
2040decc:    f8042583              lw    a1,-128(s0)                            allGrp
2040ded0:    00458613              addi    a2,a1,4                              allGrp
2040ded4:    f8c42023              sw    a2,-128(s0)                            allGrp
2040ded8:    00a5a023              sw    a0,0(a1)                               allGrp
2040dedc:    0040006f              j    2040dee0 <_realloc_r+0xba0>             allGrp, Branch-Instr, controlFlowGrp
2040dee0:    0040006f              j    2040dee4 <_realloc_r+0xba4>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040dee4:    0040006f              j    2040dee8 <_realloc_r+0xba8>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040dee8:    f8442503              lw    a0,-124(s0)                            Branch-Tgt, allGrp
2040deec:    00450593              addi    a1,a0,4                              allGrp
2040def0:    f8b42223              sw    a1,-124(s0)                            allGrp
2040def4:    00052503              lw    a0,0(a0)                               allGrp
2040def8:    f8042583              lw    a1,-128(s0)                            allGrp
2040defc:    00458613              addi    a2,a1,4                              allGrp
2040df00:    f8c42023              sw    a2,-128(s0)                            allGrp
2040df04:    00a5a023              sw    a0,0(a1)                               allGrp
2040df08:    f8442503              lw    a0,-124(s0)                            allGrp
2040df0c:    00450593              addi    a1,a0,4                              allGrp
2040df10:    f8b42223              sw    a1,-124(s0)                            allGrp
2040df14:    00052503              lw    a0,0(a0)                               allGrp
2040df18:    f8042583              lw    a1,-128(s0)                            allGrp
2040df1c:    00458613              addi    a2,a1,4                              allGrp
2040df20:    f8c42023              sw    a2,-128(s0)                            allGrp
2040df24:    00a5a023              sw    a0,0(a1)                               allGrp
2040df28:    f8442503              lw    a0,-124(s0)                            allGrp
2040df2c:    00052503              lw    a0,0(a0)                               allGrp
2040df30:    f8042583              lw    a1,-128(s0)                            allGrp
2040df34:    00a5a023              sw    a0,0(a1)                               allGrp
2040df38:    0200006f              j    2040df58 <_realloc_r+0xc18>             allGrp, Branch-Instr, controlFlowGrp
2040df3c:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040df40:    fec42583              lw    a1,-20(s0)                             allGrp
2040df44:    f8842603              lw    a2,-120(s0)                            allGrp
2040df48:    fffff097              auipc    ra,0xfffff                          allGrp
2040df4c:    ef0080e7              jalr    -272(ra) # 2040ce38 <memmove>        Call-Instr, allGrp, controlFlowGrp
2040df50:    f6a42023              sw    a0,-160(s0)                            Return-Tgt, allGrp
2040df54:    0040006f              j    2040df58 <_realloc_r+0xc18>             allGrp, Branch-Instr, controlFlowGrp
2040df58:    0040006f              j    2040df5c <_realloc_r+0xc1c>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    fREe(RCALL oldmem);
2040df5c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040df60:    fec42583              lw    a1,-20(s0)                             allGrp
2040df64:    00000097              auipc    ra,0x0                              allGrp
2040df68:    1b4080e7              jalr    436(ra) # 2040e118 <_usf_free_r>     Call-Instr, allGrp, controlFlowGrp
    MALLOC_UNLOCK;
2040df6c:    ff042503              lw    a0,-16(s0)                             Return-Tgt, allGrp
2040df70:    fffff097              auipc    ra,0xfffff                          allGrp
2040df74:    39c080e7              jalr    924(ra) # 2040d30c <__malloc_unlock> Call-Instr, allGrp, controlFlowGrp
    return newmem;
2040df78:    fd042503              lw    a0,-48(s0)                             Return-Tgt, allGrp
2040df7c:    fea42a23              sw    a0,-12(s0)                             allGrp
2040df80:    0e80006f              j    2040e068 <_realloc_r+0xd28>             allGrp, Branch-Instr, controlFlowGrp
  if ((long)(oldsize) < (long)(nb))  
2040df84:    0040006f              j    2040df88 <_realloc_r+0xc48>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  remainder_size = long_sub_size_t(newsize, nb);
2040df88:    fd442503              lw    a0,-44(s0)                             Branch-Tgt, allGrp
2040df8c:    fe442583              lw    a1,-28(s0)                             allGrp
2040df90:    40b50533              sub    a0,a0,a1                              allGrp
2040df94:    faa42c23              sw    a0,-72(s0)                             allGrp
  if (remainder_size >= (long)MINSIZE) /* split off remainder */
2040df98:    fb842503              lw    a0,-72(s0)                             allGrp
2040df9c:    01000593              li    a1,16                                  allGrp
2040dfa0:    06b56a63              bltu    a0,a1,2040e014 <_realloc_r+0xcd4>    allGrp, Branch-Instr, controlFlowGrp
2040dfa4:    0040006f              j    2040dfa8 <_realloc_r+0xc68>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    remainder = chunk_at_offset(newp, nb);
2040dfa8:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040dfac:    fe442583              lw    a1,-28(s0)                             allGrp
2040dfb0:    00b50533              add    a0,a0,a1                              allGrp
2040dfb4:    faa42e23              sw    a0,-68(s0)                             allGrp
    set_head_size(newp, nb);
2040dfb8:    fd842503              lw    a0,-40(s0)                             allGrp
2040dfbc:    00452503              lw    a0,4(a0)                               allGrp
2040dfc0:    00157513              andi    a0,a0,1                              allGrp
2040dfc4:    fe442583              lw    a1,-28(s0)                             allGrp
2040dfc8:    00b56533              or    a0,a0,a1                               allGrp
2040dfcc:    fd842583              lw    a1,-40(s0)                             allGrp
2040dfd0:    00a5a223              sw    a0,4(a1)                               allGrp
    set_head(remainder, remainder_size | PREV_INUSE);
2040dfd4:    fb842503              lw    a0,-72(s0)                             allGrp
2040dfd8:    00156513              ori    a0,a0,1                               allGrp
2040dfdc:    fbc42583              lw    a1,-68(s0)                             allGrp
2040dfe0:    00a5a223              sw    a0,4(a1)                               allGrp
    set_inuse_bit_at_offset(remainder, remainder_size);
2040dfe4:    fbc42503              lw    a0,-68(s0)                             allGrp
2040dfe8:    fb842583              lw    a1,-72(s0)                             allGrp
2040dfec:    00b50533              add    a0,a0,a1                              allGrp
2040dff0:    00452583              lw    a1,4(a0)                               allGrp
2040dff4:    0015e593              ori    a1,a1,1                               allGrp
2040dff8:    00b52223              sw    a1,4(a0)                               allGrp
    fREe(RCALL chunk2mem(remainder)); /* let free() deal with it */
2040dffc:    ff042503              lw    a0,-16(s0)                             allGrp
2040e000:    fbc42583              lw    a1,-68(s0)                             allGrp
2040e004:    00858593              addi    a1,a1,8                              allGrp
2040e008:    00000097              auipc    ra,0x0                              allGrp
2040e00c:    110080e7              jalr    272(ra) # 2040e118 <_usf_free_r>     Call-Instr, allGrp, controlFlowGrp
  }
2040e010:    03c0006f              j    2040e04c <_realloc_r+0xd0c>             Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
    set_head_size(newp, newsize);
2040e014:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040e018:    00452503              lw    a0,4(a0)                               allGrp
2040e01c:    00157513              andi    a0,a0,1                              allGrp
2040e020:    fd442583              lw    a1,-44(s0)                             allGrp
2040e024:    00b56533              or    a0,a0,a1                               allGrp
2040e028:    fd842583              lw    a1,-40(s0)                             allGrp
2040e02c:    00a5a223              sw    a0,4(a1)                               allGrp
    set_inuse_bit_at_offset(newp, newsize);
2040e030:    fd842503              lw    a0,-40(s0)                             allGrp
2040e034:    fd442583              lw    a1,-44(s0)                             allGrp
2040e038:    00b50533              add    a0,a0,a1                              allGrp
2040e03c:    00452583              lw    a1,4(a0)                               allGrp
2040e040:    0015e593              ori    a1,a1,1                               allGrp
2040e044:    00b52223              sw    a1,4(a0)                               allGrp
2040e048:    0040006f              j    2040e04c <_realloc_r+0xd0c>             allGrp, Branch-Instr, controlFlowGrp
  MALLOC_UNLOCK;
2040e04c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040e050:    fffff097              auipc    ra,0xfffff                          allGrp
2040e054:    2bc080e7              jalr    700(ra) # 2040d30c <__malloc_unlock> Call-Instr, allGrp, controlFlowGrp
  return chunk2mem(newp);
2040e058:    fd842503              lw    a0,-40(s0)                             Return-Tgt, allGrp
2040e05c:    00850513              addi    a0,a0,8                              allGrp
2040e060:    fea42a23              sw    a0,-12(s0)                             allGrp
2040e064:    0040006f              j    2040e068 <_realloc_r+0xd28>             allGrp, Branch-Instr, controlFlowGrp
}
2040e068:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040e06c:    09812403              lw    s0,152(sp)                             allGrp
2040e070:    08012c23              sw    zero,152(sp)                           allGrp
2040e074:    09c12083              lw    ra,156(sp)                             allGrp
2040e078:    08012e23              sw    zero,156(sp)                           allGrp
2040e07c:    0a010113              addi    sp,sp,160                            allGrp
2040e080:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040e084 <_sbrk_r>:
2040e084:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
2040e088:    00112e23              sw    ra,28(sp)                              allGrp
2040e08c:    00812c23              sw    s0,24(sp)                              allGrp
2040e090:    02010413              addi    s0,sp,32                             allGrp
2040e094:    00058613              mv    a2,a1                                  allGrp
2040e098:    00050693              mv    a3,a0                                  allGrp
2040e09c:    fea42a23              sw    a0,-12(s0)                             allGrp
2040e0a0:    feb42823              sw    a1,-16(s0)                             allGrp
     ptrdiff_t incr)
{
  char *ret;
  void *_sbrk(ptrdiff_t);

  errno = 0;
2040e0a4:    80002537              lui    a0,0x80002                            allGrp
2040e0a8:    00000593              li    a1,0                                   allGrp
2040e0ac:    a4b52823              sw    a1,-1456(a0) # 80001a50 <_sp+0xffffda50>allGrp
  if ((ret = (char *)(_sbrk (incr))) == (void *) -1 && errno != 0)
2040e0b0:    ff042503              lw    a0,-16(s0)                             allGrp
2040e0b4:    fec42423              sw    a2,-24(s0)                             allGrp
2040e0b8:    fed42223              sw    a3,-28(s0)                             allGrp
2040e0bc:    00001097              auipc    ra,0x1                              allGrp
2040e0c0:    b58080e7              jalr    -1192(ra) # 2040ec14 <__wrap_sbrk>   Call-Instr, allGrp, controlFlowGrp
2040e0c4:    fea42623              sw    a0,-20(s0)                             Return-Tgt, allGrp
2040e0c8:    fff00593              li    a1,-1                                  allGrp
2040e0cc:    02b51863              bne    a0,a1,2040e0fc <_sbrk_r+0x78>         allGrp, Branch-Instr, controlFlowGrp
2040e0d0:    0040006f              j    2040e0d4 <_sbrk_r+0x50>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e0d4:    80002537              lui    a0,0x80002                            Branch-Tgt, allGrp
2040e0d8:    a5052503              lw    a0,-1456(a0) # 80001a50 <_sp+0xffffda50>allGrp
2040e0dc:    00000593              li    a1,0                                   allGrp
2040e0e0:    00b50e63              beq    a0,a1,2040e0fc <_sbrk_r+0x78>         allGrp, Branch-Instr, controlFlowGrp
2040e0e4:    0040006f              j    2040e0e8 <_sbrk_r+0x64>                 Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    ptr->_errno = errno;
2040e0e8:    80002537              lui    a0,0x80002                            Branch-Tgt, allGrp
2040e0ec:    a5052503              lw    a0,-1456(a0) # 80001a50 <_sp+0xffffda50>allGrp
2040e0f0:    ff442583              lw    a1,-12(s0)                             allGrp
2040e0f4:    00a5a023              sw    a0,0(a1)                               allGrp
2040e0f8:    0040006f              j    2040e0fc <_sbrk_r+0x78>                 allGrp, Branch-Instr, controlFlowGrp
  return ret;
2040e0fc:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040e100:    01812403              lw    s0,24(sp)                              allGrp
2040e104:    00012c23              sw    zero,24(sp)                            allGrp
2040e108:    01c12083              lw    ra,28(sp)                              allGrp
2040e10c:    00012e23              sw    zero,28(sp)                            allGrp
2040e110:    02010113              addi    sp,sp,32                             allGrp
2040e114:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040e118 <_usf_free_r>:
2040e118:    fa010113              addi    sp,sp,-96                            Call-Tgt, allGrp, Branch-Tgt
2040e11c:    04112e23              sw    ra,92(sp)                              allGrp
2040e120:    04812c23              sw    s0,88(sp)                              allGrp
2040e124:    06010413              addi    s0,sp,96                             allGrp
2040e128:    00058613              mv    a2,a1                                  allGrp
2040e12c:    00050693              mv    a3,a0                                  allGrp
2040e130:    fea42a23              sw    a0,-12(s0)                             allGrp
2040e134:    feb42823              sw    a1,-16(s0)                             allGrp
  if (mem == 0)                              /* free(0) has no effect */
2040e138:    ff042503              lw    a0,-16(s0)                             allGrp
2040e13c:    00000593              li    a1,0                                   allGrp
2040e140:    fcc42223              sw    a2,-60(s0)                             allGrp
2040e144:    fcd42023              sw    a3,-64(s0)                             allGrp
2040e148:    00b51663              bne    a0,a1,2040e154 <_usf_free_r+0x3c>     allGrp, Branch-Instr, controlFlowGrp
2040e14c:    0040006f              j    2040e150 <_usf_free_r+0x38>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    return;
2040e150:    5e00006f              j    2040e730 <_usf_free_r+0x618>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  MALLOC_LOCK;
2040e154:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040e158:    fffff097              auipc    ra,0xfffff                          allGrp
2040e15c:    180080e7              jalr    384(ra) # 2040d2d8 <__malloc_lock>   Call-Instr, allGrp, controlFlowGrp
  p = mem2chunk(mem);
2040e160:    ff042503              lw    a0,-16(s0)                             Return-Tgt, allGrp
2040e164:    ff850513              addi    a0,a0,-8                             allGrp
2040e168:    fea42623              sw    a0,-20(s0)                             allGrp
  hd = p->size;
2040e16c:    fec42503              lw    a0,-20(s0)                             allGrp
2040e170:    00452503              lw    a0,4(a0)                               allGrp
2040e174:    fea42423              sw    a0,-24(s0)                             allGrp
  sz = hd & ~PREV_INUSE;
2040e178:    fe842503              lw    a0,-24(s0)                             allGrp
2040e17c:    ffe57513              andi    a0,a0,-2                             allGrp
2040e180:    fea42223              sw    a0,-28(s0)                             allGrp
  next = chunk_at_offset(p, sz);
2040e184:    fec42503              lw    a0,-20(s0)                             allGrp
2040e188:    fe442583              lw    a1,-28(s0)                             allGrp
2040e18c:    00b50533              add    a0,a0,a1                              allGrp
2040e190:    fca42e23              sw    a0,-36(s0)                             allGrp
  nextsz = chunksize(next);
2040e194:    fdc42503              lw    a0,-36(s0)                             allGrp
2040e198:    00452503              lw    a0,4(a0)                               allGrp
2040e19c:    ffc57513              andi    a0,a0,-4                             allGrp
2040e1a0:    fca42c23              sw    a0,-40(s0)                             allGrp
  if (next == top)                            /* merge with top */
2040e1a4:    fdc42503              lw    a0,-36(s0)                             allGrp
2040e1a8:    800005b7              lui    a1,0x80000                            allGrp
2040e1ac:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040e1b0:    0085a583              lw    a1,8(a1)                               allGrp
2040e1b4:    0eb51463              bne    a0,a1,2040e29c <_usf_free_r+0x184>    allGrp, Branch-Instr, controlFlowGrp
2040e1b8:    0040006f              j    2040e1bc <_usf_free_r+0xa4>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    sz += nextsz;
2040e1bc:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040e1c0:    fe442583              lw    a1,-28(s0)                             allGrp
2040e1c4:    00a58533              add    a0,a1,a0                              allGrp
2040e1c8:    fea42223              sw    a0,-28(s0)                             allGrp
    if (!(hd & PREV_INUSE))                    /* consolidate backward */
2040e1cc:    fe842503              lw    a0,-24(s0)                             allGrp
2040e1d0:    00157513              andi    a0,a0,1                              allGrp
2040e1d4:    06051463              bnez    a0,2040e23c <_usf_free_r+0x124>      allGrp, Branch-Instr, controlFlowGrp
2040e1d8:    0040006f              j    2040e1dc <_usf_free_r+0xc4>             Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      prevsz = p->prev_size;
2040e1dc:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040e1e0:    00052503              lw    a0,0(a0)                               allGrp
2040e1e4:    fca42a23              sw    a0,-44(s0)                             allGrp
      p = chunk_at_offset(p, -prevsz);
2040e1e8:    fec42503              lw    a0,-20(s0)                             allGrp
2040e1ec:    fd442583              lw    a1,-44(s0)                             allGrp
2040e1f0:    40b50533              sub    a0,a0,a1                              allGrp
2040e1f4:    fea42623              sw    a0,-20(s0)                             allGrp
      sz += prevsz;
2040e1f8:    fd442503              lw    a0,-44(s0)                             allGrp
2040e1fc:    fe442583              lw    a1,-28(s0)                             allGrp
2040e200:    00a58533              add    a0,a1,a0                              allGrp
2040e204:    fea42223              sw    a0,-28(s0)                             allGrp
      unlink(p, bck, fwd);
2040e208:    fec42503              lw    a0,-20(s0)                             allGrp
2040e20c:    00c52503              lw    a0,12(a0)                              allGrp
2040e210:    fca42823              sw    a0,-48(s0)                             allGrp
2040e214:    fec42503              lw    a0,-20(s0)                             allGrp
2040e218:    00852503              lw    a0,8(a0)                               allGrp
2040e21c:    fca42623              sw    a0,-52(s0)                             allGrp
2040e220:    fd042503              lw    a0,-48(s0)                             allGrp
2040e224:    fcc42583              lw    a1,-52(s0)                             allGrp
2040e228:    00a5a623              sw    a0,12(a1)                              allGrp
2040e22c:    fcc42503              lw    a0,-52(s0)                             allGrp
2040e230:    fd042583              lw    a1,-48(s0)                             allGrp
2040e234:    00a5a423              sw    a0,8(a1)                               allGrp
    }
2040e238:    0040006f              j    2040e23c <_usf_free_r+0x124>            allGrp, Branch-Instr, controlFlowGrp
    set_head(p, sz | PREV_INUSE);
2040e23c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e240:    00156513              ori    a0,a0,1                               allGrp
2040e244:    fec42583              lw    a1,-20(s0)                             allGrp
2040e248:    00a5a223              sw    a0,4(a1)                               allGrp
    top = p;
2040e24c:    fec42503              lw    a0,-20(s0)                             allGrp
2040e250:    800005b7              lui    a1,0x80000                            allGrp
2040e254:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040e258:    00a5a423              sw    a0,8(a1)                               allGrp
    if ((unsigned long)(sz) >= (unsigned long)trim_threshold) 
2040e25c:    fe442503              lw    a0,-28(s0)                             allGrp
2040e260:    800015b7              lui    a1,0x80001                            allGrp
2040e264:    9a85a583              lw    a1,-1624(a1) # 800009a8 <_sp+0xffffc9a8>allGrp
2040e268:    02b56263              bltu    a0,a1,2040e28c <_usf_free_r+0x174>   allGrp, Branch-Instr, controlFlowGrp
2040e26c:    0040006f              j    2040e270 <_usf_free_r+0x158>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      malloc_trim(RCALL top_pad); 
2040e270:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040e274:    800025b7              lui    a1,0x80002                            allGrp
2040e278:    a185a583              lw    a1,-1512(a1) # 80001a18 <_sp+0xffffda18>allGrp
2040e27c:    00000097              auipc    ra,0x0                              allGrp
2040e280:    4cc080e7              jalr    1228(ra) # 2040e748 <_malloc_trim_r> Call-Instr, allGrp, controlFlowGrp
2040e284:    faa42e23              sw    a0,-68(s0)                             Return-Tgt, allGrp
2040e288:    0040006f              j    2040e28c <_usf_free_r+0x174>            allGrp, Branch-Instr, controlFlowGrp
    MALLOC_UNLOCK;
2040e28c:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040e290:    fffff097              auipc    ra,0xfffff                          allGrp
2040e294:    07c080e7              jalr    124(ra) # 2040d30c <__malloc_unlock> Call-Instr, allGrp, controlFlowGrp
    return;
2040e298:    4980006f              j    2040e730 <_usf_free_r+0x618>            Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
  set_head(next, nextsz);                    /* clear inuse bit */
2040e29c:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040e2a0:    fdc42583              lw    a1,-36(s0)                             allGrp
2040e2a4:    00a5a223              sw    a0,4(a1)                               allGrp
2040e2a8:    00000513              li    a0,0                                   allGrp
  islr = 0;
2040e2ac:    fca42423              sw    a0,-56(s0)                             allGrp
  if (!(hd & PREV_INUSE))                    /* consolidate backward */
2040e2b0:    fe842503              lw    a0,-24(s0)                             allGrp
2040e2b4:    00157513              andi    a0,a0,1                              allGrp
2040e2b8:    08051a63              bnez    a0,2040e34c <_usf_free_r+0x234>      allGrp, Branch-Instr, controlFlowGrp
2040e2bc:    0040006f              j    2040e2c0 <_usf_free_r+0x1a8>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    prevsz = p->prev_size;
2040e2c0:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040e2c4:    00052503              lw    a0,0(a0)                               allGrp
2040e2c8:    fca42a23              sw    a0,-44(s0)                             allGrp
    p = chunk_at_offset(p, -prevsz);
2040e2cc:    fec42503              lw    a0,-20(s0)                             allGrp
2040e2d0:    fd442583              lw    a1,-44(s0)                             allGrp
2040e2d4:    40b50533              sub    a0,a0,a1                              allGrp
2040e2d8:    fea42623              sw    a0,-20(s0)                             allGrp
    sz += prevsz;
2040e2dc:    fd442503              lw    a0,-44(s0)                             allGrp
2040e2e0:    fe442583              lw    a1,-28(s0)                             allGrp
2040e2e4:    00a58533              add    a0,a1,a0                              allGrp
2040e2e8:    fea42223              sw    a0,-28(s0)                             allGrp
    if (p->fd == last_remainder)             /* keep as last_remainder */
2040e2ec:    fec42503              lw    a0,-20(s0)                             allGrp
2040e2f0:    00852503              lw    a0,8(a0)                               allGrp
2040e2f4:    800005b7              lui    a1,0x80000                            allGrp
2040e2f8:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040e2fc:    00858593              addi    a1,a1,8                              allGrp
2040e300:    00b51a63              bne    a0,a1,2040e314 <_usf_free_r+0x1fc>    allGrp, Branch-Instr, controlFlowGrp
2040e304:    0040006f              j    2040e308 <_usf_free_r+0x1f0>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      islr = 1;
2040e308:    00100513              li    a0,1                                   Branch-Tgt, allGrp
2040e30c:    fca42423              sw    a0,-56(s0)                             allGrp
2040e310:    0380006f              j    2040e348 <_usf_free_r+0x230>            allGrp, Branch-Instr, controlFlowGrp
      unlink(p, bck, fwd);
2040e314:    fec42503              lw    a0,-20(s0)                             Branch-Tgt, allGrp
2040e318:    00c52503              lw    a0,12(a0)                              allGrp
2040e31c:    fca42823              sw    a0,-48(s0)                             allGrp
2040e320:    fec42503              lw    a0,-20(s0)                             allGrp
2040e324:    00852503              lw    a0,8(a0)                               allGrp
2040e328:    fca42623              sw    a0,-52(s0)                             allGrp
2040e32c:    fd042503              lw    a0,-48(s0)                             allGrp
2040e330:    fcc42583              lw    a1,-52(s0)                             allGrp
2040e334:    00a5a623              sw    a0,12(a1)                              allGrp
2040e338:    fcc42503              lw    a0,-52(s0)                             allGrp
2040e33c:    fd042583              lw    a1,-48(s0)                             allGrp
2040e340:    00a5a423              sw    a0,8(a1)                               allGrp
2040e344:    0040006f              j    2040e348 <_usf_free_r+0x230>            allGrp, Branch-Instr, controlFlowGrp
  }
2040e348:    0040006f              j    2040e34c <_usf_free_r+0x234>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  if (!(inuse_bit_at_offset(next, nextsz)))   /* consolidate forward */
2040e34c:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040e350:    fd842583              lw    a1,-40(s0)                             allGrp
2040e354:    00b50533              add    a0,a0,a1                              allGrp
2040e358:    00452503              lw    a0,4(a0)                               allGrp
2040e35c:    00157513              andi    a0,a0,1                              allGrp
2040e360:    0a051863              bnez    a0,2040e410 <_usf_free_r+0x2f8>      allGrp, Branch-Instr, controlFlowGrp
2040e364:    0040006f              j    2040e368 <_usf_free_r+0x250>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    sz += nextsz;
2040e368:    fd842503              lw    a0,-40(s0)                             Branch-Tgt, allGrp
2040e36c:    fe442583              lw    a1,-28(s0)                             allGrp
2040e370:    00a58533              add    a0,a1,a0                              allGrp
2040e374:    fea42223              sw    a0,-28(s0)                             allGrp
    if (!islr && next->fd == last_remainder)  /* re-insert last_remainder */
2040e378:    fc842503              lw    a0,-56(s0)                             allGrp
2040e37c:    00000593              li    a1,0                                   allGrp
2040e380:    04b51c63              bne    a0,a1,2040e3d8 <_usf_free_r+0x2c0>    allGrp, Branch-Instr, controlFlowGrp
2040e384:    0040006f              j    2040e388 <_usf_free_r+0x270>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e388:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040e38c:    00852503              lw    a0,8(a0)                               allGrp
2040e390:    800005b7              lui    a1,0x80000                            allGrp
2040e394:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040e398:    00858593              addi    a1,a1,8                              allGrp
2040e39c:    02b51e63              bne    a0,a1,2040e3d8 <_usf_free_r+0x2c0>    allGrp, Branch-Instr, controlFlowGrp
2040e3a0:    0040006f              j    2040e3a4 <_usf_free_r+0x28c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      islr = 1;
2040e3a4:    00100513              li    a0,1                                   Branch-Tgt, allGrp
2040e3a8:    fca42423              sw    a0,-56(s0)                             allGrp
      link_last_remainder(p);   
2040e3ac:    fec42503              lw    a0,-20(s0)                             allGrp
2040e3b0:    800005b7              lui    a1,0x80000                            allGrp
2040e3b4:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040e3b8:    00a5aa23              sw    a0,20(a1)                              allGrp
2040e3bc:    00a5a823              sw    a0,16(a1)                              allGrp
2040e3c0:    fec42503              lw    a0,-20(s0)                             allGrp
2040e3c4:    00858593              addi    a1,a1,8                              allGrp
2040e3c8:    00b52623              sw    a1,12(a0)                              allGrp
2040e3cc:    fec42503              lw    a0,-20(s0)                             allGrp
2040e3d0:    00b52423              sw    a1,8(a0)                               allGrp
    }
2040e3d4:    0380006f              j    2040e40c <_usf_free_r+0x2f4>            allGrp, Branch-Instr, controlFlowGrp
      unlink(next, bck, fwd);
2040e3d8:    fdc42503              lw    a0,-36(s0)                             Branch-Tgt, allGrp
2040e3dc:    00c52503              lw    a0,12(a0)                              allGrp
2040e3e0:    fca42823              sw    a0,-48(s0)                             allGrp
2040e3e4:    fdc42503              lw    a0,-36(s0)                             allGrp
2040e3e8:    00852503              lw    a0,8(a0)                               allGrp
2040e3ec:    fca42623              sw    a0,-52(s0)                             allGrp
2040e3f0:    fd042503              lw    a0,-48(s0)                             allGrp
2040e3f4:    fcc42583              lw    a1,-52(s0)                             allGrp
2040e3f8:    00a5a623              sw    a0,12(a1)                              allGrp
2040e3fc:    fcc42503              lw    a0,-52(s0)                             allGrp
2040e400:    fd042583              lw    a1,-48(s0)                             allGrp
2040e404:    00a5a423              sw    a0,8(a1)                               allGrp
2040e408:    0040006f              j    2040e40c <_usf_free_r+0x2f4>            allGrp, Branch-Instr, controlFlowGrp
  }
2040e40c:    0040006f              j    2040e410 <_usf_free_r+0x2f8>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  set_head(p, sz | PREV_INUSE);
2040e410:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e414:    00156513              ori    a0,a0,1                               allGrp
2040e418:    fec42583              lw    a1,-20(s0)                             allGrp
2040e41c:    00a5a223              sw    a0,4(a1)                               allGrp
  set_foot(p, sz);
2040e420:    fe442503              lw    a0,-28(s0)                             allGrp
2040e424:    fec42583              lw    a1,-20(s0)                             allGrp
2040e428:    fe442603              lw    a2,-28(s0)                             allGrp
2040e42c:    00c585b3              add    a1,a1,a2                              allGrp
2040e430:    00a5a023              sw    a0,0(a1)                               allGrp
  if (!islr)
2040e434:    fc842503              lw    a0,-56(s0)                             allGrp
2040e438:    00000593              li    a1,0                                   allGrp
2040e43c:    2eb51263              bne    a0,a1,2040e720 <_usf_free_r+0x608>    allGrp, Branch-Instr, controlFlowGrp
2040e440:    0040006f              j    2040e444 <_usf_free_r+0x32c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    frontlink(p, sz, idx, bck, fwd);  
2040e444:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e448:    1ff00593              li    a1,511                                 allGrp
2040e44c:    08a5e863              bltu    a1,a0,2040e4dc <_usf_free_r+0x3c4>   allGrp, Branch-Instr, controlFlowGrp
2040e450:    0040006f              j    2040e454 <_usf_free_r+0x33c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e454:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e458:    00355513              srli    a0,a0,0x3                            allGrp
2040e45c:    fea42023              sw    a0,-32(s0)                             allGrp
2040e460:    fe042503              lw    a0,-32(s0)                             allGrp
2040e464:    41f55593              srai    a1,a0,0x1f                           allGrp
2040e468:    01e5d593              srli    a1,a1,0x1e                           allGrp
2040e46c:    00b50533              add    a0,a0,a1                              allGrp
2040e470:    40255513              srai    a0,a0,0x2                            allGrp
2040e474:    00100593              li    a1,1                                   allGrp
2040e478:    00a59533              sll    a0,a1,a0                              allGrp
2040e47c:    800005b7              lui    a1,0x80000                            allGrp
2040e480:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040e484:    0045a603              lw    a2,4(a1)                               allGrp
2040e488:    00a66533              or    a0,a2,a0                               allGrp
2040e48c:    00a5a223              sw    a0,4(a1)                               allGrp
2040e490:    fe042503              lw    a0,-32(s0)                             allGrp
2040e494:    00351513              slli    a0,a0,0x3                            allGrp
2040e498:    00b50533              add    a0,a0,a1                              allGrp
2040e49c:    fca42823              sw    a0,-48(s0)                             allGrp
2040e4a0:    fd042503              lw    a0,-48(s0)                             allGrp
2040e4a4:    00852503              lw    a0,8(a0)                               allGrp
2040e4a8:    fca42623              sw    a0,-52(s0)                             allGrp
2040e4ac:    fd042503              lw    a0,-48(s0)                             allGrp
2040e4b0:    fec42583              lw    a1,-20(s0)                             allGrp
2040e4b4:    00a5a623              sw    a0,12(a1)                              allGrp
2040e4b8:    fcc42503              lw    a0,-52(s0)                             allGrp
2040e4bc:    fec42583              lw    a1,-20(s0)                             allGrp
2040e4c0:    00a5a423              sw    a0,8(a1)                               allGrp
2040e4c4:    fec42503              lw    a0,-20(s0)                             allGrp
2040e4c8:    fd042583              lw    a1,-48(s0)                             allGrp
2040e4cc:    00a5a423              sw    a0,8(a1)                               allGrp
2040e4d0:    fcc42583              lw    a1,-52(s0)                             allGrp
2040e4d4:    00a5a623              sw    a0,12(a1)                              allGrp
2040e4d8:    2440006f              j    2040e71c <_usf_free_r+0x604>            allGrp, Branch-Instr, controlFlowGrp
2040e4dc:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e4e0:    00955513              srli    a0,a0,0x9                            allGrp
2040e4e4:    00000593              li    a1,0                                   allGrp
2040e4e8:    00b51c63              bne    a0,a1,2040e500 <_usf_free_r+0x3e8>    allGrp, Branch-Instr, controlFlowGrp
2040e4ec:    0040006f              j    2040e4f0 <_usf_free_r+0x3d8>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e4f0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e4f4:    00355513              srli    a0,a0,0x3                            allGrp
2040e4f8:    faa42c23              sw    a0,-72(s0)                             allGrp
2040e4fc:    1140006f              j    2040e610 <_usf_free_r+0x4f8>            allGrp, Branch-Instr, controlFlowGrp
2040e500:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e504:    00955513              srli    a0,a0,0x9                            allGrp
2040e508:    00400593              li    a1,4                                   allGrp
2040e50c:    00a5ee63              bltu    a1,a0,2040e528 <_usf_free_r+0x410>   allGrp, Branch-Instr, controlFlowGrp
2040e510:    0040006f              j    2040e514 <_usf_free_r+0x3fc>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e514:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e518:    00655513              srli    a0,a0,0x6                            allGrp
2040e51c:    03850513              addi    a0,a0,56                             allGrp
2040e520:    faa42a23              sw    a0,-76(s0)                             allGrp
2040e524:    0e00006f              j    2040e604 <_usf_free_r+0x4ec>            allGrp, Branch-Instr, controlFlowGrp
2040e528:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e52c:    00955513              srli    a0,a0,0x9                            allGrp
2040e530:    01400593              li    a1,20                                  allGrp
2040e534:    00a5ee63              bltu    a1,a0,2040e550 <_usf_free_r+0x438>   allGrp, Branch-Instr, controlFlowGrp
2040e538:    0040006f              j    2040e53c <_usf_free_r+0x424>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e53c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e540:    00955513              srli    a0,a0,0x9                            allGrp
2040e544:    05b50513              addi    a0,a0,91                             allGrp
2040e548:    faa42823              sw    a0,-80(s0)                             allGrp
2040e54c:    0ac0006f              j    2040e5f8 <_usf_free_r+0x4e0>            allGrp, Branch-Instr, controlFlowGrp
2040e550:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e554:    00955513              srli    a0,a0,0x9                            allGrp
2040e558:    05400593              li    a1,84                                  allGrp
2040e55c:    00a5ee63              bltu    a1,a0,2040e578 <_usf_free_r+0x460>   allGrp, Branch-Instr, controlFlowGrp
2040e560:    0040006f              j    2040e564 <_usf_free_r+0x44c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e564:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e568:    00c55513              srli    a0,a0,0xc                            allGrp
2040e56c:    06e50513              addi    a0,a0,110                            allGrp
2040e570:    faa42623              sw    a0,-84(s0)                             allGrp
2040e574:    0780006f              j    2040e5ec <_usf_free_r+0x4d4>            allGrp, Branch-Instr, controlFlowGrp
2040e578:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e57c:    00955513              srli    a0,a0,0x9                            allGrp
2040e580:    15400593              li    a1,340                                 allGrp
2040e584:    00a5ee63              bltu    a1,a0,2040e5a0 <_usf_free_r+0x488>   allGrp, Branch-Instr, controlFlowGrp
2040e588:    0040006f              j    2040e58c <_usf_free_r+0x474>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e58c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e590:    00f55513              srli    a0,a0,0xf                            allGrp
2040e594:    07750513              addi    a0,a0,119                            allGrp
2040e598:    faa42423              sw    a0,-88(s0)                             allGrp
2040e59c:    0440006f              j    2040e5e0 <_usf_free_r+0x4c8>            allGrp, Branch-Instr, controlFlowGrp
2040e5a0:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e5a4:    00955513              srli    a0,a0,0x9                            allGrp
2040e5a8:    55400593              li    a1,1364                                allGrp
2040e5ac:    00a5ee63              bltu    a1,a0,2040e5c8 <_usf_free_r+0x4b0>   allGrp, Branch-Instr, controlFlowGrp
2040e5b0:    0040006f              j    2040e5b4 <_usf_free_r+0x49c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e5b4:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e5b8:    01255513              srli    a0,a0,0x12                           allGrp
2040e5bc:    07c50513              addi    a0,a0,124                            allGrp
2040e5c0:    faa42223              sw    a0,-92(s0)                             allGrp
2040e5c4:    0100006f              j    2040e5d4 <_usf_free_r+0x4bc>            allGrp, Branch-Instr, controlFlowGrp
2040e5c8:    07e00513              li    a0,126                                 Branch-Tgt, allGrp
2040e5cc:    faa42223              sw    a0,-92(s0)                             allGrp
2040e5d0:    0040006f              j    2040e5d4 <_usf_free_r+0x4bc>            allGrp, Branch-Instr, controlFlowGrp
2040e5d4:    fa442503              lw    a0,-92(s0)                             Branch-Tgt, allGrp
2040e5d8:    faa42423              sw    a0,-88(s0)                             allGrp
2040e5dc:    0040006f              j    2040e5e0 <_usf_free_r+0x4c8>            allGrp, Branch-Instr, controlFlowGrp
2040e5e0:    fa842503              lw    a0,-88(s0)                             Branch-Tgt, allGrp
2040e5e4:    faa42623              sw    a0,-84(s0)                             allGrp
2040e5e8:    0040006f              j    2040e5ec <_usf_free_r+0x4d4>            allGrp, Branch-Instr, controlFlowGrp
2040e5ec:    fac42503              lw    a0,-84(s0)                             Branch-Tgt, allGrp
2040e5f0:    faa42823              sw    a0,-80(s0)                             allGrp
2040e5f4:    0040006f              j    2040e5f8 <_usf_free_r+0x4e0>            allGrp, Branch-Instr, controlFlowGrp
2040e5f8:    fb042503              lw    a0,-80(s0)                             Branch-Tgt, allGrp
2040e5fc:    faa42a23              sw    a0,-76(s0)                             allGrp
2040e600:    0040006f              j    2040e604 <_usf_free_r+0x4ec>            allGrp, Branch-Instr, controlFlowGrp
2040e604:    fb442503              lw    a0,-76(s0)                             Branch-Tgt, allGrp
2040e608:    faa42c23              sw    a0,-72(s0)                             allGrp
2040e60c:    0040006f              j    2040e610 <_usf_free_r+0x4f8>            allGrp, Branch-Instr, controlFlowGrp
2040e610:    fb842503              lw    a0,-72(s0)                             Branch-Tgt, allGrp
2040e614:    fea42023              sw    a0,-32(s0)                             allGrp
2040e618:    fe042503              lw    a0,-32(s0)                             allGrp
2040e61c:    00351513              slli    a0,a0,0x3                            allGrp
2040e620:    800005b7              lui    a1,0x80000                            allGrp
2040e624:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040e628:    00b50533              add    a0,a0,a1                              allGrp
2040e62c:    fca42823              sw    a0,-48(s0)                             allGrp
2040e630:    fd042503              lw    a0,-48(s0)                             allGrp
2040e634:    00852503              lw    a0,8(a0)                               allGrp
2040e638:    fca42623              sw    a0,-52(s0)                             allGrp
2040e63c:    fcc42503              lw    a0,-52(s0)                             allGrp
2040e640:    fd042583              lw    a1,-48(s0)                             allGrp
2040e644:    02b51e63              bne    a0,a1,2040e680 <_usf_free_r+0x568>    allGrp, Branch-Instr, controlFlowGrp
2040e648:    0040006f              j    2040e64c <_usf_free_r+0x534>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e64c:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040e650:    41f55593              srai    a1,a0,0x1f                           allGrp
2040e654:    01e5d593              srli    a1,a1,0x1e                           allGrp
2040e658:    00b50533              add    a0,a0,a1                              allGrp
2040e65c:    40255513              srai    a0,a0,0x2                            allGrp
2040e660:    00100593              li    a1,1                                   allGrp
2040e664:    00a59533              sll    a0,a1,a0                              allGrp
2040e668:    800005b7              lui    a1,0x80000                            allGrp
2040e66c:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040e670:    0045a603              lw    a2,4(a1)                               allGrp
2040e674:    00a66533              or    a0,a2,a0                               allGrp
2040e678:    00a5a223              sw    a0,4(a1)                               allGrp
2040e67c:    0700006f              j    2040e6ec <_usf_free_r+0x5d4>            allGrp, Branch-Instr, controlFlowGrp
2040e680:    0040006f              j    2040e684 <_usf_free_r+0x56c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e684:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040e688:    fd042583              lw    a1,-48(s0)                             allGrp
2040e68c:    00000613              li    a2,0                                   allGrp
2040e690:    fac42023              sw    a2,-96(s0)                             allGrp
2040e694:    02b50263              beq    a0,a1,2040e6b8 <_usf_free_r+0x5a0>    allGrp, Branch-Instr, controlFlowGrp
2040e698:    0040006f              j    2040e69c <_usf_free_r+0x584>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e69c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040e6a0:    fcc42583              lw    a1,-52(s0)                             allGrp
2040e6a4:    0045a583              lw    a1,4(a1)                               allGrp
2040e6a8:    ffc5f593              andi    a1,a1,-4                             allGrp
2040e6ac:    00b53533              sltu    a0,a0,a1                             allGrp
2040e6b0:    faa42023              sw    a0,-96(s0)                             allGrp
2040e6b4:    0040006f              j    2040e6b8 <_usf_free_r+0x5a0>            allGrp, Branch-Instr, controlFlowGrp
2040e6b8:    fa042503              lw    a0,-96(s0)                             Branch-Tgt, allGrp
2040e6bc:    00157513              andi    a0,a0,1                              allGrp
2040e6c0:    00000593              li    a1,0                                   allGrp
2040e6c4:    00b50c63              beq    a0,a1,2040e6dc <_usf_free_r+0x5c4>    allGrp, Branch-Instr, controlFlowGrp
2040e6c8:    0040006f              j    2040e6cc <_usf_free_r+0x5b4>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e6cc:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040e6d0:    00852503              lw    a0,8(a0)                               allGrp
2040e6d4:    fca42623              sw    a0,-52(s0)                             allGrp
2040e6d8:    fadff06f              j    2040e684 <_usf_free_r+0x56c>            allGrp, Branch-Instr, controlFlowGrp
2040e6dc:    fcc42503              lw    a0,-52(s0)                             Branch-Tgt, allGrp
2040e6e0:    00c52503              lw    a0,12(a0)                              allGrp
2040e6e4:    fca42823              sw    a0,-48(s0)                             allGrp
2040e6e8:    0040006f              j    2040e6ec <_usf_free_r+0x5d4>            allGrp, Branch-Instr, controlFlowGrp
2040e6ec:    fd042503              lw    a0,-48(s0)                             Branch-Tgt, allGrp
2040e6f0:    fec42583              lw    a1,-20(s0)                             allGrp
2040e6f4:    00a5a623              sw    a0,12(a1)                              allGrp
2040e6f8:    fcc42503              lw    a0,-52(s0)                             allGrp
2040e6fc:    fec42583              lw    a1,-20(s0)                             allGrp
2040e700:    00a5a423              sw    a0,8(a1)                               allGrp
2040e704:    fec42503              lw    a0,-20(s0)                             allGrp
2040e708:    fd042583              lw    a1,-48(s0)                             allGrp
2040e70c:    00a5a423              sw    a0,8(a1)                               allGrp
2040e710:    fcc42583              lw    a1,-52(s0)                             allGrp
2040e714:    00a5a623              sw    a0,12(a1)                              allGrp
2040e718:    0040006f              j    2040e71c <_usf_free_r+0x604>            allGrp, Branch-Instr, controlFlowGrp
2040e71c:    0040006f              j    2040e720 <_usf_free_r+0x608>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  MALLOC_UNLOCK;
2040e720:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040e724:    fffff097              auipc    ra,0xfffff                          allGrp
2040e728:    be8080e7              jalr    -1048(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
}
2040e72c:    0040006f              j    2040e730 <_usf_free_r+0x618>            Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040e730:    05812403              lw    s0,88(sp)                              Branch-Tgt, allGrp
2040e734:    04012c23              sw    zero,88(sp)                            allGrp
2040e738:    05c12083              lw    ra,92(sp)                              allGrp
2040e73c:    04012e23              sw    zero,92(sp)                            allGrp
2040e740:    06010113              addi    sp,sp,96                             allGrp
2040e744:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040e748 <_malloc_trim_r>:
2040e748:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
2040e74c:    02112623              sw    ra,44(sp)                              allGrp
2040e750:    02812423              sw    s0,40(sp)                              allGrp
2040e754:    03010413              addi    s0,sp,48                             allGrp
2040e758:    00058613              mv    a2,a1                                  allGrp
2040e75c:    00050693              mv    a3,a0                                  allGrp
2040e760:    fea42823              sw    a0,-16(s0)                             allGrp
2040e764:    feb42623              sw    a1,-20(s0)                             allGrp
2040e768:    00001537              lui    a0,0x1                                allGrp
  long  top_size;        /* Amount of top-most memory */
  long  extra;           /* Amount to release */
  char* current_brk;     /* address returned by pre-check sbrk call */
  char* new_brk;         /* address returned by negative sbrk call */

  unsigned long pagesz = malloc_getpagesize;
2040e76c:    fca42c23              sw    a0,-40(s0)                             allGrp

  MALLOC_LOCK;
2040e770:    ff042503              lw    a0,-16(s0)                             allGrp
2040e774:    fcc42a23              sw    a2,-44(s0)                             allGrp
2040e778:    fcd42823              sw    a3,-48(s0)                             allGrp
2040e77c:    fffff097              auipc    ra,0xfffff                          allGrp
2040e780:    b5c080e7              jalr    -1188(ra) # 2040d2d8 <__malloc_lock> Call-Instr, allGrp, controlFlowGrp
2040e784:    80000537              lui    a0,0x80000                            Return-Tgt, allGrp
2040e788:    5a050513              addi    a0,a0,1440 # 800005a0 <_sp+0xffffc5a0>allGrp

  top_size = chunksize(top);
2040e78c:    00852503              lw    a0,8(a0)                               allGrp
2040e790:    00452503              lw    a0,4(a0)                               allGrp
2040e794:    ffc57513              andi    a0,a0,-4                             allGrp
2040e798:    fea42423              sw    a0,-24(s0)                             allGrp
  extra = ((top_size - pad - MINSIZE + (pagesz-1)) / pagesz - 1) * pagesz;
2040e79c:    fe842503              lw    a0,-24(s0)                             allGrp
2040e7a0:    fec42583              lw    a1,-20(s0)                             allGrp
2040e7a4:    40b50533              sub    a0,a0,a1                              allGrp
2040e7a8:    fd842583              lw    a1,-40(s0)                             allGrp
2040e7ac:    00b50533              add    a0,a0,a1                              allGrp
2040e7b0:    fef50513              addi    a0,a0,-17                            allGrp
2040e7b4:    fd842583              lw    a1,-40(s0)                             allGrp
2040e7b8:    00004097              auipc    ra,0x4                              allGrp
2040e7bc:    ac8080e7              jalr    -1336(ra) # 20412280 <__udivsi3>     Call-Instr, allGrp, controlFlowGrp
2040e7c0:    fff50513              addi    a0,a0,-1                             Return-Tgt, allGrp
2040e7c4:    fd842583              lw    a1,-40(s0)                             allGrp
2040e7c8:    00004097              auipc    ra,0x4                              allGrp
2040e7cc:    a8c080e7              jalr    -1396(ra) # 20412254 <__mulsi3>      Call-Instr, allGrp, controlFlowGrp
2040e7d0:    fea42223              sw    a0,-28(s0)                             Return-Tgt, allGrp

  if (extra < (long)pagesz)  /* Not enough memory to release */
2040e7d4:    fe442503              lw    a0,-28(s0)                             allGrp
2040e7d8:    fd842583              lw    a1,-40(s0)                             allGrp
2040e7dc:    02b55063              ble    a1,a0,2040e7fc <_malloc_trim_r+0xb4>  allGrp, Branch-Instr, controlFlowGrp
2040e7e0:    0040006f              j    2040e7e4 <_malloc_trim_r+0x9c>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
  {
    MALLOC_UNLOCK;
2040e7e4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040e7e8:    fffff097              auipc    ra,0xfffff                          allGrp
2040e7ec:    b24080e7              jalr    -1244(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
2040e7f0:    00000513              li    a0,0                                   Return-Tgt, allGrp
    return 0;
2040e7f4:    fea42a23              sw    a0,-12(s0)                             allGrp
2040e7f8:    1500006f              j    2040e948 <_malloc_trim_r+0x200>         allGrp, Branch-Instr, controlFlowGrp
  }

  else
  {
    /* Test to make sure no one else called sbrk */
    current_brk = (char*)(MORECORE (0));
2040e7fc:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040e800:    00000593              li    a1,0                                   allGrp
2040e804:    00000097              auipc    ra,0x0                              allGrp
2040e808:    880080e7              jalr    -1920(ra) # 2040e084 <_sbrk_r>       Call-Instr, allGrp, controlFlowGrp
2040e80c:    fea42023              sw    a0,-32(s0)                             Return-Tgt, allGrp
    if (current_brk != (char*)(top) + top_size)
2040e810:    fe042503              lw    a0,-32(s0)                             allGrp
2040e814:    800005b7              lui    a1,0x80000                            allGrp
2040e818:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040e81c:    0085a583              lw    a1,8(a1)                               allGrp
2040e820:    fe842603              lw    a2,-24(s0)                             allGrp
2040e824:    00c585b3              add    a1,a1,a2                              allGrp
2040e828:    02b50063              beq    a0,a1,2040e848 <_malloc_trim_r+0x100> allGrp, Branch-Instr, controlFlowGrp
2040e82c:    0040006f              j    2040e830 <_malloc_trim_r+0xe8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    {
      MALLOC_UNLOCK;
2040e830:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040e834:    fffff097              auipc    ra,0xfffff                          allGrp
2040e838:    ad8080e7              jalr    -1320(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
2040e83c:    00000513              li    a0,0                                   Return-Tgt, allGrp
      return 0;     /* Apparently we don't own memory; must fail */
2040e840:    fea42a23              sw    a0,-12(s0)                             allGrp
2040e844:    1040006f              j    2040e948 <_malloc_trim_r+0x200>         allGrp, Branch-Instr, controlFlowGrp
    }

    else
    {
      new_brk = (char*)(MORECORE (-extra));
2040e848:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040e84c:    fe442583              lw    a1,-28(s0)                             allGrp
2040e850:    00000613              li    a2,0                                   allGrp
2040e854:    40b605b3              sub    a1,a2,a1                              allGrp
2040e858:    00000097              auipc    ra,0x0                              allGrp
2040e85c:    82c080e7              jalr    -2004(ra) # 2040e084 <_sbrk_r>       Call-Instr, allGrp, controlFlowGrp
2040e860:    fca42e23              sw    a0,-36(s0)                             Return-Tgt, allGrp
      
      if (new_brk == (char*)(MORECORE_FAILURE)) /* sbrk failed? */
2040e864:    fdc42503              lw    a0,-36(s0)                             allGrp
2040e868:    fff00593              li    a1,-1                                  allGrp
2040e86c:    08b51863              bne    a0,a1,2040e8fc <_malloc_trim_r+0x1b4> allGrp, Branch-Instr, controlFlowGrp
2040e870:    0040006f              j    2040e874 <_malloc_trim_r+0x12c>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      {
        /* Try to figure out what we have */
        current_brk = (char*)(MORECORE (0));
2040e874:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040e878:    00000593              li    a1,0                                   allGrp
2040e87c:    00000097              auipc    ra,0x0                              allGrp
2040e880:    808080e7              jalr    -2040(ra) # 2040e084 <_sbrk_r>       Call-Instr, allGrp, controlFlowGrp
2040e884:    fea42023              sw    a0,-32(s0)                             Return-Tgt, allGrp
        top_size = current_brk - (char*)top;
2040e888:    fe042503              lw    a0,-32(s0)                             allGrp
2040e88c:    800005b7              lui    a1,0x80000                            allGrp
2040e890:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040e894:    0085a583              lw    a1,8(a1)                               allGrp
2040e898:    40b50533              sub    a0,a0,a1                              allGrp
2040e89c:    fea42423              sw    a0,-24(s0)                             allGrp
        if (top_size >= (long)MINSIZE) /* if not, we are very very dead! */
2040e8a0:    fe842503              lw    a0,-24(s0)                             allGrp
2040e8a4:    01000593              li    a1,16                                  allGrp
2040e8a8:    02b54e63              blt    a0,a1,2040e8e4 <_malloc_trim_r+0x19c> allGrp, Branch-Instr, controlFlowGrp
2040e8ac:    0040006f              j    2040e8b0 <_malloc_trim_r+0x168>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
        {
          sbrked_mem = current_brk - sbrk_base;
2040e8b0:    fe042503              lw    a0,-32(s0)                             Branch-Tgt, allGrp
2040e8b4:    800015b7              lui    a1,0x80001                            allGrp
2040e8b8:    9ac5a583              lw    a1,-1620(a1) # 800009ac <_sp+0xffffc9ac>allGrp
2040e8bc:    40b50533              sub    a0,a0,a1                              allGrp
2040e8c0:    800025b7              lui    a1,0x80002                            allGrp
2040e8c4:    a2a5a223              sw    a0,-1500(a1) # 80001a24 <_sp+0xffffda24>allGrp
          set_head(top, top_size | PREV_INUSE);
2040e8c8:    fe842503              lw    a0,-24(s0)                             allGrp
2040e8cc:    00156513              ori    a0,a0,1                               allGrp
2040e8d0:    800005b7              lui    a1,0x80000                            allGrp
2040e8d4:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040e8d8:    0085a583              lw    a1,8(a1)                               allGrp
2040e8dc:    00a5a223              sw    a0,4(a1)                               allGrp
        }
2040e8e0:    0040006f              j    2040e8e4 <_malloc_trim_r+0x19c>         allGrp, Branch-Instr, controlFlowGrp
        check_chunk(top);
	MALLOC_UNLOCK;
2040e8e4:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040e8e8:    fffff097              auipc    ra,0xfffff                          allGrp
2040e8ec:    a24080e7              jalr    -1500(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
2040e8f0:    00000513              li    a0,0                                   Return-Tgt, allGrp
        return 0; 
2040e8f4:    fea42a23              sw    a0,-12(s0)                             allGrp
2040e8f8:    0500006f              j    2040e948 <_malloc_trim_r+0x200>         allGrp, Branch-Instr, controlFlowGrp
      }

      else
      {
        /* Success. Adjust top accordingly. */
        set_head(top, (top_size - extra) | PREV_INUSE);
2040e8fc:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040e900:    fe442583              lw    a1,-28(s0)                             allGrp
2040e904:    40b50533              sub    a0,a0,a1                              allGrp
2040e908:    00156513              ori    a0,a0,1                               allGrp
2040e90c:    800005b7              lui    a1,0x80000                            allGrp
2040e910:    5a058593              addi    a1,a1,1440 # 800005a0 <_sp+0xffffc5a0>allGrp
2040e914:    0085a583              lw    a1,8(a1)                               allGrp
2040e918:    00a5a223              sw    a0,4(a1)                               allGrp
        sbrked_mem -= extra;
2040e91c:    fe442503              lw    a0,-28(s0)                             allGrp
2040e920:    800025b7              lui    a1,0x80002                            allGrp
2040e924:    a245a603              lw    a2,-1500(a1) # 80001a24 <_sp+0xffffda24>allGrp
2040e928:    40a60533              sub    a0,a2,a0                              allGrp
2040e92c:    a2a5a223              sw    a0,-1500(a1)                           allGrp
        check_chunk(top);
	MALLOC_UNLOCK;
2040e930:    ff042503              lw    a0,-16(s0)                             allGrp
2040e934:    fffff097              auipc    ra,0xfffff                          allGrp
2040e938:    9d8080e7              jalr    -1576(ra) # 2040d30c <__malloc_unlock>Call-Instr, allGrp, controlFlowGrp
2040e93c:    00100513              li    a0,1                                   Return-Tgt, allGrp
        return 1;
2040e940:    fea42a23              sw    a0,-12(s0)                             allGrp
2040e944:    0040006f              j    2040e948 <_malloc_trim_r+0x200>         allGrp, Branch-Instr, controlFlowGrp
      }
    }
  }
}
2040e948:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040e94c:    02812403              lw    s0,40(sp)                              allGrp
2040e950:    02012423              sw    zero,40(sp)                            allGrp
2040e954:    02c12083              lw    ra,44(sp)                              allGrp
2040e958:    02012623              sw    zero,44(sp)                            allGrp
2040e95c:    03010113              addi    sp,sp,48                             allGrp
2040e960:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040e964 <cleanup_glue>:
2040e964:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
2040e968:    00112e23              sw    ra,28(sp)                              allGrp
2040e96c:    00812c23              sw    s0,24(sp)                              allGrp
2040e970:    02010413              addi    s0,sp,32                             allGrp
2040e974:    00058613              mv    a2,a1                                  allGrp
2040e978:    00050693              mv    a3,a0                                  allGrp
2040e97c:    fea42a23              sw    a0,-12(s0)                             allGrp
2040e980:    feb42823              sw    a1,-16(s0)                             allGrp
_DEFUN (cleanup_glue, (ptr, glue),
     struct _reent *ptr _AND
     struct _glue *glue)
{
  /* Have to reclaim these in reverse order: */
  if (glue->_next)
2040e984:    ff042503              lw    a0,-16(s0)                             allGrp
2040e988:    00052503              lw    a0,0(a0)                               allGrp
2040e98c:    00000593              li    a1,0                                   allGrp
2040e990:    fec42623              sw    a2,-20(s0)                             allGrp
2040e994:    fed42423              sw    a3,-24(s0)                             allGrp
2040e998:    02b50063              beq    a0,a1,2040e9b8 <cleanup_glue+0x54>    allGrp, Branch-Instr, controlFlowGrp
2040e99c:    0040006f              j    2040e9a0 <cleanup_glue+0x3c>            Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
    cleanup_glue (ptr, glue->_next);
2040e9a0:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040e9a4:    ff042583              lw    a1,-16(s0)                             allGrp
2040e9a8:    0005a583              lw    a1,0(a1)                               allGrp
2040e9ac:    00000097              auipc    ra,0x0                              allGrp
2040e9b0:    fb8080e7              jalr    -72(ra) # 2040e964 <cleanup_glue>    Call-Instr, allGrp, controlFlowGrp
2040e9b4:    0040006f              j    2040e9b8 <cleanup_glue+0x54>            Return-Tgt, allGrp, Branch-Instr, controlFlowGrp

  _free_r (ptr, glue);
2040e9b8:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040e9bc:    ff042583              lw    a1,-16(s0)                             allGrp
2040e9c0:    00004097              auipc    ra,0x4                              allGrp
2040e9c4:    a14080e7              jalr    -1516(ra) # 204123d4 <_free_r>       Call-Instr, allGrp, controlFlowGrp
}
2040e9c8:    01812403              lw    s0,24(sp)                              Return-Tgt, allGrp
2040e9cc:    00012c23              sw    zero,24(sp)                            allGrp
2040e9d0:    01c12083              lw    ra,28(sp)                              allGrp
2040e9d4:    00012e23              sw    zero,28(sp)                            allGrp
2040e9d8:    02010113              addi    sp,sp,32                             allGrp
2040e9dc:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040e9e0 <_reclaim_reent>:
2040e9e0:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp, Branch-Tgt
2040e9e4:    02112623              sw    ra,44(sp)                              allGrp
2040e9e8:    02812423              sw    s0,40(sp)                              allGrp
2040e9ec:    03010413              addi    s0,sp,48                             allGrp
2040e9f0:    00050593              mv    a1,a0                                  allGrp
2040e9f4:    fea42a23              sw    a0,-12(s0)                             allGrp

void
_DEFUN (_reclaim_reent, (ptr),
     struct _reent *ptr)
{
  if (ptr != _impure_ptr)
2040e9f8:    ff442503              lw    a0,-12(s0)                             allGrp
2040e9fc:    80000637              lui    a2,0x80000                            allGrp
2040ea00:    43062603              lw    a2,1072(a2) # 80000430 <_sp+0xffffc430>allGrp
2040ea04:    fcb42e23              sw    a1,-36(s0)                             allGrp
2040ea08:    1ec50a63              beq    a0,a2,2040ebfc <_reclaim_reent+0x21c> allGrp, Branch-Instr, controlFlowGrp
2040ea0c:    0040006f              j    2040ea10 <_reclaim_reent+0x30>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
      /* used by mprec routines. */
#ifdef _REENT_SMALL
      if (ptr->_mp)	/* don't bother allocating it! */
      {
#endif
      if (_REENT_MP_FREELIST(ptr))
2040ea10:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040ea14:    04c52503              lw    a0,76(a0)                              allGrp
2040ea18:    00000593              li    a1,0                                   allGrp
2040ea1c:    0ab50463              beq    a0,a1,2040eac4 <_reclaim_reent+0xe4>  allGrp, Branch-Instr, controlFlowGrp
2040ea20:    0040006f              j    2040ea24 <_reclaim_reent+0x44>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  int i;
	  for (i = 0; i < _Kmax; i++) 
2040ea24:    00000513              li    a0,0                                   Branch-Tgt, allGrp
2040ea28:    fea42823              sw    a0,-16(s0)                             allGrp
2040ea2c:    0040006f              j    2040ea30 <_reclaim_reent+0x50>          allGrp, Branch-Instr, controlFlowGrp
2040ea30:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040ea34:    01f00593              li    a1,31                                  allGrp
2040ea38:    06a5ea63              bltu    a1,a0,2040eaac <_reclaim_reent+0xcc> allGrp, Branch-Instr, controlFlowGrp
2040ea3c:    0040006f              j    2040ea40 <_reclaim_reent+0x60>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    {
	      struct _Bigint *thisone, *nextone;
	
	      nextone = _REENT_MP_FREELIST(ptr)[i];
2040ea40:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040ea44:    04c52503              lw    a0,76(a0)                              allGrp
2040ea48:    ff042583              lw    a1,-16(s0)                             allGrp
2040ea4c:    00259593              slli    a1,a1,0x2                            allGrp
2040ea50:    00b50533              add    a0,a0,a1                              allGrp
2040ea54:    00052503              lw    a0,0(a0)                               allGrp
2040ea58:    fea42423              sw    a0,-24(s0)                             allGrp
	      while (nextone)
2040ea5c:    0040006f              j    2040ea60 <_reclaim_reent+0x80>          allGrp, Branch-Instr, controlFlowGrp
2040ea60:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040ea64:    00000593              li    a1,0                                   allGrp
2040ea68:    02b50863              beq    a0,a1,2040ea98 <_reclaim_reent+0xb8>  allGrp, Branch-Instr, controlFlowGrp
2040ea6c:    0040006f              j    2040ea70 <_reclaim_reent+0x90>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
		{
		  thisone = nextone;
2040ea70:    fe842503              lw    a0,-24(s0)                             Branch-Tgt, allGrp
2040ea74:    fea42623              sw    a0,-20(s0)                             allGrp
		  nextone = nextone->_next;
2040ea78:    fe842503              lw    a0,-24(s0)                             allGrp
2040ea7c:    00052503              lw    a0,0(a0)                               allGrp
2040ea80:    fea42423              sw    a0,-24(s0)                             allGrp
		  _free_r (ptr, thisone);
2040ea84:    ff442503              lw    a0,-12(s0)                             allGrp
2040ea88:    fec42583              lw    a1,-20(s0)                             allGrp
2040ea8c:    00004097              auipc    ra,0x4                              allGrp
2040ea90:    948080e7              jalr    -1720(ra) # 204123d4 <_free_r>       Call-Instr, allGrp, controlFlowGrp
	      while (nextone)
2040ea94:    fcdff06f              j    2040ea60 <_reclaim_reent+0x80>          Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
		}
	    }    
2040ea98:    0040006f              j    2040ea9c <_reclaim_reent+0xbc>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	  for (i = 0; i < _Kmax; i++) 
2040ea9c:    ff042503              lw    a0,-16(s0)                             Branch-Tgt, allGrp
2040eaa0:    00150513              addi    a0,a0,1                              allGrp
2040eaa4:    fea42823              sw    a0,-16(s0)                             allGrp
2040eaa8:    f89ff06f              j    2040ea30 <_reclaim_reent+0x50>          allGrp, Branch-Instr, controlFlowGrp

	  _free_r (ptr, _REENT_MP_FREELIST(ptr));
2040eaac:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040eab0:    ff442583              lw    a1,-12(s0)                             allGrp
2040eab4:    04c5a583              lw    a1,76(a1)                              allGrp
2040eab8:    00004097              auipc    ra,0x4                              allGrp
2040eabc:    91c080e7              jalr    -1764(ra) # 204123d4 <_free_r>       Call-Instr, allGrp, controlFlowGrp
	}
2040eac0:    0040006f              j    2040eac4 <_reclaim_reent+0xe4>          Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
      if (_REENT_MP_RESULT(ptr))
2040eac4:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040eac8:    04052503              lw    a0,64(a0)                              allGrp
2040eacc:    00000593              li    a1,0                                   allGrp
2040ead0:    02b50063              beq    a0,a1,2040eaf0 <_reclaim_reent+0x110> allGrp, Branch-Instr, controlFlowGrp
2040ead4:    0040006f              j    2040ead8 <_reclaim_reent+0xf8>          Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	_free_r (ptr, _REENT_MP_RESULT(ptr));
2040ead8:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040eadc:    ff442583              lw    a1,-12(s0)                             allGrp
2040eae0:    0405a583              lw    a1,64(a1)                              allGrp
2040eae4:    00004097              auipc    ra,0x4                              allGrp
2040eae8:    8f0080e7              jalr    -1808(ra) # 204123d4 <_free_r>       Call-Instr, allGrp, controlFlowGrp
2040eaec:    0040006f              j    2040eaf0 <_reclaim_reent+0x110>         Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
      /* atexit stuff */
# ifdef _REENT_SMALL
      if (ptr->_atexit && ptr->_atexit->_on_exit_args_ptr)
	_free_r (ptr, ptr->_atexit->_on_exit_args_ptr);
# else
      if ((ptr->_atexit) && (ptr->_atexit != &ptr->_atexit0))
2040eaf0:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040eaf4:    14852503              lw    a0,328(a0)                             allGrp
2040eaf8:    00000593              li    a1,0                                   allGrp
2040eafc:    06b50863              beq    a0,a1,2040eb6c <_reclaim_reent+0x18c> allGrp, Branch-Instr, controlFlowGrp
2040eb00:    0040006f              j    2040eb04 <_reclaim_reent+0x124>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
2040eb04:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040eb08:    14852503              lw    a0,328(a0)                             allGrp
2040eb0c:    ff442583              lw    a1,-12(s0)                             allGrp
2040eb10:    14c58593              addi    a1,a1,332                            allGrp
2040eb14:    04b50c63              beq    a0,a1,2040eb6c <_reclaim_reent+0x18c> allGrp, Branch-Instr, controlFlowGrp
2040eb18:    0040006f              j    2040eb1c <_reclaim_reent+0x13c>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  struct _atexit *p, *q;
	  for (p = ptr->_atexit; p != &ptr->_atexit0;)
2040eb1c:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040eb20:    14852503              lw    a0,328(a0)                             allGrp
2040eb24:    fea42223              sw    a0,-28(s0)                             allGrp
2040eb28:    0040006f              j    2040eb2c <_reclaim_reent+0x14c>         allGrp, Branch-Instr, controlFlowGrp
2040eb2c:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040eb30:    ff442583              lw    a1,-12(s0)                             allGrp
2040eb34:    14c58593              addi    a1,a1,332                            allGrp
2040eb38:    02b50863              beq    a0,a1,2040eb68 <_reclaim_reent+0x188> allGrp, Branch-Instr, controlFlowGrp
2040eb3c:    0040006f              j    2040eb40 <_reclaim_reent+0x160>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    {
	      q = p;
2040eb40:    fe442503              lw    a0,-28(s0)                             Branch-Tgt, allGrp
2040eb44:    fea42023              sw    a0,-32(s0)                             allGrp
	      p = p->_next;
2040eb48:    fe442503              lw    a0,-28(s0)                             allGrp
2040eb4c:    00052503              lw    a0,0(a0)                               allGrp
2040eb50:    fea42223              sw    a0,-28(s0)                             allGrp
	      _free_r (ptr, q);
2040eb54:    ff442503              lw    a0,-12(s0)                             allGrp
2040eb58:    fe042583              lw    a1,-32(s0)                             allGrp
2040eb5c:    00004097              auipc    ra,0x4                              allGrp
2040eb60:    878080e7              jalr    -1928(ra) # 204123d4 <_free_r>       Call-Instr, allGrp, controlFlowGrp
	  for (p = ptr->_atexit; p != &ptr->_atexit0;)
2040eb64:    fc9ff06f              j    2040eb2c <_reclaim_reent+0x14c>         Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    }
	}
2040eb68:    0040006f              j    2040eb6c <_reclaim_reent+0x18c>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
# endif
#endif

      if (ptr->_cvtbuf)
2040eb6c:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040eb70:    05452503              lw    a0,84(a0)                              allGrp
2040eb74:    00000593              li    a1,0                                   allGrp
2040eb78:    02b50063              beq    a0,a1,2040eb98 <_reclaim_reent+0x1b8> allGrp, Branch-Instr, controlFlowGrp
2040eb7c:    0040006f              j    2040eb80 <_reclaim_reent+0x1a0>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	_free_r (ptr, ptr->_cvtbuf);
2040eb80:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040eb84:    ff442583              lw    a1,-12(s0)                             allGrp
2040eb88:    0545a583              lw    a1,84(a1)                              allGrp
2040eb8c:    00004097              auipc    ra,0x4                              allGrp
2040eb90:    848080e7              jalr    -1976(ra) # 204123d4 <_free_r>       Call-Instr, allGrp, controlFlowGrp
2040eb94:    0040006f              j    2040eb98 <_reclaim_reent+0x1b8>         Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
	   do it safely considering that a signal may be delivered immediately
	   after the free?
	  if (ptr->_sig_func)
	_free_r (ptr, ptr->_sig_func);*/

      if (ptr->__sdidinit)
2040eb98:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040eb9c:    03852503              lw    a0,56(a0)                              allGrp
2040eba0:    00000593              li    a1,0                                   allGrp
2040eba4:    04b50a63              beq    a0,a1,2040ebf8 <_reclaim_reent+0x218> allGrp, Branch-Instr, controlFlowGrp
2040eba8:    0040006f              j    2040ebac <_reclaim_reent+0x1cc>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	{
	  /* cleanup won't reclaim memory 'coz usually it's run
	     before the program exits, and who wants to wait for that? */
	  ptr->__cleanup (ptr);
2040ebac:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040ebb0:    03c52503              lw    a0,60(a0)                              allGrp
2040ebb4:    ff442583              lw    a1,-12(s0)                             allGrp
2040ebb8:    fca42c23              sw    a0,-40(s0)                             allGrp
2040ebbc:    00058513              mv    a0,a1                                  allGrp
2040ebc0:    fd842583              lw    a1,-40(s0)                             allGrp
2040ebc4:    000580e7              jalr    a1                                   Call-Instr, allGrp, controlFlowGrp

	  if (ptr->__sglue._next)
2040ebc8:    ff442503              lw    a0,-12(s0)                             Return-Tgt, allGrp
2040ebcc:    2e052503              lw    a0,736(a0)                             allGrp
2040ebd0:    00000593              li    a1,0                                   allGrp
2040ebd4:    02b50063              beq    a0,a1,2040ebf4 <_reclaim_reent+0x214> allGrp, Branch-Instr, controlFlowGrp
2040ebd8:    0040006f              j    2040ebdc <_reclaim_reent+0x1fc>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
	    cleanup_glue (ptr, ptr->__sglue._next);
2040ebdc:    ff442503              lw    a0,-12(s0)                             Branch-Tgt, allGrp
2040ebe0:    ff442583              lw    a1,-12(s0)                             allGrp
2040ebe4:    2e05a583              lw    a1,736(a1)                             allGrp
2040ebe8:    00000097              auipc    ra,0x0                              allGrp
2040ebec:    d7c080e7              jalr    -644(ra) # 2040e964 <cleanup_glue>   Call-Instr, allGrp, controlFlowGrp
2040ebf0:    0040006f              j    2040ebf4 <_reclaim_reent+0x214>         Return-Tgt, allGrp, Branch-Instr, controlFlowGrp
	}
2040ebf4:    0040006f              j    2040ebf8 <_reclaim_reent+0x218>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp

      /* Malloc memory not reclaimed; no good way to return memory anyway. */

    }
2040ebf8:    0040006f              j    2040ebfc <_reclaim_reent+0x21c>         Branch-Tgt, allGrp, Branch-Instr, controlFlowGrp
}
2040ebfc:    02812403              lw    s0,40(sp)                              Branch-Tgt, allGrp
2040ec00:    02012423              sw    zero,40(sp)                            allGrp
2040ec04:    02c12083              lw    ra,44(sp)                              allGrp
2040ec08:    02012623              sw    zero,44(sp)                            allGrp
2040ec0c:    03010113              addi    sp,sp,48                             allGrp
2040ec10:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

2040ec14 <__wrap_sbrk>:
2040ec14:    00050593              mv    a1,a0                                  Call-Tgt, allGrp, Branch-Tgt
2040ec18:    fff00513              li    a0,-1                                  allGrp
{
  extern char _end[];
  extern char _heap_end[];
  static char *curbrk = _end;

  if ((curbrk + incr < _end) || (curbrk + incr > _heap_end))
2040ec1c:    800016b7              lui    a3,0x80001                            allGrp
2040ec20:    9b06a603              lw    a2,-1616(a3) # 800009b0 <_sp+0xffffc9b0>allGrp
2040ec24:    00b605b3              add    a1,a2,a1                              allGrp
2040ec28:    80002737              lui    a4,0x80002                            allGrp
2040ec2c:    a5870713              addi    a4,a4,-1448 # 80001a58 <_sp+0xffffda58>allGrp
2040ec30:    00e5ee63              bltu    a1,a4,2040ec4c <__wrap_sbrk+0x38>    allGrp, Branch-Instr, controlFlowGrp
2040ec34:    80004737              lui    a4,0x80004                            Branch-Tgt, allGrp
2040ec38:    80070713              addi    a4,a4,-2048 # 80003800 <_sp+0xfffff800>allGrp
2040ec3c:    00b76863              bltu    a4,a1,2040ec4c <__wrap_sbrk+0x38>    allGrp, Branch-Instr, controlFlowGrp
    return NULL - 1;

  curbrk += incr;
2040ec40:    9b068513              addi    a0,a3,-1616                          Branch-Tgt, allGrp
2040ec44:    00b52023              sw    a1,0(a0)                               allGrp
2040ec48:    00060513              mv    a0,a2                                  allGrp
  return curbrk - incr;
}
2040ec4c:    00008067              ret                                          Branch-Tgt, Return-Instr, allGrp, controlFlowGrp

2040ec50 <__adddf3>:
#include "soft-fp.h"
#include "double.h"

DFtype
__adddf3 (DFtype a, DFtype b)
{
2040ec50:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp
2040ec54:    02112623              sw    ra,44(sp)                              allGrp
2040ec58:    02812423              sw    s0,40(sp)                              allGrp
2040ec5c:    02912223              sw    s1,36(sp)                              allGrp
2040ec60:    03212023              sw    s2,32(sp)                              allGrp
2040ec64:    01312e23              sw    s3,28(sp)                              allGrp
2040ec68:    01412c23              sw    s4,24(sp)                              allGrp
  FP_DECL_D (A);
  FP_DECL_D (B);
  FP_DECL_D (R);
  DFtype r;

  FP_INIT_ROUNDMODE;
2040ec6c:    002024f3              frrm    s1                                   allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
2040ec70:    001008b7              lui    a7,0x100                              allGrp
2040ec74:    fff88893              addi    a7,a7,-1 # fffff <__stack_size+0xff7ff>allGrp
2040ec78:    0145d993              srli    s3,a1,0x14                           allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2040ec7c:    0146d813              srli    a6,a3,0x14                           allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
2040ec80:    00b8f7b3              and    a5,a7,a1                              allGrp
2040ec84:    7ff9f993              andi    s3,s3,2047                           allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2040ec88:    00d8f8b3              and    a7,a7,a3                              allGrp
2040ec8c:    7ff87813              andi    a6,a6,2047                           allGrp
2040ec90:    01d65713              srli    a4,a2,0x1d                           allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
2040ec94:    01f5d913              srli    s2,a1,0x1f                           allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2040ec98:    00389893              slli    a7,a7,0x3                            allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
2040ec9c:    00379593              slli    a1,a5,0x3                            allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2040eca0:    00361313              slli    t1,a2,0x3                            allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
2040eca4:    01d55793              srli    a5,a0,0x1d                           allGrp
2040eca8:    41098633              sub    a2,s3,a6                              allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2040ecac:    01f6d693              srli    a3,a3,0x1f                           allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
2040ecb0:    00b7e7b3              or    a5,a5,a1                               allGrp
2040ecb4:    00351513              slli    a0,a0,0x3                            allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2040ecb8:    01176733              or    a4,a4,a7                               allGrp
  FP_ADD_D (R, A, B);
2040ecbc:    00060e13              mv    t3,a2                                  allGrp
2040ecc0:    4cd91c63              bne    s2,a3,2040f198 <__adddf3+0x548>       allGrp, controlFlowGrp
2040ecc4:    12c05e63              blez    a2,2040ee00 <__adddf3+0x1b0>         Call-Tgt, allGrp, controlFlowGrp
2040ecc8:    0a081063              bnez    a6,2040ed68 <__adddf3+0x118>         Call-Tgt, allGrp, controlFlowGrp
2040eccc:    006766b3              or    a3,a4,t1                               Call-Tgt, allGrp
2040ecd0:    00069a63              bnez    a3,2040ece4 <__adddf3+0x94>          allGrp, controlFlowGrp
2040ecd4:    7ff00713              li    a4,2047                                Call-Tgt, allGrp
2040ecd8:    00060813              mv    a6,a2                                  allGrp
2040ecdc:    04ee1e63              bne    t3,a4,2040ed38 <__adddf3+0xe8>        allGrp, controlFlowGrp
2040ece0:    0680006f              j    2040ed48 <__adddf3+0xf8>                Call-Tgt, allGrp, controlFlowGrp
2040ece4:    fff60613              addi    a2,a2,-1                             Call-Tgt, allGrp
2040ece8:    04061c63              bnez    a2,2040ed40 <__adddf3+0xf0>          allGrp, controlFlowGrp
2040ecec:    00a30333              add    t1,t1,a0                              Call-Tgt, allGrp
2040ecf0:    00e787b3              add    a5,a5,a4                              allGrp
2040ecf4:    00a33533              sltu    a0,t1,a0                             allGrp
2040ecf8:    00a78733              add    a4,a5,a0                              allGrp
2040ecfc:    00100813              li    a6,1                                   allGrp
2040ed00:    00871793              slli    a5,a4,0x8                            Call-Tgt, allGrp
2040ed04:    1007da63              bgez    a5,2040ee18 <__adddf3+0x1c8>         allGrp, controlFlowGrp
2040ed08:    00180813              addi    a6,a6,1                              Call-Tgt, allGrp
2040ed0c:    7ff00793              li    a5,2047                                allGrp
2040ed10:    44f80463              beq    a6,a5,2040f158 <__adddf3+0x508>       allGrp, controlFlowGrp
2040ed14:    ff8007b7              lui    a5,0xff800                            Call-Tgt, allGrp
2040ed18:    fff78793              addi    a5,a5,-1 # ff7fffff <_sp+0x7f7fbfff> allGrp
2040ed1c:    00135513              srli    a0,t1,0x1                            allGrp
2040ed20:    00f777b3              and    a5,a4,a5                              allGrp
2040ed24:    00137313              andi    t1,t1,1                              allGrp
2040ed28:    00656333              or    t1,a0,t1                               allGrp
2040ed2c:    01f79513              slli    a0,a5,0x1f                           allGrp
2040ed30:    00656533              or    a0,a0,t1                               allGrp
2040ed34:    0017d793              srli    a5,a5,0x1                            allGrp
2040ed38:    00000e13              li    t3,0                                   Call-Tgt, allGrp
2040ed3c:    3a80006f              j    2040f0e4 <__adddf3+0x494>               allGrp, controlFlowGrp
2040ed40:    7ff00693              li    a3,2047                                Call-Tgt, allGrp
2040ed44:    02de1a63              bne    t3,a3,2040ed78 <__adddf3+0x128>       allGrp, controlFlowGrp
2040ed48:    00a7e733              or    a4,a5,a0                               Call-Tgt, allGrp
2040ed4c:    0e0702e3              beqz    a4,2040f630 <__adddf3+0x9e0>         allGrp, controlFlowGrp
2040ed50:    00979713              slli    a4,a5,0x9                            Call-Tgt, allGrp
2040ed54:    7ff00813              li    a6,2047                                allGrp
2040ed58:    00000e13              li    t3,0                                   allGrp
2040ed5c:    38074463              bltz    a4,2040f0e4 <__adddf3+0x494>         allGrp, controlFlowGrp
2040ed60:    01000893              li    a7,16                                  Call-Tgt, allGrp
2040ed64:    1f80006f              j    2040ef5c <__adddf3+0x30c>               allGrp, controlFlowGrp
2040ed68:    7ff00693              li    a3,2047                                Call-Tgt, allGrp
2040ed6c:    fcd98ee3              beq    s3,a3,2040ed48 <__adddf3+0xf8>        allGrp, controlFlowGrp
2040ed70:    008006b7              lui    a3,0x800                              Call-Tgt, allGrp
2040ed74:    00d76733              or    a4,a4,a3                               allGrp
2040ed78:    03800693              li    a3,56                                  Call-Tgt, allGrp
2040ed7c:    06c6cc63              blt    a3,a2,2040edf4 <__adddf3+0x1a4>       allGrp, controlFlowGrp
2040ed80:    01f00693              li    a3,31                                  Call-Tgt, allGrp
2040ed84:    04c6c063              blt    a3,a2,2040edc4 <__adddf3+0x174>       allGrp, controlFlowGrp
2040ed88:    02000593              li    a1,32                                  Call-Tgt, allGrp
2040ed8c:    40c585b3              sub    a1,a1,a2                              allGrp
2040ed90:    00c35833              srl    a6,t1,a2                              allGrp
2040ed94:    00b716b3              sll    a3,a4,a1                              allGrp
2040ed98:    00b31333              sll    t1,t1,a1                              allGrp
2040ed9c:    0106e6b3              or    a3,a3,a6                               allGrp
2040eda0:    00603333              snez    t1,t1                                allGrp
2040eda4:    0066e333              or    t1,a3,t1                               allGrp
2040eda8:    00c75633              srl    a2,a4,a2                              allGrp
2040edac:    00a30333              add    t1,t1,a0                              Call-Tgt, allGrp
2040edb0:    00f60633              add    a2,a2,a5                              allGrp
2040edb4:    00a337b3              sltu    a5,t1,a0                             allGrp
2040edb8:    00f60733              add    a4,a2,a5                              allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
2040edbc:    00098813              mv    a6,s3                                  allGrp
2040edc0:    f41ff06f              j    2040ed00 <__adddf3+0xb0>                allGrp, controlFlowGrp
  FP_ADD_D (R, A, B);
2040edc4:    02000813              li    a6,32                                  Call-Tgt, allGrp
2040edc8:    00c756b3              srl    a3,a4,a2                              allGrp
2040edcc:    00000593              li    a1,0                                   allGrp
2040edd0:    01060863              beq    a2,a6,2040ede0 <__adddf3+0x190>       allGrp, controlFlowGrp
2040edd4:    04000593              li    a1,64                                  Call-Tgt, allGrp
2040edd8:    40c58633              sub    a2,a1,a2                              allGrp
2040eddc:    00c715b3              sll    a1,a4,a2                              allGrp
2040ede0:    0065e333              or    t1,a1,t1                               Call-Tgt, allGrp
2040ede4:    00603333              snez    t1,t1                                allGrp
2040ede8:    0066e333              or    t1,a3,t1                               allGrp
2040edec:    00000613              li    a2,0                                   Call-Tgt, allGrp
2040edf0:    fbdff06f              j    2040edac <__adddf3+0x15c>               allGrp, controlFlowGrp
2040edf4:    00676333              or    t1,a4,t1                               Call-Tgt, allGrp
2040edf8:    00603333              snez    t1,t1                                allGrp
2040edfc:    ff1ff06f              j    2040edec <__adddf3+0x19c>               allGrp, controlFlowGrp
2040ee00:    10060463              beqz    a2,2040ef08 <__adddf3+0x2b8>         Call-Tgt, allGrp, controlFlowGrp
2040ee04:    06099463              bnez    s3,2040ee6c <__adddf3+0x21c>         Call-Tgt, allGrp, controlFlowGrp
2040ee08:    00a7e6b3              or    a3,a5,a0                               Call-Tgt, allGrp
2040ee0c:    00069c63              bnez    a3,2040ee24 <__adddf3+0x1d4>         allGrp, controlFlowGrp
2040ee10:    7ff00793              li    a5,2047                                Call-Tgt, allGrp
2040ee14:    02f80e63              beq    a6,a5,2040ee50 <__adddf3+0x200>       Call-Tgt, allGrp, controlFlowGrp
  FP_PACK_SEMIRAW_D (r, R);
2040ee18:    04081463              bnez    a6,2040ee60 <__adddf3+0x210>         Call-Tgt, allGrp, controlFlowGrp
  FP_ADD_D (R, A, B);
2040ee1c:    00030513              mv    a0,t1                                  Call-Tgt, allGrp
2040ee20:    5a40006f              j    2040f3c4 <__adddf3+0x774>               allGrp, controlFlowGrp
2040ee24:    fff00693              li    a3,-1                                  Call-Tgt, allGrp
2040ee28:    00d61e63              bne    a2,a3,2040ee44 <__adddf3+0x1f4>       allGrp, controlFlowGrp
2040ee2c:    006506b3              add    a3,a0,t1                              Call-Tgt, allGrp
2040ee30:    00e787b3              add    a5,a5,a4                              allGrp
2040ee34:    0066b733              sltu    a4,a3,t1                             allGrp
2040ee38:    00e78733              add    a4,a5,a4                              allGrp
2040ee3c:    00068313              mv    t1,a3                                  allGrp
2040ee40:    ec1ff06f              j    2040ed00 <__adddf3+0xb0>                allGrp, controlFlowGrp
2040ee44:    7ff00693              li    a3,2047                                Call-Tgt, allGrp
2040ee48:    fff64613              not    a2,a2                                 allGrp
2040ee4c:    02d81a63              bne    a6,a3,2040ee80 <__adddf3+0x230>       allGrp, controlFlowGrp
2040ee50:    00676533              or    a0,a4,t1                               Call-Tgt, allGrp
2040ee54:    7e050863              beqz    a0,2040f644 <__adddf3+0x9f4>         allGrp, controlFlowGrp
2040ee58:    00971793              slli    a5,a4,0x9                            Call-Tgt, allGrp
2040ee5c:    7e07d863              bgez    a5,2040f64c <__adddf3+0x9fc>         allGrp, controlFlowGrp
2040ee60:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
2040ee64:    00030513              mv    a0,t1                                  allGrp
2040ee68:    ed1ff06f              j    2040ed38 <__adddf3+0xe8>                allGrp, controlFlowGrp
2040ee6c:    7ff00693              li    a3,2047                                Call-Tgt, allGrp
2040ee70:    fed800e3              beq    a6,a3,2040ee50 <__adddf3+0x200>       allGrp, controlFlowGrp
2040ee74:    008006b7              lui    a3,0x800                              Call-Tgt, allGrp
2040ee78:    40c00633              neg    a2,a2                                 allGrp
2040ee7c:    00d7e7b3              or    a5,a5,a3                               allGrp
2040ee80:    03800693              li    a3,56                                  Call-Tgt, allGrp
2040ee84:    06c6cc63              blt    a3,a2,2040eefc <__adddf3+0x2ac>       allGrp, controlFlowGrp
2040ee88:    01f00693              li    a3,31                                  Call-Tgt, allGrp
2040ee8c:    04c6c063              blt    a3,a2,2040eecc <__adddf3+0x27c>       allGrp, controlFlowGrp
2040ee90:    02000593              li    a1,32                                  Call-Tgt, allGrp
2040ee94:    40c585b3              sub    a1,a1,a2                              allGrp
2040ee98:    00c558b3              srl    a7,a0,a2                              allGrp
2040ee9c:    00b796b3              sll    a3,a5,a1                              allGrp
2040eea0:    00b51533              sll    a0,a0,a1                              allGrp
2040eea4:    0116e6b3              or    a3,a3,a7                               allGrp
2040eea8:    00a03533              snez    a0,a0                                allGrp
2040eeac:    00a6e533              or    a0,a3,a0                               allGrp
2040eeb0:    00c7d633              srl    a2,a5,a2                              allGrp
2040eeb4:    00650533              add    a0,a0,t1                              Call-Tgt, allGrp
2040eeb8:    00e607b3              add    a5,a2,a4                              allGrp
2040eebc:    00653733              sltu    a4,a0,t1                             allGrp
2040eec0:    00e78733              add    a4,a5,a4                              allGrp
2040eec4:    00050313              mv    t1,a0                                  allGrp
2040eec8:    e39ff06f              j    2040ed00 <__adddf3+0xb0>                allGrp, controlFlowGrp
2040eecc:    02000893              li    a7,32                                  Call-Tgt, allGrp
2040eed0:    00c7d6b3              srl    a3,a5,a2                              allGrp
2040eed4:    00000593              li    a1,0                                   allGrp
2040eed8:    01160863              beq    a2,a7,2040eee8 <__adddf3+0x298>       allGrp, controlFlowGrp
2040eedc:    04000593              li    a1,64                                  Call-Tgt, allGrp
2040eee0:    40c58633              sub    a2,a1,a2                              allGrp
2040eee4:    00c795b3              sll    a1,a5,a2                              allGrp
2040eee8:    00a5e533              or    a0,a1,a0                               Call-Tgt, allGrp
2040eeec:    00a03533              snez    a0,a0                                allGrp
2040eef0:    00a6e533              or    a0,a3,a0                               allGrp
2040eef4:    00000613              li    a2,0                                   Call-Tgt, allGrp
2040eef8:    fbdff06f              j    2040eeb4 <__adddf3+0x264>               allGrp, controlFlowGrp
2040eefc:    00a7e533              or    a0,a5,a0                               Call-Tgt, allGrp
2040ef00:    00a03533              snez    a0,a0                                allGrp
2040ef04:    ff1ff06f              j    2040eef4 <__adddf3+0x2a4>               allGrp, controlFlowGrp
2040ef08:    00198693              addi    a3,s3,1                              Call-Tgt, allGrp
2040ef0c:    7ff6f593              andi    a1,a3,2047                           allGrp
2040ef10:    00100613              li    a2,1                                   allGrp
2040ef14:    1ab64263              blt    a2,a1,2040f0b8 <__adddf3+0x468>       allGrp, controlFlowGrp
2040ef18:    00a7e6b3              or    a3,a5,a0                               Call-Tgt, allGrp
2040ef1c:    04099e63              bnez    s3,2040ef78 <__adddf3+0x328>         allGrp, controlFlowGrp
2040ef20:    ee068ee3              beqz    a3,2040ee1c <__adddf3+0x1cc>         Call-Tgt, allGrp, controlFlowGrp
2040ef24:    006766b3              or    a3,a4,t1                               Call-Tgt, allGrp
2040ef28:    6c068263              beqz    a3,2040f5ec <__adddf3+0x99c>         allGrp, controlFlowGrp
2040ef2c:    00650333              add    t1,a0,t1                              Call-Tgt, allGrp
2040ef30:    00e787b3              add    a5,a5,a4                              allGrp
2040ef34:    00a33533              sltu    a0,t1,a0                             allGrp
2040ef38:    00a78733              add    a4,a5,a0                              allGrp
2040ef3c:    00871793              slli    a5,a4,0x8                            allGrp
2040ef40:    ec07dee3              bgez    a5,2040ee1c <__adddf3+0x1cc>         allGrp, controlFlowGrp
2040ef44:    ff8007b7              lui    a5,0xff800                            Call-Tgt, allGrp
2040ef48:    fff78793              addi    a5,a5,-1 # ff7fffff <_sp+0x7f7fbfff> allGrp
2040ef4c:    00f777b3              and    a5,a4,a5                              allGrp
2040ef50:    00030513              mv    a0,t1                                  allGrp
2040ef54:    00000893              li    a7,0                                   allGrp
2040ef58:    00100813              li    a6,1                                   allGrp
  FP_PACK_SEMIRAW_D (r, R);
2040ef5c:    00757713              andi    a4,a0,7                              Call-Tgt, allGrp
2040ef60:    1a071663              bnez    a4,2040f10c <__adddf3+0x4bc>         allGrp, controlFlowGrp
2040ef64:    060e0263              beqz    t3,2040efc8 <__adddf3+0x378>         Call-Tgt, allGrp, controlFlowGrp
2040ef68:    0018f713              andi    a4,a7,1                              Call-Tgt, allGrp
2040ef6c:    04070e63              beqz    a4,2040efc8 <__adddf3+0x378>         allGrp, controlFlowGrp
2040ef70:    0028e893              ori    a7,a7,2                               Call-Tgt, allGrp
2040ef74:    0540006f              j    2040efc8 <__adddf3+0x378>               allGrp, controlFlowGrp
  FP_ADD_D (R, A, B);
2040ef78:    7ff00613              li    a2,2047                                Call-Tgt, allGrp
2040ef7c:    12c99663              bne    s3,a2,2040f0a8 <__adddf3+0x458>       allGrp, controlFlowGrp
2040ef80:    76068a63              beqz    a3,2040f6f4 <__adddf3+0xaa4>         Call-Tgt, allGrp, controlFlowGrp
2040ef84:    004008b7              lui    a7,0x400                              Call-Tgt, allGrp
2040ef88:    0117f8b3              and    a7,a5,a7                              allGrp
  FP_DECL_EX;
2040ef8c:    0018b893              seqz    a7,a7                                allGrp
2040ef90:    00489893              slli    a7,a7,0x4                            allGrp
  FP_ADD_D (R, A, B);
2040ef94:    01381e63              bne    a6,s3,2040efb0 <__adddf3+0x360>       allGrp, controlFlowGrp
2040ef98:    00676633              or    a2,a4,t1                               Call-Tgt, allGrp
2040ef9c:    00060863              beqz    a2,2040efac <__adddf3+0x35c>         allGrp, controlFlowGrp
2040efa0:    00971613              slli    a2,a4,0x9                            Call-Tgt, allGrp
2040efa4:    00064463              bltz    a2,2040efac <__adddf3+0x35c>         allGrp, controlFlowGrp
2040efa8:    01000893              li    a7,16                                  Call-Tgt, allGrp
2040efac:    66068c63              beqz    a3,2040f624 <__adddf3+0x9d4>         Call-Tgt, allGrp, controlFlowGrp
2040efb0:    00676733              or    a4,a4,t1                               Call-Tgt, allGrp
2040efb4:    50070463              beqz    a4,2040f4bc <__adddf3+0x86c>         allGrp, controlFlowGrp
2040efb8:    004007b7              lui    a5,0x400                              Call-Tgt, allGrp
2040efbc:    00000513              li    a0,0                                   allGrp
2040efc0:    7ff00813              li    a6,2047                                allGrp
2040efc4:    00000913              li    s2,0                                   allGrp
  FP_PACK_SEMIRAW_D (r, R);
2040efc8:    00879713              slli    a4,a5,0x8                            Call-Tgt, allGrp
2040efcc:    00075e63              bgez    a4,2040efe8 <__adddf3+0x398>         allGrp, controlFlowGrp
2040efd0:    00180813              addi    a6,a6,1                              Call-Tgt, allGrp
2040efd4:    7ff00713              li    a4,2047                                allGrp
2040efd8:    6ce80c63              beq    a6,a4,2040f6b0 <__adddf3+0xa60>       allGrp, controlFlowGrp
2040efdc:    ff800737              lui    a4,0xff800                            Call-Tgt, allGrp
2040efe0:    fff70713              addi    a4,a4,-1 # ff7fffff <_sp+0x7f7fbfff> allGrp
2040efe4:    00e7f7b3              and    a5,a5,a4                              allGrp
2040efe8:    01d79713              slli    a4,a5,0x1d                           Call-Tgt, allGrp
2040efec:    00355513              srli    a0,a0,0x3                            allGrp
2040eff0:    00a76533              or    a0,a4,a0                               allGrp
2040eff4:    7ff00713              li    a4,2047                                allGrp
2040eff8:    0037d793              srli    a5,a5,0x3                            allGrp
2040effc:    00e81e63              bne    a6,a4,2040f018 <__adddf3+0x3c8>       allGrp, controlFlowGrp
2040f000:    00f56533              or    a0,a0,a5                               Call-Tgt, allGrp
2040f004:    00000793              li    a5,0                                   allGrp
2040f008:    00050863              beqz    a0,2040f018 <__adddf3+0x3c8>         allGrp, controlFlowGrp
2040f00c:    000807b7              lui    a5,0x80                               Call-Tgt, allGrp
2040f010:    00000513              li    a0,0                                   allGrp
2040f014:    00000913              li    s2,0                                   allGrp
2040f018:    00100737              lui    a4,0x100                              Call-Tgt, allGrp
2040f01c:    fff70713              addi    a4,a4,-1 # fffff <__stack_size+0xff7ff>allGrp
2040f020:    00e7f7b3              and    a5,a5,a4                              allGrp
2040f024:    80100737              lui    a4,0x80100                            allGrp
2040f028:    7ff87813              andi    a6,a6,2047                           allGrp
2040f02c:    fff70713              addi    a4,a4,-1 # 800fffff <_sp+0xfbfff>    allGrp
2040f030:    01481813              slli    a6,a6,0x14                           allGrp
2040f034:    00e7f7b3              and    a5,a5,a4                              allGrp
2040f038:    0107e7b3              or    a5,a5,a6                               allGrp
2040f03c:    80000837              lui    a6,0x80000                            allGrp
2040f040:    fff84813              not    a6,a6                                 allGrp
2040f044:    01f91913              slli    s2,s2,0x1f                           allGrp
2040f048:    0107f7b3              and    a5,a5,a6                              allGrp
2040f04c:    0127e6b3              or    a3,a5,s2                               allGrp
2040f050:    00a12423              sw    a0,8(sp)                               allGrp
2040f054:    00d12623              sw    a3,12(sp)                              allGrp
2040f058:    00813787              fld    fa5,8(sp)                             allGrp
  FP_HANDLE_EXCEPTIONS;
2040f05c:    00088463              beqz    a7,2040f064 <__adddf3+0x414>         allGrp, controlFlowGrp
2040f060:    0018a073              csrs    fflags,a7                            allGrp

  return r;
}
2040f064:    02c12083              lw    ra,44(sp)                              Call-Tgt, allGrp
2040f068:    02812403              lw    s0,40(sp)                              allGrp
2040f06c:    02412483              lw    s1,36(sp)                              allGrp
2040f070:    02012903              lw    s2,32(sp)                              allGrp
2040f074:    01c12983              lw    s3,28(sp)                              allGrp
2040f078:    01812a03              lw    s4,24(sp)                              allGrp
2040f07c:    00f13427              fsd    fa5,8(sp)                             allGrp
2040f080:    02112623              sw    ra,44(sp)                              allGrp
2040f084:    02812423              sw    s0,40(sp)                              allGrp
2040f088:    02912223              sw    s1,36(sp)                              allGrp
2040f08c:    03212023              sw    s2,32(sp)                              allGrp
2040f090:    01312e23              sw    s3,28(sp)                              allGrp
2040f094:    01412c23              sw    s4,24(sp)                              allGrp
2040f098:    00812503              lw    a0,8(sp)                               allGrp
2040f09c:    00c12583              lw    a1,12(sp)                              allGrp
2040f0a0:    03010113              addi    sp,sp,48                             allGrp
2040f0a4:    00008067              ret                                          allGrp, controlFlowGrp
2040f0a8:    00000893              li    a7,0                                   Call-Tgt, allGrp
  FP_ADD_D (R, A, B);
2040f0ac:    f0c810e3              bne    a6,a2,2040efac <__adddf3+0x35c>       allGrp, controlFlowGrp
2040f0b0:    00000893              li    a7,0                                   Call-Tgt, allGrp
2040f0b4:    ee5ff06f              j    2040ef98 <__adddf3+0x348>               allGrp, controlFlowGrp
2040f0b8:    7ff00613              li    a2,2047                                Call-Tgt, allGrp
2040f0bc:    02c68863              beq    a3,a2,2040f0ec <__adddf3+0x49c>       allGrp, controlFlowGrp
2040f0c0:    00650333              add    t1,a0,t1                              Call-Tgt, allGrp
2040f0c4:    00a33533              sltu    a0,t1,a0                             allGrp
2040f0c8:    00e787b3              add    a5,a5,a4                              allGrp
2040f0cc:    00a787b3              add    a5,a5,a0                              allGrp
2040f0d0:    01f79513              slli    a0,a5,0x1f                           allGrp
2040f0d4:    00135313              srli    t1,t1,0x1                            allGrp
2040f0d8:    00656533              or    a0,a0,t1                               allGrp
2040f0dc:    0017d793              srli    a5,a5,0x1                            allGrp
2040f0e0:    00068813              mv    a6,a3                                  allGrp
2040f0e4:    00000893              li    a7,0                                   Call-Tgt, allGrp
2040f0e8:    e75ff06f              j    2040ef5c <__adddf3+0x30c>               allGrp, controlFlowGrp
2040f0ec:    06048263              beqz    s1,2040f150 <__adddf3+0x500>         Call-Tgt, allGrp, controlFlowGrp
2040f0f0:    00300793              li    a5,3                                   Call-Tgt, allGrp
2040f0f4:    04f49863              bne    s1,a5,2040f144 <__adddf3+0x4f4>       allGrp, controlFlowGrp
2040f0f8:    04090c63              beqz    s2,2040f150 <__adddf3+0x500>         Call-Tgt, allGrp, controlFlowGrp
2040f0fc:    fff00793              li    a5,-1                                  Call-Tgt, allGrp
2040f100:    fff00513              li    a0,-1                                  allGrp
2040f104:    7fe00813              li    a6,2046                                allGrp
2040f108:    00500893              li    a7,5                                   Call-Tgt, allGrp
  FP_PACK_SEMIRAW_D (r, R);
2040f10c:    00200713              li    a4,2                                   Call-Tgt, allGrp
2040f110:    0018e893              ori    a7,a7,1                               allGrp
2040f114:    58e48a63              beq    s1,a4,2040f6a8 <__adddf3+0xa58>       allGrp, controlFlowGrp
2040f118:    00300713              li    a4,3                                   Call-Tgt, allGrp
2040f11c:    58e48063              beq    s1,a4,2040f69c <__adddf3+0xa4c>       allGrp, controlFlowGrp
2040f120:    e40492e3              bnez    s1,2040ef64 <__adddf3+0x314>         Call-Tgt, allGrp, controlFlowGrp
2040f124:    00f57713              andi    a4,a0,15                             Call-Tgt, allGrp
2040f128:    00400693              li    a3,4                                   allGrp
2040f12c:    e2d70ce3              beq    a4,a3,2040ef64 <__adddf3+0x314>       allGrp, controlFlowGrp
2040f130:    00450713              addi    a4,a0,4                              Call-Tgt, allGrp
2040f134:    00a73533              sltu    a0,a4,a0                             Call-Tgt, allGrp
2040f138:    00a787b3              add    a5,a5,a0                              allGrp
2040f13c:    00070513              mv    a0,a4                                  allGrp
2040f140:    e25ff06f              j    2040ef64 <__adddf3+0x314>               allGrp, controlFlowGrp
  FP_ADD_D (R, A, B);
2040f144:    00200793              li    a5,2                                   Call-Tgt, allGrp
2040f148:    faf49ae3              bne    s1,a5,2040f0fc <__adddf3+0x4ac>       allGrp, controlFlowGrp
2040f14c:    fa0908e3              beqz    s2,2040f0fc <__adddf3+0x4ac>         Call-Tgt, allGrp, controlFlowGrp
2040f150:    7ff00813              li    a6,2047                                Call-Tgt, allGrp
2040f154:    0340006f              j    2040f188 <__adddf3+0x538>               allGrp, controlFlowGrp
2040f158:    02048863              beqz    s1,2040f188 <__adddf3+0x538>         Call-Tgt, allGrp, controlFlowGrp
2040f15c:    00300793              li    a5,3                                   Call-Tgt, allGrp
2040f160:    00f49e63              bne    s1,a5,2040f17c <__adddf3+0x52c>       allGrp, controlFlowGrp
2040f164:    02090263              beqz    s2,2040f188 <__adddf3+0x538>         Call-Tgt, allGrp, controlFlowGrp
2040f168:    fff00793              li    a5,-1                                  Call-Tgt, allGrp
2040f16c:    fff00513              li    a0,-1                                  allGrp
2040f170:    7fe00813              li    a6,2046                                allGrp
2040f174:    00000e13              li    t3,0                                   allGrp
2040f178:    f91ff06f              j    2040f108 <__adddf3+0x4b8>               allGrp, controlFlowGrp
2040f17c:    00200793              li    a5,2                                   Call-Tgt, allGrp
2040f180:    fef494e3              bne    s1,a5,2040f168 <__adddf3+0x518>       allGrp, controlFlowGrp
2040f184:    fe0902e3              beqz    s2,2040f168 <__adddf3+0x518>         Call-Tgt, allGrp, controlFlowGrp
2040f188:    00000793              li    a5,0                                   Call-Tgt, allGrp
2040f18c:    00000513              li    a0,0                                   allGrp
2040f190:    00500893              li    a7,5                                   allGrp
2040f194:    e35ff06f              j    2040efc8 <__adddf3+0x378>               allGrp, controlFlowGrp
2040f198:    0ec05863              blez    a2,2040f288 <__adddf3+0x638>         Call-Tgt, allGrp, controlFlowGrp
2040f19c:    08081e63              bnez    a6,2040f238 <__adddf3+0x5e8>         Call-Tgt, allGrp, controlFlowGrp
2040f1a0:    006766b3              or    a3,a4,t1                               Call-Tgt, allGrp
2040f1a4:    b20688e3              beqz    a3,2040ecd4 <__adddf3+0x84>          allGrp, controlFlowGrp
2040f1a8:    fff60613              addi    a2,a2,-1                             Call-Tgt, allGrp
2040f1ac:    02061c63              bnez    a2,2040f1e4 <__adddf3+0x594>         allGrp, controlFlowGrp
2040f1b0:    40650333              sub    t1,a0,t1                              Call-Tgt, allGrp
2040f1b4:    40e787b3              sub    a5,a5,a4                              allGrp
2040f1b8:    00653533              sltu    a0,a0,t1                             allGrp
2040f1bc:    40a78733              sub    a4,a5,a0                              allGrp
2040f1c0:    00100813              li    a6,1                                   allGrp
2040f1c4:    00871793              slli    a5,a4,0x8                            Call-Tgt, allGrp
2040f1c8:    c407d8e3              bgez    a5,2040ee18 <__adddf3+0x1c8>         allGrp, controlFlowGrp
2040f1cc:    00800437              lui    s0,0x800                              Call-Tgt, allGrp
2040f1d0:    fff40413              addi    s0,s0,-1 # 7fffff <__stack_size+0x7ff7ff>allGrp
2040f1d4:    00877433              and    s0,a4,s0                              allGrp
2040f1d8:    00030a13              mv    s4,t1                                  allGrp
2040f1dc:    00080993              mv    s3,a6                                  allGrp
2040f1e0:    3280006f              j    2040f508 <__adddf3+0x8b8>               allGrp, controlFlowGrp
2040f1e4:    7ff00693              li    a3,2047                                Call-Tgt, allGrp
2040f1e8:    b6de00e3              beq    t3,a3,2040ed48 <__adddf3+0xf8>        allGrp, controlFlowGrp
2040f1ec:    03800693              li    a3,56                                  Call-Tgt, allGrp
2040f1f0:    08c6c663              blt    a3,a2,2040f27c <__adddf3+0x62c>       allGrp, controlFlowGrp
2040f1f4:    01f00693              li    a3,31                                  Call-Tgt, allGrp
2040f1f8:    04c6ca63              blt    a3,a2,2040f24c <__adddf3+0x5fc>       allGrp, controlFlowGrp
2040f1fc:    02000593              li    a1,32                                  Call-Tgt, allGrp
2040f200:    40c585b3              sub    a1,a1,a2                              allGrp
2040f204:    00c35833              srl    a6,t1,a2                              allGrp
2040f208:    00b716b3              sll    a3,a4,a1                              allGrp
2040f20c:    00b31333              sll    t1,t1,a1                              allGrp
2040f210:    0106e6b3              or    a3,a3,a6                               allGrp
2040f214:    00603333              snez    t1,t1                                allGrp
2040f218:    0066e333              or    t1,a3,t1                               allGrp
2040f21c:    00c75633              srl    a2,a4,a2                              allGrp
2040f220:    40650333              sub    t1,a0,t1                              Call-Tgt, allGrp
2040f224:    40c78633              sub    a2,a5,a2                              allGrp
2040f228:    006537b3              sltu    a5,a0,t1                             allGrp
2040f22c:    40f60733              sub    a4,a2,a5                              allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
2040f230:    00098813              mv    a6,s3                                  allGrp
2040f234:    f91ff06f              j    2040f1c4 <__adddf3+0x574>               allGrp, controlFlowGrp
  FP_ADD_D (R, A, B);
2040f238:    7ff00693              li    a3,2047                                Call-Tgt, allGrp
2040f23c:    b0d986e3              beq    s3,a3,2040ed48 <__adddf3+0xf8>        allGrp, controlFlowGrp
2040f240:    008006b7              lui    a3,0x800                              Call-Tgt, allGrp
2040f244:    00d76733              or    a4,a4,a3                               allGrp
2040f248:    fa5ff06f              j    2040f1ec <__adddf3+0x59c>               allGrp, controlFlowGrp
2040f24c:    02000813              li    a6,32                                  Call-Tgt, allGrp
2040f250:    00c756b3              srl    a3,a4,a2                              allGrp
2040f254:    00000593              li    a1,0                                   allGrp
2040f258:    01060863              beq    a2,a6,2040f268 <__adddf3+0x618>       allGrp, controlFlowGrp
2040f25c:    04000593              li    a1,64                                  Call-Tgt, allGrp
2040f260:    40c58633              sub    a2,a1,a2                              allGrp
2040f264:    00c715b3              sll    a1,a4,a2                              allGrp
2040f268:    0065e333              or    t1,a1,t1                               Call-Tgt, allGrp
2040f26c:    00603333              snez    t1,t1                                allGrp
2040f270:    0066e333              or    t1,a3,t1                               allGrp
2040f274:    00000613              li    a2,0                                   Call-Tgt, allGrp
2040f278:    fa9ff06f              j    2040f220 <__adddf3+0x5d0>               allGrp, controlFlowGrp
2040f27c:    00676333              or    t1,a4,t1                               Call-Tgt, allGrp
2040f280:    00603333              snez    t1,t1                                allGrp
2040f284:    ff1ff06f              j    2040f274 <__adddf3+0x624>               allGrp, controlFlowGrp
2040f288:    10060463              beqz    a2,2040f390 <__adddf3+0x740>         Call-Tgt, allGrp, controlFlowGrp
2040f28c:    06099463              bnez    s3,2040f2f4 <__adddf3+0x6a4>         Call-Tgt, allGrp, controlFlowGrp
2040f290:    00a7e5b3              or    a1,a5,a0                               Call-Tgt, allGrp
2040f294:    00059863              bnez    a1,2040f2a4 <__adddf3+0x654>         allGrp, controlFlowGrp
2040f298:    7ff00793              li    a5,2047                                Call-Tgt, allGrp
2040f29c:    00068913              mv    s2,a3                                  allGrp
2040f2a0:    b75ff06f              j    2040ee14 <__adddf3+0x1c4>               allGrp, controlFlowGrp
2040f2a4:    fff00593              li    a1,-1                                  Call-Tgt, allGrp
2040f2a8:    02b61063              bne    a2,a1,2040f2c8 <__adddf3+0x678>       allGrp, controlFlowGrp
2040f2ac:    40a305b3              sub    a1,t1,a0                              Call-Tgt, allGrp
2040f2b0:    40f707b3              sub    a5,a4,a5                              allGrp
2040f2b4:    00b33733              sltu    a4,t1,a1                             allGrp
2040f2b8:    40e78733              sub    a4,a5,a4                              allGrp
2040f2bc:    00058313              mv    t1,a1                                  allGrp
2040f2c0:    00068913              mv    s2,a3                                  Call-Tgt, allGrp
2040f2c4:    f01ff06f              j    2040f1c4 <__adddf3+0x574>               allGrp, controlFlowGrp
2040f2c8:    7ff00593              li    a1,2047                                Call-Tgt, allGrp
2040f2cc:    fff64613              not    a2,a2                                 allGrp
2040f2d0:    02b81c63              bne    a6,a1,2040f308 <__adddf3+0x6b8>       allGrp, controlFlowGrp
2040f2d4:    00676533              or    a0,a4,t1                               Call-Tgt, allGrp
2040f2d8:    38050263              beqz    a0,2040f65c <__adddf3+0xa0c>         allGrp, controlFlowGrp
2040f2dc:    00971793              slli    a5,a4,0x9                            Call-Tgt, allGrp
2040f2e0:    3807d463              bgez    a5,2040f668 <__adddf3+0xa18>         allGrp, controlFlowGrp
2040f2e4:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2040f2e8:    00030513              mv    a0,t1                                  allGrp
  FP_ADD_D (R, A, B);
2040f2ec:    00068913              mv    s2,a3                                  allGrp
2040f2f0:    a49ff06f              j    2040ed38 <__adddf3+0xe8>                allGrp, controlFlowGrp
2040f2f4:    7ff00593              li    a1,2047                                Call-Tgt, allGrp
2040f2f8:    fcb80ee3              beq    a6,a1,2040f2d4 <__adddf3+0x684>       allGrp, controlFlowGrp
2040f2fc:    008005b7              lui    a1,0x800                              Call-Tgt, allGrp
2040f300:    40c00633              neg    a2,a2                                 allGrp
2040f304:    00b7e7b3              or    a5,a5,a1                               allGrp
2040f308:    03800593              li    a1,56                                  Call-Tgt, allGrp
2040f30c:    06c5cc63              blt    a1,a2,2040f384 <__adddf3+0x734>       allGrp, controlFlowGrp
2040f310:    01f00593              li    a1,31                                  Call-Tgt, allGrp
2040f314:    04c5c063              blt    a1,a2,2040f354 <__adddf3+0x704>       allGrp, controlFlowGrp
2040f318:    02000893              li    a7,32                                  Call-Tgt, allGrp
2040f31c:    40c888b3              sub    a7,a7,a2                              allGrp
2040f320:    00c55e33              srl    t3,a0,a2                              allGrp
2040f324:    011795b3              sll    a1,a5,a7                              allGrp
2040f328:    01151533              sll    a0,a0,a7                              allGrp
2040f32c:    01c5e5b3              or    a1,a1,t3                               allGrp
2040f330:    00a03533              snez    a0,a0                                allGrp
2040f334:    00a5e533              or    a0,a1,a0                               allGrp
2040f338:    00c7d633              srl    a2,a5,a2                              allGrp
2040f33c:    40a30533              sub    a0,t1,a0                              Call-Tgt, allGrp
2040f340:    40c707b3              sub    a5,a4,a2                              allGrp
2040f344:    00a33733              sltu    a4,t1,a0                             allGrp
2040f348:    40e78733              sub    a4,a5,a4                              allGrp
2040f34c:    00050313              mv    t1,a0                                  allGrp
2040f350:    f71ff06f              j    2040f2c0 <__adddf3+0x670>               allGrp, controlFlowGrp
2040f354:    02000e13              li    t3,32                                  Call-Tgt, allGrp
2040f358:    00c7d5b3              srl    a1,a5,a2                              allGrp
2040f35c:    00000893              li    a7,0                                   allGrp
2040f360:    01c60863              beq    a2,t3,2040f370 <__adddf3+0x720>       allGrp, controlFlowGrp
2040f364:    04000893              li    a7,64                                  Call-Tgt, allGrp
2040f368:    40c88633              sub    a2,a7,a2                              allGrp
2040f36c:    00c798b3              sll    a7,a5,a2                              allGrp
2040f370:    00a8e533              or    a0,a7,a0                               Call-Tgt, allGrp
2040f374:    00a03533              snez    a0,a0                                allGrp
2040f378:    00a5e533              or    a0,a1,a0                               allGrp
2040f37c:    00000613              li    a2,0                                   Call-Tgt, allGrp
2040f380:    fbdff06f              j    2040f33c <__adddf3+0x6ec>               allGrp, controlFlowGrp
2040f384:    00a7e533              or    a0,a5,a0                               Call-Tgt, allGrp
2040f388:    00a03533              snez    a0,a0                                allGrp
2040f38c:    ff1ff06f              j    2040f37c <__adddf3+0x72c>               allGrp, controlFlowGrp
2040f390:    00198613              addi    a2,s3,1                              Call-Tgt, allGrp
2040f394:    7ff67613              andi    a2,a2,2047                           allGrp
2040f398:    00100593              li    a1,1                                   allGrp
2040f39c:    14c5c063              blt    a1,a2,2040f4dc <__adddf3+0x88c>       allGrp, controlFlowGrp
2040f3a0:    00a7e5b3              or    a1,a5,a0                               Call-Tgt, allGrp
2040f3a4:    00676633              or    a2,a4,t1                               allGrp
2040f3a8:    0c099863              bnez    s3,2040f478 <__adddf3+0x828>         allGrp, controlFlowGrp
2040f3ac:    08059063              bnez    a1,2040f42c <__adddf3+0x7dc>         Call-Tgt, allGrp, controlFlowGrp
2040f3b0:    22061a63              bnez    a2,2040f5e4 <__adddf3+0x994>         Call-Tgt, allGrp, controlFlowGrp
2040f3b4:    ffe48913              addi    s2,s1,-2                             Call-Tgt, allGrp
2040f3b8:    00193913              seqz    s2,s2                                allGrp
2040f3bc:    00000713              li    a4,0                                   allGrp
2040f3c0:    00000513              li    a0,0                                   allGrp
  FP_PACK_SEMIRAW_D (r, R);
2040f3c4:    00e567b3              or    a5,a0,a4                               Call-Tgt, allGrp
2040f3c8:    2c078463              beqz    a5,2040f690 <__adddf3+0xa40>         allGrp, controlFlowGrp
2040f3cc:    01f55793              srli    a5,a0,0x1f                           Call-Tgt, allGrp
2040f3d0:    00171e13              slli    t3,a4,0x1                            allGrp
2040f3d4:    00fe0e33              add    t3,t3,a5                              allGrp
2040f3d8:    00151793              slli    a5,a0,0x1                            allGrp
2040f3dc:    0077f693              andi    a3,a5,7                              allGrp
2040f3e0:    00000893              li    a7,0                                   allGrp
2040f3e4:    02068863              beqz    a3,2040f414 <__adddf3+0x7c4>         allGrp, controlFlowGrp
2040f3e8:    00200693              li    a3,2                                   Call-Tgt, allGrp
2040f3ec:    22d48663              beq    s1,a3,2040f618 <__adddf3+0x9c8>       allGrp, controlFlowGrp
2040f3f0:    00300693              li    a3,3                                   Call-Tgt, allGrp
2040f3f4:    20d48663              beq    s1,a3,2040f600 <__adddf3+0x9b0>       allGrp, controlFlowGrp
2040f3f8:    00100893              li    a7,1                                   Call-Tgt, allGrp
2040f3fc:    00049c63              bnez    s1,2040f414 <__adddf3+0x7c4>         allGrp, controlFlowGrp
2040f400:    00f7f693              andi    a3,a5,15                             Call-Tgt, allGrp
2040f404:    00400613              li    a2,4                                   allGrp
2040f408:    00100893              li    a7,1                                   allGrp
2040f40c:    ffc7b793              sltiu    a5,a5,-4                            allGrp
2040f410:    1ec69e63              bne    a3,a2,2040f60c <__adddf3+0x9bc>       allGrp, controlFlowGrp
2040f414:    018e5e13              srli    t3,t3,0x18                           Call-Tgt, allGrp
2040f418:    001e4e13              xori    t3,t3,1                              allGrp
2040f41c:    001e7e13              andi    t3,t3,1                              allGrp
2040f420:    00070793              mv    a5,a4                                  allGrp
2040f424:    00000813              li    a6,0                                   allGrp
2040f428:    b35ff06f              j    2040ef5c <__adddf3+0x30c>               allGrp, controlFlowGrp
  FP_ADD_D (R, A, B);
2040f42c:    1c060063              beqz    a2,2040f5ec <__adddf3+0x99c>         Call-Tgt, allGrp, controlFlowGrp
2040f430:    406505b3              sub    a1,a0,t1                              Call-Tgt, allGrp
2040f434:    00b53833              sltu    a6,a0,a1                             allGrp
2040f438:    40e78633              sub    a2,a5,a4                              allGrp
2040f43c:    41060633              sub    a2,a2,a6                              allGrp
2040f440:    00861813              slli    a6,a2,0x8                            allGrp
2040f444:    00085e63              bgez    a6,2040f460 <__adddf3+0x810>         allGrp, controlFlowGrp
2040f448:    40a30533              sub    a0,t1,a0                              Call-Tgt, allGrp
2040f44c:    40f707b3              sub    a5,a4,a5                              allGrp
2040f450:    00a33733              sltu    a4,t1,a0                             allGrp
2040f454:    40e78733              sub    a4,a5,a4                              allGrp
2040f458:    00068913              mv    s2,a3                                  Call-Tgt, allGrp
2040f45c:    f69ff06f              j    2040f3c4 <__adddf3+0x774>               allGrp, controlFlowGrp
2040f460:    00c5e533              or    a0,a1,a2                               Call-Tgt, allGrp
2040f464:    18051863              bnez    a0,2040f5f4 <__adddf3+0x9a4>         allGrp, controlFlowGrp
2040f468:    ffe48913              addi    s2,s1,-2                             Call-Tgt, allGrp
2040f46c:    00193913              seqz    s2,s2                                allGrp
2040f470:    00000713              li    a4,0                                   Call-Tgt, allGrp
2040f474:    f51ff06f              j    2040f3c4 <__adddf3+0x774>               allGrp, controlFlowGrp
2040f478:    7ff00e93              li    t4,2047                                Call-Tgt, allGrp
2040f47c:    05d99463              bne    s3,t4,2040f4c4 <__adddf3+0x874>       allGrp, controlFlowGrp
2040f480:    26058463              beqz    a1,2040f6e8 <__adddf3+0xa98>         Call-Tgt, allGrp, controlFlowGrp
2040f484:    004008b7              lui    a7,0x400                              Call-Tgt, allGrp
2040f488:    0117f8b3              and    a7,a5,a7                              allGrp
  FP_DECL_EX;
2040f48c:    0018b893              seqz    a7,a7                                allGrp
2040f490:    00489893              slli    a7,a7,0x4                            allGrp
  FP_ADD_D (R, A, B);
2040f494:    05381063              bne    a6,s3,2040f4d4 <__adddf3+0x884>       allGrp, controlFlowGrp
2040f498:    00060863              beqz    a2,2040f4a8 <__adddf3+0x858>         Call-Tgt, allGrp, controlFlowGrp
2040f49c:    00971813              slli    a6,a4,0x9                            Call-Tgt, allGrp
2040f4a0:    00084463              bltz    a6,2040f4a8 <__adddf3+0x858>         allGrp, controlFlowGrp
2040f4a4:    01000893              li    a7,16                                  Call-Tgt, allGrp
2040f4a8:    02059663              bnez    a1,2040f4d4 <__adddf3+0x884>         Call-Tgt, allGrp, controlFlowGrp
2040f4ac:    1c060663              beqz    a2,2040f678 <__adddf3+0xa28>         Call-Tgt, allGrp, controlFlowGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2040f4b0:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
2040f4b4:    00030513              mv    a0,t1                                  allGrp
  FP_ADD_D (R, A, B);
2040f4b8:    00068913              mv    s2,a3                                  allGrp
2040f4bc:    7ff00813              li    a6,2047                                Call-Tgt, allGrp
2040f4c0:    a9dff06f              j    2040ef5c <__adddf3+0x30c>               allGrp, controlFlowGrp
  FP_DECL_EX;
2040f4c4:    00000893              li    a7,0                                   Call-Tgt, allGrp
  FP_ADD_D (R, A, B);
2040f4c8:    ffd810e3              bne    a6,t4,2040f4a8 <__adddf3+0x858>       allGrp, controlFlowGrp
  FP_DECL_EX;
2040f4cc:    00000893              li    a7,0                                   Call-Tgt, allGrp
2040f4d0:    fc9ff06f              j    2040f498 <__adddf3+0x848>               allGrp, controlFlowGrp
  FP_ADD_D (R, A, B);
2040f4d4:    fe0604e3              beqz    a2,2040f4bc <__adddf3+0x86c>         Call-Tgt, allGrp, controlFlowGrp
2040f4d8:    ae1ff06f              j    2040efb8 <__adddf3+0x368>               Call-Tgt, allGrp, controlFlowGrp
2040f4dc:    40650a33              sub    s4,a0,t1                              Call-Tgt, allGrp
2040f4e0:    01453633              sltu    a2,a0,s4                             allGrp
2040f4e4:    40e78433              sub    s0,a5,a4                              allGrp
2040f4e8:    40c40433              sub    s0,s0,a2                              allGrp
2040f4ec:    00841613              slli    a2,s0,0x8                            allGrp
2040f4f0:    08065263              bgez    a2,2040f574 <__adddf3+0x924>         allGrp, controlFlowGrp
2040f4f4:    40a30a33              sub    s4,t1,a0                              Call-Tgt, allGrp
2040f4f8:    40f707b3              sub    a5,a4,a5                              allGrp
2040f4fc:    01433733              sltu    a4,t1,s4                             allGrp
2040f500:    40e78433              sub    s0,a5,a4                              allGrp
2040f504:    00068913              mv    s2,a3                                  allGrp
2040f508:    06040c63              beqz    s0,2040f580 <__adddf3+0x930>         Call-Tgt, allGrp, controlFlowGrp
2040f50c:    00040513              mv    a0,s0                                  Call-Tgt, allGrp
2040f510:    621020ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
2040f514:    ff850813              addi    a6,a0,-8                             Call-Tgt, allGrp
2040f518:    01f00793              li    a5,31                                  allGrp
2040f51c:    0707ca63              blt    a5,a6,2040f590 <__adddf3+0x940>       allGrp, controlFlowGrp
2040f520:    02000713              li    a4,32                                  Call-Tgt, allGrp
2040f524:    41070733              sub    a4,a4,a6                              allGrp
2040f528:    01041433              sll    s0,s0,a6                              allGrp
2040f52c:    00ea5733              srl    a4,s4,a4                              allGrp
2040f530:    008767b3              or    a5,a4,s0                               allGrp
2040f534:    010a1333              sll    t1,s4,a6                              allGrp
2040f538:    09384c63              blt    a6,s3,2040f5d0 <__adddf3+0x980>       Call-Tgt, allGrp, controlFlowGrp
2040f53c:    41380833              sub    a6,a6,s3                              Call-Tgt, allGrp
2040f540:    00180713              addi    a4,a6,1 # 80000001 <_sp+0xffffc001>  allGrp
2040f544:    01f00693              li    a3,31                                  allGrp
2040f548:    04e6cc63              blt    a3,a4,2040f5a0 <__adddf3+0x950>       allGrp, controlFlowGrp
2040f54c:    02000693              li    a3,32                                  Call-Tgt, allGrp
2040f550:    40e686b3              sub    a3,a3,a4                              allGrp
2040f554:    00e35633              srl    a2,t1,a4                              allGrp
2040f558:    00d79533              sll    a0,a5,a3                              allGrp
2040f55c:    00d31333              sll    t1,t1,a3                              allGrp
2040f560:    00c56533              or    a0,a0,a2                               allGrp
2040f564:    00603333              snez    t1,t1                                allGrp
2040f568:    00656533              or    a0,a0,t1                               allGrp
2040f56c:    00e7d733              srl    a4,a5,a4                              allGrp
2040f570:    e55ff06f              j    2040f3c4 <__adddf3+0x774>               allGrp, controlFlowGrp
2040f574:    008a6533              or    a0,s4,s0                               Call-Tgt, allGrp
2040f578:    f80518e3              bnez    a0,2040f508 <__adddf3+0x8b8>         allGrp, controlFlowGrp
2040f57c:    eedff06f              j    2040f468 <__adddf3+0x818>               Call-Tgt, allGrp, controlFlowGrp
2040f580:    000a0513              mv    a0,s4                                  Call-Tgt, allGrp
2040f584:    5ad020ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
2040f588:    02050513              addi    a0,a0,32                             Call-Tgt, allGrp
2040f58c:    f89ff06f              j    2040f514 <__adddf3+0x8c4>               allGrp, controlFlowGrp
2040f590:    fd850413              addi    s0,a0,-40                            Call-Tgt, allGrp
2040f594:    008a17b3              sll    a5,s4,s0                              allGrp
2040f598:    00000313              li    t1,0                                   allGrp
2040f59c:    f9dff06f              j    2040f538 <__adddf3+0x8e8>               allGrp, controlFlowGrp
2040f5a0:    fe180813              addi    a6,a6,-31                            Call-Tgt, allGrp
2040f5a4:    02000693              li    a3,32                                  allGrp
2040f5a8:    0107d833              srl    a6,a5,a6                              allGrp
2040f5ac:    00000613              li    a2,0                                   allGrp
2040f5b0:    00d70863              beq    a4,a3,2040f5c0 <__adddf3+0x970>       allGrp, controlFlowGrp
2040f5b4:    04000613              li    a2,64                                  Call-Tgt, allGrp
2040f5b8:    40e60633              sub    a2,a2,a4                              allGrp
2040f5bc:    00c79633              sll    a2,a5,a2                              allGrp
2040f5c0:    00c36533              or    a0,t1,a2                               Call-Tgt, allGrp
2040f5c4:    00a03533              snez    a0,a0                                allGrp
2040f5c8:    00a86533              or    a0,a6,a0                               allGrp
2040f5cc:    ea5ff06f              j    2040f470 <__adddf3+0x820>               allGrp, controlFlowGrp
2040f5d0:    ff800737              lui    a4,0xff800                            Call-Tgt, allGrp
2040f5d4:    fff70513              addi    a0,a4,-1 # ff7fffff <_sp+0x7f7fbfff> allGrp
2040f5d8:    41098833              sub    a6,s3,a6                              allGrp
2040f5dc:    00a7f733              and    a4,a5,a0                              allGrp
2040f5e0:    839ff06f              j    2040ee18 <__adddf3+0x1c8>               allGrp, controlFlowGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2040f5e4:    00030513              mv    a0,t1                                  Call-Tgt, allGrp
2040f5e8:    e71ff06f              j    2040f458 <__adddf3+0x808>               allGrp, controlFlowGrp
  FP_UNPACK_SEMIRAW_D (A, a);
2040f5ec:    00078713              mv    a4,a5                                  Call-Tgt, allGrp
2040f5f0:    dd5ff06f              j    2040f3c4 <__adddf3+0x774>               allGrp, controlFlowGrp
2040f5f4:    00060713              mv    a4,a2                                  Call-Tgt, allGrp
  FP_ADD_D (R, A, B);
2040f5f8:    00058513              mv    a0,a1                                  allGrp
2040f5fc:    dc9ff06f              j    2040f3c4 <__adddf3+0x774>               allGrp, controlFlowGrp
  FP_PACK_SEMIRAW_D (r, R);
2040f600:    00100893              li    a7,1                                   Call-Tgt, allGrp
2040f604:    e00918e3              bnez    s2,2040f414 <__adddf3+0x7c4>         allGrp, controlFlowGrp
2040f608:    ff87b793              sltiu    a5,a5,-8                            Call-Tgt, allGrp
2040f60c:    0017c793              xori    a5,a5,1                              Call-Tgt, allGrp
2040f610:    00fe0e33              add    t3,t3,a5                              allGrp
2040f614:    e01ff06f              j    2040f414 <__adddf3+0x7c4>               allGrp, controlFlowGrp
2040f618:    00100893              li    a7,1                                   Call-Tgt, allGrp
2040f61c:    de090ce3              beqz    s2,2040f414 <__adddf3+0x7c4>         allGrp, controlFlowGrp
2040f620:    fe9ff06f              j    2040f608 <__adddf3+0x9b8>               Call-Tgt, allGrp, controlFlowGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2040f624:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
2040f628:    00030513              mv    a0,t1                                  allGrp
2040f62c:    e91ff06f              j    2040f4bc <__adddf3+0x86c>               allGrp, controlFlowGrp
2040f630:    00000793              li    a5,0                                   Call-Tgt, allGrp
2040f634:    00000513              li    a0,0                                   allGrp
  FP_ADD_D (R, A, B);
2040f638:    7ff00813              li    a6,2047                                allGrp
2040f63c:    00000893              li    a7,0                                   Call-Tgt, allGrp
2040f640:    989ff06f              j    2040efc8 <__adddf3+0x378>               allGrp, controlFlowGrp
2040f644:    00000793              li    a5,0                                   Call-Tgt, allGrp
2040f648:    ff5ff06f              j    2040f63c <__adddf3+0x9ec>               allGrp, controlFlowGrp
2040f64c:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2040f650:    00030513              mv    a0,t1                                  allGrp
2040f654:    00000e13              li    t3,0                                   Call-Tgt, allGrp
2040f658:    f08ff06f              j    2040ed60 <__adddf3+0x110>               allGrp, controlFlowGrp
2040f65c:    00000793              li    a5,0                                   Call-Tgt, allGrp
2040f660:    00068913              mv    s2,a3                                  allGrp
2040f664:    fd9ff06f              j    2040f63c <__adddf3+0x9ec>               allGrp, controlFlowGrp
2040f668:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
2040f66c:    00030513              mv    a0,t1                                  allGrp
2040f670:    00068913              mv    s2,a3                                  allGrp
2040f674:    fe1ff06f              j    2040f654 <__adddf3+0xa04>               allGrp, controlFlowGrp
  FP_ADD_D (R, A, B);
2040f678:    00000513              li    a0,0                                   Call-Tgt, allGrp
2040f67c:    004007b7              lui    a5,0x400                              allGrp
2040f680:    7ff00813              li    a6,2047                                allGrp
2040f684:    00000913              li    s2,0                                   allGrp
2040f688:    01000893              li    a7,16                                  allGrp
2040f68c:    93dff06f              j    2040efc8 <__adddf3+0x378>               allGrp, controlFlowGrp
2040f690:    00000513              li    a0,0                                   Call-Tgt, allGrp
2040f694:    00000813              li    a6,0                                   allGrp
2040f698:    fa5ff06f              j    2040f63c <__adddf3+0x9ec>               allGrp, controlFlowGrp
  FP_PACK_SEMIRAW_D (r, R);
2040f69c:    8c0914e3              bnez    s2,2040ef64 <__adddf3+0x314>         Call-Tgt, allGrp, controlFlowGrp
2040f6a0:    00850713              addi    a4,a0,8                              Call-Tgt, allGrp
2040f6a4:    a91ff06f              j    2040f134 <__adddf3+0x4e4>               allGrp, controlFlowGrp
2040f6a8:    8a090ee3              beqz    s2,2040ef64 <__adddf3+0x314>         Call-Tgt, allGrp, controlFlowGrp
2040f6ac:    ff5ff06f              j    2040f6a0 <__adddf3+0xa50>               Call-Tgt, allGrp, controlFlowGrp
2040f6b0:    00000513              li    a0,0                                   Call-Tgt, allGrp
2040f6b4:    02048463              beqz    s1,2040f6dc <__adddf3+0xa8c>         allGrp, controlFlowGrp
2040f6b8:    00300793              li    a5,3                                   Call-Tgt, allGrp
2040f6bc:    00f49a63              bne    s1,a5,2040f6d0 <__adddf3+0xa80>       allGrp, controlFlowGrp
2040f6c0:    00090e63              beqz    s2,2040f6dc <__adddf3+0xa8c>         Call-Tgt, allGrp, controlFlowGrp
2040f6c4:    fff00513              li    a0,-1                                  Call-Tgt, allGrp
2040f6c8:    7fe00813              li    a6,2046                                allGrp
2040f6cc:    0100006f              j    2040f6dc <__adddf3+0xa8c>               allGrp, controlFlowGrp
2040f6d0:    00200793              li    a5,2                                   Call-Tgt, allGrp
2040f6d4:    fef498e3              bne    s1,a5,2040f6c4 <__adddf3+0xa74>       allGrp, controlFlowGrp
2040f6d8:    fe0906e3              beqz    s2,2040f6c4 <__adddf3+0xa74>         Call-Tgt, allGrp, controlFlowGrp
2040f6dc:    0058e893              ori    a7,a7,5                               Call-Tgt, allGrp
2040f6e0:    00050793              mv    a5,a0                                  allGrp
2040f6e4:    905ff06f              j    2040efe8 <__adddf3+0x398>               allGrp, controlFlowGrp
  FP_DECL_EX;
2040f6e8:    00000893              li    a7,0                                   Call-Tgt, allGrp
  FP_ADD_D (R, A, B);
2040f6ec:    dd3810e3              bne    a6,s3,2040f4ac <__adddf3+0x85c>       allGrp, controlFlowGrp
2040f6f0:    dddff06f              j    2040f4cc <__adddf3+0x87c>               Call-Tgt, allGrp, controlFlowGrp
2040f6f4:    9b380ee3              beq    a6,s3,2040f0b0 <__adddf3+0x460>       Call-Tgt, allGrp, controlFlowGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2040f6f8:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
2040f6fc:    00030513              mv    a0,t1                                  allGrp
  FP_ADD_D (R, A, B);
2040f700:    7ff00813              li    a6,2047                                allGrp
2040f704:    9e1ff06f              j    2040f0e4 <__adddf3+0x494>               allGrp, controlFlowGrp

2040f708 <__divdf3>:
#include "soft-fp.h"
#include "double.h"

DFtype
__divdf3 (DFtype a, DFtype b)
{
2040f708:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp
2040f70c:    02812c23              sw    s0,56(sp)                              allGrp
2040f710:    03512223              sw    s5,36(sp)                              allGrp
2040f714:    01912a23              sw    s9,20(sp)                              allGrp
2040f718:    02112e23              sw    ra,60(sp)                              allGrp
2040f71c:    02912a23              sw    s1,52(sp)                              allGrp
2040f720:    03212823              sw    s2,48(sp)                              allGrp
2040f724:    03312623              sw    s3,44(sp)                              allGrp
2040f728:    03412423              sw    s4,40(sp)                              allGrp
2040f72c:    03612023              sw    s6,32(sp)                              allGrp
2040f730:    01712e23              sw    s7,28(sp)                              allGrp
2040f734:    01812c23              sw    s8,24(sp)                              allGrp
2040f738:    00050413              mv    s0,a0                                  allGrp
2040f73c:    00060c93              mv    s9,a2                                  allGrp
2040f740:    00068a93              mv    s5,a3                                  allGrp
  FP_DECL_D (A);
  FP_DECL_D (B);
  FP_DECL_D (R);
  DFtype r;

  FP_INIT_ROUNDMODE;
2040f744:    002029f3              frrm    s3                                   allGrp
  FP_UNPACK_D (A, a);
2040f748:    00100bb7              lui    s7,0x100                              allGrp
2040f74c:    00050493              mv    s1,a0                                  allGrp
2040f750:    0145d513              srli    a0,a1,0x14                           allGrp
2040f754:    fffb8b93              addi    s7,s7,-1 # fffff <__stack_size+0xff7ff>allGrp
2040f758:    7ff57513              andi    a0,a0,2047                           allGrp
2040f75c:    00bbfbb3              and    s7,s7,a1                              allGrp
2040f760:    01f5da13              srli    s4,a1,0x1f                           allGrp
2040f764:    02050a63              beqz    a0,2040f798 <__divdf3+0x90>          allGrp, controlFlowGrp
2040f768:    7ff00793              li    a5,2047                                Call-Tgt, allGrp
2040f76c:    08f50a63              beq    a0,a5,2040f800 <__divdf3+0xf8>        allGrp, controlFlowGrp
2040f770:    008007b7              lui    a5,0x800                              Call-Tgt, allGrp
2040f774:    003b9b93              slli    s7,s7,0x3                            allGrp
2040f778:    00fbebb3              or    s7,s7,a5                               allGrp
2040f77c:    01d45793              srli    a5,s0,0x1d                           allGrp
2040f780:    0177ebb3              or    s7,a5,s7                               allGrp
2040f784:    00341493              slli    s1,s0,0x3                            allGrp
2040f788:    c0150b13              addi    s6,a0,-1023                          allGrp
2040f78c:    00000c13              li    s8,0                                   Call-Tgt, allGrp
  FP_DECL_EX;
2040f790:    00000913              li    s2,0                                   Call-Tgt, allGrp
2040f794:    0880006f              j    2040f81c <__divdf3+0x114>               allGrp, controlFlowGrp
  FP_UNPACK_D (A, a);
2040f798:    008be7b3              or    a5,s7,s0                               Call-Tgt, allGrp
2040f79c:    0e078e63              beqz    a5,2040f898 <__divdf3+0x190>         allGrp, controlFlowGrp
2040f7a0:    040b8063              beqz    s7,2040f7e0 <__divdf3+0xd8>          Call-Tgt, allGrp, controlFlowGrp
2040f7a4:    000b8513              mv    a0,s7                                  Call-Tgt, allGrp
2040f7a8:    389020ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
2040f7ac:    ff550693              addi    a3,a0,-11                            Call-Tgt, allGrp
2040f7b0:    01c00793              li    a5,28                                  allGrp
2040f7b4:    02d7ce63              blt    a5,a3,2040f7f0 <__divdf3+0xe8>        allGrp, controlFlowGrp
2040f7b8:    01d00713              li    a4,29                                  Call-Tgt, allGrp
2040f7bc:    ff850493              addi    s1,a0,-8                             allGrp
2040f7c0:    40d70733              sub    a4,a4,a3                              allGrp
2040f7c4:    009b9bb3              sll    s7,s7,s1                              allGrp
2040f7c8:    00e45733              srl    a4,s0,a4                              allGrp
2040f7cc:    01776bb3              or    s7,a4,s7                               allGrp
2040f7d0:    009414b3              sll    s1,s0,s1                              allGrp
2040f7d4:    c0d00b13              li    s6,-1011                               Call-Tgt, allGrp
2040f7d8:    40ab0b33              sub    s6,s6,a0                              allGrp
2040f7dc:    fb1ff06f              j    2040f78c <__divdf3+0x84>                allGrp, controlFlowGrp
2040f7e0:    00040513              mv    a0,s0                                  Call-Tgt, allGrp
2040f7e4:    34d020ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
2040f7e8:    02050513              addi    a0,a0,32                             Call-Tgt, allGrp
2040f7ec:    fc1ff06f              j    2040f7ac <__divdf3+0xa4>                allGrp, controlFlowGrp
2040f7f0:    fd850b93              addi    s7,a0,-40                            Call-Tgt, allGrp
2040f7f4:    01741bb3              sll    s7,s0,s7                              allGrp
2040f7f8:    00000493              li    s1,0                                   allGrp
2040f7fc:    fd9ff06f              j    2040f7d4 <__divdf3+0xcc>                allGrp, controlFlowGrp
2040f800:    008be433              or    s0,s7,s0                               Call-Tgt, allGrp
2040f804:    0a040463              beqz    s0,2040f8ac <__divdf3+0x1a4>         allGrp, controlFlowGrp
2040f808:    00cb9793              slli    a5,s7,0xc                            Call-Tgt, allGrp
2040f80c:    7ff00b13              li    s6,2047                                allGrp
2040f810:    00300c13              li    s8,3                                   allGrp
2040f814:    01000913              li    s2,16                                  allGrp
2040f818:    f607cce3              bltz    a5,2040f790 <__divdf3+0x88>          allGrp, controlFlowGrp
  FP_UNPACK_D (B, b);
2040f81c:    014ad513              srli    a0,s5,0x14                           Call-Tgt, allGrp
2040f820:    00100437              lui    s0,0x100                              allGrp
2040f824:    fff40413              addi    s0,s0,-1 # fffff <__stack_size+0xff7ff>allGrp
2040f828:    7ff57513              andi    a0,a0,2047                           allGrp
2040f82c:    01547433              and    s0,s0,s5                              allGrp
2040f830:    000c8793              mv    a5,s9                                  allGrp
2040f834:    01fada93              srli    s5,s5,0x1f                           allGrp
2040f838:    08050463              beqz    a0,2040f8c0 <__divdf3+0x1b8>         allGrp, controlFlowGrp
2040f83c:    7ff00713              li    a4,2047                                Call-Tgt, allGrp
2040f840:    0ee50463              beq    a0,a4,2040f928 <__divdf3+0x220>       allGrp, controlFlowGrp
2040f844:    008007b7              lui    a5,0x800                              Call-Tgt, allGrp
2040f848:    00341413              slli    s0,s0,0x3                            allGrp
2040f84c:    00f46433              or    s0,s0,a5                               allGrp
2040f850:    01dcd793              srli    a5,s9,0x1d                           allGrp
2040f854:    0087e433              or    s0,a5,s0                               allGrp
2040f858:    c0150513              addi    a0,a0,-1023                          allGrp
2040f85c:    003c9793              slli    a5,s9,0x3                            allGrp
2040f860:    00000713              li    a4,0                                   Call-Tgt, allGrp
  FP_DIV_D (R, A, B);
2040f864:    002c1693              slli    a3,s8,0x2                            Call-Tgt, allGrp
2040f868:    00e6e6b3              or    a3,a3,a4                               allGrp
2040f86c:    fff68693              addi    a3,a3,-1 # 7fffff <__stack_size+0x7ff7ff>allGrp
2040f870:    00e00613              li    a2,14                                  allGrp
2040f874:    015a4833              xor    a6,s4,s5                              allGrp
2040f878:    40ab0533              sub    a0,s6,a0                              allGrp
2040f87c:    0ed66e63              bltu    a2,a3,2040f978 <__divdf3+0x270>      allGrp, controlFlowGrp
2040f880:    20413637              lui    a2,0x20413                            Call-Tgt, allGrp
2040f884:    00269693              slli    a3,a3,0x2                            allGrp
2040f888:    81c60613              addi    a2,a2,-2020 # 2041281c <_ctype_+0x104>allGrp
2040f88c:    00c686b3              add    a3,a3,a2                              allGrp
2040f890:    0006a683              lw    a3,0(a3)                               allGrp
2040f894:    00068067              jr    a3                                     allGrp, controlFlowGrp
2040f898:    00000b93              li    s7,0                                   Call-Tgt, allGrp
2040f89c:    00000493              li    s1,0                                   allGrp
2040f8a0:    00000b13              li    s6,0                                   allGrp
  FP_UNPACK_D (A, a);
2040f8a4:    00100c13              li    s8,1                                   allGrp
2040f8a8:    ee9ff06f              j    2040f790 <__divdf3+0x88>                allGrp, controlFlowGrp
2040f8ac:    00000b93              li    s7,0                                   Call-Tgt, allGrp
2040f8b0:    00000493              li    s1,0                                   allGrp
2040f8b4:    7ff00b13              li    s6,2047                                allGrp
2040f8b8:    00200c13              li    s8,2                                   allGrp
2040f8bc:    ed5ff06f              j    2040f790 <__divdf3+0x88>                allGrp, controlFlowGrp
  FP_UNPACK_D (B, b);
2040f8c0:    019467b3              or    a5,s0,s9                               Call-Tgt, allGrp
2040f8c4:    08078263              beqz    a5,2040f948 <__divdf3+0x240>         allGrp, controlFlowGrp
2040f8c8:    04040063              beqz    s0,2040f908 <__divdf3+0x200>         Call-Tgt, allGrp, controlFlowGrp
2040f8cc:    00040513              mv    a0,s0                                  Call-Tgt, allGrp
2040f8d0:    261020ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
2040f8d4:    ff550693              addi    a3,a0,-11                            Call-Tgt, allGrp
2040f8d8:    01c00793              li    a5,28                                  allGrp
2040f8dc:    02d7ce63              blt    a5,a3,2040f918 <__divdf3+0x210>       allGrp, controlFlowGrp
2040f8e0:    01d00713              li    a4,29                                  Call-Tgt, allGrp
2040f8e4:    ff850793              addi    a5,a0,-8                             allGrp
2040f8e8:    40d70733              sub    a4,a4,a3                              allGrp
2040f8ec:    00f41433              sll    s0,s0,a5                              allGrp
2040f8f0:    00ecd733              srl    a4,s9,a4                              allGrp
2040f8f4:    00876433              or    s0,a4,s0                               allGrp
2040f8f8:    00fc97b3              sll    a5,s9,a5                              allGrp
2040f8fc:    c0d00713              li    a4,-1011                               Call-Tgt, allGrp
2040f900:    40a70533              sub    a0,a4,a0                              allGrp
2040f904:    f5dff06f              j    2040f860 <__divdf3+0x158>               allGrp, controlFlowGrp
2040f908:    000c8513              mv    a0,s9                                  Call-Tgt, allGrp
2040f90c:    225020ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
2040f910:    02050513              addi    a0,a0,32                             Call-Tgt, allGrp
2040f914:    fc1ff06f              j    2040f8d4 <__divdf3+0x1cc>               allGrp, controlFlowGrp
2040f918:    fd850413              addi    s0,a0,-40                            Call-Tgt, allGrp
2040f91c:    008c9433              sll    s0,s9,s0                              allGrp
2040f920:    00000793              li    a5,0                                   allGrp
2040f924:    fd9ff06f              j    2040f8fc <__divdf3+0x1f4>               allGrp, controlFlowGrp
2040f928:    01946633              or    a2,s0,s9                               Call-Tgt, allGrp
2040f92c:    02060863              beqz    a2,2040f95c <__divdf3+0x254>         allGrp, controlFlowGrp
2040f930:    00c41713              slli    a4,s0,0xc                            Call-Tgt, allGrp
2040f934:    7ff00513              li    a0,2047                                allGrp
2040f938:    02074c63              bltz    a4,2040f970 <__divdf3+0x268>         allGrp, controlFlowGrp
2040f93c:    00300713              li    a4,3                                   Call-Tgt, allGrp
2040f940:    01000913              li    s2,16                                  allGrp
2040f944:    f21ff06f              j    2040f864 <__divdf3+0x15c>               allGrp, controlFlowGrp
2040f948:    00000413              li    s0,0                                   Call-Tgt, allGrp
2040f94c:    00000793              li    a5,0                                   allGrp
2040f950:    00000513              li    a0,0                                   allGrp
2040f954:    00100713              li    a4,1                                   allGrp
2040f958:    f0dff06f              j    2040f864 <__divdf3+0x15c>               allGrp, controlFlowGrp
2040f95c:    00000413              li    s0,0                                   Call-Tgt, allGrp
2040f960:    00000793              li    a5,0                                   allGrp
2040f964:    7ff00513              li    a0,2047                                allGrp
2040f968:    00200713              li    a4,2                                   allGrp
2040f96c:    ef9ff06f              j    2040f864 <__divdf3+0x15c>               allGrp, controlFlowGrp
2040f970:    00300713              li    a4,3                                   Call-Tgt, allGrp
2040f974:    ef1ff06f              j    2040f864 <__divdf3+0x15c>               allGrp, controlFlowGrp
  FP_DIV_D (R, A, B);
2040f978:    01746663              bltu    s0,s7,2040f984 <__divdf3+0x27c>      Call-Tgt, allGrp, controlFlowGrp
2040f97c:    2e8b9663              bne    s7,s0,2040fc68 <__divdf3+0x560>       Call-Tgt, allGrp, controlFlowGrp
2040f980:    2ef4e463              bltu    s1,a5,2040fc68 <__divdf3+0x560>      Call-Tgt, allGrp, controlFlowGrp
2040f984:    01fb9693              slli    a3,s7,0x1f                           Call-Tgt, allGrp
2040f988:    0014d713              srli    a4,s1,0x1                            allGrp
2040f98c:    01f49593              slli    a1,s1,0x1f                           allGrp
2040f990:    001bdb93              srli    s7,s7,0x1                            allGrp
2040f994:    00e6e4b3              or    s1,a3,a4                               allGrp
2040f998:    0187d693              srli    a3,a5,0x18                           Call-Tgt, allGrp
2040f99c:    00841413              slli    s0,s0,0x8                            allGrp
2040f9a0:    0086e6b3              or    a3,a3,s0                               allGrp
2040f9a4:    0106de93              srli    t4,a3,0x10                           allGrp
2040f9a8:    03dbd333              divu    t1,s7,t4                             allGrp
2040f9ac:    01069e13              slli    t3,a3,0x10                           allGrp
2040f9b0:    010e5e13              srli    t3,t3,0x10                           allGrp
2040f9b4:    00879613              slli    a2,a5,0x8                            allGrp
2040f9b8:    0104d793              srli    a5,s1,0x10                           allGrp
2040f9bc:    03dbfbb3              remu    s7,s7,t4                             allGrp
2040f9c0:    00030893              mv    a7,t1                                  allGrp
2040f9c4:    026e0733              mul    a4,t3,t1                              allGrp
2040f9c8:    010b9b93              slli    s7,s7,0x10                           allGrp
2040f9cc:    0177e7b3              or    a5,a5,s7                               allGrp
2040f9d0:    00e7fe63              bleu    a4,a5,2040f9ec <__divdf3+0x2e4>      allGrp, controlFlowGrp
2040f9d4:    00d787b3              add    a5,a5,a3                              Call-Tgt, allGrp
2040f9d8:    fff30893              addi    a7,t1,-1                             allGrp
2040f9dc:    00d7e863              bltu    a5,a3,2040f9ec <__divdf3+0x2e4>      allGrp, controlFlowGrp
2040f9e0:    00e7f663              bleu    a4,a5,2040f9ec <__divdf3+0x2e4>      Call-Tgt, allGrp, controlFlowGrp
2040f9e4:    ffe30893              addi    a7,t1,-2                             Call-Tgt, allGrp
2040f9e8:    00d787b3              add    a5,a5,a3                              allGrp
2040f9ec:    40e787b3              sub    a5,a5,a4                              Call-Tgt, allGrp
2040f9f0:    03d7df33              divu    t5,a5,t4                             allGrp
2040f9f4:    01049713              slli    a4,s1,0x10                           allGrp
2040f9f8:    01075713              srli    a4,a4,0x10                           allGrp
2040f9fc:    03d7f7b3              remu    a5,a5,t4                             allGrp
2040fa00:    000f0493              mv    s1,t5                                  allGrp
2040fa04:    03ee0333              mul    t1,t3,t5                              allGrp
2040fa08:    01079793              slli    a5,a5,0x10                           allGrp
2040fa0c:    00f76733              or    a4,a4,a5                               allGrp
2040fa10:    00677e63              bleu    t1,a4,2040fa2c <__divdf3+0x324>      allGrp, controlFlowGrp
2040fa14:    00d70733              add    a4,a4,a3                              Call-Tgt, allGrp
2040fa18:    ffff0493              addi    s1,t5,-1                             allGrp
2040fa1c:    00d76863              bltu    a4,a3,2040fa2c <__divdf3+0x324>      allGrp, controlFlowGrp
2040fa20:    00677663              bleu    t1,a4,2040fa2c <__divdf3+0x324>      Call-Tgt, allGrp, controlFlowGrp
2040fa24:    ffef0493              addi    s1,t5,-2                             Call-Tgt, allGrp
2040fa28:    00d70733              add    a4,a4,a3                              allGrp
2040fa2c:    01089893              slli    a7,a7,0x10                           Call-Tgt, allGrp
2040fa30:    0098e4b3              or    s1,a7,s1                               allGrp
2040fa34:    000108b7              lui    a7,0x10                               allGrp
2040fa38:    fff88f13              addi    t5,a7,-1 # ffff <__stack_size+0xf7ff>allGrp
2040fa3c:    0104d293              srli    t0,s1,0x10                           allGrp
2040fa40:    01065f93              srli    t6,a2,0x10                           allGrp
2040fa44:    40670733              sub    a4,a4,t1                              allGrp
2040fa48:    01e4f333              and    t1,s1,t5                              allGrp
2040fa4c:    01e67f33              and    t5,a2,t5                              allGrp
2040fa50:    03e307b3              mul    a5,t1,t5                              allGrp
2040fa54:    03e28433              mul    s0,t0,t5                              allGrp
2040fa58:    026f8333              mul    t1,t6,t1                              allGrp
2040fa5c:    008303b3              add    t2,t1,s0                              allGrp
2040fa60:    0107d313              srli    t1,a5,0x10                           allGrp
2040fa64:    00730333              add    t1,t1,t2                              allGrp
2040fa68:    03f282b3              mul    t0,t0,t6                              allGrp
2040fa6c:    00837463              bleu    s0,t1,2040fa74 <__divdf3+0x36c>      allGrp, controlFlowGrp
2040fa70:    011282b3              add    t0,t0,a7                              Call-Tgt, allGrp
2040fa74:    000103b7              lui    t2,0x10                               Call-Tgt, allGrp
2040fa78:    01035893              srli    a7,t1,0x10                           allGrp
2040fa7c:    fff38393              addi    t2,t2,-1 # ffff <__stack_size+0xf7ff>allGrp
2040fa80:    005882b3              add    t0,a7,t0                              allGrp
2040fa84:    007378b3              and    a7,t1,t2                              allGrp
2040fa88:    01089893              slli    a7,a7,0x10                           allGrp
2040fa8c:    0077f7b3              and    a5,a5,t2                              allGrp
2040fa90:    00f888b3              add    a7,a7,a5                              allGrp
2040fa94:    00576863              bltu    a4,t0,2040faa4 <__divdf3+0x39c>      allGrp, controlFlowGrp
2040fa98:    00048413              mv    s0,s1                                  Call-Tgt, allGrp
2040fa9c:    04571463              bne    a4,t0,2040fae4 <__divdf3+0x3dc>       allGrp, controlFlowGrp
2040faa0:    0515f263              bleu    a7,a1,2040fae4 <__divdf3+0x3dc>      Call-Tgt, allGrp, controlFlowGrp
2040faa4:    00c585b3              add    a1,a1,a2                              Call-Tgt, allGrp
2040faa8:    00c5b7b3              sltu    a5,a1,a2                             allGrp
2040faac:    00d787b3              add    a5,a5,a3                              allGrp
2040fab0:    00f70733              add    a4,a4,a5                              allGrp
2040fab4:    fff48413              addi    s0,s1,-1                             allGrp
2040fab8:    00e6e663              bltu    a3,a4,2040fac4 <__divdf3+0x3bc>      allGrp, controlFlowGrp
2040fabc:    02e69463              bne    a3,a4,2040fae4 <__divdf3+0x3dc>       Call-Tgt, allGrp, controlFlowGrp
2040fac0:    02c5e263              bltu    a1,a2,2040fae4 <__divdf3+0x3dc>      Call-Tgt, allGrp, controlFlowGrp
2040fac4:    00576663              bltu    a4,t0,2040fad0 <__divdf3+0x3c8>      Call-Tgt, allGrp, controlFlowGrp
2040fac8:    00e29e63              bne    t0,a4,2040fae4 <__divdf3+0x3dc>       Call-Tgt, allGrp, controlFlowGrp
2040facc:    0115fc63              bleu    a7,a1,2040fae4 <__divdf3+0x3dc>      Call-Tgt, allGrp, controlFlowGrp
2040fad0:    00c585b3              add    a1,a1,a2                              Call-Tgt, allGrp
2040fad4:    00c5b7b3              sltu    a5,a1,a2                             allGrp
2040fad8:    00d787b3              add    a5,a5,a3                              allGrp
2040fadc:    ffe48413              addi    s0,s1,-2                             allGrp
2040fae0:    00f70733              add    a4,a4,a5                              allGrp
2040fae4:    411588b3              sub    a7,a1,a7                              Call-Tgt, allGrp
2040fae8:    40570733              sub    a4,a4,t0                              allGrp
2040faec:    0115b5b3              sltu    a1,a1,a7                             allGrp
2040faf0:    40b70733              sub    a4,a4,a1                              allGrp
2040faf4:    fff00793              li    a5,-1                                  allGrp
2040faf8:    12e68463              beq    a3,a4,2040fc20 <__divdf3+0x518>       allGrp, controlFlowGrp
2040fafc:    03d752b3              divu    t0,a4,t4                             Call-Tgt, allGrp
2040fb00:    0108d793              srli    a5,a7,0x10                           allGrp
2040fb04:    03d77733              remu    a4,a4,t4                             allGrp
2040fb08:    00028593              mv    a1,t0                                  allGrp
2040fb0c:    025e0333              mul    t1,t3,t0                              allGrp
2040fb10:    01071713              slli    a4,a4,0x10                           allGrp
2040fb14:    00e7e733              or    a4,a5,a4                               allGrp
2040fb18:    00677e63              bleu    t1,a4,2040fb34 <__divdf3+0x42c>      allGrp, controlFlowGrp
2040fb1c:    00d70733              add    a4,a4,a3                              Call-Tgt, allGrp
2040fb20:    fff28593              addi    a1,t0,-1                             allGrp
2040fb24:    00d76863              bltu    a4,a3,2040fb34 <__divdf3+0x42c>      allGrp, controlFlowGrp
2040fb28:    00677663              bleu    t1,a4,2040fb34 <__divdf3+0x42c>      Call-Tgt, allGrp, controlFlowGrp
2040fb2c:    ffe28593              addi    a1,t0,-2                             Call-Tgt, allGrp
2040fb30:    00d70733              add    a4,a4,a3                              allGrp
2040fb34:    40670733              sub    a4,a4,t1                              Call-Tgt, allGrp
2040fb38:    03d75333              divu    t1,a4,t4                             allGrp
2040fb3c:    01089793              slli    a5,a7,0x10                           allGrp
2040fb40:    0107d793              srli    a5,a5,0x10                           allGrp
2040fb44:    03d77733              remu    a4,a4,t4                             allGrp
2040fb48:    026e0e33              mul    t3,t3,t1                              allGrp
2040fb4c:    01071713              slli    a4,a4,0x10                           allGrp
2040fb50:    00e7e733              or    a4,a5,a4                               allGrp
2040fb54:    00030793              mv    a5,t1                                  allGrp
2040fb58:    01c77e63              bleu    t3,a4,2040fb74 <__divdf3+0x46c>      allGrp, controlFlowGrp
2040fb5c:    00d70733              add    a4,a4,a3                              Call-Tgt, allGrp
2040fb60:    fff30793              addi    a5,t1,-1                             allGrp
2040fb64:    00d76863              bltu    a4,a3,2040fb74 <__divdf3+0x46c>      allGrp, controlFlowGrp
2040fb68:    01c77663              bleu    t3,a4,2040fb74 <__divdf3+0x46c>      Call-Tgt, allGrp, controlFlowGrp
2040fb6c:    ffe30793              addi    a5,t1,-2                             Call-Tgt, allGrp
2040fb70:    00d70733              add    a4,a4,a3                              allGrp
2040fb74:    01059593              slli    a1,a1,0x10                           Call-Tgt, allGrp
2040fb78:    41c70733              sub    a4,a4,t3                              allGrp
2040fb7c:    00f5ee33              or    t3,a1,a5                               allGrp
2040fb80:    010e1793              slli    a5,t3,0x10                           allGrp
2040fb84:    0107d793              srli    a5,a5,0x10                           allGrp
2040fb88:    010e5893              srli    a7,t3,0x10                           allGrp
2040fb8c:    02ff0eb3              mul    t4,t5,a5                              allGrp
2040fb90:    031f8333              mul    t1,t6,a7                              allGrp
2040fb94:    03e88f33              mul    t5,a7,t5                              allGrp
2040fb98:    02ff8fb3              mul    t6,t6,a5                              allGrp
2040fb9c:    010ed793              srli    a5,t4,0x10                           allGrp
2040fba0:    01ef8fb3              add    t6,t6,t5                              allGrp
2040fba4:    01f787b3              add    a5,a5,t6                              allGrp
2040fba8:    01e7f663              bleu    t5,a5,2040fbb4 <__divdf3+0x4ac>      allGrp, controlFlowGrp
2040fbac:    000105b7              lui    a1,0x10                               Call-Tgt, allGrp
2040fbb0:    00b30333              add    t1,t1,a1                              allGrp
2040fbb4:    0107d893              srli    a7,a5,0x10                           Call-Tgt, allGrp
2040fbb8:    006888b3              add    a7,a7,t1                              allGrp
2040fbbc:    00010337              lui    t1,0x10                               allGrp
2040fbc0:    fff30313              addi    t1,t1,-1 # ffff <__stack_size+0xf7ff>allGrp
2040fbc4:    0067f5b3              and    a1,a5,t1                              allGrp
2040fbc8:    01059593              slli    a1,a1,0x10                           allGrp
2040fbcc:    006efeb3              and    t4,t4,t1                              allGrp
2040fbd0:    01d585b3              add    a1,a1,t4                              allGrp
2040fbd4:    01176863              bltu    a4,a7,2040fbe4 <__divdf3+0x4dc>      allGrp, controlFlowGrp
2040fbd8:    000e0793              mv    a5,t3                                  Call-Tgt, allGrp
2040fbdc:    05171063              bne    a4,a7,2040fc1c <__divdf3+0x514>       allGrp, controlFlowGrp
2040fbe0:    04058063              beqz    a1,2040fc20 <__divdf3+0x518>         Call-Tgt, allGrp, controlFlowGrp
2040fbe4:    00e68733              add    a4,a3,a4                              Call-Tgt, allGrp
2040fbe8:    fffe0793              addi    a5,t3,-1                             allGrp
2040fbec:    02d76463              bltu    a4,a3,2040fc14 <__divdf3+0x50c>      allGrp, controlFlowGrp
2040fbf0:    01176663              bltu    a4,a7,2040fbfc <__divdf3+0x4f4>      Call-Tgt, allGrp, controlFlowGrp
2040fbf4:    03171463              bne    a4,a7,2040fc1c <__divdf3+0x514>       Call-Tgt, allGrp, controlFlowGrp
2040fbf8:    02b67063              bleu    a1,a2,2040fc18 <__divdf3+0x510>      Call-Tgt, allGrp, controlFlowGrp
2040fbfc:    00161313              slli    t1,a2,0x1                            Call-Tgt, allGrp
2040fc00:    00c33633              sltu    a2,t1,a2                             allGrp
2040fc04:    00d606b3              add    a3,a2,a3                              allGrp
2040fc08:    ffee0793              addi    a5,t3,-2                             allGrp
2040fc0c:    00d70733              add    a4,a4,a3                              allGrp
2040fc10:    00030613              mv    a2,t1                                  allGrp
2040fc14:    01171463              bne    a4,a7,2040fc1c <__divdf3+0x514>       Call-Tgt, allGrp, controlFlowGrp
2040fc18:    00c58463              beq    a1,a2,2040fc20 <__divdf3+0x518>       Call-Tgt, allGrp, controlFlowGrp
2040fc1c:    0017e793              ori    a5,a5,1                               Call-Tgt, allGrp
  FP_PACK_D (r, R);
2040fc20:    3ff50613              addi    a2,a0,1023                           Call-Tgt, allGrp
2040fc24:    1ec05863              blez    a2,2040fe14 <__divdf3+0x70c>         allGrp, controlFlowGrp
2040fc28:    0077f713              andi    a4,a5,7                              Call-Tgt, allGrp
2040fc2c:    16070a63              beqz    a4,2040fda0 <__divdf3+0x698>         allGrp, controlFlowGrp
2040fc30:    00200713              li    a4,2                                   Call-Tgt, allGrp
2040fc34:    00196913              ori    s2,s2,1                               allGrp
2040fc38:    16e98263              beq    s3,a4,2040fd9c <__divdf3+0x694>       allGrp, controlFlowGrp
2040fc3c:    00300713              li    a4,3                                   Call-Tgt, allGrp
2040fc40:    14e98863              beq    s3,a4,2040fd90 <__divdf3+0x688>       allGrp, controlFlowGrp
2040fc44:    14099e63              bnez    s3,2040fda0 <__divdf3+0x698>         Call-Tgt, allGrp, controlFlowGrp
2040fc48:    00f7f713              andi    a4,a5,15                             Call-Tgt, allGrp
2040fc4c:    00400693              li    a3,4                                   allGrp
2040fc50:    14d70863              beq    a4,a3,2040fda0 <__divdf3+0x698>       allGrp, controlFlowGrp
2040fc54:    00478713              addi    a4,a5,4 # 800004 <__stack_size+0x7ff804>Call-Tgt, allGrp
2040fc58:    00f737b3              sltu    a5,a4,a5                             Call-Tgt, allGrp
2040fc5c:    00f40433              add    s0,s0,a5                              allGrp
2040fc60:    00070793              mv    a5,a4                                  allGrp
2040fc64:    13c0006f              j    2040fda0 <__divdf3+0x698>               allGrp, controlFlowGrp
  FP_DIV_D (R, A, B);
2040fc68:    fff50513              addi    a0,a0,-1                             Call-Tgt, allGrp
2040fc6c:    00000593              li    a1,0                                   allGrp
2040fc70:    d29ff06f              j    2040f998 <__divdf3+0x290>               allGrp, controlFlowGrp
  FP_UNPACK_D (A, a);
2040fc74:    000a0813              mv    a6,s4                                  Call-Tgt, allGrp
  FP_DIV_D (R, A, B);
2040fc78:    000b8413              mv    s0,s7                                  allGrp
2040fc7c:    00048793              mv    a5,s1                                  allGrp
2040fc80:    000c0713              mv    a4,s8                                  allGrp
  FP_PACK_D (r, R);
2040fc84:    00200693              li    a3,2                                   Call-Tgt, allGrp
2040fc88:    02d70663              beq    a4,a3,2040fcb4 <__divdf3+0x5ac>       allGrp, controlFlowGrp
2040fc8c:    00300693              li    a3,3                                   Call-Tgt, allGrp
2040fc90:    34d70463              beq    a4,a3,2040ffd8 <__divdf3+0x8d0>       allGrp, controlFlowGrp
2040fc94:    00100693              li    a3,1                                   Call-Tgt, allGrp
2040fc98:    f8d714e3              bne    a4,a3,2040fc20 <__divdf3+0x518>       allGrp, controlFlowGrp
2040fc9c:    00000413              li    s0,0                                   Call-Tgt, allGrp
2040fca0:    00000793              li    a5,0                                   allGrp
2040fca4:    3100006f              j    2040ffb4 <__divdf3+0x8ac>               allGrp, controlFlowGrp
  FP_UNPACK_D (B, b);
2040fca8:    000a8813              mv    a6,s5                                  Call-Tgt, allGrp
  FP_DIV_D (R, A, B);
2040fcac:    fd9ff06f              j    2040fc84 <__divdf3+0x57c>               allGrp, controlFlowGrp
2040fcb0:    00896913              ori    s2,s2,8                               Call-Tgt, allGrp
  FP_PACK_D (r, R);
2040fcb4:    00000413              li    s0,0                                   Call-Tgt, allGrp
2040fcb8:    00000793              li    a5,0                                   allGrp
2040fcbc:    7ff00613              li    a2,2047                                allGrp
2040fcc0:    00100737              lui    a4,0x100                              Call-Tgt, allGrp
2040fcc4:    fff70713              addi    a4,a4,-1 # fffff <__stack_size+0xff7ff>allGrp
2040fcc8:    00e47433              and    s0,s0,a4                              allGrp
2040fccc:    80100737              lui    a4,0x80100                            allGrp
2040fcd0:    7ff67693              andi    a3,a2,2047                           allGrp
2040fcd4:    fff70713              addi    a4,a4,-1 # 800fffff <_sp+0xfbfff>    allGrp
2040fcd8:    01469693              slli    a3,a3,0x14                           allGrp
2040fcdc:    00e47433              and    s0,s0,a4                              allGrp
2040fce0:    80000737              lui    a4,0x80000                            allGrp
2040fce4:    00d46433              or    s0,s0,a3                               allGrp
2040fce8:    fff74713              not    a4,a4                                 allGrp
2040fcec:    01f81813              slli    a6,a6,0x1f                           allGrp
2040fcf0:    00e47433              and    s0,s0,a4                              allGrp
2040fcf4:    00078613              mv    a2,a5                                  allGrp
2040fcf8:    010466b3              or    a3,s0,a6                               allGrp
2040fcfc:    00c12423              sw    a2,8(sp)                               allGrp
2040fd00:    00d12623              sw    a3,12(sp)                              allGrp
2040fd04:    00813787              fld    fa5,8(sp)                             allGrp
  FP_HANDLE_EXCEPTIONS;
2040fd08:    00090463              beqz    s2,2040fd10 <__divdf3+0x608>         allGrp, controlFlowGrp
2040fd0c:    00192073              csrs    fflags,s2                            allGrp

  return r;
}
2040fd10:    03c12083              lw    ra,60(sp)                              Call-Tgt, allGrp
2040fd14:    03812403              lw    s0,56(sp)                              allGrp
2040fd18:    03412483              lw    s1,52(sp)                              allGrp
2040fd1c:    03012903              lw    s2,48(sp)                              allGrp
2040fd20:    02c12983              lw    s3,44(sp)                              allGrp
2040fd24:    02812a03              lw    s4,40(sp)                              allGrp
2040fd28:    02412a83              lw    s5,36(sp)                              allGrp
2040fd2c:    02012b03              lw    s6,32(sp)                              allGrp
2040fd30:    01c12b83              lw    s7,28(sp)                              allGrp
2040fd34:    01812c03              lw    s8,24(sp)                              allGrp
2040fd38:    01412c83              lw    s9,20(sp)                              allGrp
2040fd3c:    00f13427              fsd    fa5,8(sp)                             allGrp
2040fd40:    02112e23              sw    ra,60(sp)                              allGrp
2040fd44:    02812c23              sw    s0,56(sp)                              allGrp
2040fd48:    02912a23              sw    s1,52(sp)                              allGrp
2040fd4c:    03212823              sw    s2,48(sp)                              allGrp
2040fd50:    03312623              sw    s3,44(sp)                              allGrp
2040fd54:    03412423              sw    s4,40(sp)                              allGrp
2040fd58:    03512223              sw    s5,36(sp)                              allGrp
2040fd5c:    03612023              sw    s6,32(sp)                              allGrp
2040fd60:    01712e23              sw    s7,28(sp)                              allGrp
2040fd64:    01812c23              sw    s8,24(sp)                              allGrp
2040fd68:    01912a23              sw    s9,20(sp)                              allGrp
2040fd6c:    00812503              lw    a0,8(sp)                               allGrp
2040fd70:    00c12583              lw    a1,12(sp)                              allGrp
2040fd74:    04010113              addi    sp,sp,64                             allGrp
2040fd78:    00008067              ret                                          allGrp, controlFlowGrp
  FP_DIV_D (R, A, B);
2040fd7c:    00080437              lui    s0,0x80                               Call-Tgt, allGrp
2040fd80:    00000793              li    a5,0                                   allGrp
2040fd84:    00000813              li    a6,0                                   allGrp
2040fd88:    00300713              li    a4,3                                   allGrp
2040fd8c:    ef9ff06f              j    2040fc84 <__divdf3+0x57c>               allGrp, controlFlowGrp
  FP_PACK_D (r, R);
2040fd90:    00081863              bnez    a6,2040fda0 <__divdf3+0x698>         Call-Tgt, allGrp, controlFlowGrp
2040fd94:    00878713              addi    a4,a5,8                              Call-Tgt, allGrp
2040fd98:    ec1ff06f              j    2040fc58 <__divdf3+0x550>               allGrp, controlFlowGrp
2040fd9c:    fe081ce3              bnez    a6,2040fd94 <__divdf3+0x68c>         Call-Tgt, allGrp, controlFlowGrp
2040fda0:    00741713              slli    a4,s0,0x7                            Call-Tgt, allGrp
2040fda4:    00075a63              bgez    a4,2040fdb8 <__divdf3+0x6b0>         allGrp, controlFlowGrp
2040fda8:    ff000737              lui    a4,0xff000                            Call-Tgt, allGrp
2040fdac:    fff70713              addi    a4,a4,-1 # feffffff <_sp+0x7effbfff> allGrp
2040fdb0:    00e47433              and    s0,s0,a4                              allGrp
2040fdb4:    40050613              addi    a2,a0,1024                           allGrp
2040fdb8:    7fe00713              li    a4,2046                                Call-Tgt, allGrp
2040fdbc:    00c74c63              blt    a4,a2,2040fdd4 <__divdf3+0x6cc>       allGrp, controlFlowGrp
2040fdc0:    0037d713              srli    a4,a5,0x3                            Call-Tgt, allGrp
2040fdc4:    01d41793              slli    a5,s0,0x1d                           allGrp
2040fdc8:    00e7e7b3              or    a5,a5,a4                               allGrp
2040fdcc:    00345413              srli    s0,s0,0x3                            allGrp
2040fdd0:    ef1ff06f              j    2040fcc0 <__divdf3+0x5b8>               allGrp, controlFlowGrp
2040fdd4:    00200793              li    a5,2                                   Call-Tgt, allGrp
2040fdd8:    02f98a63              beq    s3,a5,2040fe0c <__divdf3+0x704>       allGrp, controlFlowGrp
2040fddc:    00300793              li    a5,3                                   Call-Tgt, allGrp
2040fde0:    00f98e63              beq    s3,a5,2040fdfc <__divdf3+0x6f4>       allGrp, controlFlowGrp
2040fde4:    00098e63              beqz    s3,2040fe00 <__divdf3+0x6f8>         Call-Tgt, allGrp, controlFlowGrp
2040fde8:    fff00793              li    a5,-1                                  Call-Tgt, allGrp
2040fdec:    7fe00613              li    a2,2046                                allGrp
2040fdf0:    00596913              ori    s2,s2,5                               Call-Tgt, allGrp
2040fdf4:    00078413              mv    s0,a5                                  allGrp
2040fdf8:    ec9ff06f              j    2040fcc0 <__divdf3+0x5b8>               allGrp, controlFlowGrp
2040fdfc:    fe0816e3              bnez    a6,2040fde8 <__divdf3+0x6e0>         Call-Tgt, allGrp, controlFlowGrp
2040fe00:    00000793              li    a5,0                                   Call-Tgt, allGrp
2040fe04:    7ff00613              li    a2,2047                                allGrp
2040fe08:    fe9ff06f              j    2040fdf0 <__divdf3+0x6e8>               allGrp, controlFlowGrp
2040fe0c:    fe081ae3              bnez    a6,2040fe00 <__divdf3+0x6f8>         Call-Tgt, allGrp, controlFlowGrp
2040fe10:    fd9ff06f              j    2040fde8 <__divdf3+0x6e0>               Call-Tgt, allGrp, controlFlowGrp
2040fe14:    00100593              li    a1,1                                   Call-Tgt, allGrp
2040fe18:    06061663              bnez    a2,2040fe84 <__divdf3+0x77c>         allGrp, controlFlowGrp
2040fe1c:    0077f693              andi    a3,a5,7                              Call-Tgt, allGrp
2040fe20:    00040713              mv    a4,s0                                  allGrp
2040fe24:    04068a63              beqz    a3,2040fe78 <__divdf3+0x770>         allGrp, controlFlowGrp
2040fe28:    00200713              li    a4,2                                   Call-Tgt, allGrp
2040fe2c:    00196913              ori    s2,s2,1                               allGrp
2040fe30:    04e98063              beq    s3,a4,2040fe70 <__divdf3+0x768>       allGrp, controlFlowGrp
2040fe34:    00300713              li    a4,3                                   Call-Tgt, allGrp
2040fe38:    02e98463              beq    s3,a4,2040fe60 <__divdf3+0x758>       allGrp, controlFlowGrp
2040fe3c:    00040713              mv    a4,s0                                  Call-Tgt, allGrp
2040fe40:    02099c63              bnez    s3,2040fe78 <__divdf3+0x770>         allGrp, controlFlowGrp
2040fe44:    00f7f693              andi    a3,a5,15                             Call-Tgt, allGrp
2040fe48:    00400593              li    a1,4                                   allGrp
2040fe4c:    02b68663              beq    a3,a1,2040fe78 <__divdf3+0x770>       allGrp, controlFlowGrp
2040fe50:    ffc7b713              sltiu    a4,a5,-4                            Call-Tgt, allGrp
2040fe54:    00174713              xori    a4,a4,1                              Call-Tgt, allGrp
2040fe58:    00870733              add    a4,a4,s0                              allGrp
2040fe5c:    01c0006f              j    2040fe78 <__divdf3+0x770>               allGrp, controlFlowGrp
2040fe60:    00040713              mv    a4,s0                                  Call-Tgt, allGrp
2040fe64:    00081a63              bnez    a6,2040fe78 <__divdf3+0x770>         allGrp, controlFlowGrp
2040fe68:    ff87b713              sltiu    a4,a5,-8                            Call-Tgt, allGrp
2040fe6c:    fe9ff06f              j    2040fe54 <__divdf3+0x74c>               allGrp, controlFlowGrp
2040fe70:    00040713              mv    a4,s0                                  Call-Tgt, allGrp
2040fe74:    fe081ae3              bnez    a6,2040fe68 <__divdf3+0x760>         allGrp, controlFlowGrp
2040fe78:    01875713              srli    a4,a4,0x18                           Call-Tgt, allGrp
2040fe7c:    00174713              xori    a4,a4,1                              allGrp
2040fe80:    00177593              andi    a1,a4,1                              allGrp
2040fe84:    00100713              li    a4,1                                   Call-Tgt, allGrp
2040fe88:    40c70733              sub    a4,a4,a2                              allGrp
2040fe8c:    03800693              li    a3,56                                  allGrp
2040fe90:    0ee6ca63              blt    a3,a4,2040ff84 <__divdf3+0x87c>       allGrp, controlFlowGrp
2040fe94:    01f00693              li    a3,31                                  Call-Tgt, allGrp
2040fe98:    06e6c263              blt    a3,a4,2040fefc <__divdf3+0x7f4>       allGrp, controlFlowGrp
2040fe9c:    41e50513              addi    a0,a0,1054                           Call-Tgt, allGrp
2040fea0:    00a416b3              sll    a3,s0,a0                              allGrp
2040fea4:    00e7d633              srl    a2,a5,a4                              allGrp
2040fea8:    00a797b3              sll    a5,a5,a0                              allGrp
2040feac:    00c6e6b3              or    a3,a3,a2                               allGrp
2040feb0:    00f037b3              snez    a5,a5                                allGrp
2040feb4:    00f6e7b3              or    a5,a3,a5                               allGrp
2040feb8:    00e45433              srl    s0,s0,a4                              allGrp
2040febc:    0077f713              andi    a4,a5,7                              Call-Tgt, allGrp
2040fec0:    08070063              beqz    a4,2040ff40 <__divdf3+0x838>         allGrp, controlFlowGrp
2040fec4:    00200713              li    a4,2                                   Call-Tgt, allGrp
2040fec8:    00196913              ori    s2,s2,1                               allGrp
2040fecc:    06e98863              beq    s3,a4,2040ff3c <__divdf3+0x834>       allGrp, controlFlowGrp
2040fed0:    00300713              li    a4,3                                   Call-Tgt, allGrp
2040fed4:    04e98e63              beq    s3,a4,2040ff30 <__divdf3+0x828>       allGrp, controlFlowGrp
2040fed8:    06099463              bnez    s3,2040ff40 <__divdf3+0x838>         Call-Tgt, allGrp, controlFlowGrp
2040fedc:    00f7f713              andi    a4,a5,15                             Call-Tgt, allGrp
2040fee0:    00400693              li    a3,4                                   allGrp
2040fee4:    04d70e63              beq    a4,a3,2040ff40 <__divdf3+0x838>       allGrp, controlFlowGrp
2040fee8:    00478713              addi    a4,a5,4                              Call-Tgt, allGrp
2040feec:    00f737b3              sltu    a5,a4,a5                             Call-Tgt, allGrp
2040fef0:    00f40433              add    s0,s0,a5                              allGrp
2040fef4:    00070793              mv    a5,a4                                  allGrp
2040fef8:    0480006f              j    2040ff40 <__divdf3+0x838>               allGrp, controlFlowGrp
2040fefc:    fe100693              li    a3,-31                                 Call-Tgt, allGrp
2040ff00:    40c686b3              sub    a3,a3,a2                              allGrp
2040ff04:    02000893              li    a7,32                                  allGrp
2040ff08:    00d456b3              srl    a3,s0,a3                              allGrp
2040ff0c:    00000613              li    a2,0                                   allGrp
2040ff10:    01170663              beq    a4,a7,2040ff1c <__divdf3+0x814>       allGrp, controlFlowGrp
2040ff14:    43e50513              addi    a0,a0,1086                           Call-Tgt, allGrp
2040ff18:    00a41633              sll    a2,s0,a0                              allGrp
2040ff1c:    00f667b3              or    a5,a2,a5                               Call-Tgt, allGrp
2040ff20:    00f037b3              snez    a5,a5                                allGrp
2040ff24:    00f6e7b3              or    a5,a3,a5                               allGrp
2040ff28:    00000413              li    s0,0                                   allGrp
2040ff2c:    f91ff06f              j    2040febc <__divdf3+0x7b4>               allGrp, controlFlowGrp
2040ff30:    00081863              bnez    a6,2040ff40 <__divdf3+0x838>         Call-Tgt, allGrp, controlFlowGrp
2040ff34:    00878713              addi    a4,a5,8                              Call-Tgt, allGrp
2040ff38:    fb5ff06f              j    2040feec <__divdf3+0x7e4>               allGrp, controlFlowGrp
2040ff3c:    fe081ce3              bnez    a6,2040ff34 <__divdf3+0x82c>         Call-Tgt, allGrp, controlFlowGrp
2040ff40:    00841713              slli    a4,s0,0x8                            Call-Tgt, allGrp
2040ff44:    02075463              bgez    a4,2040ff6c <__divdf3+0x864>         allGrp, controlFlowGrp
2040ff48:    00196913              ori    s2,s2,1                               Call-Tgt, allGrp
2040ff4c:    00000413              li    s0,0                                   allGrp
2040ff50:    00000793              li    a5,0                                   allGrp
2040ff54:    00100613              li    a2,1                                   allGrp
2040ff58:    d60584e3              beqz    a1,2040fcc0 <__divdf3+0x5b8>         Call-Tgt, allGrp, controlFlowGrp
2040ff5c:    00197713              andi    a4,s2,1                              Call-Tgt, allGrp
2040ff60:    d60700e3              beqz    a4,2040fcc0 <__divdf3+0x5b8>         allGrp, controlFlowGrp
2040ff64:    00296913              ori    s2,s2,2                               Call-Tgt, allGrp
2040ff68:    d59ff06f              j    2040fcc0 <__divdf3+0x5b8>               allGrp, controlFlowGrp
2040ff6c:    0037d713              srli    a4,a5,0x3                            Call-Tgt, allGrp
2040ff70:    01d41793              slli    a5,s0,0x1d                           allGrp
2040ff74:    00e7e7b3              or    a5,a5,a4                               allGrp
2040ff78:    00345413              srli    s0,s0,0x3                            allGrp
2040ff7c:    00000613              li    a2,0                                   allGrp
2040ff80:    fd9ff06f              j    2040ff58 <__divdf3+0x850>               allGrp, controlFlowGrp
2040ff84:    0087e7b3              or    a5,a5,s0                               Call-Tgt, allGrp
2040ff88:    02078263              beqz    a5,2040ffac <__divdf3+0x8a4>         allGrp, controlFlowGrp
2040ff8c:    00200793              li    a5,2                                   Call-Tgt, allGrp
2040ff90:    00196913              ori    s2,s2,1                               allGrp
2040ff94:    02f98c63              beq    s3,a5,2040ffcc <__divdf3+0x8c4>       allGrp, controlFlowGrp
2040ff98:    00300793              li    a5,3                                   Call-Tgt, allGrp
2040ff9c:    02f98063              beq    s3,a5,2040ffbc <__divdf3+0x8b4>       allGrp, controlFlowGrp
2040ffa0:    00500793              li    a5,5                                   Call-Tgt, allGrp
2040ffa4:    02099063              bnez    s3,2040ffc4 <__divdf3+0x8bc>         allGrp, controlFlowGrp
2040ffa8:    0037d793              srli    a5,a5,0x3                            Call-Tgt, allGrp
2040ffac:    00296913              ori    s2,s2,2                               Call-Tgt, allGrp
2040ffb0:    00000413              li    s0,0                                   allGrp
2040ffb4:    00000613              li    a2,0                                   Call-Tgt, allGrp
2040ffb8:    d09ff06f              j    2040fcc0 <__divdf3+0x5b8>               allGrp, controlFlowGrp
2040ffbc:    00900793              li    a5,9                                   Call-Tgt, allGrp
2040ffc0:    fe0804e3              beqz    a6,2040ffa8 <__divdf3+0x8a0>         allGrp, controlFlowGrp
2040ffc4:    00100793              li    a5,1                                   Call-Tgt, allGrp
2040ffc8:    fe1ff06f              j    2040ffa8 <__divdf3+0x8a0>               allGrp, controlFlowGrp
2040ffcc:    00900793              li    a5,9                                   Call-Tgt, allGrp
2040ffd0:    fc081ce3              bnez    a6,2040ffa8 <__divdf3+0x8a0>         allGrp, controlFlowGrp
2040ffd4:    ff1ff06f              j    2040ffc4 <__divdf3+0x8bc>               Call-Tgt, allGrp, controlFlowGrp
2040ffd8:    00080437              lui    s0,0x80                               Call-Tgt, allGrp
2040ffdc:    00000793              li    a5,0                                   allGrp
2040ffe0:    7ff00613              li    a2,2047                                allGrp
2040ffe4:    00000813              li    a6,0                                   allGrp
2040ffe8:    cd9ff06f              j    2040fcc0 <__divdf3+0x5b8>               allGrp, controlFlowGrp
2040ffec:    00080437              lui    s0,0x80                               Call-Tgt, allGrp
2040fff0:    00000793              li    a5,0                                   allGrp
2040fff4:    7ff00613              li    a2,2047                                allGrp
2040fff8:    00000813              li    a6,0                                   allGrp
  FP_DIV_D (R, A, B);
2040fffc:    01000913              li    s2,16                                  allGrp
20410000:    cc1ff06f              j    2040fcc0 <__divdf3+0x5b8>               allGrp, controlFlowGrp
20410004:    00000013              nop                                          allGrp
	...

20410010 <__eqdf2>:
  FP_DECL_EX;
  FP_DECL_D (A);
  FP_DECL_D (B);
  CMPtype r;

  FP_INIT_EXCEPTIONS;
20410010:    002027f3              frrm    a5                                   Call-Tgt, allGrp
  FP_UNPACK_RAW_D (A, a);
20410014:    001007b7              lui    a5,0x100                              allGrp
20410018:    0145d713              srli    a4,a1,0x14                           allGrp
2041001c:    fff78793              addi    a5,a5,-1 # fffff <__stack_size+0xff7ff>allGrp
  FP_UNPACK_RAW_D (B, b);
20410020:    0146d893              srli    a7,a3,0x14                           allGrp
  FP_UNPACK_RAW_D (A, a);
20410024:    7ff77713              andi    a4,a4,2047                           allGrp
  FP_CMP_EQ_D (r, A, B, 1);
20410028:    7ff00313              li    t1,2047                                allGrp
  FP_UNPACK_RAW_D (A, a);
2041002c:    00b7f833              and    a6,a5,a1                              allGrp
20410030:    00050e93              mv    t4,a0                                  allGrp
  FP_UNPACK_RAW_D (B, b);
20410034:    00d7f7b3              and    a5,a5,a3                              allGrp
  FP_UNPACK_RAW_D (A, a);
20410038:    01f5d593              srli    a1,a1,0x1f                           allGrp
2041003c:    00060e13              mv    t3,a2                                  allGrp
  FP_UNPACK_RAW_D (B, b);
20410040:    7ff8f893              andi    a7,a7,2047                           allGrp
20410044:    01f6d693              srli    a3,a3,0x1f                           allGrp
  FP_CMP_EQ_D (r, A, B, 1);
20410048:    00671a63              bne    a4,t1,2041005c <__eqdf2+0x4c>         allGrp, controlFlowGrp
2041004c:    00a86333              or    t1,a6,a0                               Call-Tgt, allGrp
20410050:    02031063              bnez    t1,20410070 <__eqdf2+0x60>           allGrp, controlFlowGrp
20410054:    06e89c63              bne    a7,a4,204100cc <__eqdf2+0xbc>         Call-Tgt, allGrp, controlFlowGrp
20410058:    0080006f              j    20410060 <__eqdf2+0x50>                 Call-Tgt, allGrp, controlFlowGrp
2041005c:    04689463              bne    a7,t1,204100a4 <__eqdf2+0x94>         Call-Tgt, allGrp, controlFlowGrp
20410060:    00c7e333              or    t1,a5,a2                               Call-Tgt, allGrp
20410064:    04030063              beqz    t1,204100a4 <__eqdf2+0x94>           allGrp, controlFlowGrp
20410068:    7ff00693              li    a3,2047                                Call-Tgt, allGrp
2041006c:    02d71063              bne    a4,a3,2041008c <__eqdf2+0x7c>         allGrp, controlFlowGrp
20410070:    00a86533              or    a0,a6,a0                               Call-Tgt, allGrp
20410074:    00050663              beqz    a0,20410080 <__eqdf2+0x70>           allGrp, controlFlowGrp
20410078:    00c81713              slli    a4,a6,0xc                            Call-Tgt, allGrp
2041007c:    04075663              bgez    a4,204100c8 <__eqdf2+0xb8>           allGrp, controlFlowGrp
20410080:    7ff00713              li    a4,2047                                Call-Tgt, allGrp
20410084:    00100513              li    a0,1                                   allGrp
20410088:    04e89463              bne    a7,a4,204100d0 <__eqdf2+0xc0>         allGrp, controlFlowGrp
2041008c:    00c7e633              or    a2,a5,a2                               Call-Tgt, allGrp
20410090:    00100513              li    a0,1                                   allGrp
20410094:    02060e63              beqz    a2,204100d0 <__eqdf2+0xc0>           allGrp, controlFlowGrp
20410098:    00c79713              slli    a4,a5,0xc                            Call-Tgt, allGrp
2041009c:    02075663              bgez    a4,204100c8 <__eqdf2+0xb8>           allGrp, controlFlowGrp
204100a0:    00008067              ret                                          Call-Tgt, allGrp, controlFlowGrp
204100a4:    00100513              li    a0,1                                   Call-Tgt, allGrp
204100a8:    03171463              bne    a4,a7,204100d0 <__eqdf2+0xc0>         allGrp, controlFlowGrp
204100ac:    02f81263              bne    a6,a5,204100d0 <__eqdf2+0xc0>         Call-Tgt, allGrp, controlFlowGrp
204100b0:    03de1063              bne    t3,t4,204100d0 <__eqdf2+0xc0>         Call-Tgt, allGrp, controlFlowGrp
204100b4:    02d58063              beq    a1,a3,204100d4 <__eqdf2+0xc4>         Call-Tgt, allGrp, controlFlowGrp
204100b8:    00071c63              bnez    a4,204100d0 <__eqdf2+0xc0>           Call-Tgt, allGrp, controlFlowGrp
204100bc:    00c86533              or    a0,a6,a2                               Call-Tgt, allGrp
204100c0:    00a03533              snez    a0,a0                                allGrp
204100c4:    00008067              ret                                          allGrp, controlFlowGrp
  FP_HANDLE_EXCEPTIONS;
204100c8:    00186073              csrsi    fflags,16                           Call-Tgt, allGrp
  FP_CMP_EQ_D (r, A, B, 1);
204100cc:    00100513              li    a0,1                                   Call-Tgt, allGrp

  return r;
}
204100d0:    00008067              ret                                          Call-Tgt, allGrp, controlFlowGrp
204100d4:    00000513              li    a0,0                                   Call-Tgt, allGrp
204100d8:    00008067              ret                                          allGrp, controlFlowGrp
204100dc:    00000013              nop                                          allGrp
	...

204100e8 <__gedf2>:
  FP_DECL_EX;
  FP_DECL_D (A);
  FP_DECL_D (B);
  CMPtype r;

  FP_INIT_EXCEPTIONS;
204100e8:    002027f3              frrm    a5                                   Call-Tgt, allGrp
  FP_UNPACK_RAW_D (A, a);
204100ec:    001007b7              lui    a5,0x100                              allGrp
204100f0:    0145d713              srli    a4,a1,0x14                           allGrp
204100f4:    fff78793              addi    a5,a5,-1 # fffff <__stack_size+0xff7ff>allGrp
  FP_UNPACK_RAW_D (B, b);
204100f8:    0146d813              srli    a6,a3,0x14                           allGrp
  FP_UNPACK_RAW_D (A, a);
204100fc:    7ff77713              andi    a4,a4,2047                           allGrp
  FP_CMP_D (r, A, B, -2, 2);
20410100:    7ff00e93              li    t4,2047                                allGrp
  FP_UNPACK_RAW_D (A, a);
20410104:    00b7f8b3              and    a7,a5,a1                              allGrp
20410108:    00050313              mv    t1,a0                                  allGrp
  FP_UNPACK_RAW_D (B, b);
2041010c:    00d7f7b3              and    a5,a5,a3                              allGrp
  FP_UNPACK_RAW_D (A, a);
20410110:    01f5d593              srli    a1,a1,0x1f                           allGrp
20410114:    00060e13              mv    t3,a2                                  allGrp
  FP_UNPACK_RAW_D (B, b);
20410118:    7ff87813              andi    a6,a6,2047                           allGrp
2041011c:    01f6d693              srli    a3,a3,0x1f                           allGrp
  FP_CMP_D (r, A, B, -2, 2);
20410120:    01d71c63              bne    a4,t4,20410138 <__gedf2+0x50>         allGrp, controlFlowGrp
20410124:    00a8eeb3              or    t4,a7,a0                               Call-Tgt, allGrp
20410128:    0a0e8463              beqz    t4,204101d0 <__gedf2+0xe8>           allGrp, controlFlowGrp
  FP_HANDLE_EXCEPTIONS;
2041012c:    00186073              csrsi    fflags,16                           Call-Tgt, allGrp
20410130:    ffe00513              li    a0,-2                                  allGrp
20410134:    00008067              ret                                          allGrp, controlFlowGrp
  FP_CMP_D (r, A, B, -2, 2);
20410138:    01d81e63              bne    a6,t4,20410154 <__gedf2+0x6c>         Call-Tgt, allGrp, controlFlowGrp
2041013c:    00c7e633              or    a2,a5,a2                               Call-Tgt, allGrp
20410140:    fe0616e3              bnez    a2,2041012c <__gedf2+0x44>           allGrp, controlFlowGrp
20410144:    02071663              bnez    a4,20410170 <__gedf2+0x88>           Call-Tgt, allGrp, controlFlowGrp
20410148:    00a8e533              or    a0,a7,a0                               Call-Tgt, allGrp
2041014c:    00153513              seqz    a0,a0                                allGrp
20410150:    01c0006f              j    2041016c <__gedf2+0x84>                 allGrp, controlFlowGrp
20410154:    08071063              bnez    a4,204101d4 <__gedf2+0xec>           Call-Tgt, allGrp, controlFlowGrp
20410158:    00a8e533              or    a0,a7,a0                               Call-Tgt, allGrp
2041015c:    00153513              seqz    a0,a0                                allGrp
20410160:    00081663              bnez    a6,2041016c <__gedf2+0x84>           allGrp, controlFlowGrp
20410164:    00c7e633              or    a2,a5,a2                               Call-Tgt, allGrp
20410168:    06060063              beqz    a2,204101c8 <__gedf2+0xe0>           allGrp, controlFlowGrp
2041016c:    00051c63              bnez    a0,20410184 <__gedf2+0x9c>           Call-Tgt, allGrp, controlFlowGrp
20410170:    00d59463              bne    a1,a3,20410178 <__gedf2+0x90>         Call-Tgt, allGrp, controlFlowGrp
20410174:    00e85e63              ble    a4,a6,20410190 <__gedf2+0xa8>         Call-Tgt, allGrp, controlFlowGrp
20410178:    00100513              li    a0,1                                   Call-Tgt, allGrp
2041017c:    00059663              bnez    a1,20410188 <__gedf2+0xa0>           allGrp, controlFlowGrp

  return r;
}
20410180:    00008067              ret                                          Call-Tgt, allGrp, controlFlowGrp
  FP_CMP_D (r, A, B, -2, 2);
20410184:    fe069ee3              bnez    a3,20410180 <__gedf2+0x98>           Call-Tgt, allGrp, controlFlowGrp
20410188:    fff00513              li    a0,-1                                  Call-Tgt, allGrp
2041018c:    00008067              ret                                          allGrp, controlFlowGrp
20410190:    01075a63              ble    a6,a4,204101a4 <__gedf2+0xbc>         Call-Tgt, allGrp, controlFlowGrp
20410194:    fff00513              li    a0,-1                                  Call-Tgt, allGrp
20410198:    fe0584e3              beqz    a1,20410180 <__gedf2+0x98>           allGrp, controlFlowGrp
2041019c:    00100513              li    a0,1                                   Call-Tgt, allGrp
204101a0:    00008067              ret                                          allGrp, controlFlowGrp
204101a4:    fd17eae3              bltu    a5,a7,20410178 <__gedf2+0x90>        Call-Tgt, allGrp, controlFlowGrp
204101a8:    00f89a63              bne    a7,a5,204101bc <__gedf2+0xd4>         Call-Tgt, allGrp, controlFlowGrp
204101ac:    fc6e66e3              bltu    t3,t1,20410178 <__gedf2+0x90>        Call-Tgt, allGrp, controlFlowGrp
204101b0:    00000513              li    a0,0                                   Call-Tgt, allGrp
204101b4:    fdc376e3              bleu    t3,t1,20410180 <__gedf2+0x98>        allGrp, controlFlowGrp
204101b8:    fddff06f              j    20410194 <__gedf2+0xac>                 Call-Tgt, allGrp, controlFlowGrp
204101bc:    fcf8ece3              bltu    a7,a5,20410194 <__gedf2+0xac>        Call-Tgt, allGrp, controlFlowGrp
204101c0:    00000513              li    a0,0                                   Call-Tgt, allGrp
  return r;
204101c4:    00008067              ret                                          allGrp, controlFlowGrp
  FP_CMP_D (r, A, B, -2, 2);
204101c8:    fe051ce3              bnez    a0,204101c0 <__gedf2+0xd8>           Call-Tgt, allGrp, controlFlowGrp
204101cc:    fadff06f              j    20410178 <__gedf2+0x90>                 Call-Tgt, allGrp, controlFlowGrp
204101d0:    f6e806e3              beq    a6,a4,2041013c <__gedf2+0x54>         Call-Tgt, allGrp, controlFlowGrp
204101d4:    00000513              li    a0,0                                   Call-Tgt, allGrp
204101d8:    f80806e3              beqz    a6,20410164 <__gedf2+0x7c>           allGrp, controlFlowGrp
204101dc:    f95ff06f              j    20410170 <__gedf2+0x88>                 Call-Tgt, allGrp, controlFlowGrp

204101e0 <__ledf2>:
  FP_DECL_EX;
  FP_DECL_D (A);
  FP_DECL_D (B);
  CMPtype r;

  FP_INIT_EXCEPTIONS;
204101e0:    002027f3              frrm    a5                                   Call-Tgt, allGrp
  FP_UNPACK_RAW_D (A, a);
204101e4:    001007b7              lui    a5,0x100                              allGrp
204101e8:    0145d713              srli    a4,a1,0x14                           allGrp
204101ec:    fff78793              addi    a5,a5,-1 # fffff <__stack_size+0xff7ff>allGrp
  FP_UNPACK_RAW_D (B, b);
204101f0:    0146d813              srli    a6,a3,0x14                           allGrp
  FP_UNPACK_RAW_D (A, a);
204101f4:    7ff77713              andi    a4,a4,2047                           allGrp
  FP_CMP_D (r, A, B, 2, 2);
204101f8:    7ff00e93              li    t4,2047                                allGrp
  FP_UNPACK_RAW_D (A, a);
204101fc:    00b7f8b3              and    a7,a5,a1                              allGrp
20410200:    00050313              mv    t1,a0                                  allGrp
  FP_UNPACK_RAW_D (B, b);
20410204:    00d7f7b3              and    a5,a5,a3                              allGrp
  FP_UNPACK_RAW_D (A, a);
20410208:    01f5d593              srli    a1,a1,0x1f                           allGrp
2041020c:    00060e13              mv    t3,a2                                  allGrp
  FP_UNPACK_RAW_D (B, b);
20410210:    7ff87813              andi    a6,a6,2047                           allGrp
20410214:    01f6d693              srli    a3,a3,0x1f                           allGrp
  FP_CMP_D (r, A, B, 2, 2);
20410218:    01d71c63              bne    a4,t4,20410230 <__ledf2+0x50>         allGrp, controlFlowGrp
2041021c:    00a8eeb3              or    t4,a7,a0                               Call-Tgt, allGrp
20410220:    0a0e8463              beqz    t4,204102c8 <__ledf2+0xe8>           allGrp, controlFlowGrp
  FP_HANDLE_EXCEPTIONS;
20410224:    00186073              csrsi    fflags,16                           Call-Tgt, allGrp
20410228:    00200513              li    a0,2                                   allGrp
2041022c:    00008067              ret                                          allGrp, controlFlowGrp
  FP_CMP_D (r, A, B, 2, 2);
20410230:    01d81e63              bne    a6,t4,2041024c <__ledf2+0x6c>         Call-Tgt, allGrp, controlFlowGrp
20410234:    00c7e633              or    a2,a5,a2                               Call-Tgt, allGrp
20410238:    fe0616e3              bnez    a2,20410224 <__ledf2+0x44>           allGrp, controlFlowGrp
2041023c:    02071663              bnez    a4,20410268 <__ledf2+0x88>           Call-Tgt, allGrp, controlFlowGrp
20410240:    00a8e533              or    a0,a7,a0                               Call-Tgt, allGrp
20410244:    00153513              seqz    a0,a0                                allGrp
20410248:    01c0006f              j    20410264 <__ledf2+0x84>                 allGrp, controlFlowGrp
2041024c:    08071063              bnez    a4,204102cc <__ledf2+0xec>           Call-Tgt, allGrp, controlFlowGrp
20410250:    00a8e533              or    a0,a7,a0                               Call-Tgt, allGrp
20410254:    00153513              seqz    a0,a0                                allGrp
20410258:    00081663              bnez    a6,20410264 <__ledf2+0x84>           allGrp, controlFlowGrp
2041025c:    00c7e633              or    a2,a5,a2                               Call-Tgt, allGrp
20410260:    06060063              beqz    a2,204102c0 <__ledf2+0xe0>           allGrp, controlFlowGrp
20410264:    00051c63              bnez    a0,2041027c <__ledf2+0x9c>           Call-Tgt, allGrp, controlFlowGrp
20410268:    00d59463              bne    a1,a3,20410270 <__ledf2+0x90>         Call-Tgt, allGrp, controlFlowGrp
2041026c:    00e85e63              ble    a4,a6,20410288 <__ledf2+0xa8>         Call-Tgt, allGrp, controlFlowGrp
20410270:    00100513              li    a0,1                                   Call-Tgt, allGrp
20410274:    00059663              bnez    a1,20410280 <__ledf2+0xa0>           allGrp, controlFlowGrp

  return r;
}
20410278:    00008067              ret                                          Call-Tgt, allGrp, controlFlowGrp
  FP_CMP_D (r, A, B, 2, 2);
2041027c:    fe069ee3              bnez    a3,20410278 <__ledf2+0x98>           Call-Tgt, allGrp, controlFlowGrp
20410280:    fff00513              li    a0,-1                                  Call-Tgt, allGrp
20410284:    00008067              ret                                          allGrp, controlFlowGrp
20410288:    01075a63              ble    a6,a4,2041029c <__ledf2+0xbc>         Call-Tgt, allGrp, controlFlowGrp
2041028c:    fff00513              li    a0,-1                                  Call-Tgt, allGrp
20410290:    fe0584e3              beqz    a1,20410278 <__ledf2+0x98>           allGrp, controlFlowGrp
20410294:    00100513              li    a0,1                                   Call-Tgt, allGrp
20410298:    00008067              ret                                          allGrp, controlFlowGrp
2041029c:    fd17eae3              bltu    a5,a7,20410270 <__ledf2+0x90>        Call-Tgt, allGrp, controlFlowGrp
204102a0:    00f89a63              bne    a7,a5,204102b4 <__ledf2+0xd4>         Call-Tgt, allGrp, controlFlowGrp
204102a4:    fc6e66e3              bltu    t3,t1,20410270 <__ledf2+0x90>        Call-Tgt, allGrp, controlFlowGrp
204102a8:    00000513              li    a0,0                                   Call-Tgt, allGrp
204102ac:    fdc376e3              bleu    t3,t1,20410278 <__ledf2+0x98>        allGrp, controlFlowGrp
204102b0:    fddff06f              j    2041028c <__ledf2+0xac>                 Call-Tgt, allGrp, controlFlowGrp
204102b4:    fcf8ece3              bltu    a7,a5,2041028c <__ledf2+0xac>        Call-Tgt, allGrp, controlFlowGrp
204102b8:    00000513              li    a0,0                                   Call-Tgt, allGrp
  return r;
204102bc:    00008067              ret                                          allGrp, controlFlowGrp
  FP_CMP_D (r, A, B, 2, 2);
204102c0:    fe051ce3              bnez    a0,204102b8 <__ledf2+0xd8>           Call-Tgt, allGrp, controlFlowGrp
204102c4:    fadff06f              j    20410270 <__ledf2+0x90>                 Call-Tgt, allGrp, controlFlowGrp
204102c8:    f6e806e3              beq    a6,a4,20410234 <__ledf2+0x54>         Call-Tgt, allGrp, controlFlowGrp
204102cc:    00000513              li    a0,0                                   Call-Tgt, allGrp
204102d0:    f80806e3              beqz    a6,2041025c <__ledf2+0x7c>           allGrp, controlFlowGrp
204102d4:    f95ff06f              j    20410268 <__ledf2+0x88>                 Call-Tgt, allGrp, controlFlowGrp

204102d8 <__muldf3>:
#include "soft-fp.h"
#include "double.h"

DFtype
__muldf3 (DFtype a, DFtype b)
{
204102d8:    fc010113              addi    sp,sp,-64                            Call-Tgt, allGrp
204102dc:    02812c23              sw    s0,56(sp)                              allGrp
204102e0:    03512223              sw    s5,36(sp)                              allGrp
204102e4:    01912a23              sw    s9,20(sp)                              allGrp
204102e8:    02112e23              sw    ra,60(sp)                              allGrp
204102ec:    02912a23              sw    s1,52(sp)                              allGrp
204102f0:    03212823              sw    s2,48(sp)                              allGrp
204102f4:    03312623              sw    s3,44(sp)                              allGrp
204102f8:    03412423              sw    s4,40(sp)                              allGrp
204102fc:    03612023              sw    s6,32(sp)                              allGrp
20410300:    01712e23              sw    s7,28(sp)                              allGrp
20410304:    01812c23              sw    s8,24(sp)                              allGrp
20410308:    00050413              mv    s0,a0                                  allGrp
2041030c:    00060c93              mv    s9,a2                                  allGrp
20410310:    00068a93              mv    s5,a3                                  allGrp
  FP_DECL_D (A);
  FP_DECL_D (B);
  FP_DECL_D (R);
  DFtype r;

  FP_INIT_ROUNDMODE;
20410314:    002029f3              frrm    s3                                   allGrp
  FP_UNPACK_D (A, a);
20410318:    001004b7              lui    s1,0x100                              allGrp
2041031c:    0145db93              srli    s7,a1,0x14                           allGrp
20410320:    fff48493              addi    s1,s1,-1 # fffff <__stack_size+0xff7ff>allGrp
20410324:    7ffbfb93              andi    s7,s7,2047                           allGrp
20410328:    00b4f4b3              and    s1,s1,a1                              allGrp
2041032c:    01f5db13              srli    s6,a1,0x1f                           allGrp
20410330:    020b8a63              beqz    s7,20410364 <__muldf3+0x8c>          allGrp, controlFlowGrp
20410334:    7ff00793              li    a5,2047                                Call-Tgt, allGrp
20410338:    08fb8863              beq    s7,a5,204103c8 <__muldf3+0xf0>        allGrp, controlFlowGrp
2041033c:    008007b7              lui    a5,0x800                              Call-Tgt, allGrp
20410340:    00349493              slli    s1,s1,0x3                            allGrp
20410344:    00f4e4b3              or    s1,s1,a5                               allGrp
20410348:    01d55793              srli    a5,a0,0x1d                           allGrp
2041034c:    0097e4b3              or    s1,a5,s1                               allGrp
20410350:    00351a13              slli    s4,a0,0x3                            allGrp
20410354:    c01b8b93              addi    s7,s7,-1023                          allGrp
20410358:    00000c13              li    s8,0                                   Call-Tgt, allGrp
  FP_DECL_EX;
2041035c:    00000913              li    s2,0                                   Call-Tgt, allGrp
20410360:    0880006f              j    204103e8 <__muldf3+0x110>               allGrp, controlFlowGrp
  FP_UNPACK_D (A, a);
20410364:    00a4e7b3              or    a5,s1,a0                               Call-Tgt, allGrp
20410368:    10078063              beqz    a5,20410468 <__muldf3+0x190>         allGrp, controlFlowGrp
2041036c:    04048063              beqz    s1,204103ac <__muldf3+0xd4>          Call-Tgt, allGrp, controlFlowGrp
20410370:    00048513              mv    a0,s1                                  Call-Tgt, allGrp
20410374:    7bd010ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
20410378:    ff550713              addi    a4,a0,-11                            Call-Tgt, allGrp
2041037c:    01c00793              li    a5,28                                  allGrp
20410380:    02e7cc63              blt    a5,a4,204103b8 <__muldf3+0xe0>        allGrp, controlFlowGrp
20410384:    01d00793              li    a5,29                                  Call-Tgt, allGrp
20410388:    ff850a13              addi    s4,a0,-8                             allGrp
2041038c:    40e787b3              sub    a5,a5,a4                              allGrp
20410390:    014494b3              sll    s1,s1,s4                              allGrp
20410394:    00f457b3              srl    a5,s0,a5                              allGrp
20410398:    0097e4b3              or    s1,a5,s1                               allGrp
2041039c:    01441a33              sll    s4,s0,s4                              allGrp
204103a0:    c0d00b93              li    s7,-1011                               Call-Tgt, allGrp
204103a4:    40ab8bb3              sub    s7,s7,a0                              allGrp
204103a8:    fb1ff06f              j    20410358 <__muldf3+0x80>                allGrp, controlFlowGrp
204103ac:    785010ef              jal    ra,20412330 <__clzsi2>                Call-Tgt, allGrp, controlFlowGrp
204103b0:    02050513              addi    a0,a0,32                             Call-Tgt, allGrp
204103b4:    fc5ff06f              j    20410378 <__muldf3+0xa0>                allGrp, controlFlowGrp
204103b8:    fd850493              addi    s1,a0,-40                            Call-Tgt, allGrp
204103bc:    009414b3              sll    s1,s0,s1                              allGrp
204103c0:    00000a13              li    s4,0                                   allGrp
204103c4:    fddff06f              j    204103a0 <__muldf3+0xc8>                allGrp, controlFlowGrp
204103c8:    00a4e433              or    s0,s1,a0                               Call-Tgt, allGrp
204103cc:    0a040863              beqz    s0,2041047c <__muldf3+0x1a4>         allGrp, controlFlowGrp
204103d0:    00c49793              slli    a5,s1,0xc                            Call-Tgt, allGrp
204103d4:    00050a13              mv    s4,a0                                  allGrp
204103d8:    7ff00b93              li    s7,2047                                allGrp
204103dc:    00300c13              li    s8,3                                   allGrp
204103e0:    01000913              li    s2,16                                  allGrp
204103e4:    f607cce3              bltz    a5,2041035c <__muldf3+0x84>          allGrp, controlFlowGrp
  FP_UNPACK_D (B, b);
204103e8:    014ad513              srli    a0,s5,0x14                           Call-Tgt, allGrp
204103ec:    00100437              lui    s0,0x100                              allGrp
204103f0:    fff40413              addi    s0,s0,-1 # fffff <__stack_size+0xff7ff>allGrp
204103f4:    7ff57513              andi    a0,a0,2047                           allGrp
204103f8:    01547433              and    s0,s0,s5                              allGrp
204103fc:    000c8793              mv    a5,s9                                  allGrp
20410400:    01fada93              srli    s5,s5,0x1f                           allGrp
20410404:    08050663              beqz    a0,20410490 <__muldf3+0x1b8>         allGrp, controlFlowGrp
20410408:    7ff00713              li    a4,2047                                Call-Tgt, allGrp
2041040c:    0ee50663              beq    a0,a4,204104f8 <__muldf3+0x220>       allGrp, controlFlowGrp
20410410:    008007b7              lui    a5,0x800                              Call-Tgt, allGrp
20410414:    00341413              slli    s0,s0,0x3                            allGrp
20410418:    00f46433              or    s0,s0,a5                               allGrp
2041041c:    01dcd793              srli    a5,s9,0x1d                           allGrp
20410420:    0087e433              or    s0,a5,s0                               allGrp
20410424:    c0150513              addi    a0,a0,-1023                          allGrp
20410428:    003c9793              slli    a5,s9,0x3                            allGrp
2041042c:    00000713              li    a4,0                                   Call-Tgt, allGrp
  FP_MUL_D (R, A, B);
20410430:    002c1693              slli    a3,s8,0x2                            Call-Tgt, allGrp
20410434:    00e6e6b3              or    a3,a3,a4                               allGrp
20410438:    00ab8533              add    a0,s7,a0                              allGrp
2041043c:    fff68693              addi    a3,a3,-1                             allGrp
20410440:    00e00613              li    a2,14                                  allGrp
20410444:    015b4833              xor    a6,s6,s5                              allGrp
20410448:    00150893              addi    a7,a0,1                              allGrp
2041044c:    1cd66663              bltu    a2,a3,20410618 <__muldf3+0x340>      allGrp, controlFlowGrp
20410450:    20413637              lui    a2,0x20413                            Call-Tgt, allGrp
20410454:    00269693              slli    a3,a3,0x2                            allGrp
20410458:    85860613              addi    a2,a2,-1960 # 20412858 <_ctype_+0x140>allGrp
2041045c:    00c686b3              add    a3,a3,a2                              allGrp
20410460:    0006a683              lw    a3,0(a3)                               allGrp
20410464:    00068067              jr    a3                                     allGrp, controlFlowGrp
20410468:    00000493              li    s1,0                                   Call-Tgt, allGrp
2041046c:    00000a13              li    s4,0                                   allGrp
20410470:    00000b93              li    s7,0                                   allGrp
  FP_UNPACK_D (A, a);
20410474:    00100c13              li    s8,1                                   allGrp
20410478:    ee5ff06f              j    2041035c <__muldf3+0x84>                allGrp, controlFlowGrp
2041047c:    00000493              li    s1,0                                   Call-Tgt, allGrp
20410480:    00000a13              li    s4,0                                   allGrp
20410484:    7ff00b93              li    s7,2047                                allGrp
20410488:    00200c13              li    s8,2                                   allGrp
2041048c:    ed1ff06f              j    2041035c <__muldf3+0x84>                allGrp, controlFlowGrp
  FP_UNPACK_D (B, b);
20410490:    019467b3              or    a5,s0,s9                               Call-Tgt, allGrp
20410494:    08078263              beqz    a5,20410518 <__muldf3+0x240>         allGrp, controlFlowGrp
20410498:    04040063              beqz    s0,204104d8 <__muldf3+0x200>         Call-Tgt, allGrp, controlFlowGrp
2041049c:    00040513              mv    a0,s0                                  Call-Tgt, allGrp
204104a0:    691010ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
204104a4:    ff550693              addi    a3,a0,-11                            Call-Tgt, allGrp
204104a8:    01c00793              li    a5,28                                  allGrp
204104ac:    02d7ce63              blt    a5,a3,204104e8 <__muldf3+0x210>       allGrp, controlFlowGrp
204104b0:    01d00713              li    a4,29                                  Call-Tgt, allGrp
204104b4:    ff850793              addi    a5,a0,-8                             allGrp
204104b8:    40d70733              sub    a4,a4,a3                              allGrp
204104bc:    00f41433              sll    s0,s0,a5                              allGrp
204104c0:    00ecd733              srl    a4,s9,a4                              allGrp
204104c4:    00876433              or    s0,a4,s0                               allGrp
204104c8:    00fc97b3              sll    a5,s9,a5                              allGrp
204104cc:    c0d00713              li    a4,-1011                               Call-Tgt, allGrp
204104d0:    40a70533              sub    a0,a4,a0                              allGrp
204104d4:    f59ff06f              j    2041042c <__muldf3+0x154>               allGrp, controlFlowGrp
204104d8:    000c8513              mv    a0,s9                                  Call-Tgt, allGrp
204104dc:    655010ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
204104e0:    02050513              addi    a0,a0,32                             Call-Tgt, allGrp
204104e4:    fc1ff06f              j    204104a4 <__muldf3+0x1cc>               allGrp, controlFlowGrp
204104e8:    fd850413              addi    s0,a0,-40                            Call-Tgt, allGrp
204104ec:    008c9433              sll    s0,s9,s0                              allGrp
204104f0:    00000793              li    a5,0                                   allGrp
204104f4:    fd9ff06f              j    204104cc <__muldf3+0x1f4>               allGrp, controlFlowGrp
204104f8:    01946633              or    a2,s0,s9                               Call-Tgt, allGrp
204104fc:    02060863              beqz    a2,2041052c <__muldf3+0x254>         allGrp, controlFlowGrp
20410500:    00c41713              slli    a4,s0,0xc                            Call-Tgt, allGrp
20410504:    7ff00513              li    a0,2047                                allGrp
20410508:    02074c63              bltz    a4,20410540 <__muldf3+0x268>         allGrp, controlFlowGrp
2041050c:    00300713              li    a4,3                                   Call-Tgt, allGrp
20410510:    01000913              li    s2,16                                  allGrp
20410514:    f1dff06f              j    20410430 <__muldf3+0x158>               allGrp, controlFlowGrp
20410518:    00000413              li    s0,0                                   Call-Tgt, allGrp
2041051c:    00000793              li    a5,0                                   allGrp
20410520:    00000513              li    a0,0                                   allGrp
20410524:    00100713              li    a4,1                                   allGrp
20410528:    f09ff06f              j    20410430 <__muldf3+0x158>               allGrp, controlFlowGrp
2041052c:    00000413              li    s0,0                                   Call-Tgt, allGrp
20410530:    00000793              li    a5,0                                   allGrp
20410534:    7ff00513              li    a0,2047                                allGrp
20410538:    00200713              li    a4,2                                   allGrp
2041053c:    ef5ff06f              j    20410430 <__muldf3+0x158>               allGrp, controlFlowGrp
20410540:    00300713              li    a4,3                                   Call-Tgt, allGrp
20410544:    eedff06f              j    20410430 <__muldf3+0x158>               allGrp, controlFlowGrp
  FP_PACK_D (r, R);
20410548:    00080437              lui    s0,0x80                               Call-Tgt, allGrp
2041054c:    00000793              li    a5,0                                   allGrp
20410550:    7ff00613              li    a2,2047                                allGrp
20410554:    00000813              li    a6,0                                   allGrp
  FP_MUL_D (R, A, B);
20410558:    01000913              li    s2,16                                  allGrp
  FP_PACK_D (r, R);
2041055c:    00100737              lui    a4,0x100                              Call-Tgt, allGrp
20410560:    fff70713              addi    a4,a4,-1 # fffff <__stack_size+0xff7ff>allGrp
20410564:    00e47433              and    s0,s0,a4                              allGrp
20410568:    80100737              lui    a4,0x80100                            allGrp
2041056c:    7ff67693              andi    a3,a2,2047                           allGrp
20410570:    fff70713              addi    a4,a4,-1 # 800fffff <_sp+0xfbfff>    allGrp
20410574:    01469693              slli    a3,a3,0x14                           allGrp
20410578:    00e47433              and    s0,s0,a4                              allGrp
2041057c:    80000737              lui    a4,0x80000                            allGrp
20410580:    00d46433              or    s0,s0,a3                               allGrp
20410584:    fff74713              not    a4,a4                                 allGrp
20410588:    01f81813              slli    a6,a6,0x1f                           allGrp
2041058c:    00e47433              and    s0,s0,a4                              allGrp
20410590:    00078613              mv    a2,a5                                  allGrp
20410594:    010466b3              or    a3,s0,a6                               allGrp
20410598:    00c12423              sw    a2,8(sp)                               allGrp
2041059c:    00d12623              sw    a3,12(sp)                              allGrp
204105a0:    00813787              fld    fa5,8(sp)                             allGrp
  FP_HANDLE_EXCEPTIONS;
204105a4:    00090463              beqz    s2,204105ac <__muldf3+0x2d4>         allGrp, controlFlowGrp
204105a8:    00192073              csrs    fflags,s2                            allGrp

  return r;
}
204105ac:    03c12083              lw    ra,60(sp)                              Call-Tgt, allGrp
204105b0:    03812403              lw    s0,56(sp)                              allGrp
204105b4:    03412483              lw    s1,52(sp)                              allGrp
204105b8:    03012903              lw    s2,48(sp)                              allGrp
204105bc:    02c12983              lw    s3,44(sp)                              allGrp
204105c0:    02812a03              lw    s4,40(sp)                              allGrp
204105c4:    02412a83              lw    s5,36(sp)                              allGrp
204105c8:    02012b03              lw    s6,32(sp)                              allGrp
204105cc:    01c12b83              lw    s7,28(sp)                              allGrp
204105d0:    01812c03              lw    s8,24(sp)                              allGrp
204105d4:    01412c83              lw    s9,20(sp)                              allGrp
204105d8:    00f13427              fsd    fa5,8(sp)                             allGrp
204105dc:    02112e23              sw    ra,60(sp)                              allGrp
204105e0:    02812c23              sw    s0,56(sp)                              allGrp
204105e4:    02912a23              sw    s1,52(sp)                              allGrp
204105e8:    03212823              sw    s2,48(sp)                              allGrp
204105ec:    03312623              sw    s3,44(sp)                              allGrp
204105f0:    03412423              sw    s4,40(sp)                              allGrp
204105f4:    03512223              sw    s5,36(sp)                              allGrp
204105f8:    03612023              sw    s6,32(sp)                              allGrp
204105fc:    01712e23              sw    s7,28(sp)                              allGrp
20410600:    01812c23              sw    s8,24(sp)                              allGrp
20410604:    01912a23              sw    s9,20(sp)                              allGrp
20410608:    00812503              lw    a0,8(sp)                               allGrp
2041060c:    00c12583              lw    a1,12(sp)                              allGrp
20410610:    04010113              addi    sp,sp,64                             allGrp
20410614:    00008067              ret                                          allGrp, controlFlowGrp
20410618:    00010f37              lui    t5,0x10                               Call-Tgt, allGrp
2041061c:    ffff0e93              addi    t4,t5,-1 # ffff <__stack_size+0xf7ff>allGrp
  FP_MUL_D (R, A, B);
20410620:    010a5713              srli    a4,s4,0x10                           allGrp
20410624:    0107d593              srli    a1,a5,0x10                           allGrp
20410628:    01da7a33              and    s4,s4,t4                              allGrp
2041062c:    01d7f7b3              and    a5,a5,t4                              allGrp
20410630:    03458633              mul    a2,a1,s4                              allGrp
20410634:    034786b3              mul    a3,a5,s4                              allGrp
20410638:    02f70fb3              mul    t6,a4,a5                              allGrp
2041063c:    01f60333              add    t1,a2,t6                              allGrp
20410640:    0106d613              srli    a2,a3,0x10                           allGrp
20410644:    00660633              add    a2,a2,t1                              allGrp
20410648:    02b70e33              mul    t3,a4,a1                              allGrp
2041064c:    01f67463              bleu    t6,a2,20410654 <__muldf3+0x37c>      allGrp, controlFlowGrp
20410650:    01ee0e33              add    t3,t3,t5                              Call-Tgt, allGrp
20410654:    01065293              srli    t0,a2,0x10                           Call-Tgt, allGrp
20410658:    01d67633              and    a2,a2,t4                              allGrp
2041065c:    01d6f6b3              and    a3,a3,t4                              allGrp
20410660:    01045f13              srli    t5,s0,0x10                           allGrp
20410664:    01d47eb3              and    t4,s0,t4                              allGrp
20410668:    01061613              slli    a2,a2,0x10                           allGrp
2041066c:    00d60633              add    a2,a2,a3                              allGrp
20410670:    03d70fb3              mul    t6,a4,t4                              allGrp
20410674:    03da06b3              mul    a3,s4,t4                              allGrp
20410678:    034f0a33              mul    s4,t5,s4                              allGrp
2041067c:    01fa0333              add    t1,s4,t6                              allGrp
20410680:    0106da13              srli    s4,a3,0x10                           allGrp
20410684:    006a0a33              add    s4,s4,t1                              allGrp
20410688:    03e70733              mul    a4,a4,t5                              allGrp
2041068c:    01fa7663              bleu    t6,s4,20410698 <__muldf3+0x3c0>      allGrp, controlFlowGrp
20410690:    00010337              lui    t1,0x10                               Call-Tgt, allGrp
20410694:    00670733              add    a4,a4,t1                              allGrp
20410698:    010a5313              srli    t1,s4,0x10                           Call-Tgt, allGrp
2041069c:    00e30333              add    t1,t1,a4                              allGrp
204106a0:    00010737              lui    a4,0x10                               allGrp
204106a4:    fff70f93              addi    t6,a4,-1 # ffff <__stack_size+0xf7ff>allGrp
204106a8:    01fa7a33              and    s4,s4,t6                              allGrp
204106ac:    01f6f6b3              and    a3,a3,t6                              allGrp
204106b0:    0104d413              srli    s0,s1,0x10                           allGrp
204106b4:    010a1a13              slli    s4,s4,0x10                           allGrp
204106b8:    01f4f4b3              and    s1,s1,t6                              allGrp
204106bc:    00da0a33              add    s4,s4,a3                              allGrp
204106c0:    02978fb3              mul    t6,a5,s1                              allGrp
204106c4:    014282b3              add    t0,t0,s4                              allGrp
204106c8:    029586b3              mul    a3,a1,s1                              allGrp
204106cc:    02f407b3              mul    a5,s0,a5                              allGrp
204106d0:    028583b3              mul    t2,a1,s0                              allGrp
204106d4:    00f685b3              add    a1,a3,a5                              allGrp
204106d8:    010fd693              srli    a3,t6,0x10                           allGrp
204106dc:    00b686b3              add    a3,a3,a1                              allGrp
204106e0:    00f6f463              bleu    a5,a3,204106e8 <__muldf3+0x410>      allGrp, controlFlowGrp
204106e4:    00e383b3              add    t2,t2,a4                              Call-Tgt, allGrp
204106e8:    00010737              lui    a4,0x10                               Call-Tgt, allGrp
204106ec:    fff70793              addi    a5,a4,-1 # ffff <__stack_size+0xf7ff>allGrp
204106f0:    00ffffb3              and    t6,t6,a5                              allGrp
204106f4:    0106d593              srli    a1,a3,0x10                           allGrp
204106f8:    00f6f6b3              and    a3,a3,a5                              allGrp
204106fc:    03d487b3              mul    a5,s1,t4                              allGrp
20410700:    01069693              slli    a3,a3,0x10                           allGrp
20410704:    01f686b3              add    a3,a3,t6                              allGrp
20410708:    007585b3              add    a1,a1,t2                              allGrp
2041070c:    03d40eb3              mul    t4,s0,t4                              allGrp
20410710:    029f04b3              mul    s1,t5,s1                              allGrp
20410714:    028f0fb3              mul    t6,t5,s0                              allGrp
20410718:    01d484b3              add    s1,s1,t4                              allGrp
2041071c:    0107d413              srli    s0,a5,0x10                           allGrp
20410720:    009404b3              add    s1,s0,s1                              allGrp
20410724:    01d4f463              bleu    t4,s1,2041072c <__muldf3+0x454>      allGrp, controlFlowGrp
20410728:    00ef8fb3              add    t6,t6,a4                              Call-Tgt, allGrp
2041072c:    00010eb7              lui    t4,0x10                               Call-Tgt, allGrp
20410730:    fffe8e93              addi    t4,t4,-1 # ffff <__stack_size+0xf7ff>allGrp
20410734:    01d4f733              and    a4,s1,t4                              allGrp
20410738:    01d7f7b3              and    a5,a5,t4                              allGrp
2041073c:    01071713              slli    a4,a4,0x10                           allGrp
20410740:    005e0e33              add    t3,t3,t0                              allGrp
20410744:    00f70733              add    a4,a4,a5                              allGrp
20410748:    014e3a33              sltu    s4,t3,s4                             allGrp
2041074c:    00670733              add    a4,a4,t1                              allGrp
20410750:    01470433              add    s0,a4,s4                              allGrp
20410754:    00de0e33              add    t3,t3,a3                              allGrp
20410758:    00de36b3              sltu    a3,t3,a3                             allGrp
2041075c:    00b40eb3              add    t4,s0,a1                              allGrp
20410760:    00de8f33              add    t5,t4,a3                              allGrp
20410764:    00673733              sltu    a4,a4,t1                             allGrp
20410768:    01443433              sltu    s0,s0,s4                             allGrp
2041076c:    00876433              or    s0,a4,s0                               allGrp
20410770:    00df36b3              sltu    a3,t5,a3                             allGrp
20410774:    0104d493              srli    s1,s1,0x10                           allGrp
20410778:    00beb5b3              sltu    a1,t4,a1                             allGrp
2041077c:    00940433              add    s0,s0,s1                              allGrp
20410780:    00d5e6b3              or    a3,a1,a3                               allGrp
20410784:    00d40433              add    s0,s0,a3                              allGrp
20410788:    01f40433              add    s0,s0,t6                              allGrp
2041078c:    017f5793              srli    a5,t5,0x17                           allGrp
20410790:    00941413              slli    s0,s0,0x9                            allGrp
20410794:    00f46433              or    s0,s0,a5                               allGrp
20410798:    009e1793              slli    a5,t3,0x9                            allGrp
2041079c:    00c7e7b3              or    a5,a5,a2                               allGrp
204107a0:    00f037b3              snez    a5,a5                                allGrp
204107a4:    017e5e13              srli    t3,t3,0x17                           allGrp
204107a8:    01c7e7b3              or    a5,a5,t3                               allGrp
204107ac:    009f1f13              slli    t5,t5,0x9                            allGrp
204107b0:    00741713              slli    a4,s0,0x7                            allGrp
204107b4:    01e7e7b3              or    a5,a5,t5                               allGrp
204107b8:    0a075863              bgez    a4,20410868 <__muldf3+0x590>         allGrp, controlFlowGrp
204107bc:    0017d713              srli    a4,a5,0x1                            Call-Tgt, allGrp
204107c0:    0017f793              andi    a5,a5,1                              allGrp
204107c4:    00f767b3              or    a5,a4,a5                               allGrp
204107c8:    01f41713              slli    a4,s0,0x1f                           allGrp
204107cc:    00e7e7b3              or    a5,a5,a4                               allGrp
204107d0:    00145413              srli    s0,s0,0x1                            allGrp
  FP_PACK_D (r, R);
204107d4:    3ff88613              addi    a2,a7,1023                           Call-Tgt, allGrp
204107d8:    10c05e63              blez    a2,204108f4 <__muldf3+0x61c>         allGrp, controlFlowGrp
204107dc:    0077f713              andi    a4,a5,7                              Call-Tgt, allGrp
204107e0:    0a070063              beqz    a4,20410880 <__muldf3+0x5a8>         allGrp, controlFlowGrp
204107e4:    00200713              li    a4,2                                   Call-Tgt, allGrp
204107e8:    00196913              ori    s2,s2,1                               allGrp
204107ec:    08e98863              beq    s3,a4,2041087c <__muldf3+0x5a4>       allGrp, controlFlowGrp
204107f0:    00300713              li    a4,3                                   Call-Tgt, allGrp
204107f4:    06e98e63              beq    s3,a4,20410870 <__muldf3+0x598>       allGrp, controlFlowGrp
204107f8:    08099463              bnez    s3,20410880 <__muldf3+0x5a8>         Call-Tgt, allGrp, controlFlowGrp
204107fc:    00f7f713              andi    a4,a5,15                             Call-Tgt, allGrp
20410800:    00400693              li    a3,4                                   allGrp
20410804:    06d70e63              beq    a4,a3,20410880 <__muldf3+0x5a8>       allGrp, controlFlowGrp
20410808:    00478713              addi    a4,a5,4 # 800004 <__stack_size+0x7ff804>Call-Tgt, allGrp
2041080c:    00f737b3              sltu    a5,a4,a5                             Call-Tgt, allGrp
20410810:    00f40433              add    s0,s0,a5                              allGrp
20410814:    00070793              mv    a5,a4                                  allGrp
20410818:    0680006f              j    20410880 <__muldf3+0x5a8>               allGrp, controlFlowGrp
  FP_UNPACK_D (A, a);
2041081c:    000b0813              mv    a6,s6                                  Call-Tgt, allGrp
  FP_MUL_D (R, A, B);
20410820:    00048413              mv    s0,s1                                  Call-Tgt, allGrp
20410824:    000a0793              mv    a5,s4                                  allGrp
20410828:    000c0713              mv    a4,s8                                  allGrp
  FP_PACK_D (r, R);
2041082c:    00200693              li    a3,2                                   Call-Tgt, allGrp
20410830:    02d70463              beq    a4,a3,20410858 <__muldf3+0x580>       allGrp, controlFlowGrp
20410834:    00300693              li    a3,3                                   Call-Tgt, allGrp
20410838:    28d70063              beq    a4,a3,20410ab8 <__muldf3+0x7e0>       allGrp, controlFlowGrp
2041083c:    00100693              li    a3,1                                   Call-Tgt, allGrp
20410840:    f8d71ae3              bne    a4,a3,204107d4 <__muldf3+0x4fc>       allGrp, controlFlowGrp
20410844:    00000413              li    s0,0                                   Call-Tgt, allGrp
20410848:    00000793              li    a5,0                                   allGrp
2041084c:    2480006f              j    20410a94 <__muldf3+0x7bc>               allGrp, controlFlowGrp
  FP_UNPACK_D (B, b);
20410850:    000a8813              mv    a6,s5                                  Call-Tgt, allGrp
20410854:    fd9ff06f              j    2041082c <__muldf3+0x554>               allGrp, controlFlowGrp
  FP_PACK_D (r, R);
20410858:    00000413              li    s0,0                                   Call-Tgt, allGrp
2041085c:    00000793              li    a5,0                                   allGrp
20410860:    7ff00613              li    a2,2047                                allGrp
20410864:    cf9ff06f              j    2041055c <__muldf3+0x284>               allGrp, controlFlowGrp
  FP_MUL_D (R, A, B);
20410868:    00050893              mv    a7,a0                                  Call-Tgt, allGrp
2041086c:    f69ff06f              j    204107d4 <__muldf3+0x4fc>               allGrp, controlFlowGrp
  FP_PACK_D (r, R);
20410870:    00081863              bnez    a6,20410880 <__muldf3+0x5a8>         Call-Tgt, allGrp, controlFlowGrp
20410874:    00878713              addi    a4,a5,8                              Call-Tgt, allGrp
20410878:    f95ff06f              j    2041080c <__muldf3+0x534>               allGrp, controlFlowGrp
2041087c:    fe081ce3              bnez    a6,20410874 <__muldf3+0x59c>         Call-Tgt, allGrp, controlFlowGrp
20410880:    00741713              slli    a4,s0,0x7                            Call-Tgt, allGrp
20410884:    00075a63              bgez    a4,20410898 <__muldf3+0x5c0>         allGrp, controlFlowGrp
20410888:    ff000737              lui    a4,0xff000                            Call-Tgt, allGrp
2041088c:    fff70713              addi    a4,a4,-1 # feffffff <_sp+0x7effbfff> allGrp
20410890:    00e47433              and    s0,s0,a4                              allGrp
20410894:    40088613              addi    a2,a7,1024                           allGrp
20410898:    7fe00713              li    a4,2046                                Call-Tgt, allGrp
2041089c:    00c74c63              blt    a4,a2,204108b4 <__muldf3+0x5dc>       allGrp, controlFlowGrp
204108a0:    0037d713              srli    a4,a5,0x3                            Call-Tgt, allGrp
204108a4:    01d41793              slli    a5,s0,0x1d                           allGrp
204108a8:    00e7e7b3              or    a5,a5,a4                               allGrp
204108ac:    00345413              srli    s0,s0,0x3                            allGrp
204108b0:    cadff06f              j    2041055c <__muldf3+0x284>               allGrp, controlFlowGrp
204108b4:    00200793              li    a5,2                                   Call-Tgt, allGrp
204108b8:    02f98a63              beq    s3,a5,204108ec <__muldf3+0x614>       allGrp, controlFlowGrp
204108bc:    00300793              li    a5,3                                   Call-Tgt, allGrp
204108c0:    00f98e63              beq    s3,a5,204108dc <__muldf3+0x604>       allGrp, controlFlowGrp
204108c4:    00098e63              beqz    s3,204108e0 <__muldf3+0x608>         Call-Tgt, allGrp, controlFlowGrp
204108c8:    fff00793              li    a5,-1                                  Call-Tgt, allGrp
204108cc:    7fe00613              li    a2,2046                                allGrp
204108d0:    00596913              ori    s2,s2,5                               Call-Tgt, allGrp
204108d4:    00078413              mv    s0,a5                                  allGrp
204108d8:    c85ff06f              j    2041055c <__muldf3+0x284>               allGrp, controlFlowGrp
204108dc:    fe0816e3              bnez    a6,204108c8 <__muldf3+0x5f0>         Call-Tgt, allGrp, controlFlowGrp
204108e0:    00000793              li    a5,0                                   Call-Tgt, allGrp
204108e4:    7ff00613              li    a2,2047                                allGrp
204108e8:    fe9ff06f              j    204108d0 <__muldf3+0x5f8>               allGrp, controlFlowGrp
204108ec:    fe081ae3              bnez    a6,204108e0 <__muldf3+0x608>         Call-Tgt, allGrp, controlFlowGrp
204108f0:    fd9ff06f              j    204108c8 <__muldf3+0x5f0>               Call-Tgt, allGrp, controlFlowGrp
204108f4:    00100593              li    a1,1                                   Call-Tgt, allGrp
204108f8:    06061663              bnez    a2,20410964 <__muldf3+0x68c>         allGrp, controlFlowGrp
204108fc:    0077f693              andi    a3,a5,7                              Call-Tgt, allGrp
20410900:    00040713              mv    a4,s0                                  allGrp
20410904:    04068a63              beqz    a3,20410958 <__muldf3+0x680>         allGrp, controlFlowGrp
20410908:    00200713              li    a4,2                                   Call-Tgt, allGrp
2041090c:    00196913              ori    s2,s2,1                               allGrp
20410910:    04e98063              beq    s3,a4,20410950 <__muldf3+0x678>       allGrp, controlFlowGrp
20410914:    00300713              li    a4,3                                   Call-Tgt, allGrp
20410918:    02e98463              beq    s3,a4,20410940 <__muldf3+0x668>       allGrp, controlFlowGrp
2041091c:    00040713              mv    a4,s0                                  Call-Tgt, allGrp
20410920:    02099c63              bnez    s3,20410958 <__muldf3+0x680>         allGrp, controlFlowGrp
20410924:    00f7f693              andi    a3,a5,15                             Call-Tgt, allGrp
20410928:    00400593              li    a1,4                                   allGrp
2041092c:    02b68663              beq    a3,a1,20410958 <__muldf3+0x680>       allGrp, controlFlowGrp
20410930:    ffc7b713              sltiu    a4,a5,-4                            Call-Tgt, allGrp
20410934:    00174713              xori    a4,a4,1                              Call-Tgt, allGrp
20410938:    00870733              add    a4,a4,s0                              allGrp
2041093c:    01c0006f              j    20410958 <__muldf3+0x680>               allGrp, controlFlowGrp
20410940:    00040713              mv    a4,s0                                  Call-Tgt, allGrp
20410944:    00081a63              bnez    a6,20410958 <__muldf3+0x680>         allGrp, controlFlowGrp
20410948:    ff87b713              sltiu    a4,a5,-8                            Call-Tgt, allGrp
2041094c:    fe9ff06f              j    20410934 <__muldf3+0x65c>               allGrp, controlFlowGrp
20410950:    00040713              mv    a4,s0                                  Call-Tgt, allGrp
20410954:    fe081ae3              bnez    a6,20410948 <__muldf3+0x670>         allGrp, controlFlowGrp
20410958:    01875593              srli    a1,a4,0x18                           Call-Tgt, allGrp
2041095c:    0015c593              xori    a1,a1,1                              allGrp
20410960:    0015f593              andi    a1,a1,1                              allGrp
20410964:    00100713              li    a4,1                                   Call-Tgt, allGrp
20410968:    40c70733              sub    a4,a4,a2                              allGrp
2041096c:    03800693              li    a3,56                                  allGrp
20410970:    0ee6ca63              blt    a3,a4,20410a64 <__muldf3+0x78c>       allGrp, controlFlowGrp
20410974:    01f00693              li    a3,31                                  Call-Tgt, allGrp
20410978:    06e6c263              blt    a3,a4,204109dc <__muldf3+0x704>       allGrp, controlFlowGrp
2041097c:    41e88893              addi    a7,a7,1054                           Call-Tgt, allGrp
20410980:    011416b3              sll    a3,s0,a7                              allGrp
20410984:    00e7d633              srl    a2,a5,a4                              allGrp
20410988:    011797b3              sll    a5,a5,a7                              allGrp
2041098c:    00c6e6b3              or    a3,a3,a2                               allGrp
20410990:    00f037b3              snez    a5,a5                                allGrp
20410994:    00f6e7b3              or    a5,a3,a5                               allGrp
20410998:    00e45433              srl    s0,s0,a4                              allGrp
2041099c:    0077f713              andi    a4,a5,7                              Call-Tgt, allGrp
204109a0:    08070063              beqz    a4,20410a20 <__muldf3+0x748>         allGrp, controlFlowGrp
204109a4:    00200713              li    a4,2                                   Call-Tgt, allGrp
204109a8:    00196913              ori    s2,s2,1                               allGrp
204109ac:    06e98863              beq    s3,a4,20410a1c <__muldf3+0x744>       allGrp, controlFlowGrp
204109b0:    00300713              li    a4,3                                   Call-Tgt, allGrp
204109b4:    04e98e63              beq    s3,a4,20410a10 <__muldf3+0x738>       allGrp, controlFlowGrp
204109b8:    06099463              bnez    s3,20410a20 <__muldf3+0x748>         Call-Tgt, allGrp, controlFlowGrp
204109bc:    00f7f713              andi    a4,a5,15                             Call-Tgt, allGrp
204109c0:    00400693              li    a3,4                                   allGrp
204109c4:    04d70e63              beq    a4,a3,20410a20 <__muldf3+0x748>       allGrp, controlFlowGrp
204109c8:    00478713              addi    a4,a5,4                              Call-Tgt, allGrp
204109cc:    00f737b3              sltu    a5,a4,a5                             Call-Tgt, allGrp
204109d0:    00f40433              add    s0,s0,a5                              allGrp
204109d4:    00070793              mv    a5,a4                                  allGrp
204109d8:    0480006f              j    20410a20 <__muldf3+0x748>               allGrp, controlFlowGrp
204109dc:    fe100693              li    a3,-31                                 Call-Tgt, allGrp
204109e0:    40c686b3              sub    a3,a3,a2                              allGrp
204109e4:    02000513              li    a0,32                                  allGrp
204109e8:    00d456b3              srl    a3,s0,a3                              allGrp
204109ec:    00000613              li    a2,0                                   allGrp
204109f0:    00a70663              beq    a4,a0,204109fc <__muldf3+0x724>       allGrp, controlFlowGrp
204109f4:    43e88893              addi    a7,a7,1086                           Call-Tgt, allGrp
204109f8:    01141633              sll    a2,s0,a7                              allGrp
204109fc:    00f667b3              or    a5,a2,a5                               Call-Tgt, allGrp
20410a00:    00f037b3              snez    a5,a5                                allGrp
20410a04:    00f6e7b3              or    a5,a3,a5                               allGrp
20410a08:    00000413              li    s0,0                                   allGrp
20410a0c:    f91ff06f              j    2041099c <__muldf3+0x6c4>               allGrp, controlFlowGrp
20410a10:    00081863              bnez    a6,20410a20 <__muldf3+0x748>         Call-Tgt, allGrp, controlFlowGrp
20410a14:    00878713              addi    a4,a5,8                              Call-Tgt, allGrp
20410a18:    fb5ff06f              j    204109cc <__muldf3+0x6f4>               allGrp, controlFlowGrp
20410a1c:    fe081ce3              bnez    a6,20410a14 <__muldf3+0x73c>         Call-Tgt, allGrp, controlFlowGrp
20410a20:    00841713              slli    a4,s0,0x8                            Call-Tgt, allGrp
20410a24:    02075463              bgez    a4,20410a4c <__muldf3+0x774>         allGrp, controlFlowGrp
20410a28:    00196913              ori    s2,s2,1                               Call-Tgt, allGrp
20410a2c:    00000413              li    s0,0                                   allGrp
20410a30:    00000793              li    a5,0                                   allGrp
20410a34:    00100613              li    a2,1                                   allGrp
20410a38:    b20582e3              beqz    a1,2041055c <__muldf3+0x284>         Call-Tgt, allGrp, controlFlowGrp
20410a3c:    00197713              andi    a4,s2,1                              Call-Tgt, allGrp
20410a40:    b0070ee3              beqz    a4,2041055c <__muldf3+0x284>         allGrp, controlFlowGrp
20410a44:    00296913              ori    s2,s2,2                               Call-Tgt, allGrp
20410a48:    b15ff06f              j    2041055c <__muldf3+0x284>               allGrp, controlFlowGrp
20410a4c:    0037d713              srli    a4,a5,0x3                            Call-Tgt, allGrp
20410a50:    01d41793              slli    a5,s0,0x1d                           allGrp
20410a54:    00e7e7b3              or    a5,a5,a4                               allGrp
20410a58:    00345413              srli    s0,s0,0x3                            allGrp
20410a5c:    00000613              li    a2,0                                   allGrp
20410a60:    fd9ff06f              j    20410a38 <__muldf3+0x760>               allGrp, controlFlowGrp
20410a64:    0087e7b3              or    a5,a5,s0                               Call-Tgt, allGrp
20410a68:    02078263              beqz    a5,20410a8c <__muldf3+0x7b4>         allGrp, controlFlowGrp
20410a6c:    00200793              li    a5,2                                   Call-Tgt, allGrp
20410a70:    00196913              ori    s2,s2,1                               allGrp
20410a74:    02f98c63              beq    s3,a5,20410aac <__muldf3+0x7d4>       allGrp, controlFlowGrp
20410a78:    00300793              li    a5,3                                   Call-Tgt, allGrp
20410a7c:    02f98063              beq    s3,a5,20410a9c <__muldf3+0x7c4>       allGrp, controlFlowGrp
20410a80:    00500793              li    a5,5                                   Call-Tgt, allGrp
20410a84:    02099063              bnez    s3,20410aa4 <__muldf3+0x7cc>         allGrp, controlFlowGrp
20410a88:    0037d793              srli    a5,a5,0x3                            Call-Tgt, allGrp
20410a8c:    00296913              ori    s2,s2,2                               Call-Tgt, allGrp
20410a90:    00000413              li    s0,0                                   allGrp
20410a94:    00000613              li    a2,0                                   Call-Tgt, allGrp
20410a98:    ac5ff06f              j    2041055c <__muldf3+0x284>               allGrp, controlFlowGrp
20410a9c:    00900793              li    a5,9                                   Call-Tgt, allGrp
20410aa0:    fe0804e3              beqz    a6,20410a88 <__muldf3+0x7b0>         allGrp, controlFlowGrp
20410aa4:    00100793              li    a5,1                                   Call-Tgt, allGrp
20410aa8:    fe1ff06f              j    20410a88 <__muldf3+0x7b0>               allGrp, controlFlowGrp
20410aac:    00900793              li    a5,9                                   Call-Tgt, allGrp
20410ab0:    fc081ce3              bnez    a6,20410a88 <__muldf3+0x7b0>         allGrp, controlFlowGrp
20410ab4:    ff1ff06f              j    20410aa4 <__muldf3+0x7cc>               Call-Tgt, allGrp, controlFlowGrp
20410ab8:    00080437              lui    s0,0x80                               Call-Tgt, allGrp
20410abc:    00000793              li    a5,0                                   allGrp
20410ac0:    7ff00613              li    a2,2047                                allGrp
20410ac4:    00000813              li    a6,0                                   allGrp
20410ac8:    a95ff06f              j    2041055c <__muldf3+0x284>               allGrp, controlFlowGrp
20410acc:    00000013              nop                                          allGrp
	...

20410ad8 <__subdf3>:
#include "soft-fp.h"
#include "double.h"

DFtype
__subdf3 (DFtype a, DFtype b)
{
20410ad8:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp
20410adc:    02112623              sw    ra,44(sp)                              allGrp
20410ae0:    02812423              sw    s0,40(sp)                              allGrp
20410ae4:    02912223              sw    s1,36(sp)                              allGrp
20410ae8:    03212023              sw    s2,32(sp)                              allGrp
20410aec:    01312e23              sw    s3,28(sp)                              allGrp
20410af0:    01412c23              sw    s4,24(sp)                              allGrp
  FP_DECL_D (A);
  FP_DECL_D (B);
  FP_DECL_D (R);
  DFtype r;

  FP_INIT_ROUNDMODE;
20410af4:    00202973              frrm    s2                                   allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
20410af8:    001008b7              lui    a7,0x100                              allGrp
20410afc:    fff88893              addi    a7,a7,-1 # fffff <__stack_size+0xff7ff>allGrp
20410b00:    00b8f7b3              and    a5,a7,a1                              allGrp
20410b04:    0145d993              srli    s3,a1,0x14                           allGrp
20410b08:    01f5d493              srli    s1,a1,0x1f                           allGrp
20410b0c:    00379593              slli    a1,a5,0x3                            allGrp
20410b10:    01d55793              srli    a5,a0,0x1d                           allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
20410b14:    00d8f8b3              and    a7,a7,a3                              allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
20410b18:    00b7e7b3              or    a5,a5,a1                               allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
20410b1c:    0146d593              srli    a1,a3,0x14                           allGrp
20410b20:    01d65713              srli    a4,a2,0x1d                           allGrp
20410b24:    00389893              slli    a7,a7,0x3                            allGrp
20410b28:    00361813              slli    a6,a2,0x3                            allGrp
20410b2c:    7ff5f593              andi    a1,a1,2047                           allGrp
  FP_SUB_D (R, A, B);
20410b30:    7ff00613              li    a2,2047                                allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
20410b34:    7ff9f993              andi    s3,s3,2047                           allGrp
20410b38:    00351513              slli    a0,a0,0x3                            allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
20410b3c:    01f6d693              srli    a3,a3,0x1f                           allGrp
20410b40:    01176733              or    a4,a4,a7                               allGrp
  FP_SUB_D (R, A, B);
20410b44:    00c59663              bne    a1,a2,20410b50 <__subdf3+0x78>        allGrp, controlFlowGrp
20410b48:    01076633              or    a2,a4,a6                               Call-Tgt, allGrp
20410b4c:    00061463              bnez    a2,20410b54 <__subdf3+0x7c>          allGrp, controlFlowGrp
20410b50:    0016c693              xori    a3,a3,1                              Call-Tgt, allGrp
20410b54:    40b988b3              sub    a7,s3,a1                              Call-Tgt, allGrp
20410b58:    4c969e63              bne    a3,s1,20411034 <__subdf3+0x55c>       allGrp, controlFlowGrp
20410b5c:    15105063              blez    a7,20410c9c <__subdf3+0x1c4>         Call-Tgt, allGrp, controlFlowGrp
20410b60:    0a059063              bnez    a1,20410c00 <__subdf3+0x128>         Call-Tgt, allGrp, controlFlowGrp
20410b64:    010766b3              or    a3,a4,a6                               Call-Tgt, allGrp
20410b68:    00069a63              bnez    a3,20410b7c <__subdf3+0xa4>          allGrp, controlFlowGrp
20410b6c:    7ff00713              li    a4,2047                                Call-Tgt, allGrp
20410b70:    00088593              mv    a1,a7                                  allGrp
20410b74:    04e89e63              bne    a7,a4,20410bd0 <__subdf3+0xf8>        allGrp, controlFlowGrp
20410b78:    0680006f              j    20410be0 <__subdf3+0x108>               Call-Tgt, allGrp, controlFlowGrp
20410b7c:    fff88693              addi    a3,a7,-1                             Call-Tgt, allGrp
20410b80:    04069c63              bnez    a3,20410bd8 <__subdf3+0x100>         allGrp, controlFlowGrp
20410b84:    00a80833              add    a6,a6,a0                              Call-Tgt, allGrp
20410b88:    00e787b3              add    a5,a5,a4                              allGrp
20410b8c:    00a83533              sltu    a0,a6,a0                             allGrp
20410b90:    00a78733              add    a4,a5,a0                              allGrp
20410b94:    00100593              li    a1,1                                   allGrp
20410b98:    00871793              slli    a5,a4,0x8                            Call-Tgt, allGrp
20410b9c:    1007dc63              bgez    a5,20410cb4 <__subdf3+0x1dc>         allGrp, controlFlowGrp
20410ba0:    00158593              addi    a1,a1,1 # 10001 <__stack_size+0xf801>Call-Tgt, allGrp
20410ba4:    7ff00793              li    a5,2047                                allGrp
20410ba8:    44f58663              beq    a1,a5,20410ff4 <__subdf3+0x51c>       allGrp, controlFlowGrp
20410bac:    ff8007b7              lui    a5,0xff800                            Call-Tgt, allGrp
20410bb0:    fff78793              addi    a5,a5,-1 # ff7fffff <_sp+0x7f7fbfff> allGrp
20410bb4:    00185513              srli    a0,a6,0x1                            allGrp
20410bb8:    00f777b3              and    a5,a4,a5                              allGrp
20410bbc:    00187813              andi    a6,a6,1                              allGrp
20410bc0:    01056833              or    a6,a0,a6                               allGrp
20410bc4:    01f79513              slli    a0,a5,0x1f                           allGrp
20410bc8:    01056533              or    a0,a0,a6                               allGrp
20410bcc:    0017d793              srli    a5,a5,0x1                            allGrp
20410bd0:    00000893              li    a7,0                                   Call-Tgt, allGrp
20410bd4:    3ac0006f              j    20410f80 <__subdf3+0x4a8>               allGrp, controlFlowGrp
20410bd8:    7ff00613              li    a2,2047                                Call-Tgt, allGrp
20410bdc:    02c89c63              bne    a7,a2,20410c14 <__subdf3+0x13c>       allGrp, controlFlowGrp
20410be0:    00a7e733              or    a4,a5,a0                               Call-Tgt, allGrp
20410be4:    0e070ee3              beqz    a4,204114e0 <__subdf3+0xa08>         allGrp, controlFlowGrp
20410be8:    00979713              slli    a4,a5,0x9                            Call-Tgt, allGrp
20410bec:    7ff00593              li    a1,2047                                allGrp
20410bf0:    00000893              li    a7,0                                   allGrp
20410bf4:    38074663              bltz    a4,20410f80 <__subdf3+0x4a8>         allGrp, controlFlowGrp
20410bf8:    01000313              li    t1,16                                  Call-Tgt, allGrp
20410bfc:    1fc0006f              j    20410df8 <__subdf3+0x320>               allGrp, controlFlowGrp
20410c00:    7ff00693              li    a3,2047                                Call-Tgt, allGrp
20410c04:    fcd98ee3              beq    s3,a3,20410be0 <__subdf3+0x108>       allGrp, controlFlowGrp
20410c08:    008006b7              lui    a3,0x800                              Call-Tgt, allGrp
20410c0c:    00d76733              or    a4,a4,a3                               allGrp
20410c10:    00088693              mv    a3,a7                                  allGrp
20410c14:    03800613              li    a2,56                                  Call-Tgt, allGrp
20410c18:    06d64c63              blt    a2,a3,20410c90 <__subdf3+0x1b8>       allGrp, controlFlowGrp
20410c1c:    01f00613              li    a2,31                                  Call-Tgt, allGrp
20410c20:    04d64063              blt    a2,a3,20410c60 <__subdf3+0x188>       allGrp, controlFlowGrp
20410c24:    02000593              li    a1,32                                  Call-Tgt, allGrp
20410c28:    40d585b3              sub    a1,a1,a3                              allGrp
20410c2c:    00d858b3              srl    a7,a6,a3                              allGrp
20410c30:    00b71633              sll    a2,a4,a1                              allGrp
20410c34:    00b81833              sll    a6,a6,a1                              allGrp
20410c38:    01166633              or    a2,a2,a7                               allGrp
20410c3c:    01003833              snez    a6,a6                                allGrp
20410c40:    01066833              or    a6,a2,a6                               allGrp
20410c44:    00d756b3              srl    a3,a4,a3                              allGrp
20410c48:    00a80833              add    a6,a6,a0                              Call-Tgt, allGrp
20410c4c:    00f686b3              add    a3,a3,a5                              allGrp
20410c50:    00a837b3              sltu    a5,a6,a0                             allGrp
20410c54:    00f68733              add    a4,a3,a5                              allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
20410c58:    00098593              mv    a1,s3                                  allGrp
20410c5c:    f3dff06f              j    20410b98 <__subdf3+0xc0>                allGrp, controlFlowGrp
  FP_SUB_D (R, A, B);
20410c60:    02000893              li    a7,32                                  Call-Tgt, allGrp
20410c64:    00d75633              srl    a2,a4,a3                              allGrp
20410c68:    00000593              li    a1,0                                   allGrp
20410c6c:    01168863              beq    a3,a7,20410c7c <__subdf3+0x1a4>       allGrp, controlFlowGrp
20410c70:    04000593              li    a1,64                                  Call-Tgt, allGrp
20410c74:    40d586b3              sub    a3,a1,a3                              allGrp
20410c78:    00d715b3              sll    a1,a4,a3                              allGrp
20410c7c:    0105e833              or    a6,a1,a6                               Call-Tgt, allGrp
20410c80:    01003833              snez    a6,a6                                allGrp
20410c84:    01066833              or    a6,a2,a6                               allGrp
20410c88:    00000693              li    a3,0                                   Call-Tgt, allGrp
20410c8c:    fbdff06f              j    20410c48 <__subdf3+0x170>               allGrp, controlFlowGrp
20410c90:    01076833              or    a6,a4,a6                               Call-Tgt, allGrp
20410c94:    01003833              snez    a6,a6                                allGrp
20410c98:    ff1ff06f              j    20410c88 <__subdf3+0x1b0>               allGrp, controlFlowGrp
20410c9c:    10088463              beqz    a7,20410da4 <__subdf3+0x2cc>         Call-Tgt, allGrp, controlFlowGrp
20410ca0:    06099463              bnez    s3,20410d08 <__subdf3+0x230>         Call-Tgt, allGrp, controlFlowGrp
20410ca4:    00a7e6b3              or    a3,a5,a0                               Call-Tgt, allGrp
20410ca8:    00069c63              bnez    a3,20410cc0 <__subdf3+0x1e8>         allGrp, controlFlowGrp
20410cac:    7ff00793              li    a5,2047                                Call-Tgt, allGrp
20410cb0:    02f58e63              beq    a1,a5,20410cec <__subdf3+0x214>       Call-Tgt, allGrp, controlFlowGrp
  FP_PACK_SEMIRAW_D (r, R);
20410cb4:    04059463              bnez    a1,20410cfc <__subdf3+0x224>         Call-Tgt, allGrp, controlFlowGrp
  FP_SUB_D (R, A, B);
20410cb8:    00080513              mv    a0,a6                                  Call-Tgt, allGrp
20410cbc:    5a80006f              j    20411264 <__subdf3+0x78c>               allGrp, controlFlowGrp
20410cc0:    fff00693              li    a3,-1                                  Call-Tgt, allGrp
20410cc4:    00d89e63              bne    a7,a3,20410ce0 <__subdf3+0x208>       allGrp, controlFlowGrp
20410cc8:    010506b3              add    a3,a0,a6                              Call-Tgt, allGrp
20410ccc:    00e787b3              add    a5,a5,a4                              allGrp
20410cd0:    0106b733              sltu    a4,a3,a6                             allGrp
20410cd4:    00e78733              add    a4,a5,a4                              allGrp
20410cd8:    00068813              mv    a6,a3                                  allGrp
20410cdc:    ebdff06f              j    20410b98 <__subdf3+0xc0>                allGrp, controlFlowGrp
20410ce0:    7ff00693              li    a3,2047                                Call-Tgt, allGrp
20410ce4:    fff8c893              not    a7,a7                                 allGrp
20410ce8:    02d59a63              bne    a1,a3,20410d1c <__subdf3+0x244>       allGrp, controlFlowGrp
20410cec:    01076533              or    a0,a4,a6                               Call-Tgt, allGrp
20410cf0:    000502e3              beqz    a0,204114f4 <__subdf3+0xa1c>         allGrp, controlFlowGrp
20410cf4:    00971793              slli    a5,a4,0x9                            Call-Tgt, allGrp
20410cf8:    7c07d663              bgez    a5,204114c4 <__subdf3+0x9ec>         allGrp, controlFlowGrp
20410cfc:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
20410d00:    00080513              mv    a0,a6                                  allGrp
20410d04:    ecdff06f              j    20410bd0 <__subdf3+0xf8>                allGrp, controlFlowGrp
20410d08:    7ff00693              li    a3,2047                                Call-Tgt, allGrp
20410d0c:    fed580e3              beq    a1,a3,20410cec <__subdf3+0x214>       allGrp, controlFlowGrp
20410d10:    008006b7              lui    a3,0x800                              Call-Tgt, allGrp
20410d14:    411008b3              neg    a7,a7                                 allGrp
20410d18:    00d7e7b3              or    a5,a5,a3                               allGrp
20410d1c:    03800693              li    a3,56                                  Call-Tgt, allGrp
20410d20:    0716cc63              blt    a3,a7,20410d98 <__subdf3+0x2c0>       allGrp, controlFlowGrp
20410d24:    01f00693              li    a3,31                                  Call-Tgt, allGrp
20410d28:    0516c063              blt    a3,a7,20410d68 <__subdf3+0x290>       allGrp, controlFlowGrp
20410d2c:    02000613              li    a2,32                                  Call-Tgt, allGrp
20410d30:    41160633              sub    a2,a2,a7                              allGrp
20410d34:    01155333              srl    t1,a0,a7                              allGrp
20410d38:    00c796b3              sll    a3,a5,a2                              allGrp
20410d3c:    00c51533              sll    a0,a0,a2                              allGrp
20410d40:    0066e6b3              or    a3,a3,t1                               allGrp
20410d44:    00a03533              snez    a0,a0                                allGrp
20410d48:    00a6e533              or    a0,a3,a0                               allGrp
20410d4c:    0117d8b3              srl    a7,a5,a7                              allGrp
20410d50:    01050533              add    a0,a0,a6                              Call-Tgt, allGrp
20410d54:    00e887b3              add    a5,a7,a4                              allGrp
20410d58:    01053733              sltu    a4,a0,a6                             allGrp
20410d5c:    00e78733              add    a4,a5,a4                              allGrp
20410d60:    00050813              mv    a6,a0                                  allGrp
20410d64:    e35ff06f              j    20410b98 <__subdf3+0xc0>                allGrp, controlFlowGrp
20410d68:    02000313              li    t1,32                                  Call-Tgt, allGrp
20410d6c:    0117d6b3              srl    a3,a5,a7                              allGrp
20410d70:    00000613              li    a2,0                                   allGrp
20410d74:    00688863              beq    a7,t1,20410d84 <__subdf3+0x2ac>       allGrp, controlFlowGrp
20410d78:    04000613              li    a2,64                                  Call-Tgt, allGrp
20410d7c:    411608b3              sub    a7,a2,a7                              allGrp
20410d80:    01179633              sll    a2,a5,a7                              allGrp
20410d84:    00a66533              or    a0,a2,a0                               Call-Tgt, allGrp
20410d88:    00a03533              snez    a0,a0                                allGrp
20410d8c:    00a6e533              or    a0,a3,a0                               allGrp
20410d90:    00000893              li    a7,0                                   Call-Tgt, allGrp
20410d94:    fbdff06f              j    20410d50 <__subdf3+0x278>               allGrp, controlFlowGrp
20410d98:    00a7e533              or    a0,a5,a0                               Call-Tgt, allGrp
20410d9c:    00a03533              snez    a0,a0                                allGrp
20410da0:    ff1ff06f              j    20410d90 <__subdf3+0x2b8>               allGrp, controlFlowGrp
20410da4:    00198693              addi    a3,s3,1                              Call-Tgt, allGrp
20410da8:    7ff6f313              andi    t1,a3,2047                           allGrp
20410dac:    00100613              li    a2,1                                   allGrp
20410db0:    1a664263              blt    a2,t1,20410f54 <__subdf3+0x47c>       allGrp, controlFlowGrp
20410db4:    00a7e6b3              or    a3,a5,a0                               Call-Tgt, allGrp
20410db8:    04099e63              bnez    s3,20410e14 <__subdf3+0x33c>         allGrp, controlFlowGrp
20410dbc:    ee068ee3              beqz    a3,20410cb8 <__subdf3+0x1e0>         Call-Tgt, allGrp, controlFlowGrp
20410dc0:    010766b3              or    a3,a4,a6                               Call-Tgt, allGrp
20410dc4:    6c068463              beqz    a3,2041148c <__subdf3+0x9b4>         allGrp, controlFlowGrp
20410dc8:    01050833              add    a6,a0,a6                              Call-Tgt, allGrp
20410dcc:    00e787b3              add    a5,a5,a4                              allGrp
20410dd0:    00a83533              sltu    a0,a6,a0                             allGrp
20410dd4:    00a78733              add    a4,a5,a0                              allGrp
20410dd8:    00871793              slli    a5,a4,0x8                            allGrp
20410ddc:    ec07dee3              bgez    a5,20410cb8 <__subdf3+0x1e0>         allGrp, controlFlowGrp
20410de0:    ff8007b7              lui    a5,0xff800                            Call-Tgt, allGrp
20410de4:    fff78793              addi    a5,a5,-1 # ff7fffff <_sp+0x7f7fbfff> allGrp
20410de8:    00f777b3              and    a5,a4,a5                              allGrp
20410dec:    00080513              mv    a0,a6                                  allGrp
20410df0:    00000313              li    t1,0                                   allGrp
20410df4:    00100593              li    a1,1                                   allGrp
  FP_PACK_SEMIRAW_D (r, R);
20410df8:    00757713              andi    a4,a0,7                              Call-Tgt, allGrp
20410dfc:    1a071663              bnez    a4,20410fa8 <__subdf3+0x4d0>         allGrp, controlFlowGrp
20410e00:    06088263              beqz    a7,20410e64 <__subdf3+0x38c>         Call-Tgt, allGrp, controlFlowGrp
20410e04:    00137713              andi    a4,t1,1                              Call-Tgt, allGrp
20410e08:    04070e63              beqz    a4,20410e64 <__subdf3+0x38c>         allGrp, controlFlowGrp
20410e0c:    00236313              ori    t1,t1,2                               Call-Tgt, allGrp
20410e10:    0540006f              j    20410e64 <__subdf3+0x38c>               allGrp, controlFlowGrp
  FP_SUB_D (R, A, B);
20410e14:    7ff00613              li    a2,2047                                Call-Tgt, allGrp
20410e18:    12c99663              bne    s3,a2,20410f44 <__subdf3+0x46c>       allGrp, controlFlowGrp
20410e1c:    76068c63              beqz    a3,20411594 <__subdf3+0xabc>         Call-Tgt, allGrp, controlFlowGrp
20410e20:    00400337              lui    t1,0x400                              Call-Tgt, allGrp
20410e24:    0067f333              and    t1,a5,t1                              allGrp
  FP_DECL_EX;
20410e28:    00133313              seqz    t1,t1                                allGrp
20410e2c:    00431313              slli    t1,t1,0x4                            allGrp
  FP_SUB_D (R, A, B);
20410e30:    01359e63              bne    a1,s3,20410e4c <__subdf3+0x374>       allGrp, controlFlowGrp
20410e34:    01076633              or    a2,a4,a6                               Call-Tgt, allGrp
20410e38:    00060863              beqz    a2,20410e48 <__subdf3+0x370>         allGrp, controlFlowGrp
20410e3c:    00971613              slli    a2,a4,0x9                            Call-Tgt, allGrp
20410e40:    00064463              bltz    a2,20410e48 <__subdf3+0x370>         allGrp, controlFlowGrp
20410e44:    01000313              li    t1,16                                  Call-Tgt, allGrp
20410e48:    68068663              beqz    a3,204114d4 <__subdf3+0x9fc>         Call-Tgt, allGrp, controlFlowGrp
20410e4c:    01076733              or    a4,a4,a6                               Call-Tgt, allGrp
20410e50:    50070663              beqz    a4,2041135c <__subdf3+0x884>         allGrp, controlFlowGrp
20410e54:    004007b7              lui    a5,0x400                              Call-Tgt, allGrp
20410e58:    00000513              li    a0,0                                   allGrp
20410e5c:    7ff00593              li    a1,2047                                allGrp
20410e60:    00000493              li    s1,0                                   allGrp
  FP_PACK_SEMIRAW_D (r, R);
20410e64:    00879713              slli    a4,a5,0x8                            Call-Tgt, allGrp
20410e68:    00075e63              bgez    a4,20410e84 <__subdf3+0x3ac>         allGrp, controlFlowGrp
20410e6c:    00158593              addi    a1,a1,1                              Call-Tgt, allGrp
20410e70:    7ff00713              li    a4,2047                                allGrp
20410e74:    6ce58e63              beq    a1,a4,20411550 <__subdf3+0xa78>       allGrp, controlFlowGrp
20410e78:    ff800737              lui    a4,0xff800                            Call-Tgt, allGrp
20410e7c:    fff70713              addi    a4,a4,-1 # ff7fffff <_sp+0x7f7fbfff> allGrp
20410e80:    00e7f7b3              and    a5,a5,a4                              allGrp
20410e84:    01d79713              slli    a4,a5,0x1d                           Call-Tgt, allGrp
20410e88:    00355513              srli    a0,a0,0x3                            allGrp
20410e8c:    00a76533              or    a0,a4,a0                               allGrp
20410e90:    7ff00713              li    a4,2047                                allGrp
20410e94:    0037d793              srli    a5,a5,0x3                            allGrp
20410e98:    00e59e63              bne    a1,a4,20410eb4 <__subdf3+0x3dc>       allGrp, controlFlowGrp
20410e9c:    00f56533              or    a0,a0,a5                               Call-Tgt, allGrp
20410ea0:    00000793              li    a5,0                                   allGrp
20410ea4:    00050863              beqz    a0,20410eb4 <__subdf3+0x3dc>         allGrp, controlFlowGrp
20410ea8:    000807b7              lui    a5,0x80                               Call-Tgt, allGrp
20410eac:    00000513              li    a0,0                                   allGrp
20410eb0:    00000493              li    s1,0                                   allGrp
20410eb4:    00100737              lui    a4,0x100                              Call-Tgt, allGrp
20410eb8:    fff70713              addi    a4,a4,-1 # fffff <__stack_size+0xff7ff>allGrp
20410ebc:    00e7f7b3              and    a5,a5,a4                              allGrp
20410ec0:    80100737              lui    a4,0x80100                            allGrp
20410ec4:    fff70713              addi    a4,a4,-1 # 800fffff <_sp+0xfbfff>    allGrp
20410ec8:    7ff5f593              andi    a1,a1,2047                           allGrp
20410ecc:    00e7f7b3              and    a5,a5,a4                              allGrp
20410ed0:    01459593              slli    a1,a1,0x14                           allGrp
20410ed4:    80000737              lui    a4,0x80000                            allGrp
20410ed8:    00b7e7b3              or    a5,a5,a1                               allGrp
20410edc:    fff74713              not    a4,a4                                 allGrp
20410ee0:    01f49493              slli    s1,s1,0x1f                           allGrp
20410ee4:    00e7f7b3              and    a5,a5,a4                              allGrp
20410ee8:    0097e6b3              or    a3,a5,s1                               allGrp
20410eec:    00a12423              sw    a0,8(sp)                               allGrp
20410ef0:    00d12623              sw    a3,12(sp)                              allGrp
20410ef4:    00813787              fld    fa5,8(sp)                             allGrp
  FP_HANDLE_EXCEPTIONS;
20410ef8:    00030463              beqz    t1,20410f00 <__subdf3+0x428>         allGrp, controlFlowGrp
20410efc:    00132073              csrs    fflags,t1                            allGrp

  return r;
}
20410f00:    02c12083              lw    ra,44(sp)                              Call-Tgt, allGrp
20410f04:    02812403              lw    s0,40(sp)                              allGrp
20410f08:    02412483              lw    s1,36(sp)                              allGrp
20410f0c:    02012903              lw    s2,32(sp)                              allGrp
20410f10:    01c12983              lw    s3,28(sp)                              allGrp
20410f14:    01812a03              lw    s4,24(sp)                              allGrp
20410f18:    00f13427              fsd    fa5,8(sp)                             allGrp
20410f1c:    02112623              sw    ra,44(sp)                              allGrp
20410f20:    02812423              sw    s0,40(sp)                              allGrp
20410f24:    02912223              sw    s1,36(sp)                              allGrp
20410f28:    03212023              sw    s2,32(sp)                              allGrp
20410f2c:    01312e23              sw    s3,28(sp)                              allGrp
20410f30:    01412c23              sw    s4,24(sp)                              allGrp
20410f34:    00812503              lw    a0,8(sp)                               allGrp
20410f38:    00c12583              lw    a1,12(sp)                              allGrp
20410f3c:    03010113              addi    sp,sp,48                             allGrp
20410f40:    00008067              ret                                          allGrp, controlFlowGrp
20410f44:    00000313              li    t1,0                                   Call-Tgt, allGrp
  FP_SUB_D (R, A, B);
20410f48:    f0c590e3              bne    a1,a2,20410e48 <__subdf3+0x370>       allGrp, controlFlowGrp
20410f4c:    00000313              li    t1,0                                   Call-Tgt, allGrp
20410f50:    ee5ff06f              j    20410e34 <__subdf3+0x35c>               allGrp, controlFlowGrp
20410f54:    7ff00613              li    a2,2047                                Call-Tgt, allGrp
20410f58:    02c68863              beq    a3,a2,20410f88 <__subdf3+0x4b0>       allGrp, controlFlowGrp
20410f5c:    01050833              add    a6,a0,a6                              Call-Tgt, allGrp
20410f60:    00a83533              sltu    a0,a6,a0                             allGrp
20410f64:    00e787b3              add    a5,a5,a4                              allGrp
20410f68:    00a787b3              add    a5,a5,a0                              allGrp
20410f6c:    01f79513              slli    a0,a5,0x1f                           allGrp
20410f70:    00185813              srli    a6,a6,0x1                            allGrp
20410f74:    01056533              or    a0,a0,a6                               allGrp
20410f78:    0017d793              srli    a5,a5,0x1                            allGrp
20410f7c:    00068593              mv    a1,a3                                  allGrp
20410f80:    00000313              li    t1,0                                   Call-Tgt, allGrp
20410f84:    e75ff06f              j    20410df8 <__subdf3+0x320>               allGrp, controlFlowGrp
20410f88:    06090263              beqz    s2,20410fec <__subdf3+0x514>         Call-Tgt, allGrp, controlFlowGrp
20410f8c:    00300793              li    a5,3                                   Call-Tgt, allGrp
20410f90:    04f91863              bne    s2,a5,20410fe0 <__subdf3+0x508>       allGrp, controlFlowGrp
20410f94:    04048c63              beqz    s1,20410fec <__subdf3+0x514>         Call-Tgt, allGrp, controlFlowGrp
20410f98:    fff00793              li    a5,-1                                  Call-Tgt, allGrp
20410f9c:    fff00513              li    a0,-1                                  allGrp
20410fa0:    7fe00593              li    a1,2046                                allGrp
20410fa4:    00500313              li    t1,5                                   Call-Tgt, allGrp
  FP_PACK_SEMIRAW_D (r, R);
20410fa8:    00200713              li    a4,2                                   Call-Tgt, allGrp
20410fac:    00136313              ori    t1,t1,1                               allGrp
20410fb0:    58e90c63              beq    s2,a4,20411548 <__subdf3+0xa70>       allGrp, controlFlowGrp
20410fb4:    00300713              li    a4,3                                   Call-Tgt, allGrp
20410fb8:    58e90263              beq    s2,a4,2041153c <__subdf3+0xa64>       allGrp, controlFlowGrp
20410fbc:    e40912e3              bnez    s2,20410e00 <__subdf3+0x328>         Call-Tgt, allGrp, controlFlowGrp
20410fc0:    00f57713              andi    a4,a0,15                             Call-Tgt, allGrp
20410fc4:    00400693              li    a3,4                                   allGrp
20410fc8:    e2d70ce3              beq    a4,a3,20410e00 <__subdf3+0x328>       allGrp, controlFlowGrp
20410fcc:    00450713              addi    a4,a0,4                              Call-Tgt, allGrp
20410fd0:    00a73533              sltu    a0,a4,a0                             Call-Tgt, allGrp
20410fd4:    00a787b3              add    a5,a5,a0                              allGrp
20410fd8:    00070513              mv    a0,a4                                  allGrp
20410fdc:    e25ff06f              j    20410e00 <__subdf3+0x328>               allGrp, controlFlowGrp
  FP_SUB_D (R, A, B);
20410fe0:    00200793              li    a5,2                                   Call-Tgt, allGrp
20410fe4:    faf91ae3              bne    s2,a5,20410f98 <__subdf3+0x4c0>       allGrp, controlFlowGrp
20410fe8:    fa0488e3              beqz    s1,20410f98 <__subdf3+0x4c0>         Call-Tgt, allGrp, controlFlowGrp
20410fec:    7ff00593              li    a1,2047                                Call-Tgt, allGrp
20410ff0:    0340006f              j    20411024 <__subdf3+0x54c>               allGrp, controlFlowGrp
20410ff4:    02090863              beqz    s2,20411024 <__subdf3+0x54c>         Call-Tgt, allGrp, controlFlowGrp
20410ff8:    00300793              li    a5,3                                   Call-Tgt, allGrp
20410ffc:    00f91e63              bne    s2,a5,20411018 <__subdf3+0x540>       allGrp, controlFlowGrp
20411000:    02048263              beqz    s1,20411024 <__subdf3+0x54c>         Call-Tgt, allGrp, controlFlowGrp
20411004:    fff00793              li    a5,-1                                  Call-Tgt, allGrp
20411008:    fff00513              li    a0,-1                                  allGrp
2041100c:    7fe00593              li    a1,2046                                allGrp
20411010:    00000893              li    a7,0                                   allGrp
20411014:    f91ff06f              j    20410fa4 <__subdf3+0x4cc>               allGrp, controlFlowGrp
20411018:    00200793              li    a5,2                                   Call-Tgt, allGrp
2041101c:    fef914e3              bne    s2,a5,20411004 <__subdf3+0x52c>       allGrp, controlFlowGrp
20411020:    fe0482e3              beqz    s1,20411004 <__subdf3+0x52c>         Call-Tgt, allGrp, controlFlowGrp
20411024:    00000793              li    a5,0                                   Call-Tgt, allGrp
20411028:    00000513              li    a0,0                                   allGrp
2041102c:    00500313              li    t1,5                                   allGrp
20411030:    e35ff06f              j    20410e64 <__subdf3+0x38c>               allGrp, controlFlowGrp
20411034:    0f105a63              blez    a7,20411128 <__subdf3+0x650>         Call-Tgt, allGrp, controlFlowGrp
20411038:    08059e63              bnez    a1,204110d4 <__subdf3+0x5fc>         Call-Tgt, allGrp, controlFlowGrp
2041103c:    010766b3              or    a3,a4,a6                               Call-Tgt, allGrp
20411040:    b20686e3              beqz    a3,20410b6c <__subdf3+0x94>          allGrp, controlFlowGrp
20411044:    fff88693              addi    a3,a7,-1                             Call-Tgt, allGrp
20411048:    02069c63              bnez    a3,20411080 <__subdf3+0x5a8>         allGrp, controlFlowGrp
2041104c:    41050833              sub    a6,a0,a6                              Call-Tgt, allGrp
20411050:    40e787b3              sub    a5,a5,a4                              allGrp
20411054:    01053533              sltu    a0,a0,a6                             allGrp
20411058:    40a78733              sub    a4,a5,a0                              allGrp
2041105c:    00100593              li    a1,1                                   allGrp
20411060:    00871793              slli    a5,a4,0x8                            Call-Tgt, allGrp
20411064:    c407d8e3              bgez    a5,20410cb4 <__subdf3+0x1dc>         allGrp, controlFlowGrp
20411068:    00800437              lui    s0,0x800                              Call-Tgt, allGrp
2041106c:    fff40413              addi    s0,s0,-1 # 7fffff <__stack_size+0x7ff7ff>allGrp
20411070:    00877433              and    s0,a4,s0                              allGrp
20411074:    00080a13              mv    s4,a6                                  allGrp
20411078:    00058993              mv    s3,a1                                  allGrp
2041107c:    32c0006f              j    204113a8 <__subdf3+0x8d0>               allGrp, controlFlowGrp
20411080:    7ff00613              li    a2,2047                                Call-Tgt, allGrp
20411084:    b4c88ee3              beq    a7,a2,20410be0 <__subdf3+0x108>       allGrp, controlFlowGrp
20411088:    03800613              li    a2,56                                  Call-Tgt, allGrp
2041108c:    08d64863              blt    a2,a3,2041111c <__subdf3+0x644>       allGrp, controlFlowGrp
20411090:    01f00613              li    a2,31                                  Call-Tgt, allGrp
20411094:    04d64c63              blt    a2,a3,204110ec <__subdf3+0x614>       allGrp, controlFlowGrp
20411098:    02000593              li    a1,32                                  Call-Tgt, allGrp
2041109c:    40d585b3              sub    a1,a1,a3                              allGrp
204110a0:    00d858b3              srl    a7,a6,a3                              allGrp
204110a4:    00b71633              sll    a2,a4,a1                              allGrp
204110a8:    00b81833              sll    a6,a6,a1                              allGrp
204110ac:    01166633              or    a2,a2,a7                               allGrp
204110b0:    01003833              snez    a6,a6                                allGrp
204110b4:    01066833              or    a6,a2,a6                               allGrp
204110b8:    00d756b3              srl    a3,a4,a3                              allGrp
204110bc:    41050833              sub    a6,a0,a6                              Call-Tgt, allGrp
204110c0:    40d786b3              sub    a3,a5,a3                              allGrp
204110c4:    010537b3              sltu    a5,a0,a6                             allGrp
204110c8:    40f68733              sub    a4,a3,a5                              allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
204110cc:    00098593              mv    a1,s3                                  allGrp
204110d0:    f91ff06f              j    20411060 <__subdf3+0x588>               allGrp, controlFlowGrp
  FP_SUB_D (R, A, B);
204110d4:    7ff00693              li    a3,2047                                Call-Tgt, allGrp
204110d8:    b0d984e3              beq    s3,a3,20410be0 <__subdf3+0x108>       allGrp, controlFlowGrp
204110dc:    008006b7              lui    a3,0x800                              Call-Tgt, allGrp
204110e0:    00d76733              or    a4,a4,a3                               allGrp
204110e4:    00088693              mv    a3,a7                                  allGrp
204110e8:    fa1ff06f              j    20411088 <__subdf3+0x5b0>               allGrp, controlFlowGrp
204110ec:    02000893              li    a7,32                                  Call-Tgt, allGrp
204110f0:    00d75633              srl    a2,a4,a3                              allGrp
204110f4:    00000593              li    a1,0                                   allGrp
204110f8:    01168863              beq    a3,a7,20411108 <__subdf3+0x630>       allGrp, controlFlowGrp
204110fc:    04000593              li    a1,64                                  Call-Tgt, allGrp
20411100:    40d586b3              sub    a3,a1,a3                              allGrp
20411104:    00d715b3              sll    a1,a4,a3                              allGrp
20411108:    0105e833              or    a6,a1,a6                               Call-Tgt, allGrp
2041110c:    01003833              snez    a6,a6                                allGrp
20411110:    01066833              or    a6,a2,a6                               allGrp
20411114:    00000693              li    a3,0                                   Call-Tgt, allGrp
20411118:    fa5ff06f              j    204110bc <__subdf3+0x5e4>               allGrp, controlFlowGrp
2041111c:    01076833              or    a6,a4,a6                               Call-Tgt, allGrp
20411120:    01003833              snez    a6,a6                                allGrp
20411124:    ff1ff06f              j    20411114 <__subdf3+0x63c>               allGrp, controlFlowGrp
20411128:    10088463              beqz    a7,20411230 <__subdf3+0x758>         Call-Tgt, allGrp, controlFlowGrp
2041112c:    06099463              bnez    s3,20411194 <__subdf3+0x6bc>         Call-Tgt, allGrp, controlFlowGrp
20411130:    00a7e633              or    a2,a5,a0                               Call-Tgt, allGrp
20411134:    00061863              bnez    a2,20411144 <__subdf3+0x66c>         allGrp, controlFlowGrp
20411138:    7ff00793              li    a5,2047                                Call-Tgt, allGrp
2041113c:    00068493              mv    s1,a3                                  allGrp
20411140:    b71ff06f              j    20410cb0 <__subdf3+0x1d8>               allGrp, controlFlowGrp
20411144:    fff00613              li    a2,-1                                  Call-Tgt, allGrp
20411148:    02c89063              bne    a7,a2,20411168 <__subdf3+0x690>       allGrp, controlFlowGrp
2041114c:    40a808b3              sub    a7,a6,a0                              Call-Tgt, allGrp
20411150:    40f707b3              sub    a5,a4,a5                              allGrp
20411154:    01183733              sltu    a4,a6,a7                             allGrp
20411158:    40e78733              sub    a4,a5,a4                              allGrp
2041115c:    00088813              mv    a6,a7                                  allGrp
20411160:    00068493              mv    s1,a3                                  Call-Tgt, allGrp
20411164:    efdff06f              j    20411060 <__subdf3+0x588>               allGrp, controlFlowGrp
20411168:    7ff00613              li    a2,2047                                Call-Tgt, allGrp
2041116c:    fff8c893              not    a7,a7                                 allGrp
20411170:    02c59c63              bne    a1,a2,204111a8 <__subdf3+0x6d0>       allGrp, controlFlowGrp
20411174:    01076533              or    a0,a4,a6                               Call-Tgt, allGrp
20411178:    38050263              beqz    a0,204114fc <__subdf3+0xa24>         allGrp, controlFlowGrp
2041117c:    00971793              slli    a5,a4,0x9                            Call-Tgt, allGrp
20411180:    3807d463              bgez    a5,20411508 <__subdf3+0xa30>         allGrp, controlFlowGrp
20411184:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
20411188:    00080513              mv    a0,a6                                  allGrp
  FP_SUB_D (R, A, B);
2041118c:    00068493              mv    s1,a3                                  allGrp
20411190:    a41ff06f              j    20410bd0 <__subdf3+0xf8>                allGrp, controlFlowGrp
20411194:    7ff00613              li    a2,2047                                Call-Tgt, allGrp
20411198:    fcc58ee3              beq    a1,a2,20411174 <__subdf3+0x69c>       allGrp, controlFlowGrp
2041119c:    00800637              lui    a2,0x800                              Call-Tgt, allGrp
204111a0:    411008b3              neg    a7,a7                                 allGrp
204111a4:    00c7e7b3              or    a5,a5,a2                               allGrp
204111a8:    03800613              li    a2,56                                  Call-Tgt, allGrp
204111ac:    07164c63              blt    a2,a7,20411224 <__subdf3+0x74c>       allGrp, controlFlowGrp
204111b0:    01f00613              li    a2,31                                  Call-Tgt, allGrp
204111b4:    05164063              blt    a2,a7,204111f4 <__subdf3+0x71c>       allGrp, controlFlowGrp
204111b8:    02000313              li    t1,32                                  Call-Tgt, allGrp
204111bc:    41130333              sub    t1,t1,a7                              allGrp
204111c0:    01155e33              srl    t3,a0,a7                              allGrp
204111c4:    00679633              sll    a2,a5,t1                              allGrp
204111c8:    00651533              sll    a0,a0,t1                              allGrp
204111cc:    01c66633              or    a2,a2,t3                               allGrp
204111d0:    00a03533              snez    a0,a0                                allGrp
204111d4:    00a66533              or    a0,a2,a0                               allGrp
204111d8:    0117d8b3              srl    a7,a5,a7                              allGrp
204111dc:    40a80533              sub    a0,a6,a0                              Call-Tgt, allGrp
204111e0:    411707b3              sub    a5,a4,a7                              allGrp
204111e4:    00a83733              sltu    a4,a6,a0                             allGrp
204111e8:    40e78733              sub    a4,a5,a4                              allGrp
204111ec:    00050813              mv    a6,a0                                  allGrp
204111f0:    f71ff06f              j    20411160 <__subdf3+0x688>               allGrp, controlFlowGrp
204111f4:    02000e13              li    t3,32                                  Call-Tgt, allGrp
204111f8:    0117d633              srl    a2,a5,a7                              allGrp
204111fc:    00000313              li    t1,0                                   allGrp
20411200:    01c88863              beq    a7,t3,20411210 <__subdf3+0x738>       allGrp, controlFlowGrp
20411204:    04000313              li    t1,64                                  Call-Tgt, allGrp
20411208:    411308b3              sub    a7,t1,a7                              allGrp
2041120c:    01179333              sll    t1,a5,a7                              allGrp
20411210:    00a36533              or    a0,t1,a0                               Call-Tgt, allGrp
20411214:    00a03533              snez    a0,a0                                allGrp
20411218:    00a66533              or    a0,a2,a0                               allGrp
2041121c:    00000893              li    a7,0                                   Call-Tgt, allGrp
20411220:    fbdff06f              j    204111dc <__subdf3+0x704>               allGrp, controlFlowGrp
20411224:    00a7e533              or    a0,a5,a0                               Call-Tgt, allGrp
20411228:    00a03533              snez    a0,a0                                allGrp
2041122c:    ff1ff06f              j    2041121c <__subdf3+0x744>               allGrp, controlFlowGrp
20411230:    00198613              addi    a2,s3,1                              Call-Tgt, allGrp
20411234:    7ff67613              andi    a2,a2,2047                           allGrp
20411238:    00100313              li    t1,1                                   allGrp
2041123c:    14c34063              blt    t1,a2,2041137c <__subdf3+0x8a4>       allGrp, controlFlowGrp
20411240:    00a7ee33              or    t3,a5,a0                               Call-Tgt, allGrp
20411244:    01076633              or    a2,a4,a6                               allGrp
20411248:    0c099863              bnez    s3,20411318 <__subdf3+0x840>         allGrp, controlFlowGrp
2041124c:    080e1063              bnez    t3,204112cc <__subdf3+0x7f4>         Call-Tgt, allGrp, controlFlowGrp
20411250:    22061a63              bnez    a2,20411484 <__subdf3+0x9ac>         Call-Tgt, allGrp, controlFlowGrp
20411254:    ffe90493              addi    s1,s2,-2                             Call-Tgt, allGrp
20411258:    0014b493              seqz    s1,s1                                allGrp
2041125c:    00000713              li    a4,0                                   allGrp
20411260:    00000513              li    a0,0                                   allGrp
  FP_PACK_SEMIRAW_D (r, R);
20411264:    00e567b3              or    a5,a0,a4                               Call-Tgt, allGrp
20411268:    2c078463              beqz    a5,20411530 <__subdf3+0xa58>         allGrp, controlFlowGrp
2041126c:    01f55793              srli    a5,a0,0x1f                           Call-Tgt, allGrp
20411270:    00171893              slli    a7,a4,0x1                            allGrp
20411274:    00f888b3              add    a7,a7,a5                              allGrp
20411278:    00151793              slli    a5,a0,0x1                            allGrp
2041127c:    0077f693              andi    a3,a5,7                              allGrp
20411280:    00000313              li    t1,0                                   allGrp
20411284:    02068863              beqz    a3,204112b4 <__subdf3+0x7dc>         allGrp, controlFlowGrp
20411288:    00200693              li    a3,2                                   Call-Tgt, allGrp
2041128c:    22d90663              beq    s2,a3,204114b8 <__subdf3+0x9e0>       allGrp, controlFlowGrp
20411290:    00300693              li    a3,3                                   Call-Tgt, allGrp
20411294:    20d90663              beq    s2,a3,204114a0 <__subdf3+0x9c8>       allGrp, controlFlowGrp
20411298:    00100313              li    t1,1                                   Call-Tgt, allGrp
2041129c:    00091c63              bnez    s2,204112b4 <__subdf3+0x7dc>         allGrp, controlFlowGrp
204112a0:    00f7f693              andi    a3,a5,15                             Call-Tgt, allGrp
204112a4:    00400613              li    a2,4                                   allGrp
204112a8:    00100313              li    t1,1                                   allGrp
204112ac:    ffc7b793              sltiu    a5,a5,-4                            allGrp
204112b0:    1ec69e63              bne    a3,a2,204114ac <__subdf3+0x9d4>       allGrp, controlFlowGrp
204112b4:    0188d893              srli    a7,a7,0x18                           Call-Tgt, allGrp
204112b8:    0018c893              xori    a7,a7,1                              allGrp
204112bc:    0018f893              andi    a7,a7,1                              allGrp
204112c0:    00070793              mv    a5,a4                                  allGrp
204112c4:    00000593              li    a1,0                                   allGrp
204112c8:    b31ff06f              j    20410df8 <__subdf3+0x320>               allGrp, controlFlowGrp
  FP_SUB_D (R, A, B);
204112cc:    1c060063              beqz    a2,2041148c <__subdf3+0x9b4>         Call-Tgt, allGrp, controlFlowGrp
204112d0:    410505b3              sub    a1,a0,a6                              Call-Tgt, allGrp
204112d4:    00b538b3              sltu    a7,a0,a1                             allGrp
204112d8:    40e78633              sub    a2,a5,a4                              allGrp
204112dc:    41160633              sub    a2,a2,a7                              allGrp
204112e0:    00861893              slli    a7,a2,0x8                            allGrp
204112e4:    0008de63              bgez    a7,20411300 <__subdf3+0x828>         allGrp, controlFlowGrp
204112e8:    40a80533              sub    a0,a6,a0                              Call-Tgt, allGrp
204112ec:    40f707b3              sub    a5,a4,a5                              allGrp
204112f0:    00a83733              sltu    a4,a6,a0                             allGrp
204112f4:    40e78733              sub    a4,a5,a4                              allGrp
204112f8:    00068493              mv    s1,a3                                  Call-Tgt, allGrp
204112fc:    f69ff06f              j    20411264 <__subdf3+0x78c>               allGrp, controlFlowGrp
20411300:    00c5e533              or    a0,a1,a2                               Call-Tgt, allGrp
20411304:    18051863              bnez    a0,20411494 <__subdf3+0x9bc>         allGrp, controlFlowGrp
20411308:    ffe90493              addi    s1,s2,-2                             Call-Tgt, allGrp
2041130c:    0014b493              seqz    s1,s1                                allGrp
20411310:    00000713              li    a4,0                                   Call-Tgt, allGrp
20411314:    f51ff06f              j    20411264 <__subdf3+0x78c>               allGrp, controlFlowGrp
20411318:    7ff00e93              li    t4,2047                                Call-Tgt, allGrp
2041131c:    05d99463              bne    s3,t4,20411364 <__subdf3+0x88c>       allGrp, controlFlowGrp
20411320:    260e0463              beqz    t3,20411588 <__subdf3+0xab0>         Call-Tgt, allGrp, controlFlowGrp
20411324:    00400337              lui    t1,0x400                              Call-Tgt, allGrp
20411328:    0067f333              and    t1,a5,t1                              allGrp
  FP_DECL_EX;
2041132c:    00133313              seqz    t1,t1                                allGrp
20411330:    00431313              slli    t1,t1,0x4                            allGrp
  FP_SUB_D (R, A, B);
20411334:    05359063              bne    a1,s3,20411374 <__subdf3+0x89c>       allGrp, controlFlowGrp
20411338:    00060863              beqz    a2,20411348 <__subdf3+0x870>         Call-Tgt, allGrp, controlFlowGrp
2041133c:    00971593              slli    a1,a4,0x9                            Call-Tgt, allGrp
20411340:    0005c463              bltz    a1,20411348 <__subdf3+0x870>         allGrp, controlFlowGrp
20411344:    01000313              li    t1,16                                  Call-Tgt, allGrp
20411348:    020e1663              bnez    t3,20411374 <__subdf3+0x89c>         Call-Tgt, allGrp, controlFlowGrp
2041134c:    1c060663              beqz    a2,20411518 <__subdf3+0xa40>         Call-Tgt, allGrp, controlFlowGrp
  FP_UNPACK_SEMIRAW_D (B, b);
20411350:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
20411354:    00080513              mv    a0,a6                                  allGrp
  FP_SUB_D (R, A, B);
20411358:    00068493              mv    s1,a3                                  allGrp
2041135c:    7ff00593              li    a1,2047                                Call-Tgt, allGrp
20411360:    a99ff06f              j    20410df8 <__subdf3+0x320>               allGrp, controlFlowGrp
  FP_DECL_EX;
20411364:    00000313              li    t1,0                                   Call-Tgt, allGrp
  FP_SUB_D (R, A, B);
20411368:    ffd590e3              bne    a1,t4,20411348 <__subdf3+0x870>       allGrp, controlFlowGrp
  FP_DECL_EX;
2041136c:    00000313              li    t1,0                                   Call-Tgt, allGrp
20411370:    fc9ff06f              j    20411338 <__subdf3+0x860>               allGrp, controlFlowGrp
  FP_SUB_D (R, A, B);
20411374:    fe0604e3              beqz    a2,2041135c <__subdf3+0x884>         Call-Tgt, allGrp, controlFlowGrp
20411378:    addff06f              j    20410e54 <__subdf3+0x37c>               Call-Tgt, allGrp, controlFlowGrp
2041137c:    41050a33              sub    s4,a0,a6                              Call-Tgt, allGrp
20411380:    01453633              sltu    a2,a0,s4                             allGrp
20411384:    40e78433              sub    s0,a5,a4                              allGrp
20411388:    40c40433              sub    s0,s0,a2                              allGrp
2041138c:    00841613              slli    a2,s0,0x8                            allGrp
20411390:    08065263              bgez    a2,20411414 <__subdf3+0x93c>         allGrp, controlFlowGrp
20411394:    40a80a33              sub    s4,a6,a0                              Call-Tgt, allGrp
20411398:    40f707b3              sub    a5,a4,a5                              allGrp
2041139c:    01483733              sltu    a4,a6,s4                             allGrp
204113a0:    40e78433              sub    s0,a5,a4                              allGrp
204113a4:    00068493              mv    s1,a3                                  allGrp
204113a8:    06040c63              beqz    s0,20411420 <__subdf3+0x948>         Call-Tgt, allGrp, controlFlowGrp
204113ac:    00040513              mv    a0,s0                                  Call-Tgt, allGrp
204113b0:    781000ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
204113b4:    ff850593              addi    a1,a0,-8                             Call-Tgt, allGrp
204113b8:    01f00793              li    a5,31                                  allGrp
204113bc:    06b7ca63              blt    a5,a1,20411430 <__subdf3+0x958>       allGrp, controlFlowGrp
204113c0:    02000713              li    a4,32                                  Call-Tgt, allGrp
204113c4:    40b70733              sub    a4,a4,a1                              allGrp
204113c8:    00b41433              sll    s0,s0,a1                              allGrp
204113cc:    00ea5733              srl    a4,s4,a4                              allGrp
204113d0:    008767b3              or    a5,a4,s0                               allGrp
204113d4:    00ba1833              sll    a6,s4,a1                              allGrp
204113d8:    0935cc63              blt    a1,s3,20411470 <__subdf3+0x998>       Call-Tgt, allGrp, controlFlowGrp
204113dc:    413585b3              sub    a1,a1,s3                              Call-Tgt, allGrp
204113e0:    00158713              addi    a4,a1,1                              allGrp
204113e4:    01f00693              li    a3,31                                  allGrp
204113e8:    04e6cc63              blt    a3,a4,20411440 <__subdf3+0x968>       allGrp, controlFlowGrp
204113ec:    02000693              li    a3,32                                  Call-Tgt, allGrp
204113f0:    40e686b3              sub    a3,a3,a4                              allGrp
204113f4:    00e85633              srl    a2,a6,a4                              allGrp
204113f8:    00d79533              sll    a0,a5,a3                              allGrp
204113fc:    00d81833              sll    a6,a6,a3                              allGrp
20411400:    00c56533              or    a0,a0,a2                               allGrp
20411404:    01003833              snez    a6,a6                                allGrp
20411408:    01056533              or    a0,a0,a6                               allGrp
2041140c:    00e7d733              srl    a4,a5,a4                              allGrp
20411410:    e55ff06f              j    20411264 <__subdf3+0x78c>               allGrp, controlFlowGrp
20411414:    008a6533              or    a0,s4,s0                               Call-Tgt, allGrp
20411418:    f80518e3              bnez    a0,204113a8 <__subdf3+0x8d0>         allGrp, controlFlowGrp
2041141c:    eedff06f              j    20411308 <__subdf3+0x830>               Call-Tgt, allGrp, controlFlowGrp
20411420:    000a0513              mv    a0,s4                                  Call-Tgt, allGrp
20411424:    70d000ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
20411428:    02050513              addi    a0,a0,32                             Call-Tgt, allGrp
2041142c:    f89ff06f              j    204113b4 <__subdf3+0x8dc>               allGrp, controlFlowGrp
20411430:    fd850413              addi    s0,a0,-40                            Call-Tgt, allGrp
20411434:    008a17b3              sll    a5,s4,s0                              allGrp
20411438:    00000813              li    a6,0                                   allGrp
2041143c:    f9dff06f              j    204113d8 <__subdf3+0x900>               allGrp, controlFlowGrp
20411440:    fe158593              addi    a1,a1,-31                            Call-Tgt, allGrp
20411444:    02000693              li    a3,32                                  allGrp
20411448:    00b7d5b3              srl    a1,a5,a1                              allGrp
2041144c:    00000613              li    a2,0                                   allGrp
20411450:    00d70863              beq    a4,a3,20411460 <__subdf3+0x988>       allGrp, controlFlowGrp
20411454:    04000613              li    a2,64                                  Call-Tgt, allGrp
20411458:    40e60633              sub    a2,a2,a4                              allGrp
2041145c:    00c79633              sll    a2,a5,a2                              allGrp
20411460:    00c86533              or    a0,a6,a2                               Call-Tgt, allGrp
20411464:    00a03533              snez    a0,a0                                allGrp
20411468:    00a5e533              or    a0,a1,a0                               allGrp
2041146c:    ea5ff06f              j    20411310 <__subdf3+0x838>               allGrp, controlFlowGrp
20411470:    ff800737              lui    a4,0xff800                            Call-Tgt, allGrp
20411474:    fff70513              addi    a0,a4,-1 # ff7fffff <_sp+0x7f7fbfff> allGrp
20411478:    40b985b3              sub    a1,s3,a1                              allGrp
2041147c:    00a7f733              and    a4,a5,a0                              allGrp
20411480:    835ff06f              j    20410cb4 <__subdf3+0x1dc>               allGrp, controlFlowGrp
  FP_UNPACK_SEMIRAW_D (B, b);
20411484:    00080513              mv    a0,a6                                  Call-Tgt, allGrp
20411488:    e71ff06f              j    204112f8 <__subdf3+0x820>               allGrp, controlFlowGrp
  FP_UNPACK_SEMIRAW_D (A, a);
2041148c:    00078713              mv    a4,a5                                  Call-Tgt, allGrp
20411490:    dd5ff06f              j    20411264 <__subdf3+0x78c>               allGrp, controlFlowGrp
20411494:    00060713              mv    a4,a2                                  Call-Tgt, allGrp
  FP_SUB_D (R, A, B);
20411498:    00058513              mv    a0,a1                                  allGrp
2041149c:    dc9ff06f              j    20411264 <__subdf3+0x78c>               allGrp, controlFlowGrp
  FP_PACK_SEMIRAW_D (r, R);
204114a0:    00100313              li    t1,1                                   Call-Tgt, allGrp
204114a4:    e00498e3              bnez    s1,204112b4 <__subdf3+0x7dc>         allGrp, controlFlowGrp
204114a8:    ff87b793              sltiu    a5,a5,-8                            Call-Tgt, allGrp
204114ac:    0017c793              xori    a5,a5,1                              Call-Tgt, allGrp
204114b0:    00f888b3              add    a7,a7,a5                              allGrp
204114b4:    e01ff06f              j    204112b4 <__subdf3+0x7dc>               allGrp, controlFlowGrp
204114b8:    00100313              li    t1,1                                   Call-Tgt, allGrp
204114bc:    de048ce3              beqz    s1,204112b4 <__subdf3+0x7dc>         allGrp, controlFlowGrp
204114c0:    fe9ff06f              j    204114a8 <__subdf3+0x9d0>               Call-Tgt, allGrp, controlFlowGrp
204114c4:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
204114c8:    00080513              mv    a0,a6                                  allGrp
204114cc:    00000893              li    a7,0                                   Call-Tgt, allGrp
204114d0:    f28ff06f              j    20410bf8 <__subdf3+0x120>               allGrp, controlFlowGrp
204114d4:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
204114d8:    00080513              mv    a0,a6                                  allGrp
204114dc:    e81ff06f              j    2041135c <__subdf3+0x884>               allGrp, controlFlowGrp
204114e0:    00000793              li    a5,0                                   Call-Tgt, allGrp
204114e4:    00000513              li    a0,0                                   allGrp
  FP_SUB_D (R, A, B);
204114e8:    7ff00593              li    a1,2047                                allGrp
204114ec:    00000313              li    t1,0                                   Call-Tgt, allGrp
204114f0:    975ff06f              j    20410e64 <__subdf3+0x38c>               allGrp, controlFlowGrp
204114f4:    00000793              li    a5,0                                   Call-Tgt, allGrp
204114f8:    ff5ff06f              j    204114ec <__subdf3+0xa14>               allGrp, controlFlowGrp
204114fc:    00000793              li    a5,0                                   Call-Tgt, allGrp
20411500:    00068493              mv    s1,a3                                  allGrp
20411504:    fe9ff06f              j    204114ec <__subdf3+0xa14>               allGrp, controlFlowGrp
20411508:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
  FP_UNPACK_SEMIRAW_D (B, b);
2041150c:    00080513              mv    a0,a6                                  allGrp
20411510:    00068493              mv    s1,a3                                  allGrp
20411514:    fb9ff06f              j    204114cc <__subdf3+0x9f4>               allGrp, controlFlowGrp
  FP_SUB_D (R, A, B);
20411518:    00000513              li    a0,0                                   Call-Tgt, allGrp
2041151c:    004007b7              lui    a5,0x400                              allGrp
20411520:    7ff00593              li    a1,2047                                allGrp
20411524:    00000493              li    s1,0                                   allGrp
20411528:    01000313              li    t1,16                                  allGrp
2041152c:    939ff06f              j    20410e64 <__subdf3+0x38c>               allGrp, controlFlowGrp
20411530:    00000513              li    a0,0                                   Call-Tgt, allGrp
20411534:    00000593              li    a1,0                                   allGrp
20411538:    fb5ff06f              j    204114ec <__subdf3+0xa14>               allGrp, controlFlowGrp
  FP_PACK_SEMIRAW_D (r, R);
2041153c:    8c0492e3              bnez    s1,20410e00 <__subdf3+0x328>         Call-Tgt, allGrp, controlFlowGrp
20411540:    00850713              addi    a4,a0,8                              Call-Tgt, allGrp
20411544:    a8dff06f              j    20410fd0 <__subdf3+0x4f8>               allGrp, controlFlowGrp
20411548:    8a048ce3              beqz    s1,20410e00 <__subdf3+0x328>         Call-Tgt, allGrp, controlFlowGrp
2041154c:    ff5ff06f              j    20411540 <__subdf3+0xa68>               Call-Tgt, allGrp, controlFlowGrp
20411550:    00000513              li    a0,0                                   Call-Tgt, allGrp
20411554:    02090463              beqz    s2,2041157c <__subdf3+0xaa4>         allGrp, controlFlowGrp
20411558:    00300793              li    a5,3                                   Call-Tgt, allGrp
2041155c:    00f91a63              bne    s2,a5,20411570 <__subdf3+0xa98>       allGrp, controlFlowGrp
20411560:    00048e63              beqz    s1,2041157c <__subdf3+0xaa4>         Call-Tgt, allGrp, controlFlowGrp
20411564:    fff00513              li    a0,-1                                  Call-Tgt, allGrp
20411568:    7fe00593              li    a1,2046                                allGrp
2041156c:    0100006f              j    2041157c <__subdf3+0xaa4>               allGrp, controlFlowGrp
20411570:    00200793              li    a5,2                                   Call-Tgt, allGrp
20411574:    fef918e3              bne    s2,a5,20411564 <__subdf3+0xa8c>       allGrp, controlFlowGrp
20411578:    fe0486e3              beqz    s1,20411564 <__subdf3+0xa8c>         Call-Tgt, allGrp, controlFlowGrp
2041157c:    00536313              ori    t1,t1,5                               Call-Tgt, allGrp
20411580:    00050793              mv    a5,a0                                  allGrp
20411584:    901ff06f              j    20410e84 <__subdf3+0x3ac>               allGrp, controlFlowGrp
  FP_DECL_EX;
20411588:    00000313              li    t1,0                                   Call-Tgt, allGrp
  FP_SUB_D (R, A, B);
2041158c:    dd3590e3              bne    a1,s3,2041134c <__subdf3+0x874>       allGrp, controlFlowGrp
20411590:    dddff06f              j    2041136c <__subdf3+0x894>               Call-Tgt, allGrp, controlFlowGrp
20411594:    9b358ce3              beq    a1,s3,20410f4c <__subdf3+0x474>       Call-Tgt, allGrp, controlFlowGrp
  FP_UNPACK_SEMIRAW_D (B, b);
20411598:    00070793              mv    a5,a4                                  Call-Tgt, allGrp
2041159c:    00080513              mv    a0,a6                                  allGrp
  FP_SUB_D (R, A, B);
204115a0:    7ff00593              li    a1,2047                                allGrp
204115a4:    9ddff06f              j    20410f80 <__subdf3+0x4a8>               allGrp, controlFlowGrp

204115a8 <__fixdfsi>:
{
  FP_DECL_EX;
  FP_DECL_D (A);
  USItype r;

  FP_INIT_EXCEPTIONS;
204115a8:    002027f3              frrm    a5                                   Call-Tgt, allGrp
  FP_UNPACK_RAW_D (A, a);
204115ac:    001007b7              lui    a5,0x100                              allGrp
204115b0:    0145d693              srli    a3,a1,0x14                           allGrp
204115b4:    fff78613              addi    a2,a5,-1 # fffff <__stack_size+0xff7ff>allGrp
204115b8:    7ff6f693              andi    a3,a3,2047                           allGrp
  FP_TO_INT_D (r, A, SI_BITS, 1);
204115bc:    3fe00713              li    a4,1022                                allGrp
  FP_UNPACK_RAW_D (A, a);
204115c0:    00b67633              and    a2,a2,a1                              allGrp
204115c4:    01f5d593              srli    a1,a1,0x1f                           allGrp
  FP_TO_INT_D (r, A, SI_BITS, 1);
204115c8:    00d74c63              blt    a4,a3,204115e0 <__fixdfsi+0x38>       allGrp, controlFlowGrp
204115cc:    0c069263              bnez    a3,20411690 <__fixdfsi+0xe8>         Call-Tgt, allGrp, controlFlowGrp
204115d0:    00a667b3              or    a5,a2,a0                               Call-Tgt, allGrp
204115d4:    0a079e63              bnez    a5,20411690 <__fixdfsi+0xe8>         allGrp, controlFlowGrp
  FP_HANDLE_EXCEPTIONS;

  return r;
}
204115d8:    00078513              mv    a0,a5                                  Call-Tgt, allGrp
204115dc:    00008067              ret                                          allGrp, controlFlowGrp
  FP_TO_INT_D (r, A, SI_BITS, 1);
204115e0:    41d00713              li    a4,1053                                Call-Tgt, allGrp
204115e4:    04d75063              ble    a3,a4,20411624 <__fixdfsi+0x7c>       allGrp, controlFlowGrp
204115e8:    80000737              lui    a4,0x80000                            Call-Tgt, allGrp
204115ec:    fff74713              not    a4,a4                                 allGrp
204115f0:    00e587b3              add    a5,a1,a4                              allGrp
204115f4:    0a058263              beqz    a1,20411698 <__fixdfsi+0xf0>         allGrp, controlFlowGrp
204115f8:    41e00593              li    a1,1054                                Call-Tgt, allGrp
204115fc:    01000713              li    a4,16                                  allGrp
20411600:    04b69e63              bne    a3,a1,2041165c <__fixdfsi+0xb4>       allGrp, controlFlowGrp
20411604:    00b61613              slli    a2,a2,0xb                            Call-Tgt, allGrp
20411608:    01555693              srli    a3,a0,0x15                           allGrp
2041160c:    00d66633              or    a2,a2,a3                               allGrp
20411610:    04061663              bnez    a2,2041165c <__fixdfsi+0xb4>         allGrp, controlFlowGrp
20411614:    00b51713              slli    a4,a0,0xb                            Call-Tgt, allGrp
20411618:    fc0700e3              beqz    a4,204115d8 <__fixdfsi+0x30>         allGrp, controlFlowGrp
2041161c:    00100713              li    a4,1                                   Call-Tgt, allGrp
20411620:    03c0006f              j    2041165c <__fixdfsi+0xb4>               allGrp, controlFlowGrp
20411624:    43300813              li    a6,1075                                Call-Tgt, allGrp
20411628:    40d80833              sub    a6,a6,a3                              allGrp
2041162c:    01f00713              li    a4,31                                  allGrp
20411630:    00f667b3              or    a5,a2,a5                               allGrp
20411634:    03074863              blt    a4,a6,20411664 <__fixdfsi+0xbc>       allGrp, controlFlowGrp
20411638:    bed68613              addi    a2,a3,-1043 # 7ffbed <__stack_size+0x7ff3ed>Call-Tgt, allGrp
2041163c:    00c516b3              sll    a3,a0,a2                              allGrp
20411640:    00c797b3              sll    a5,a5,a2                              allGrp
20411644:    01055533              srl    a0,a0,a6                              allGrp
20411648:    00d03733              snez    a4,a3                                allGrp
2041164c:    00a7e7b3              or    a5,a5,a0                               allGrp
20411650:    00058463              beqz    a1,20411658 <__fixdfsi+0xb0>         Call-Tgt, allGrp, controlFlowGrp
20411654:    40f007b3              neg    a5,a5                                 Call-Tgt, allGrp
20411658:    f80700e3              beqz    a4,204115d8 <__fixdfsi+0x30>         Call-Tgt, allGrp, controlFlowGrp
  FP_HANDLE_EXCEPTIONS;
2041165c:    00172073              csrs    fflags,a4                            Call-Tgt, allGrp
20411660:    f79ff06f              j    204115d8 <__fixdfsi+0x30>               allGrp, controlFlowGrp
  FP_TO_INT_D (r, A, SI_BITS, 1);
20411664:    02000613              li    a2,32                                  Call-Tgt, allGrp
20411668:    00000713              li    a4,0                                   allGrp
2041166c:    00c80663              beq    a6,a2,20411678 <__fixdfsi+0xd0>       allGrp, controlFlowGrp
20411670:    c0d68713              addi    a4,a3,-1011                          Call-Tgt, allGrp
20411674:    00e79733              sll    a4,a5,a4                              allGrp
20411678:    00a76733              or    a4,a4,a0                               Call-Tgt, allGrp
2041167c:    41300513              li    a0,1043                                allGrp
20411680:    40d506b3              sub    a3,a0,a3                              allGrp
20411684:    00e03733              snez    a4,a4                                allGrp
20411688:    00d7d7b3              srl    a5,a5,a3                              allGrp
2041168c:    fc5ff06f              j    20411650 <__fixdfsi+0xa8>               allGrp, controlFlowGrp
20411690:    00000793              li    a5,0                                   Call-Tgt, allGrp
20411694:    f89ff06f              j    2041161c <__fixdfsi+0x74>               allGrp, controlFlowGrp
20411698:    01000713              li    a4,16                                  Call-Tgt, allGrp
2041169c:    fc1ff06f              j    2041165c <__fixdfsi+0xb4>               allGrp, controlFlowGrp

204116a0 <__floatsidf>:
#include "soft-fp.h"
#include "double.h"

DFtype
__floatsidf (SItype i)
{
204116a0:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp
204116a4:    00112623              sw    ra,12(sp)                              allGrp
204116a8:    00812423              sw    s0,8(sp)                               allGrp
204116ac:    00912223              sw    s1,4(sp)                               allGrp
  FP_DECL_D (A);
  DFtype a;

  FP_FROM_INT_D (A, i, SI_BITS, USItype);
204116b0:    0a050863              beqz    a0,20411760 <__floatsidf+0xc0>       allGrp, controlFlowGrp
204116b4:    00050413              mv    s0,a0                                  Call-Tgt, allGrp
204116b8:    01f55493              srli    s1,a0,0x1f                           allGrp
204116bc:    00055463              bgez    a0,204116c4 <__floatsidf+0x24>       allGrp, controlFlowGrp
204116c0:    40a00433              neg    s0,a0                                 Call-Tgt, allGrp
204116c4:    00040513              mv    a0,s0                                  Call-Tgt, allGrp
204116c8:    469000ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
204116cc:    41e00713              li    a4,1054                                Call-Tgt, allGrp
204116d0:    00a00793              li    a5,10                                  allGrp
204116d4:    40a70733              sub    a4,a4,a0                              allGrp
204116d8:    06a7cc63              blt    a5,a0,20411750 <__floatsidf+0xb0>     allGrp, controlFlowGrp
204116dc:    00b00793              li    a5,11                                  Call-Tgt, allGrp
204116e0:    40a787b3              sub    a5,a5,a0                              allGrp
204116e4:    01550513              addi    a0,a0,21                             allGrp
204116e8:    00f457b3              srl    a5,s0,a5                              allGrp
204116ec:    00a41433              sll    s0,s0,a0                              allGrp
  FP_PACK_RAW_D (a, A);
204116f0:    00100537              lui    a0,0x100                              Call-Tgt, allGrp
204116f4:    fff50513              addi    a0,a0,-1 # fffff <__stack_size+0xff7ff>allGrp
204116f8:    801006b7              lui    a3,0x80100                            allGrp
204116fc:    00a7f7b3              and    a5,a5,a0                              allGrp
20411700:    7ff77713              andi    a4,a4,2047                           allGrp
20411704:    fff68693              addi    a3,a3,-1 # 800fffff <_sp+0xfbfff>    allGrp
20411708:    01471713              slli    a4,a4,0x14                           allGrp
2041170c:    00d7f7b3              and    a5,a5,a3                              allGrp
20411710:    00e7e7b3              or    a5,a5,a4                               allGrp
20411714:    80000737              lui    a4,0x80000                            allGrp
20411718:    fff74713              not    a4,a4                                 allGrp
2041171c:    01f49493              slli    s1,s1,0x1f                           allGrp
20411720:    00e7f7b3              and    a5,a5,a4                              allGrp

  return a;
}
20411724:    00c12083              lw    ra,12(sp)                              allGrp
  FP_PACK_RAW_D (a, A);
20411728:    0097e733              or    a4,a5,s1                               allGrp
}
2041172c:    00040513              mv    a0,s0                                  allGrp
20411730:    00412483              lw    s1,4(sp)                               allGrp
20411734:    00812403              lw    s0,8(sp)                               allGrp
20411738:    00112623              sw    ra,12(sp)                              allGrp
2041173c:    00912223              sw    s1,4(sp)                               allGrp
20411740:    00812423              sw    s0,8(sp)                               allGrp
20411744:    00070593              mv    a1,a4                                  allGrp
20411748:    01010113              addi    sp,sp,16                             allGrp
2041174c:    00008067              ret                                          allGrp, controlFlowGrp
  FP_FROM_INT_D (A, i, SI_BITS, USItype);
20411750:    ff550513              addi    a0,a0,-11                            Call-Tgt, allGrp
20411754:    00a417b3              sll    a5,s0,a0                              allGrp
20411758:    00000413              li    s0,0                                   allGrp
2041175c:    f95ff06f              j    204116f0 <__floatsidf+0x50>             allGrp, controlFlowGrp
20411760:    00000793              li    a5,0                                   Call-Tgt, allGrp
20411764:    00000413              li    s0,0                                   allGrp
20411768:    00000713              li    a4,0                                   allGrp
2041176c:    00000493              li    s1,0                                   allGrp
20411770:    f81ff06f              j    204116f0 <__floatsidf+0x50>             allGrp, controlFlowGrp
20411774:    00000013              nop                                          allGrp

20411778 <__floatunsidf>:
#include "soft-fp.h"
#include "double.h"

DFtype
__floatunsidf (USItype i)
{
20411778:    ff010113              addi    sp,sp,-16                            Call-Tgt, allGrp
2041177c:    00112623              sw    ra,12(sp)                              allGrp
20411780:    00812423              sw    s0,8(sp)                               allGrp
  FP_DECL_D (A);
  DFtype a;

  FP_FROM_INT_D (A, i, SI_BITS, USItype);
20411784:    08050863              beqz    a0,20411814 <__floatunsidf+0x9c>     allGrp, controlFlowGrp
20411788:    00050413              mv    s0,a0                                  Call-Tgt, allGrp
2041178c:    3a5000ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
20411790:    41e00713              li    a4,1054                                Call-Tgt, allGrp
20411794:    00a00793              li    a5,10                                  allGrp
20411798:    40a70733              sub    a4,a4,a0                              allGrp
2041179c:    06a7c463              blt    a5,a0,20411804 <__floatunsidf+0x8c>   allGrp, controlFlowGrp
204117a0:    00b00793              li    a5,11                                  Call-Tgt, allGrp
204117a4:    40a787b3              sub    a5,a5,a0                              allGrp
204117a8:    01550513              addi    a0,a0,21                             allGrp
204117ac:    00f457b3              srl    a5,s0,a5                              allGrp
204117b0:    00a41433              sll    s0,s0,a0                              allGrp
  FP_PACK_RAW_D (a, A);
204117b4:    00100537              lui    a0,0x100                              Call-Tgt, allGrp
204117b8:    fff50513              addi    a0,a0,-1 # fffff <__stack_size+0xff7ff>allGrp
204117bc:    801006b7              lui    a3,0x80100                            allGrp
204117c0:    00a7f7b3              and    a5,a5,a0                              allGrp
204117c4:    7ff77713              andi    a4,a4,2047                           allGrp
204117c8:    fff68693              addi    a3,a3,-1 # 800fffff <_sp+0xfbfff>    allGrp

  return a;
}
204117cc:    00c12083              lw    ra,12(sp)                              allGrp
  FP_PACK_RAW_D (a, A);
204117d0:    01471713              slli    a4,a4,0x14                           allGrp
}
204117d4:    00040513              mv    a0,s0                                  allGrp
  FP_PACK_RAW_D (a, A);
204117d8:    00d7f7b3              and    a5,a5,a3                              allGrp
}
204117dc:    00812403              lw    s0,8(sp)                               allGrp
  FP_PACK_RAW_D (a, A);
204117e0:    00e7e7b3              or    a5,a5,a4                               allGrp
204117e4:    80000737              lui    a4,0x80000                            allGrp
204117e8:    fff74713              not    a4,a4                                 allGrp
}
204117ec:    00112623              sw    ra,12(sp)                              allGrp
204117f0:    00812423              sw    s0,8(sp)                               allGrp
  FP_PACK_RAW_D (a, A);
204117f4:    00e7f733              and    a4,a5,a4                              allGrp
}
204117f8:    00070593              mv    a1,a4                                  allGrp
204117fc:    01010113              addi    sp,sp,16                             allGrp
20411800:    00008067              ret                                          allGrp, controlFlowGrp
  FP_FROM_INT_D (A, i, SI_BITS, USItype);
20411804:    ff550513              addi    a0,a0,-11                            Call-Tgt, allGrp
20411808:    00a417b3              sll    a5,s0,a0                              allGrp
2041180c:    00000413              li    s0,0                                   allGrp
20411810:    fa5ff06f              j    204117b4 <__floatunsidf+0x3c>           allGrp, controlFlowGrp
20411814:    00000793              li    a5,0                                   Call-Tgt, allGrp
20411818:    00000413              li    s0,0                                   allGrp
2041181c:    00000713              li    a4,0                                   allGrp
20411820:    f95ff06f              j    204117b4 <__floatunsidf+0x3c>           allGrp, controlFlowGrp
20411824:    00000013              nop                                          allGrp

20411828 <__extenddftf2>:
#include "double.h"
#include "quad.h"

TFtype
__extenddftf2 (DFtype a)
{
20411828:    fd010113              addi    sp,sp,-48                            Call-Tgt, allGrp
2041182c:    02912223              sw    s1,36(sp)                              allGrp
20411830:    02112623              sw    ra,44(sp)                              allGrp
20411834:    02812423              sw    s0,40(sp)                              allGrp
20411838:    00050493              mv    s1,a0                                  allGrp
  FP_DECL_EX;
  FP_DECL_D (A);
  FP_DECL_Q (R);
  TFtype r;

  FP_INIT_EXCEPTIONS;
2041183c:    002027f3              frrm    a5                                   allGrp
  FP_UNPACK_RAW_D (A, a);
20411840:    00100737              lui    a4,0x100                              allGrp
20411844:    01465793              srli    a5,a2,0x14                           allGrp
20411848:    fff70713              addi    a4,a4,-1 # fffff <__stack_size+0xff7ff>allGrp
2041184c:    7ff7f793              andi    a5,a5,2047                           allGrp
20411850:    00c77733              and    a4,a4,a2                              allGrp
#if (2 * _FP_W_TYPE_SIZE) < _FP_FRACBITS_Q
  FP_EXTEND (Q, D, 4, 2, R, A);
20411854:    00178693              addi    a3,a5,1                              allGrp
  FP_UNPACK_RAW_D (A, a);
20411858:    01f65413              srli    s0,a2,0x1f                           allGrp
  FP_EXTEND (Q, D, 4, 2, R, A);
2041185c:    00b12823              sw    a1,16(sp)                              allGrp
20411860:    00e12a23              sw    a4,20(sp)                              allGrp
20411864:    00012e23              sw    zero,28(sp)                            allGrp
20411868:    00012c23              sw    zero,24(sp)                            allGrp
2041186c:    7ff6f693              andi    a3,a3,2047                           allGrp
20411870:    00100613              li    a2,1                                   allGrp
20411874:    02d65e63              ble    a3,a2,204118b0 <__extenddftf2+0x88>   allGrp, controlFlowGrp
20411878:    000046b7              lui    a3,0x4                                Call-Tgt, allGrp
2041187c:    c0068693              addi    a3,a3,-1024 # 3c00 <__stack_size+0x3400>allGrp
20411880:    0045d513              srli    a0,a1,0x4                            allGrp
20411884:    00d787b3              add    a5,a5,a3                              allGrp
20411888:    00475693              srli    a3,a4,0x4                            allGrp
2041188c:    01c71713              slli    a4,a4,0x1c                           allGrp
20411890:    00a76733              or    a4,a4,a0                               allGrp
20411894:    01c59593              slli    a1,a1,0x1c                           allGrp
20411898:    00d12e23              sw    a3,28(sp)                              allGrp
2041189c:    00e12c23              sw    a4,24(sp)                              allGrp
204118a0:    00b12a23              sw    a1,20(sp)                              allGrp
204118a4:    00012823              sw    zero,16(sp)                            allGrp
  FP_DECL_EX;
204118a8:    00000693              li    a3,0                                   Call-Tgt, allGrp
204118ac:    1440006f              j    204119f0 <__extenddftf2+0x1c8>          allGrp, controlFlowGrp
204118b0:    00b76533              or    a0,a4,a1                               Call-Tgt, allGrp
  FP_EXTEND (Q, D, 4, 2, R, A);
204118b4:    0e079c63              bnez    a5,204119ac <__extenddftf2+0x184>    allGrp, controlFlowGrp
  FP_DECL_EX;
204118b8:    00000693              li    a3,0                                   Call-Tgt, allGrp
  FP_EXTEND (Q, D, 4, 2, R, A);
204118bc:    12050a63              beqz    a0,204119f0 <__extenddftf2+0x1c8>    allGrp, controlFlowGrp
204118c0:    04070c63              beqz    a4,20411918 <__extenddftf2+0xf0>     Call-Tgt, allGrp, controlFlowGrp
204118c4:    00070513              mv    a0,a4                                  Call-Tgt, allGrp
204118c8:    269000ef              jal    ra,20412330 <__clzsi2>                allGrp, controlFlowGrp
204118cc:    03150693              addi    a3,a0,49                             Call-Tgt, allGrp
204118d0:    4056d713              srai    a4,a3,0x5                            allGrp
204118d4:    01f6f693              andi    a3,a3,31                             allGrp
204118d8:    04068663              beqz    a3,20411924 <__extenddftf2+0xfc>     allGrp, controlFlowGrp
204118dc:    ffc00613              li    a2,-4                                  Call-Tgt, allGrp
204118e0:    02c70633              mul    a2,a4,a2                              allGrp
204118e4:    02000793              li    a5,32                                  allGrp
204118e8:    00271813              slli    a6,a4,0x2                            allGrp
204118ec:    ff000e13              li    t3,-16                                 allGrp
204118f0:    40d787b3              sub    a5,a5,a3                              allGrp
204118f4:    ffc60613              addi    a2,a2,-4 # 7ffffc <__stack_size+0x7ff7fc>Call-Tgt, allGrp
204118f8:    09c61463              bne    a2,t3,20411980 <__extenddftf2+0x158>  allGrp, controlFlowGrp
204118fc:    02010793              addi    a5,sp,32                             Call-Tgt, allGrp
20411900:    01078833              add    a6,a5,a6                              allGrp
20411904:    01012783              lw    a5,16(sp)                              allGrp
20411908:    fff70713              addi    a4,a4,-1                             allGrp
2041190c:    00d796b3              sll    a3,a5,a3                              allGrp
20411910:    fed82823              sw    a3,-16(a6)                             allGrp
20411914:    03c0006f              j    20411950 <__extenddftf2+0x128>          allGrp, controlFlowGrp
20411918:    219000ef              jal    ra,20412330 <__clzsi2>                Call-Tgt, allGrp, controlFlowGrp
2041191c:    02050513              addi    a0,a0,32                             Call-Tgt, allGrp
20411920:    fadff06f              j    204118cc <__extenddftf2+0xa4>           allGrp, controlFlowGrp
20411924:    ffc00613              li    a2,-4                                  Call-Tgt, allGrp
20411928:    02c70633              mul    a2,a4,a2                              allGrp
2041192c:    01010693              addi    a3,sp,16                             allGrp
20411930:    00300793              li    a5,3                                   allGrp
20411934:    00c685b3              add    a1,a3,a2                              Call-Tgt, allGrp
20411938:    00c5a583              lw    a1,12(a1)                              allGrp
2041193c:    fff78793              addi    a5,a5,-1                             allGrp
20411940:    ffc68693              addi    a3,a3,-4                             allGrp
20411944:    00b6a823              sw    a1,16(a3)                              allGrp
20411948:    fee7d6e3              ble    a4,a5,20411934 <__extenddftf2+0x10c>  allGrp, controlFlowGrp
2041194c:    fff70713              addi    a4,a4,-1                             Call-Tgt, allGrp
20411950:    01010793              addi    a5,sp,16                             Call-Tgt, allGrp
20411954:    00271693              slli    a3,a4,0x2                            allGrp
20411958:    00d786b3              add    a3,a5,a3                              allGrp
2041195c:    fff00793              li    a5,-1                                  allGrp
20411960:    0006a023              sw    zero,0(a3)                             Call-Tgt, allGrp
20411964:    fff70713              addi    a4,a4,-1                             allGrp
20411968:    ffc68693              addi    a3,a3,-4                             allGrp
2041196c:    fef71ae3              bne    a4,a5,20411960 <__extenddftf2+0x138>  allGrp, controlFlowGrp
20411970:    000047b7              lui    a5,0x4                                Call-Tgt, allGrp
20411974:    c0c78793              addi    a5,a5,-1012 # 3c0c <__stack_size+0x340c>allGrp
20411978:    40a787b3              sub    a5,a5,a0                              allGrp
2041197c:    f2dff06f              j    204118a8 <__extenddftf2+0x80>           allGrp, controlFlowGrp
20411980:    01010593              addi    a1,sp,16                             Call-Tgt, allGrp
20411984:    00c58333              add    t1,a1,a2                              allGrp
20411988:    00c808b3              add    a7,a6,a2                              allGrp
2041198c:    011588b3              add    a7,a1,a7                              allGrp
20411990:    00c32583              lw    a1,12(t1) # 40000c <__stack_size+0x3ff80c>allGrp
20411994:    01032303              lw    t1,16(t1)                              allGrp
20411998:    00f5d5b3              srl    a1,a1,a5                              allGrp
2041199c:    00d31333              sll    t1,t1,a3                              allGrp
204119a0:    0065e5b3              or    a1,a1,t1                               allGrp
204119a4:    00b8a823              sw    a1,16(a7)                              allGrp
204119a8:    f4dff06f              j    204118f4 <__extenddftf2+0xcc>           allGrp, controlFlowGrp
204119ac:    0c050663              beqz    a0,20411a78 <__extenddftf2+0x250>    Call-Tgt, allGrp, controlFlowGrp
204119b0:    01c71793              slli    a5,a4,0x1c                           Call-Tgt, allGrp
204119b4:    0045d613              srli    a2,a1,0x4                            allGrp
204119b8:    00c7e7b3              or    a5,a5,a2                               allGrp
204119bc:    000806b7              lui    a3,0x80                               allGrp
204119c0:    00d776b3              and    a3,a4,a3                              allGrp
204119c4:    00f12c23              sw    a5,24(sp)                              allGrp
204119c8:    00475713              srli    a4,a4,0x4                            allGrp
204119cc:    000087b7              lui    a5,0x8                                allGrp
204119d0:    00f76733              or    a4,a4,a5                               allGrp
  FP_DECL_EX;
204119d4:    0016b693              seqz    a3,a3                                allGrp
  FP_EXTEND (Q, D, 4, 2, R, A);
204119d8:    01c59593              slli    a1,a1,0x1c                           allGrp
  FP_DECL_EX;
204119dc:    00469693              slli    a3,a3,0x4                            allGrp
  FP_EXTEND (Q, D, 4, 2, R, A);
204119e0:    00b12a23              sw    a1,20(sp)                              allGrp
204119e4:    00012823              sw    zero,16(sp)                            allGrp
204119e8:    00e12e23              sw    a4,28(sp)                              allGrp
204119ec:    fff78793              addi    a5,a5,-1 # 7fff <__stack_size+0x77ff>allGrp
#else
  FP_EXTEND (Q, D, 2, 1, R, A);
#endif
  FP_PACK_RAW_Q (r, R);
204119f0:    01c12703              lw    a4,28(sp)                              Call-Tgt, allGrp
204119f4:    00008537              lui    a0,0x8                                allGrp
204119f8:    fff50513              addi    a0,a0,-1 # 7fff <__stack_size+0x77ff>allGrp
204119fc:    00e11623              sh    a4,12(sp)                              allGrp
20411a00:    00c12703              lw    a4,12(sp)                              allGrp
20411a04:    80010637              lui    a2,0x80010                            allGrp
20411a08:    00a7f7b3              and    a5,a5,a0                              allGrp
20411a0c:    fff60613              addi    a2,a2,-1 # 8000ffff <_sp+0xbfff>     allGrp
20411a10:    00c77733              and    a4,a4,a2                              allGrp
20411a14:    01079793              slli    a5,a5,0x10                           allGrp
20411a18:    00f767b3              or    a5,a4,a5                               allGrp
20411a1c:    80000737              lui    a4,0x80000                            allGrp
20411a20:    fff74713              not    a4,a4                                 allGrp
20411a24:    01f41413              slli    s0,s0,0x1f                           allGrp
20411a28:    00e7f7b3              and    a5,a5,a4                              allGrp
20411a2c:    01012883              lw    a7,16(sp)                              allGrp
20411a30:    01412803              lw    a6,20(sp)                              allGrp
20411a34:    01812583              lw    a1,24(sp)                              allGrp
20411a38:    0087e433              or    s0,a5,s0                               allGrp
  FP_HANDLE_EXCEPTIONS;
20411a3c:    00068463              beqz    a3,20411a44 <__extenddftf2+0x21c>    allGrp, controlFlowGrp
20411a40:    0016a073              csrs    fflags,a3                            allGrp

  return r;
20411a44:    0084a623              sw    s0,12(s1)                              Call-Tgt, allGrp
}
20411a48:    02c12083              lw    ra,44(sp)                              allGrp
20411a4c:    02812403              lw    s0,40(sp)                              allGrp
  return r;
20411a50:    0114a023              sw    a7,0(s1)                               allGrp
20411a54:    0104a223              sw    a6,4(s1)                               allGrp
20411a58:    00b4a423              sw    a1,8(s1)                               allGrp
}
20411a5c:    00048513              mv    a0,s1                                  allGrp
20411a60:    02412483              lw    s1,36(sp)                              allGrp
20411a64:    02112623              sw    ra,44(sp)                              allGrp
20411a68:    02812423              sw    s0,40(sp)                              allGrp
20411a6c:    02912223              sw    s1,36(sp)                              allGrp
20411a70:    03010113              addi    sp,sp,48                             allGrp
20411a74:    00008067              ret                                          allGrp, controlFlowGrp
  FP_EXTEND (Q, D, 4, 2, R, A);
20411a78:    000087b7              lui    a5,0x8                                Call-Tgt, allGrp
20411a7c:    fff78793              addi    a5,a5,-1 # 7fff <__stack_size+0x77ff>allGrp
20411a80:    e29ff06f              j    204118a8 <__extenddftf2+0x80>           allGrp, controlFlowGrp
20411a84:    00000013              nop                                          allGrp
	...

20411a90 <__truncdfsf2>:
  FP_DECL_EX;
  FP_DECL_D (A);
  FP_DECL_S (R);
  SFtype r;

  FP_INIT_ROUNDMODE;
20411a90:    00202873              frrm    a6                                   Call-Tgt, allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
20411a94:    001006b7              lui    a3,0x100                              allGrp
20411a98:    0145d893              srli    a7,a1,0x14                           allGrp
20411a9c:    fff68693              addi    a3,a3,-1 # fffff <__stack_size+0xff7ff>allGrp
20411aa0:    7ff8f893              andi    a7,a7,2047                           allGrp
20411aa4:    00b6f6b3              and    a3,a3,a1                              allGrp
#if _FP_W_TYPE_SIZE < _FP_FRACBITS_D
  FP_TRUNC (S, D, 1, 2, R, A);
20411aa8:    00188713              addi    a4,a7,1                              allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
20411aac:    01d55793              srli    a5,a0,0x1d                           allGrp
20411ab0:    00369693              slli    a3,a3,0x3                            allGrp
  FP_TRUNC (S, D, 1, 2, R, A);
20411ab4:    7ff77713              andi    a4,a4,2047                           allGrp
20411ab8:    00100613              li    a2,1                                   allGrp
  FP_UNPACK_SEMIRAW_D (A, a);
20411abc:    00d7e6b3              or    a3,a5,a3                               allGrp
20411ac0:    01f5d593              srli    a1,a1,0x1f                           allGrp
20411ac4:    00351793              slli    a5,a0,0x3                            allGrp
  FP_TRUNC (S, D, 1, 2, R, A);
20411ac8:    1ee65463              ble    a4,a2,20411cb0 <__truncdfsf2+0x220>   allGrp, controlFlowGrp
20411acc:    c8088713              addi    a4,a7,-896                           Call-Tgt, allGrp
20411ad0:    0fe00613              li    a2,254                                 allGrp
20411ad4:    0ce65c63              ble    a4,a2,20411bac <__truncdfsf2+0x11c>   allGrp, controlFlowGrp
20411ad8:    04080c63              beqz    a6,20411b30 <__truncdfsf2+0xa0>      Call-Tgt, allGrp, controlFlowGrp
20411adc:    00300793              li    a5,3                                   Call-Tgt, allGrp
20411ae0:    04f81263              bne    a6,a5,20411b24 <__truncdfsf2+0x94>    allGrp, controlFlowGrp
20411ae4:    04058663              beqz    a1,20411b30 <__truncdfsf2+0xa0>      Call-Tgt, allGrp, controlFlowGrp
20411ae8:    fff00793              li    a5,-1                                  Call-Tgt, allGrp
20411aec:    0fe00713              li    a4,254                                 allGrp
20411af0:    00000693              li    a3,0                                   allGrp
20411af4:    00500613              li    a2,5                                   allGrp
#else
  FP_TRUNC (S, D, 1, 1, R, A);
#endif
  FP_PACK_SEMIRAW_S (r, R);
20411af8:    00200513              li    a0,2                                   Call-Tgt, allGrp
20411afc:    00166613              ori    a2,a2,1                               allGrp
20411b00:    22a80a63              beq    a6,a0,20411d34 <__truncdfsf2+0x2a4>   allGrp, controlFlowGrp
20411b04:    00300513              li    a0,3                                   Call-Tgt, allGrp
20411b08:    22a80063              beq    a6,a0,20411d28 <__truncdfsf2+0x298>   allGrp, controlFlowGrp
20411b0c:    18081863              bnez    a6,20411c9c <__truncdfsf2+0x20c>     Call-Tgt, allGrp, controlFlowGrp
20411b10:    00f7f513              andi    a0,a5,15                             Call-Tgt, allGrp
20411b14:    00400893              li    a7,4                                   allGrp
20411b18:    19150263              beq    a0,a7,20411c9c <__truncdfsf2+0x20c>   allGrp, controlFlowGrp
20411b1c:    00478793              addi    a5,a5,4                              Call-Tgt, allGrp
20411b20:    17c0006f              j    20411c9c <__truncdfsf2+0x20c>           allGrp, controlFlowGrp
  FP_TRUNC (S, D, 1, 2, R, A);
20411b24:    00200793              li    a5,2                                   Call-Tgt, allGrp
20411b28:    fcf810e3              bne    a6,a5,20411ae8 <__truncdfsf2+0x58>    allGrp, controlFlowGrp
20411b2c:    fa058ee3              beqz    a1,20411ae8 <__truncdfsf2+0x58>      Call-Tgt, allGrp, controlFlowGrp
20411b30:    00000793              li    a5,0                                   Call-Tgt, allGrp
20411b34:    0ff00713              li    a4,255                                 allGrp
20411b38:    00500613              li    a2,5                                   allGrp
  FP_PACK_SEMIRAW_S (r, R);
20411b3c:    00579693              slli    a3,a5,0x5                            Call-Tgt, allGrp
20411b40:    0006de63              bgez    a3,20411b5c <__truncdfsf2+0xcc>      allGrp, controlFlowGrp
20411b44:    00170713              addi    a4,a4,1 # 80000001 <_sp+0xffffc001>  Call-Tgt, allGrp
20411b48:    0ff00693              li    a3,255                                 allGrp
20411b4c:    1ed70863              beq    a4,a3,20411d3c <__truncdfsf2+0x2ac>   allGrp, controlFlowGrp
20411b50:    fc0006b7              lui    a3,0xfc000                            Call-Tgt, allGrp
20411b54:    fff68693              addi    a3,a3,-1 # fbffffff <_sp+0x7bffbfff> allGrp
20411b58:    00d7f7b3              and    a5,a5,a3                              allGrp
20411b5c:    0ff00693              li    a3,255                                 Call-Tgt, allGrp
20411b60:    0037d793              srli    a5,a5,0x3                            allGrp
20411b64:    00d71863              bne    a4,a3,20411b74 <__truncdfsf2+0xe4>    allGrp, controlFlowGrp
20411b68:    00078663              beqz    a5,20411b74 <__truncdfsf2+0xe4>      Call-Tgt, allGrp, controlFlowGrp
20411b6c:    004007b7              lui    a5,0x400                              Call-Tgt, allGrp
20411b70:    00000593              li    a1,0                                   allGrp
20411b74:    00800537              lui    a0,0x800                              Call-Tgt, allGrp
20411b78:    fff50513              addi    a0,a0,-1 # 7fffff <__stack_size+0x7ff7ff>allGrp
20411b7c:    00a7f7b3              and    a5,a5,a0                              allGrp
20411b80:    0ff77513              andi    a0,a4,255                            allGrp
20411b84:    01751713              slli    a4,a0,0x17                           allGrp
20411b88:    80800537              lui    a0,0x80800                            allGrp
20411b8c:    fff50513              addi    a0,a0,-1 # 807fffff <_sp+0x7fbfff>   allGrp
20411b90:    00a7f533              and    a0,a5,a0                              allGrp
20411b94:    01f59593              slli    a1,a1,0x1f                           allGrp
20411b98:    00e56533              or    a0,a0,a4                               allGrp
20411b9c:    00b56533              or    a0,a0,a1                               allGrp
  FP_HANDLE_EXCEPTIONS;
20411ba0:    00060463              beqz    a2,20411ba8 <__truncdfsf2+0x118>     allGrp, controlFlowGrp
20411ba4:    00162073              csrs    fflags,a2                            allGrp

  return r;
}
20411ba8:    00008067              ret                                          Call-Tgt, allGrp, controlFlowGrp
  FP_TRUNC (S, D, 1, 2, R, A);
20411bac:    0ce04463              bgtz    a4,20411c74 <__truncdfsf2+0x1e4>     Call-Tgt, allGrp, controlFlowGrp
20411bb0:    fe900613              li    a2,-23                                 Call-Tgt, allGrp
20411bb4:    14c74263              blt    a4,a2,20411cf8 <__truncdfsf2+0x268>   allGrp, controlFlowGrp
20411bb8:    00800637              lui    a2,0x800                              Call-Tgt, allGrp
20411bbc:    01e00313              li    t1,30                                  allGrp
20411bc0:    00c6e6b3              or    a3,a3,a2                               allGrp
20411bc4:    40e30333              sub    t1,t1,a4                              allGrp
20411bc8:    01f00613              li    a2,31                                  allGrp
20411bcc:    06664c63              blt    a2,t1,20411c44 <__truncdfsf2+0x1b4>   allGrp, controlFlowGrp
20411bd0:    c8288893              addi    a7,a7,-894                           Call-Tgt, allGrp
20411bd4:    0067d333              srl    t1,a5,t1                              allGrp
20411bd8:    011797b3              sll    a5,a5,a7                              allGrp
20411bdc:    00f037b3              snez    a5,a5                                allGrp
20411be0:    011696b3              sll    a3,a3,a7                              allGrp
20411be4:    00d7e6b3              or    a3,a5,a3                               allGrp
20411be8:    00d367b3              or    a5,t1,a3                               allGrp
20411bec:    00000713              li    a4,0                                   Call-Tgt, allGrp
  FP_PACK_SEMIRAW_S (r, R);
20411bf0:    12078863              beqz    a5,20411d20 <__truncdfsf2+0x290>     allGrp, controlFlowGrp
20411bf4:    00179713              slli    a4,a5,0x1                            Call-Tgt, allGrp
20411bf8:    00777693              andi    a3,a4,7                              allGrp
20411bfc:    00000613              li    a2,0                                   allGrp
20411c00:    02068863              beqz    a3,20411c30 <__truncdfsf2+0x1a0>     allGrp, controlFlowGrp
20411c04:    00200693              li    a3,2                                   Call-Tgt, allGrp
20411c08:    10d80463              beq    a6,a3,20411d10 <__truncdfsf2+0x280>   allGrp, controlFlowGrp
20411c0c:    00300693              li    a3,3                                   Call-Tgt, allGrp
20411c10:    0ed80863              beq    a6,a3,20411d00 <__truncdfsf2+0x270>   allGrp, controlFlowGrp
20411c14:    00100613              li    a2,1                                   Call-Tgt, allGrp
20411c18:    00081c63              bnez    a6,20411c30 <__truncdfsf2+0x1a0>     allGrp, controlFlowGrp
20411c1c:    00f77693              andi    a3,a4,15                             Call-Tgt, allGrp
20411c20:    00400513              li    a0,4                                   allGrp
20411c24:    00100613              li    a2,1                                   allGrp
20411c28:    00a68463              beq    a3,a0,20411c30 <__truncdfsf2+0x1a0>   allGrp, controlFlowGrp
20411c2c:    00470713              addi    a4,a4,4                              Call-Tgt, allGrp
20411c30:    01b75693              srli    a3,a4,0x1b                           Call-Tgt, allGrp
20411c34:    0016c693              xori    a3,a3,1                              allGrp
20411c38:    0016f693              andi    a3,a3,1                              allGrp
20411c3c:    00000713              li    a4,0                                   allGrp
20411c40:    0540006f              j    20411c94 <__truncdfsf2+0x204>           allGrp, controlFlowGrp
  FP_TRUNC (S, D, 1, 2, R, A);
20411c44:    ffe00513              li    a0,-2                                  Call-Tgt, allGrp
20411c48:    40e50733              sub    a4,a0,a4                              allGrp
20411c4c:    02000513              li    a0,32                                  allGrp
20411c50:    00e6d733              srl    a4,a3,a4                              allGrp
20411c54:    00000613              li    a2,0                                   allGrp
20411c58:    00a30663              beq    t1,a0,20411c64 <__truncdfsf2+0x1d4>   allGrp, controlFlowGrp
20411c5c:    ca288893              addi    a7,a7,-862                           Call-Tgt, allGrp
20411c60:    01169633              sll    a2,a3,a7                              allGrp
20411c64:    00f667b3              or    a5,a2,a5                               Call-Tgt, allGrp
20411c68:    00f037b3              snez    a5,a5                                allGrp
20411c6c:    00f767b3              or    a5,a4,a5                               allGrp
20411c70:    f7dff06f              j    20411bec <__truncdfsf2+0x15c>           allGrp, controlFlowGrp
20411c74:    00651513              slli    a0,a0,0x6                            Call-Tgt, allGrp
20411c78:    00a03533              snez    a0,a0                                allGrp
20411c7c:    00369693              slli    a3,a3,0x3                            allGrp
20411c80:    00d566b3              or    a3,a0,a3                               allGrp
20411c84:    01d7d793              srli    a5,a5,0x1d                           allGrp
20411c88:    00f6e7b3              or    a5,a3,a5                               allGrp
  FP_DECL_EX;
20411c8c:    00000613              li    a2,0                                   allGrp
20411c90:    00000693              li    a3,0                                   allGrp
  FP_PACK_SEMIRAW_S (r, R);
20411c94:    0077f513              andi    a0,a5,7                              Call-Tgt, allGrp
20411c98:    e60510e3              bnez    a0,20411af8 <__truncdfsf2+0x68>      allGrp, controlFlowGrp
20411c9c:    ea0680e3              beqz    a3,20411b3c <__truncdfsf2+0xac>      Call-Tgt, allGrp, controlFlowGrp
20411ca0:    00167693              andi    a3,a2,1                              Call-Tgt, allGrp
20411ca4:    e8068ce3              beqz    a3,20411b3c <__truncdfsf2+0xac>      allGrp, controlFlowGrp
20411ca8:    00266613              ori    a2,a2,2                               Call-Tgt, allGrp
20411cac:    e91ff06f              j    20411b3c <__truncdfsf2+0xac>            allGrp, controlFlowGrp
20411cb0:    00f6e7b3              or    a5,a3,a5                               Call-Tgt, allGrp
  FP_TRUNC (S, D, 1, 2, R, A);
20411cb4:    00089663              bnez    a7,20411cc0 <__truncdfsf2+0x230>     allGrp, controlFlowGrp
20411cb8:    00f037b3              snez    a5,a5                                Call-Tgt, allGrp
20411cbc:    f31ff06f              j    20411bec <__truncdfsf2+0x15c>           allGrp, controlFlowGrp
20411cc0:    04078e63              beqz    a5,20411d1c <__truncdfsf2+0x28c>     Call-Tgt, allGrp, controlFlowGrp
20411cc4:    7ff00793              li    a5,2047                                Call-Tgt, allGrp
  FP_DECL_EX;
20411cc8:    00000613              li    a2,0                                   allGrp
  FP_TRUNC (S, D, 1, 2, R, A);
20411ccc:    00f89a63              bne    a7,a5,20411ce0 <__truncdfsf2+0x250>   allGrp, controlFlowGrp
20411cd0:    00400637              lui    a2,0x400                              Call-Tgt, allGrp
20411cd4:    00c6f633              and    a2,a3,a2                              allGrp
  FP_DECL_EX;
20411cd8:    00163613              seqz    a2,a2                                allGrp
20411cdc:    00461613              slli    a2,a2,0x4                            allGrp
  FP_TRUNC (S, D, 1, 2, R, A);
20411ce0:    00369693              slli    a3,a3,0x3                            Call-Tgt, allGrp
20411ce4:    020007b7              lui    a5,0x2000                             allGrp
20411ce8:    00f6e7b3              or    a5,a3,a5                               allGrp
20411cec:    0ff00713              li    a4,255                                 allGrp
20411cf0:    00000693              li    a3,0                                   allGrp
20411cf4:    fa1ff06f              j    20411c94 <__truncdfsf2+0x204>           allGrp, controlFlowGrp
20411cf8:    00100793              li    a5,1                                   Call-Tgt, allGrp
20411cfc:    ef9ff06f              j    20411bf4 <__truncdfsf2+0x164>           allGrp, controlFlowGrp
  FP_PACK_SEMIRAW_S (r, R);
20411d00:    00100613              li    a2,1                                   Call-Tgt, allGrp
20411d04:    f20596e3              bnez    a1,20411c30 <__truncdfsf2+0x1a0>     allGrp, controlFlowGrp
20411d08:    00870713              addi    a4,a4,8                              Call-Tgt, allGrp
20411d0c:    f25ff06f              j    20411c30 <__truncdfsf2+0x1a0>           allGrp, controlFlowGrp
20411d10:    00100613              li    a2,1                                   Call-Tgt, allGrp
20411d14:    f0058ee3              beqz    a1,20411c30 <__truncdfsf2+0x1a0>     allGrp, controlFlowGrp
20411d18:    ff1ff06f              j    20411d08 <__truncdfsf2+0x278>           Call-Tgt, allGrp, controlFlowGrp
  FP_TRUNC (S, D, 1, 2, R, A);
20411d1c:    0ff00713              li    a4,255                                 Call-Tgt, allGrp
20411d20:    00000613              li    a2,0                                   Call-Tgt, allGrp
20411d24:    e19ff06f              j    20411b3c <__truncdfsf2+0xac>            allGrp, controlFlowGrp
  FP_PACK_SEMIRAW_S (r, R);
20411d28:    f6059ae3              bnez    a1,20411c9c <__truncdfsf2+0x20c>     Call-Tgt, allGrp, controlFlowGrp
20411d2c:    00878793              addi    a5,a5,8 # 2000008 <__stack_size+0x1fff808>Call-Tgt, allGrp
20411d30:    f6dff06f              j    20411c9c <__truncdfsf2+0x20c>           allGrp, controlFlowGrp
20411d34:    f60584e3              beqz    a1,20411c9c <__truncdfsf2+0x20c>     Call-Tgt, allGrp, controlFlowGrp
20411d38:    ff5ff06f              j    20411d2c <__truncdfsf2+0x29c>           Call-Tgt, allGrp, controlFlowGrp
20411d3c:    00000793              li    a5,0                                   Call-Tgt, allGrp
20411d40:    02080463              beqz    a6,20411d68 <__truncdfsf2+0x2d8>     allGrp, controlFlowGrp
20411d44:    00300693              li    a3,3                                   Call-Tgt, allGrp
20411d48:    00d81a63              bne    a6,a3,20411d5c <__truncdfsf2+0x2cc>   allGrp, controlFlowGrp
20411d4c:    00058e63              beqz    a1,20411d68 <__truncdfsf2+0x2d8>     Call-Tgt, allGrp, controlFlowGrp
20411d50:    fff00793              li    a5,-1                                  Call-Tgt, allGrp
20411d54:    0fe00713              li    a4,254                                 allGrp
20411d58:    0100006f              j    20411d68 <__truncdfsf2+0x2d8>           allGrp, controlFlowGrp
20411d5c:    00200693              li    a3,2                                   Call-Tgt, allGrp
20411d60:    fed818e3              bne    a6,a3,20411d50 <__truncdfsf2+0x2c0>   allGrp, controlFlowGrp
20411d64:    fe0586e3              beqz    a1,20411d50 <__truncdfsf2+0x2c0>     Call-Tgt, allGrp, controlFlowGrp
20411d68:    00566613              ori    a2,a2,5                               Call-Tgt, allGrp
20411d6c:    df1ff06f              j    20411b5c <__truncdfsf2+0xcc>            allGrp, controlFlowGrp

20411d70 <__trunctfdf2>:
#include "double.h"
#include "quad.h"

DFtype
__trunctfdf2 (TFtype a)
{
20411d70:    00052683              lw    a3,0(a0)                               Call-Tgt, allGrp
20411d74:    00452703              lw    a4,4(a0)                               allGrp
20411d78:    00852783              lw    a5,8(a0)                               allGrp
20411d7c:    fd010113              addi    sp,sp,-48                            allGrp
20411d80:    00c52503              lw    a0,12(a0)                              allGrp
  FP_DECL_EX;
  FP_DECL_Q (A);
  FP_DECL_D (R);
  DFtype r;

  FP_INIT_ROUNDMODE;
20411d84:    00202873              frrm    a6                                   allGrp
  FP_UNPACK_SEMIRAW_Q (A, a);
20411d88:    00f12c23              sw    a5,24(sp)                              allGrp
20411d8c:    02f12423              sw    a5,40(sp)                              allGrp
20411d90:    01051793              slli    a5,a0,0x10                           allGrp
20411d94:    00d12823              sw    a3,16(sp)                              allGrp
20411d98:    00a12e23              sw    a0,28(sp)                              allGrp
20411d9c:    02d12023              sw    a3,32(sp)                              allGrp
20411da0:    0107d793              srli    a5,a5,0x10                           allGrp
20411da4:    00151693              slli    a3,a0,0x1                            allGrp
20411da8:    01f55513              srli    a0,a0,0x1f                           allGrp
20411dac:    00e12a23              sw    a4,20(sp)                              allGrp
20411db0:    02e12223              sw    a4,36(sp)                              allGrp
20411db4:    02f12623              sw    a5,44(sp)                              allGrp
20411db8:    0116d693              srli    a3,a3,0x11                           allGrp
20411dbc:    00050593              mv    a1,a0                                  allGrp
20411dc0:    02010e13              addi    t3,sp,32                             allGrp
20411dc4:    02c10613              addi    a2,sp,44                             allGrp
20411dc8:    00062783              lw    a5,0(a2) # 400000 <__stack_size+0x3ff800>Call-Tgt, allGrp
20411dcc:    ffc62703              lw    a4,-4(a2)                              allGrp
20411dd0:    ffc60613              addi    a2,a2,-4                             allGrp
20411dd4:    00379793              slli    a5,a5,0x3                            allGrp
20411dd8:    01d75713              srli    a4,a4,0x1d                           allGrp
20411ddc:    00e7e7b3              or    a5,a5,a4                               allGrp
20411de0:    00f62223              sw    a5,4(a2)                               allGrp
20411de4:    fece12e3              bne    t3,a2,20411dc8 <__trunctfdf2+0x58>    allGrp, controlFlowGrp
20411de8:    02012703              lw    a4,32(sp)                              Call-Tgt, allGrp
#if (2 * _FP_W_TYPE_SIZE) < _FP_FRACBITS_Q
  FP_TRUNC (D, Q, 2, 4, R, A);
20411dec:    00008eb7              lui    t4,0x8                                allGrp
20411df0:    00168793              addi    a5,a3,1                              allGrp
  FP_UNPACK_SEMIRAW_Q (A, a);
20411df4:    00371893              slli    a7,a4,0x3                            allGrp
  FP_TRUNC (D, Q, 2, 4, R, A);
20411df8:    fffe8e93              addi    t4,t4,-1 # 7fff <__stack_size+0x77ff>allGrp
  FP_UNPACK_SEMIRAW_Q (A, a);
20411dfc:    03112023              sw    a7,32(sp)                              allGrp
  FP_TRUNC (D, Q, 2, 4, R, A);
20411e00:    01d7f7b3              and    a5,a5,t4                              allGrp
20411e04:    00100713              li    a4,1                                   allGrp
20411e08:    2ef75063              ble    a5,a4,204120e8 <__trunctfdf2+0x378>   allGrp, controlFlowGrp
20411e0c:    ffffc7b7              lui    a5,0xffffc                            Call-Tgt, allGrp
20411e10:    40078793              addi    a5,a5,1024 # ffffc400 <_sp+0x7fff8400>allGrp
20411e14:    00f686b3              add    a3,a3,a5                              allGrp
20411e18:    7fe00793              li    a5,2046                                allGrp
20411e1c:    12d7d663              ble    a3,a5,20411f48 <__trunctfdf2+0x1d8>   allGrp, controlFlowGrp
20411e20:    06080463              beqz    a6,20411e88 <__trunctfdf2+0x118>     Call-Tgt, allGrp, controlFlowGrp
20411e24:    00300793              li    a5,3                                   Call-Tgt, allGrp
20411e28:    04f81a63              bne    a6,a5,20411e7c <__trunctfdf2+0x10c>   allGrp, controlFlowGrp
20411e2c:    04050e63              beqz    a0,20411e88 <__trunctfdf2+0x118>     Call-Tgt, allGrp, controlFlowGrp
20411e30:    fff00793              li    a5,-1                                  Call-Tgt, allGrp
20411e34:    fff00713              li    a4,-1                                  allGrp
20411e38:    7fe00693              li    a3,2046                                allGrp
20411e3c:    00000613              li    a2,0                                   allGrp
20411e40:    00500893              li    a7,5                                   allGrp
#else
  FP_TRUNC (D, Q, 1, 2, R, A);
#endif
  FP_PACK_SEMIRAW_D (r, R);
20411e44:    00200313              li    t1,2                                   Call-Tgt, allGrp
20411e48:    0018e893              ori    a7,a7,1                               allGrp
20411e4c:    3c680063              beq    a6,t1,2041220c <__trunctfdf2+0x49c>   allGrp, controlFlowGrp
20411e50:    00300313              li    t1,3                                   Call-Tgt, allGrp
20411e54:    3a680663              beq    a6,t1,20412200 <__trunctfdf2+0x490>   allGrp, controlFlowGrp
20411e58:    14081663              bnez    a6,20411fa4 <__trunctfdf2+0x234>     Call-Tgt, allGrp, controlFlowGrp
20411e5c:    00f77313              andi    t1,a4,15                             Call-Tgt, allGrp
20411e60:    00400e13              li    t3,4                                   allGrp
20411e64:    15c30063              beq    t1,t3,20411fa4 <__trunctfdf2+0x234>   allGrp, controlFlowGrp
20411e68:    00470313              addi    t1,a4,4                              Call-Tgt, allGrp
20411e6c:    00e33733              sltu    a4,t1,a4                             Call-Tgt, allGrp
20411e70:    00e787b3              add    a5,a5,a4                              allGrp
20411e74:    00030713              mv    a4,t1                                  allGrp
20411e78:    12c0006f              j    20411fa4 <__trunctfdf2+0x234>           allGrp, controlFlowGrp
  FP_TRUNC (D, Q, 2, 4, R, A);
20411e7c:    00200793              li    a5,2                                   Call-Tgt, allGrp
20411e80:    faf818e3              bne    a6,a5,20411e30 <__trunctfdf2+0xc0>    allGrp, controlFlowGrp
20411e84:    fa0506e3              beqz    a0,20411e30 <__trunctfdf2+0xc0>      Call-Tgt, allGrp, controlFlowGrp
20411e88:    00000793              li    a5,0                                   Call-Tgt, allGrp
20411e8c:    00000713              li    a4,0                                   allGrp
20411e90:    7ff00693              li    a3,2047                                allGrp
20411e94:    00500893              li    a7,5                                   allGrp
  FP_PACK_SEMIRAW_D (r, R);
20411e98:    00879613              slli    a2,a5,0x8                            Call-Tgt, allGrp
20411e9c:    00065e63              bgez    a2,20411eb8 <__trunctfdf2+0x148>     allGrp, controlFlowGrp
20411ea0:    00168693              addi    a3,a3,1                              Call-Tgt, allGrp
20411ea4:    7ff00613              li    a2,2047                                allGrp
20411ea8:    36c68663              beq    a3,a2,20412214 <__trunctfdf2+0x4a4>   allGrp, controlFlowGrp
20411eac:    ff800637              lui    a2,0xff800                            Call-Tgt, allGrp
20411eb0:    fff60613              addi    a2,a2,-1 # ff7fffff <_sp+0x7f7fbfff> allGrp
20411eb4:    00c7f7b3              and    a5,a5,a2                              allGrp
20411eb8:    01d79613              slli    a2,a5,0x1d                           Call-Tgt, allGrp
20411ebc:    00375713              srli    a4,a4,0x3                            allGrp
20411ec0:    00e66733              or    a4,a2,a4                               allGrp
20411ec4:    7ff00613              li    a2,2047                                allGrp
20411ec8:    0037d793              srli    a5,a5,0x3                            allGrp
20411ecc:    00c69e63              bne    a3,a2,20411ee8 <__trunctfdf2+0x178>   allGrp, controlFlowGrp
20411ed0:    00f76733              or    a4,a4,a5                               Call-Tgt, allGrp
20411ed4:    00000793              li    a5,0                                   allGrp
20411ed8:    00070863              beqz    a4,20411ee8 <__trunctfdf2+0x178>     allGrp, controlFlowGrp
20411edc:    000807b7              lui    a5,0x80                               Call-Tgt, allGrp
20411ee0:    00000713              li    a4,0                                   allGrp
20411ee4:    00000593              li    a1,0                                   allGrp
20411ee8:    00100637              lui    a2,0x100                              Call-Tgt, allGrp
20411eec:    fff60613              addi    a2,a2,-1 # fffff <__stack_size+0xff7ff>allGrp
20411ef0:    00c7f7b3              and    a5,a5,a2                              allGrp
20411ef4:    80100637              lui    a2,0x80100                            allGrp
20411ef8:    7ff6f693              andi    a3,a3,2047                           allGrp
20411efc:    fff60613              addi    a2,a2,-1 # 800fffff <_sp+0xfbfff>    allGrp
20411f00:    01469693              slli    a3,a3,0x14                           allGrp
20411f04:    00c7f7b3              and    a5,a5,a2                              allGrp
20411f08:    00d7e7b3              or    a5,a5,a3                               allGrp
20411f0c:    800006b7              lui    a3,0x80000                            allGrp
20411f10:    fff6c693              not    a3,a3                                 allGrp
20411f14:    01f59593              slli    a1,a1,0x1f                           allGrp
20411f18:    00d7f7b3              and    a5,a5,a3                              allGrp
20411f1c:    00b7e6b3              or    a3,a5,a1                               allGrp
20411f20:    00e12423              sw    a4,8(sp)                               allGrp
20411f24:    00d12623              sw    a3,12(sp)                              allGrp
20411f28:    00813787              fld    fa5,8(sp)                             allGrp
  FP_HANDLE_EXCEPTIONS;
20411f2c:    00088463              beqz    a7,20411f34 <__trunctfdf2+0x1c4>     allGrp, controlFlowGrp
20411f30:    0018a073              csrs    fflags,a7                            allGrp

  return r;
}
20411f34:    00f13427              fsd    fa5,8(sp)                             Call-Tgt, allGrp
20411f38:    00812503              lw    a0,8(sp)                               allGrp
20411f3c:    00c12583              lw    a1,12(sp)                              allGrp
20411f40:    03010113              addi    sp,sp,48                             allGrp
20411f44:    00008067              ret                                          allGrp, controlFlowGrp
  FP_TRUNC (D, Q, 2, 4, R, A);
20411f48:    06d05863              blez    a3,20411fb8 <__trunctfdf2+0x248>     Call-Tgt, allGrp, controlFlowGrp
20411f4c:    02812303              lw    t1,40(sp)                              Call-Tgt, allGrp
20411f50:    02c12603              lw    a2,44(sp)                              allGrp
20411f54:    02412783              lw    a5,36(sp)                              allGrp
20411f58:    01c35713              srli    a4,t1,0x1c                           allGrp
20411f5c:    00461613              slli    a2,a2,0x4                            allGrp
20411f60:    00e66633              or    a2,a2,a4                               allGrp
20411f64:    00479713              slli    a4,a5,0x4                            allGrp
20411f68:    01176733              or    a4,a4,a7                               allGrp
20411f6c:    01c7d793              srli    a5,a5,0x1c                           allGrp
20411f70:    00431313              slli    t1,t1,0x4                            allGrp
20411f74:    00e03733              snez    a4,a4                                allGrp
20411f78:    0067e7b3              or    a5,a5,t1                               allGrp
20411f7c:    00f76733              or    a4,a4,a5                               allGrp
20411f80:    02c12223              sw    a2,36(sp)                              allGrp
20411f84:    02e12023              sw    a4,32(sp)                              allGrp
20411f88:    02012703              lw    a4,32(sp)                              Call-Tgt, allGrp
20411f8c:    02412783              lw    a5,36(sp)                              allGrp
  FP_PACK_SEMIRAW_D (r, R);
20411f90:    16068e63              beqz    a3,2041210c <__trunctfdf2+0x39c>     allGrp, controlFlowGrp
20411f94:    00000613              li    a2,0                                   Call-Tgt, allGrp
  FP_DECL_EX;
20411f98:    00000893              li    a7,0                                   allGrp
  FP_PACK_SEMIRAW_D (r, R);
20411f9c:    00777313              andi    t1,a4,7                              Call-Tgt, allGrp
20411fa0:    ea0312e3              bnez    t1,20411e44 <__trunctfdf2+0xd4>      allGrp, controlFlowGrp
20411fa4:    ee060ae3              beqz    a2,20411e98 <__trunctfdf2+0x128>     Call-Tgt, allGrp, controlFlowGrp
20411fa8:    0018f613              andi    a2,a7,1                              Call-Tgt, allGrp
20411fac:    ee0606e3              beqz    a2,20411e98 <__trunctfdf2+0x128>     allGrp, controlFlowGrp
20411fb0:    0028e893              ori    a7,a7,2                               Call-Tgt, allGrp
20411fb4:    ee5ff06f              j    20411e98 <__trunctfdf2+0x128>           allGrp, controlFlowGrp
  FP_TRUNC (D, Q, 2, 4, R, A);
20411fb8:    fcc00793              li    a5,-52                                 Call-Tgt, allGrp
20411fbc:    00f6da63              ble    a5,a3,20411fd0 <__trunctfdf2+0x260>   allGrp, controlFlowGrp
20411fc0:    02012223              sw    zero,36(sp)                            Call-Tgt, allGrp
20411fc4:    02e12023              sw    a4,32(sp)                              allGrp
20411fc8:    00000693              li    a3,0                                   Call-Tgt, allGrp
20411fcc:    fbdff06f              j    20411f88 <__trunctfdf2+0x218>           allGrp, controlFlowGrp
20411fd0:    02c12783              lw    a5,44(sp)                              Call-Tgt, allGrp
20411fd4:    00080737              lui    a4,0x80                               allGrp
20411fd8:    00000e93              li    t4,0                                   allGrp
20411fdc:    00e7e7b3              or    a5,a5,a4                               allGrp
20411fe0:    02f12623              sw    a5,44(sp)                              allGrp
20411fe4:    03d00793              li    a5,61                                  allGrp
20411fe8:    40d786b3              sub    a3,a5,a3                              allGrp
20411fec:    4056d893              srai    a7,a3,0x5                            allGrp
20411ff0:    000e0793              mv    a5,t3                                  allGrp
20411ff4:    01f6f693              andi    a3,a3,31                             allGrp
20411ff8:    00000713              li    a4,0                                   allGrp
20411ffc:    0007a303              lw    t1,0(a5) # 80000 <__stack_size+0x7f800>Call-Tgt, allGrp
20412000:    00170713              addi    a4,a4,1 # 80001 <__stack_size+0x7f801>allGrp
20412004:    00478793              addi    a5,a5,4                              allGrp
20412008:    006eeeb3              or    t4,t4,t1                               allGrp
2041200c:    fee898e3              bne    a7,a4,20411ffc <__trunctfdf2+0x28c>   allGrp, controlFlowGrp
20412010:    00271f93              slli    t6,a4,0x2                            Call-Tgt, allGrp
20412014:    02069a63              bnez    a3,20412048 <__trunctfdf2+0x2d8>     allGrp, controlFlowGrp
20412018:    00300793              li    a5,3                                   Call-Tgt, allGrp
2041201c:    40e787b3              sub    a5,a5,a4                              allGrp
20412020:    00d7d863              ble    a3,a5,20412030 <__trunctfdf2+0x2c0>   Call-Tgt, allGrp, controlFlowGrp
20412024:    00400793              li    a5,4                                   Call-Tgt, allGrp
20412028:    40e78733              sub    a4,a5,a4                              allGrp
2041202c:    0680006f              j    20412094 <__trunctfdf2+0x324>           allGrp, controlFlowGrp
20412030:    01f608b3              add    a7,a2,t6                              Call-Tgt, allGrp
20412034:    0008a883              lw    a7,0(a7)                               allGrp
20412038:    00168693              addi    a3,a3,1 # 80000001 <_sp+0xffffc001>  allGrp
2041203c:    00460613              addi    a2,a2,4                              allGrp
20412040:    ff162e23              sw    a7,-4(a2)                              allGrp
20412044:    fddff06f              j    20412020 <__trunctfdf2+0x2b0>           allGrp, controlFlowGrp
20412048:    03010793              addi    a5,sp,48                             Call-Tgt, allGrp
2041204c:    01f787b3              add    a5,a5,t6                              allGrp
20412050:    ff07a783              lw    a5,-16(a5)                             allGrp
20412054:    02000313              li    t1,32                                  allGrp
20412058:    40d30333              sub    t1,t1,a3                              allGrp
2041205c:    006797b3              sll    a5,a5,t1                              allGrp
20412060:    00feeeb3              or    t4,t4,a5                               allGrp
20412064:    00300793              li    a5,3                                   allGrp
20412068:    00000f13              li    t5,0                                   allGrp
2041206c:    40e787b3              sub    a5,a5,a4                              allGrp
20412070:    04ff4863              blt    t5,a5,204120c0 <__trunctfdf2+0x350>   Call-Tgt, allGrp, controlFlowGrp
20412074:    00400613              li    a2,4                                   Call-Tgt, allGrp
20412078:    40e60733              sub    a4,a2,a4                              allGrp
2041207c:    00279793              slli    a5,a5,0x2                            allGrp
20412080:    03010613              addi    a2,sp,48                             allGrp
20412084:    00f607b3              add    a5,a2,a5                              allGrp
20412088:    02c12603              lw    a2,44(sp)                              allGrp
2041208c:    00d656b3              srl    a3,a2,a3                              allGrp
20412090:    fed7a823              sw    a3,-16(a5)                             allGrp
20412094:    00400693              li    a3,4                                   Call-Tgt, allGrp
20412098:    00271793              slli    a5,a4,0x2                            Call-Tgt, allGrp
2041209c:    00fe07b3              add    a5,t3,a5                              allGrp
204120a0:    0007a023              sw    zero,0(a5)                             allGrp
204120a4:    00170713              addi    a4,a4,1                              allGrp
204120a8:    fed718e3              bne    a4,a3,20412098 <__trunctfdf2+0x328>   allGrp, controlFlowGrp
204120ac:    02012703              lw    a4,32(sp)                              Call-Tgt, allGrp
204120b0:    01d037b3              snez    a5,t4                                allGrp
204120b4:    00f767b3              or    a5,a4,a5                               allGrp
204120b8:    02f12023              sw    a5,32(sp)                              allGrp
204120bc:    f0dff06f              j    20411fc8 <__trunctfdf2+0x258>           allGrp, controlFlowGrp
204120c0:    01f602b3              add    t0,a2,t6                              Call-Tgt, allGrp
204120c4:    0002a883              lw    a7,0(t0)                               allGrp
204120c8:    0042a283              lw    t0,4(t0)                               allGrp
204120cc:    001f0f13              addi    t5,t5,1                              allGrp
204120d0:    00d8d8b3              srl    a7,a7,a3                              allGrp
204120d4:    006292b3              sll    t0,t0,t1                              allGrp
204120d8:    0058e8b3              or    a7,a7,t0                               allGrp
204120dc:    01162023              sw    a7,0(a2)                               allGrp
204120e0:    00460613              addi    a2,a2,4                              allGrp
204120e4:    f8dff06f              j    20412070 <__trunctfdf2+0x300>           allGrp, controlFlowGrp
204120e8:    02412303              lw    t1,36(sp)                              Call-Tgt, allGrp
204120ec:    02812603              lw    a2,40(sp)                              allGrp
204120f0:    02c12e03              lw    t3,44(sp)                              allGrp
204120f4:    00666733              or    a4,a2,t1                               allGrp
204120f8:    01c76733              or    a4,a4,t3                               allGrp
204120fc:    01176733              or    a4,a4,a7                               allGrp
20412100:    06069863              bnez    a3,20412170 <__trunctfdf2+0x400>     allGrp, controlFlowGrp
20412104:    00e03733              snez    a4,a4                                Call-Tgt, allGrp
20412108:    00000793              li    a5,0                                   allGrp
  FP_PACK_SEMIRAW_D (r, R);
2041210c:    00f766b3              or    a3,a4,a5                               Call-Tgt, allGrp
20412110:    0e068063              beqz    a3,204121f0 <__trunctfdf2+0x480>     allGrp, controlFlowGrp
20412114:    01f75613              srli    a2,a4,0x1f                           Call-Tgt, allGrp
20412118:    00179693              slli    a3,a5,0x1                            allGrp
2041211c:    00c686b3              add    a3,a3,a2                              allGrp
20412120:    00171613              slli    a2,a4,0x1                            allGrp
20412124:    00767313              andi    t1,a2,7                              allGrp
20412128:    00000893              li    a7,0                                   allGrp
2041212c:    02030863              beqz    t1,2041215c <__trunctfdf2+0x3ec>     allGrp, controlFlowGrp
20412130:    00200893              li    a7,2                                   Call-Tgt, allGrp
20412134:    0b180063              beq    a6,a7,204121d4 <__trunctfdf2+0x464>   allGrp, controlFlowGrp
20412138:    00300893              li    a7,3                                   Call-Tgt, allGrp
2041213c:    09180063              beq    a6,a7,204121bc <__trunctfdf2+0x44c>   allGrp, controlFlowGrp
20412140:    00100893              li    a7,1                                   Call-Tgt, allGrp
20412144:    00081c63              bnez    a6,2041215c <__trunctfdf2+0x3ec>     allGrp, controlFlowGrp
20412148:    00f67313              andi    t1,a2,15                             Call-Tgt, allGrp
2041214c:    00400e13              li    t3,4                                   allGrp
20412150:    00100893              li    a7,1                                   allGrp
20412154:    ffc63613              sltiu    a2,a2,-4                            allGrp
20412158:    07c31863              bne    t1,t3,204121c8 <__trunctfdf2+0x458>   allGrp, controlFlowGrp
2041215c:    0186d613              srli    a2,a3,0x18                           Call-Tgt, allGrp
20412160:    00164613              xori    a2,a2,1                              allGrp
20412164:    00167613              andi    a2,a2,1                              allGrp
20412168:    00000693              li    a3,0                                   allGrp
2041216c:    e31ff06f              j    20411f9c <__trunctfdf2+0x22c>           allGrp, controlFlowGrp
  FP_TRUNC (D, Q, 2, 4, R, A);
20412170:    06070863              beqz    a4,204121e0 <__trunctfdf2+0x470>     Call-Tgt, allGrp, controlFlowGrp
  FP_DECL_EX;
20412174:    00000893              li    a7,0                                   Call-Tgt, allGrp
  FP_TRUNC (D, Q, 2, 4, R, A);
20412178:    01d69a63              bne    a3,t4,2041218c <__trunctfdf2+0x41c>   allGrp, controlFlowGrp
2041217c:    000408b7              lui    a7,0x40                               Call-Tgt, allGrp
20412180:    011e78b3              and    a7,t3,a7                              allGrp
  FP_DECL_EX;
20412184:    0018b893              seqz    a7,a7                                allGrp
20412188:    00489893              slli    a7,a7,0x4                            allGrp
  FP_TRUNC (D, Q, 2, 4, R, A);
2041218c:    01c35713              srli    a4,t1,0x1c                           Call-Tgt, allGrp
20412190:    01c65793              srli    a5,a2,0x1c                           allGrp
20412194:    00461313              slli    t1,a2,0x4                            allGrp
20412198:    004e1e13              slli    t3,t3,0x4                            allGrp
2041219c:    004006b7              lui    a3,0x400                              allGrp
204121a0:    00676733              or    a4,a4,t1                               allGrp
204121a4:    01c7e7b3              or    a5,a5,t3                               allGrp
204121a8:    00d7e7b3              or    a5,a5,a3                               allGrp
204121ac:    ff877713              andi    a4,a4,-8                             allGrp
204121b0:    7ff00693              li    a3,2047                                allGrp
204121b4:    00000613              li    a2,0                                   allGrp
204121b8:    de5ff06f              j    20411f9c <__trunctfdf2+0x22c>           allGrp, controlFlowGrp
  FP_PACK_SEMIRAW_D (r, R);
204121bc:    00100893              li    a7,1                                   Call-Tgt, allGrp
204121c0:    f8051ee3              bnez    a0,2041215c <__trunctfdf2+0x3ec>     allGrp, controlFlowGrp
204121c4:    ff863613              sltiu    a2,a2,-8                            Call-Tgt, allGrp
204121c8:    00164613              xori    a2,a2,1                              Call-Tgt, allGrp
204121cc:    00c686b3              add    a3,a3,a2                              allGrp
204121d0:    f8dff06f              j    2041215c <__trunctfdf2+0x3ec>           allGrp, controlFlowGrp
204121d4:    00100893              li    a7,1                                   Call-Tgt, allGrp
204121d8:    f80502e3              beqz    a0,2041215c <__trunctfdf2+0x3ec>     allGrp, controlFlowGrp
204121dc:    fe9ff06f              j    204121c4 <__trunctfdf2+0x454>           Call-Tgt, allGrp, controlFlowGrp
  FP_TRUNC (D, Q, 2, 4, R, A);
204121e0:    00000793              li    a5,0                                   Call-Tgt, allGrp
204121e4:    7ff00693              li    a3,2047                                allGrp
204121e8:    00000893              li    a7,0                                   Call-Tgt, allGrp
204121ec:    cadff06f              j    20411e98 <__trunctfdf2+0x128>           allGrp, controlFlowGrp
204121f0:    00000793              li    a5,0                                   Call-Tgt, allGrp
204121f4:    00000713              li    a4,0                                   allGrp
204121f8:    00000693              li    a3,0                                   allGrp
204121fc:    fedff06f              j    204121e8 <__trunctfdf2+0x478>           allGrp, controlFlowGrp
  FP_PACK_SEMIRAW_D (r, R);
20412200:    da0512e3              bnez    a0,20411fa4 <__trunctfdf2+0x234>     Call-Tgt, allGrp, controlFlowGrp
20412204:    00870313              addi    t1,a4,8                              Call-Tgt, allGrp
20412208:    c65ff06f              j    20411e6c <__trunctfdf2+0xfc>            allGrp, controlFlowGrp
2041220c:    d8050ce3              beqz    a0,20411fa4 <__trunctfdf2+0x234>     Call-Tgt, allGrp, controlFlowGrp
20412210:    ff5ff06f              j    20412204 <__trunctfdf2+0x494>           Call-Tgt, allGrp, controlFlowGrp
20412214:    00000713              li    a4,0                                   Call-Tgt, allGrp
20412218:    02080463              beqz    a6,20412240 <__trunctfdf2+0x4d0>     allGrp, controlFlowGrp
2041221c:    00300793              li    a5,3                                   Call-Tgt, allGrp
20412220:    00f81a63              bne    a6,a5,20412234 <__trunctfdf2+0x4c4>   allGrp, controlFlowGrp
20412224:    00050e63              beqz    a0,20412240 <__trunctfdf2+0x4d0>     Call-Tgt, allGrp, controlFlowGrp
20412228:    fff00713              li    a4,-1                                  Call-Tgt, allGrp
2041222c:    7fe00693              li    a3,2046                                allGrp
20412230:    0100006f              j    20412240 <__trunctfdf2+0x4d0>           allGrp, controlFlowGrp
20412234:    00200793              li    a5,2                                   Call-Tgt, allGrp
20412238:    fef818e3              bne    a6,a5,20412228 <__trunctfdf2+0x4b8>   allGrp, controlFlowGrp
2041223c:    fe0506e3              beqz    a0,20412228 <__trunctfdf2+0x4b8>     Call-Tgt, allGrp, controlFlowGrp
20412240:    0058e893              ori    a7,a7,5                               Call-Tgt, allGrp
20412244:    00070793              mv    a5,a4                                  allGrp
20412248:    c71ff06f              j    20411eb8 <__trunctfdf2+0x148>           allGrp, controlFlowGrp
2041224c:    00000013              nop                                          allGrp
20412250:    0000                    unimp                                      allGrp
	...

20412254 <__mulsi3>:
# define __muldi3 __mulsi3
#endif

  .globl __muldi3
__muldi3:
  mv     a2, a0
20412254:    00050613              mv    a2,a0                                  allGrp
  li     a0, 0
20412258:    00000513              li    a0,0                                   allGrp
.L1:
  andi   a3, a1, 1
2041225c:    0015f693              andi    a3,a1,1                              allGrp
  beqz   a3, .L2
20412260:    00068463              beqz    a3,20412268 <__mulsi3+0x14>          allGrp, controlFlowGrp
  add    a0, a0, a2
20412264:    00c50533              add    a0,a0,a2                              allGrp
.L2:
  srli   a1, a1, 1
20412268:    0015d593              srli    a1,a1,0x1                            allGrp
  slli   a2, a2, 1
2041226c:    00161613              slli    a2,a2,0x1                            allGrp
  bnez   a1, .L1
20412270:    fe0596e3              bnez    a1,2041225c <__mulsi3+0x8>           allGrp, controlFlowGrp
  ret
20412274:    00008067              ret                                          allGrp, controlFlowGrp

20412278 <__divsi3>:
  beq   a1, t0, .L20
#endif

  .globl __divdi3
__divdi3:
  bltz  a0, .L10
20412278:    06054063              bltz    a0,204122d8 <__umodsi3+0x10>         allGrp, controlFlowGrp
  bltz  a1, .L11
2041227c:    0605c663              bltz    a1,204122e8 <__umodsi3+0x20>         allGrp, controlFlowGrp

20412280 <__udivsi3>:
  /* Since the quotient is positive, fall into __udivdi3.  */

  .globl __udivdi3
__udivdi3:
  mv    a2, a1
20412280:    00058613              mv    a2,a1                                  allGrp
  mv    a1, a0
20412284:    00050593              mv    a1,a0                                  allGrp
  li    a0, -1
20412288:    fff00513              li    a0,-1                                  allGrp
  beqz  a2, .L5
2041228c:    02060c63              beqz    a2,204122c4 <__udivsi3+0x44>         allGrp, controlFlowGrp
  li    a3, 1
20412290:    00100693              li    a3,1                                   allGrp
  bgeu  a2, a1, .L2
20412294:    00b67a63              bleu    a1,a2,204122a8 <__udivsi3+0x28>      allGrp, controlFlowGrp
.L1:
  blez  a2, .L2
20412298:    00c05863              blez    a2,204122a8 <__udivsi3+0x28>         allGrp, controlFlowGrp
  slli  a2, a2, 1
2041229c:    00161613              slli    a2,a2,0x1                            allGrp
  slli  a3, a3, 1
204122a0:    00169693              slli    a3,a3,0x1                            allGrp
  bgtu  a1, a2, .L1
204122a4:    feb66ae3              bltu    a2,a1,20412298 <__udivsi3+0x18>      allGrp, controlFlowGrp
.L2:
  li    a0, 0
204122a8:    00000513              li    a0,0                                   allGrp
.L3:
  bltu  a1, a2, .L4
204122ac:    00c5e663              bltu    a1,a2,204122b8 <__udivsi3+0x38>      allGrp, controlFlowGrp
  sub   a1, a1, a2
204122b0:    40c585b3              sub    a1,a1,a2                              allGrp
  or    a0, a0, a3
204122b4:    00d56533              or    a0,a0,a3                               allGrp
.L4:
  srli  a3, a3, 1
204122b8:    0016d693              srli    a3,a3,0x1                            allGrp
  srli  a2, a2, 1
204122bc:    00165613              srli    a2,a2,0x1                            allGrp
  bnez  a3, .L3
204122c0:    fe0696e3              bnez    a3,204122ac <__udivsi3+0x2c>         allGrp, controlFlowGrp
.L5:
  ret
204122c4:    00008067              ret                                          allGrp, controlFlowGrp

204122c8 <__umodsi3>:

  .globl __umoddi3
__umoddi3:
  /* Call __udivdi3(a0, a1), then return the remainder, which is in a1.  */
  move  t0, ra
204122c8:    00008293              mv    t0,ra                                  allGrp
  jal   __udivdi3
204122cc:    fb5ff0ef              jal    ra,20412280 <__udivsi3>               allGrp, controlFlowGrp
  move  a0, a1
204122d0:    00058513              mv    a0,a1                                  allGrp
  jr    t0
204122d4:    00028067              jr    t0                                     allGrp, controlFlowGrp

  /* Handle negative arguments to __divdi3.  */
.L10:
  neg   a0, a0
204122d8:    40a00533              neg    a0,a0                                 allGrp
  bgez  a1, .L12      /* Compute __udivdi3(-a0, a1), then negate the result.  */
204122dc:    0005d863              bgez    a1,204122ec <__umodsi3+0x24>         allGrp, controlFlowGrp
  neg   a1, a1
204122e0:    40b005b3              neg    a1,a1                                 allGrp
  j     __udivdi3     /* Compute __udivdi3(-a0, -a1).  */
204122e4:    f9dff06f              j    20412280 <__udivsi3>                    allGrp, controlFlowGrp
.L11:                 /* Compute __udivdi3(a0, -a1), then negate the result.  */
  neg   a1, a1
204122e8:    40b005b3              neg    a1,a1                                 allGrp
.L12:
  move  t0, ra
204122ec:    00008293              mv    t0,ra                                  allGrp
  jal   __udivdi3
204122f0:    f91ff0ef              jal    ra,20412280 <__udivsi3>               allGrp, controlFlowGrp
  neg   a0, a0
204122f4:    40a00533              neg    a0,a0                                 allGrp
  jr    t0
204122f8:    00028067              jr    t0                                     allGrp, controlFlowGrp

204122fc <__modsi3>:

  .globl __moddi3
__moddi3:
  move   t0, ra
204122fc:    00008293              mv    t0,ra                                  allGrp
  bltz   a1, .L31
20412300:    0005ca63              bltz    a1,20412314 <__modsi3+0x18>          allGrp, controlFlowGrp
  bltz   a0, .L32
20412304:    00054c63              bltz    a0,2041231c <__modsi3+0x20>          allGrp, controlFlowGrp
.L30:
  jal    __udivdi3    /* The dividend is not negative.  */
20412308:    f79ff0ef              jal    ra,20412280 <__udivsi3>               allGrp, controlFlowGrp
  move   a0, a1
2041230c:    00058513              mv    a0,a1                                  allGrp
  jr     t0
20412310:    00028067              jr    t0                                     allGrp, controlFlowGrp
.L31:
  neg    a1, a1
20412314:    40b005b3              neg    a1,a1                                 allGrp
  bgez   a0, .L30
20412318:    fe0558e3              bgez    a0,20412308 <__modsi3+0xc>           allGrp, controlFlowGrp
.L32:
  neg    a0, a0
2041231c:    40a00533              neg    a0,a0                                 allGrp
  jal    __udivdi3    /* The dividend is hella negative.  */
20412320:    f61ff0ef              jal    ra,20412280 <__udivsi3>               allGrp, controlFlowGrp
  neg    a0, a1
20412324:    40b00533              neg    a0,a1                                 allGrp
  jr     t0
20412328:    00028067              jr    t0                                     allGrp, controlFlowGrp
2041232c:    0000                    unimp                                      allGrp, controlFlowGrp
	...

20412330 <__clzsi2>:
int
__clzSI2 (UWtype x)
{
  Wtype ret;

  count_leading_zeros (ret, x);
20412330:    000107b7              lui    a5,0x10                               Call-Tgt, allGrp
20412334:    02f57a63              bleu    a5,a0,20412368 <__clzsi2+0x38>       allGrp, controlFlowGrp
20412338:    0ff00793              li    a5,255                                 Call-Tgt, allGrp
2041233c:    00a7b7b3              sltu    a5,a5,a0                             allGrp
20412340:    00379793              slli    a5,a5,0x3                            allGrp
20412344:    02000713              li    a4,32                                  Call-Tgt, allGrp
20412348:    40f70733              sub    a4,a4,a5                              allGrp
2041234c:    00f557b3              srl    a5,a0,a5                              allGrp
20412350:    20413537              lui    a0,0x20413                            allGrp
20412354:    89450513              addi    a0,a0,-1900 # 20412894 <__clz_tab>   allGrp
20412358:    00a787b3              add    a5,a5,a0                              allGrp
2041235c:    0007c503              lbu    a0,0(a5) # 10000 <__stack_size+0xf800>allGrp

  return ret;
}
20412360:    40a70533              sub    a0,a4,a0                              allGrp
20412364:    00008067              ret                                          allGrp, controlFlowGrp
  count_leading_zeros (ret, x);
20412368:    01000737              lui    a4,0x1000                             Call-Tgt, allGrp
2041236c:    01000793              li    a5,16                                  allGrp
20412370:    fce56ae3              bltu    a0,a4,20412344 <__clzsi2+0x14>       allGrp, controlFlowGrp
20412374:    01800793              li    a5,24                                  Call-Tgt, allGrp
20412378:    fcdff06f              j    20412344 <__clzsi2+0x14>                allGrp, controlFlowGrp
2041237c:    00000013              nop                                          allGrp
20412380:    0000                    unimp                                      allGrp
	...

20412384 <_malloc_r>:
20412384:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
20412388:    00112e23              sw    ra,28(sp)                              allGrp
2041238c:    00812c23              sw    s0,24(sp)                              allGrp
20412390:    02010413              addi    s0,sp,32                             allGrp
20412394:    00058613              mv    a2,a1                                  allGrp
20412398:    00050693              mv    a3,a0                                  allGrp
2041239c:    fea42a23              sw    a0,-12(s0)                             allGrp
204123a0:    feb42823              sw    a1,-16(s0)                             allGrp
#include <reent.h>

// Wrap malloc call to make rtl work
void __attribute__ ((noinline)) *_malloc_r(struct _reent *ptr, size_t req_size) {

  return _usf_malloc_r(ptr, req_size);
204123a4:    ff442503              lw    a0,-12(s0)                             allGrp
204123a8:    ff042583              lw    a1,-16(s0)                             allGrp
204123ac:    fec42623              sw    a2,-20(s0)                             allGrp
204123b0:    fed42423              sw    a3,-24(s0)                             allGrp
204123b4:    ffffa097              auipc    ra,0xffffa                          allGrp
204123b8:    9e4080e7              jalr    -1564(ra) # 2040bd98 <_usf_malloc_r> Call-Instr, allGrp, controlFlowGrp
204123bc:    01812403              lw    s0,24(sp)                              Return-Tgt, allGrp
204123c0:    00012c23              sw    zero,24(sp)                            allGrp
204123c4:    01c12083              lw    ra,28(sp)                              allGrp
204123c8:    00012e23              sw    zero,28(sp)                            allGrp
204123cc:    02010113              addi    sp,sp,32                             allGrp
204123d0:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp

204123d4 <_free_r>:
204123d4:    fe010113              addi    sp,sp,-32                            Call-Tgt, allGrp, Branch-Tgt
204123d8:    00112e23              sw    ra,28(sp)                              allGrp
204123dc:    00812c23              sw    s0,24(sp)                              allGrp
204123e0:    02010413              addi    s0,sp,32                             allGrp
204123e4:    00058613              mv    a2,a1                                  allGrp
204123e8:    00050693              mv    a3,a0                                  allGrp
204123ec:    fea42a23              sw    a0,-12(s0)                             allGrp
204123f0:    feb42823              sw    a1,-16(s0)                             allGrp
}

// Wrap free call to make rtl work
void __attribute__ ((noinline)) _free_r(struct _reent *ptr,void *chunk) {

  _usf_free_r(ptr, chunk);
204123f4:    ff442503              lw    a0,-12(s0)                             allGrp
204123f8:    ff042583              lw    a1,-16(s0)                             allGrp
204123fc:    fec42623              sw    a2,-20(s0)                             allGrp
20412400:    fed42423              sw    a3,-24(s0)                             allGrp
20412404:    ffffc097              auipc    ra,0xffffc                          allGrp
20412408:    d14080e7              jalr    -748(ra) # 2040e118 <_usf_free_r>    Call-Instr, allGrp, controlFlowGrp
}
2041240c:    fea42223              sw    a0,-28(s0)                             Return-Tgt, allGrp
20412410:    01812403              lw    s0,24(sp)                              allGrp
20412414:    00012c23              sw    zero,24(sp)                            allGrp
20412418:    01c12083              lw    ra,28(sp)                              allGrp
2041241c:    00012e23              sw    zero,28(sp)                            allGrp
20412420:    02010113              addi    sp,sp,32                             allGrp
20412424:    00008067              ret                                          Return-Instr, allGrp, controlFlowGrp
