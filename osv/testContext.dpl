module osv.testContext:

import:
      osv.riscv

metadata:
      procA,
      procB,
      codeProcA,
      codeProcB

policy:
    testContextPol=
        // Initialize env based on code running
        allGrp(code == {codeProcA}, env == {} -> env = {procA})
      ^ allGrp(code == {codeProcB}, env == {} -> env = {procB})
        // Once initialized, it should always align
      ^ allGrp(code == {codeProcA}, env == {procA} -> env = {procA})
      ^ allGrp(code == {codeProcB}, env == {procB} -> env = {procB})
        // The env tag should never be wrong
      ^ allGrp(code == {codeProcA}, env == {procB} -> fail "procB PC tag carried over")
      ^ allGrp(code == {codeProcB}, env == {procA} -> fail "procA PC tag carried over")
        // In all other code, maintain the env tag
      ^ allGrp(code == {}, env == _ -> env = env)

require:
    init ISA.RISCV.Reg.Env                    {}
    init ISA.RISCV.Reg.Default                {}
    init ISA.RISCV.CSR.Default                {}

    init SOC.MMIO.UART_0                      {}
    init SOC.MEMORY.FLASH_0                   {}
    init SOC.MEMORY.RAM_0                     {}

    init Tools.Elf.Section.SHF_ALLOC          {}
    init Tools.Elf.Section.SHF_EXECINSTR      {}
    init Tools.Elf.Section.SHF_WRITE          {}

    init testContext.mainProcA                {codeProcA}
    init testContext.mainProcB                {codeProcB}


    init SOC.PBUS.MAILBOX                     {}
    init SOC.MMIO.MROM                        {}
    init SOC.MMIO.TEST                        {}
    init SOC.MMIO.CLINT                       {}
    init SOC.MMIO.ITIM                        {}
    init SOC.MMIO.PLIC                        {}
    init SOC.CBUS.PLIC                        {}
